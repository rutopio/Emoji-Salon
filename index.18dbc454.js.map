{"mappings":"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CR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QA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;IACA,OAAO,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE;QACvB,IAAI,CAAC,QAAQ;YACT,mDAAmD;YACnD,IAAI,CAAC,aAAa;gBACd,MAAM,IAAI;YACd;YACA,IAAI,CAAC,KAAK,OAAO;YACjB,OAAO;gBACH,IAAI,0BAA0B;aACjC;QACL;QACA,IAAI,MAAM;QACV,IAAI,CAAC,aAAa;YACd,QAAQ,CAAC,QAAQ,MAAM,MAAM;QACjC;QACA,KAAK,CAAC,OAAO,QAAQ,OAAO;QAC5B,OAAO;YACH,IAAI,0BAA0B;SACjC;IACL;IACA,YAAY,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAC3B,IAAI,QAAQ,QAAQ,MAAM,QAAQ,OAAO;QACzC,KAAK,CAAC,MAAM,MAAM;IACtB;AACJ;AACA,MAAM;IACF,UAAU;QACN,OAAO,IAAI,CAAC;IAChB;IACA,YAAY,GAAG,CAAC;QACZ,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,aAAa;IACtB;AACJ;AAMA,MAAM;IACF,OAAO,OAAO,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;QACpC,IAAI,YAAY,SAAS;QACzB,wDAAwD;QACxD,+CAA+C;QAC/C,MAAM,SAAS,SAAS,UAAU,SAAS;IAC/C;AACJ;AACA,IAAI,2CAA2C,IAAQ,yCAA0C;IAC7F,0FAA0F;IAC1F;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YA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;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;YACI;YACA;YACA;YACA;YACA;YACA;SACH;KACJ;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;YACI;YACA;YACA;YACA;SACH;KACJ;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACA;KACH;IACD;QACI;QACA;QACA;QACI;KACP;IACD;QACI;QACA;QACA;QACI;KACP;IACD;QACI;QACA;QACA,IAAQ,yCAA0C,IAAQ;QAC1D;KACH;IACD;QACI;QACA;QACA,IAAI;QACJ;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD,oBAAoB;IACpB;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QACA;KACH;IACD;QACI;YACI;YACA;SACH;QACD;QACA;QAC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,oBAAoB;QACpB,kBAAkB;QAClB,wBAAwB;QACxB,sBAAsB;QACtB,iBAAiB;IACrB;IACA,YAAY;QACR,MAAM;QACN,WAAW;QACX,gBAAgB;QAChB,gBAAgB;QAChB,qBAAqB;IACzB;IACA,kBAAkB;QACd,MAAM;QACN,WAAW;QACX,gBAAgB;QAChB,WAAW;QACX,WAAW;QACX,UAAU;QACV,qBAAqB;IACzB;IACA,WAAW;QACP,MAAM;QACN,WAAW;QACX,aAAa;QACb,mBAAmB;QACnB,mBAAmB;IACvB;IACA,uBAAuB;QACnB,MAAM;QACN,WAAW;QACX,gBAAgB;IACpB;IACA,mBAAmB;QACf,MAAM;QACN,WAAW;QACX,qBAAqB;QACrB,oBAAoB;QACpB,aAAa;IACjB;IACA,qBAAqB;IACrB,iBAAiB;IACjB,wBAAwB;IACxB,oBAAoB;QAChB,MAAM;QACN,WAAW;QACX,mBAAmB;QACnB,uBAAuB;QACvB,mBAAmB;QACnB,yBAAyB;QACzB,eAAe;QACf,mBAAmB;IACvB;IACA,cAAc;QACV,MAAM;QACN,WAAW;QACX,aAAa;QACb,UAAU;QACV,cAAc;QACd,UAAU;QACV,mBAAmB;QACnB,sBAAsB;QACtB,aAAa;IACjB;IACA,uBAAuB;QACnB,MAAM;QACN,WAAW;QACX,cAAc;IAClB;IACA,uBAAuB;IACvB,kBAAkB;QACd,MAAM;QACN,WAAW;QACX,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;QACd,cAAc;IAClB;IACA,cAAc;QACV,MAAM;QACN,WAAW;QACX,gBAAgB;QAChB,aAAa;QACb,cAAc;QACd,iBAAiB;QACjB,aAAa;QACb,UAAU;IACd;IACA,gBAAgB;QACZ,MAAM;QACN,WAAW;QACX,uBAAuB;QACvB,sBAAsB;QACtB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,qBAAqB;QACrB,oBAAoB;QACpB,oBAAoB;QACpB,kBAAkB;QAClB,mBAAmB;QACnB,gBAAgB;QAChB,eAAe;QACf,4BAA4B;IAChC;IACA,YAAY;QACR,MAAM;QACN,WA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B;AACnC,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,MAAM,6BAA6B;AACnC,mDAAmD;AACnD,MAAM,oCAAoC;IACtC,qHAAqH;IACrH,6CAA6C;IAC7C;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,2DAA2D;IAC3D;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,wDAAwD;IACxD;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,sDAAsD;IACtD;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,sDAAsD;IACtD;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,2DAA2D;IAC3D;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;IACD,uDAAuD;IACvD;QACI;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;QACD;YACI;YACA;YACA;SACH;KACJ;CACJ;AACD,MAAM,iDAAqD;IACvD,OAAO,aAAa,IAAI,EAAE;QACtB,KAAK,IAAI;YACL;YACA;SACH;QACD,IAAI,IAAI,IAAI,GAAG,IAAI,+BAA+B,QAAQ,IAAI;YAC1D,IAAI,UAAU,8BAA8B,CAAC,EAAE;YAC/C,KAAK,SAAS,SAAS;QAC3B;QACA,KAAK,SAAS;IAClB;IACA,OAAO,eAAe,IAAI,EAAE,MAAM,EAAE;QAChC,KAAK,CAAC,eAAe,MAAM;QAC3B,IAAI,OAAO;QACX,IAAI,QAAQ;QACZ,IAAI,UAAU,EAAE;QAChB,oDAAoD;QACpD,IAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI;YAClC,IAAI,WAAW;YACf,IAAI,QAAQ,MAAM,CAAC,EAAE;YACrB,IAAI,OAAO,sCAAsC,MAAM,UAAU,CAAC,EAAE;YACpE,IAAI,SAAS,qCAAqC,aAAa;gBAC3D,OAAO,CAAC,EAAE,GAAG;gBACb;YACJ;YACA,CAAC,YAAY,WAAW,MAAM,GAAG,iCAAiC,CAAC,MAAM,CAAC,KAAK;YAC/E,IAAI,eAAe,8BAA8B,SAAS,IAAI,OAAO,CAAC,KAAK,GAAG;YAC9E,OAAO,CAAC,EAAE,GAAG;YACb,OAAO;QACX;QACA,uDAAuD;QACvD,IAAI,IAAI,QAAQ,GAAG,QAAQ,OAAO,QAAQ,QAAQ;YAC9C,IAAI;YACJ,IAAI,QAAQ,MAAM,CAAC,MAAM;YACzB,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,MAAM,QAAQ,CAAC,QAAQ,GAAG;QAC5D;IACJ;AACJ;AACA,SAAS,sCAAsC,SAAS;IACpD,IAAI,MAAM,2BAA2B,IAAI;IACzC,IAAI,KAAK,OAAO,MAAM;IACtB,IAAI,WAAW,AAAC,CAAA,GAAG,yBAAyB,WAAU,EAAG;IACzD,IAAI,aAAa,QAAQ,aAAa,QAAQ,aAAa,MAAM,OAAO,qCAAqC;IAC7G,OAAO,qCAAqC;AAChD;AAMA,MAAM;IACF,MAAM,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAAC,UAAU;QACf,IAAI,CAAC,QAAQ,QAAQ,SAAS,CAAC;QAC/B,IAAI,CAAC,qBAAqB,QAAQ,sBAAsB;QACxD,IAAI,CAAC,QAAQ;IACjB;IACA,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI;IACtC;IACA,aAAa,KAAK,EAAE;QAChB,OAAO,IAAI,CAAC,MAAM,eAAe,MAAM,UAAU,IAAI,CAAC,MAAM,oBAAoB,MAAM,UAAU,IAAI,CAAC,MAAM,mBAAmB,MAAM,cAAc,IAAI,CAAC,sBAAsB,MAAM,UAAU,MAAM,uBAAuB,IAAI,CAAC;IACnO;IACA,KAAK,GAAG,EAAE;QACN,IAAI,CAAC,SAAS;QACd,MAAM,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,UAAU,IAAI,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS;QACrH,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,QAAQ,OAAO;QAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;IAClC;IACA,OAAO;QACH,OAAO,IAAI,CAAC,KAAK;IACrB;IACA,OAAO;QACH,OAAO,IAAI,CAAC,KAAK;IACrB;IACA,KAAK,QAAQ,CAAC,EAAE;QACZ,IAAI,MAAM,IAAI,CAAC;QACf,IAAI,MAAM,IAAI,CAAC,UAAU;QACzB,IAAI,CAAC,QAAQ;QACb,OAAO;IACX;IACA,UAAU,QAAQ,CAAC,EAAE;QACjB,IAAI,MAAM,IAAI,CAAC;QACf,IAAI,CAAC,UAAU;QACf,IAAI,MAAM,IAAI,CAAC;QACf,IAAI,CAAC,QAAQ;QACb,OAAO;IACX;IACA,UAAU,QAAQ,CAAC,EAAE;QACjB,IAAI,MAAM,QAAQ,IAAI,KAAK;QAC3B,QAAQ,KAAK,IAAI;QACjB,MAAM,QAAQ,IAAI,CAAC,KAAK;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;IAClC;IACA,YAAY,MAAM,EAAE,OAAO,CAAC;QACxB,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,MAAM;IACf;AACJ;AAIA,MAAM,wCAAwC;IAC1C;IACA;IACA;CACH;AACD,MAAM;IACF,WAAW,MAAM,EAAE;QACf,IAAI,IAAI,CAAC,MAAM,cAAc,MAAM,OAAO;QAC1C,IAAI,CAAC,MAAM,QAAQ,SAAS,SAAS;YACjC;SACH;QACD,KAAK,IAAI,KAAK,OAAO,KAAK,IAAI,SAAS,IAAI,CAAC,MAAM,WAAW;YACzD,IAAI,MAAM,QAAQ,GAAG,OAAO;QAChC;QACA,OAAO;IACX;IACA,aAAa,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;QACtC,IAAI,UAAU;QACd,IAAI;QACJ,IAAI,CAAC,IAAI,CAAC,UAAU,WAAW,IAAI,CAAC,WAAW;YAC3C,QAAQ,IAAI,CAAC,WAAW;YACxB,IAAI,CAAC,OAAO,QAAQ,IAAI,CAAC,WAAW;YACpC,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,MAAM;YACvB,IAAI,CAAC,SAAS,MAAM;YACpB,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,cAAc;YACnB,UAAU;QACd;QACA,IAAI,CAAC,aAAa,cAAc,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY,aAAa,0CAA0C;QACxH,IAAI,YAAY,SAAS,SAAS,GAAG,YAAY,IAAI,OAAO,IAAI,SAAS;QACzE,IAAI,CAAC,YAAY,aAAa,IAAI,CAAC,aAAa;YAC5C,IAAI,CAAC,WAAW;YAChB,KAAK,IAAI,QAAQ,IAAI,CAAC,OAAO,eAAe,IAAI,KAAK,QAAQ,UAAU;gBACnE,IAAI,CAAC,WAAW,KAAK;gBACrB,IAAI,CAAC,cAAc,KAAK;gBACxB;YACJ;YACA,IAAI,CAAC,IAAI,CAAC,UAAU;gBAChB,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO;gBAC5B,IAAI,CAAC,cAAc;YACvB;YACA,UAAU;QACd;QACA,+BAA+B;QAC/B,IAAI,SAAS;YACT,IAAI,CAAC,WAAW,CAAC;YACjB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,gBAAgB,IAAI,CAAC,SAAS,eAAe;gBACrE,IAAI,SAAS,IAAI,CAAC,MAAM,WAAW,CAAC,aAAa;gBACjD,IAAI,oBAAoB,IAAI,CAAC,+BAA+B;gBAC5D,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,GAAG,qBAAqB,OAAO;YAC5D;QACJ;QACA,OAAO,IAAI,CAAC;IAChB;IACA,mBAAmB,eAAe,EAAE,EAAE,OAAO,EAAE;QAC3C,IAAI,UAAU,EAAE;QAChB,KAAK,IAAI,OAAO,aAAa;YACzB,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,IAAI;YAChC,IAAI,CAAC,SAAS;YACd,KAAK,IAAI,eAAe,QAAQ,kBAAkB;gBAC9C,IAAI,WAAW,QAAQ,QAAQ,iBAAiB,IAAI;gBACpD,QAAQ,KAAK;oBACT,SAAS;oBACT,OAAO;oBACP,QAAQ,IAAI,CAAC,MAAM,WAAW,IAAI;gBACtC;YACJ;QACJ;QACA,QAAQ,KAAK,CAAC,GAAG,IAAI,EAAE,QAAQ,EAAE;QACjC,OAAO;IACX;IACA,+BAA+B,YAAY,EAAE;QACzC,IAAI,IAAI,CAAC,oBAAoB,IAAI,OAAO;QACxC,IAAI,SAAS,IAAI,CAAC,MAAM,kBAAkB,uBAAuB,CAAC,IAAI,CAAC,gBAAgB;QACvF,IAAI,gBAAgB,OAAO,yBAAyB;QACpD,KAAK,IAAI,gBAAgB,cAAc;YACnC,IAAI,aAAa,iBAAiB,cAAc,OAAO,aAAa;QACxE;QACA,OAAO;IACX;IACA,oBAAoB,MAAM,EAAE;QACxB,IAAI,aAAa,IAAI,CAAC,MAAM;QAC5B,IAAI,CAAC,YAAY,OAAO;QACxB,IAAI,UAAU,WAAW;QACzB,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,QAAQ,IAAI;YACnC,IAAI,aAAa,OAAO,CAAC,EAAE,CAAC,aAAa;YACzC,IAAI,IAAI,CAAC,yBAAyB,YAAY,SAAS,OAAO;QAClE;QACA,OAAO;IACX;IACA,yBAAyB,UAAU,EAAE,MAAM,EAAE;QACzC,OAAO,WAAW,MAAM,CAAC;YACrB,IAAI,QAAQ,UAAU,YAAY,OAAO,SAAS,MAAM,CAAC,UAAU,UAAU,GAAG;YAChF,OAAO,UAAU,uBAAuB,SAAS,SAAS,UAAU;QACxE;IACJ;IACA,cAAc,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE;QAC1C,IAAI,UAAU,IAAI,CAAC,mBAAmB;QACtC,IAAI,CAAC,aAAa,SAAS,QAAQ;IACvC;IACA,aAAa,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE;QACrC,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,gBAAgB,IAAQ,yCAA0C;QACvE,KAAK,IAAI,EAAE,SAAS,OAAO,EAAG,QAAQ,MAAM,EAAG,IAAI,QAAQ;YACvD,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,cAAc,MAAM,OAAO;YAChC,MAAM,IAAI,CAAC,cAAc,QAAQ,OAAO,OAAO;gBAC3C,IAAI,CAAE,CAAA,WAAW,IAAI,CAAC,cAAc,IAAI,QAAO,GAAI;oBAC/C,IAAI,CAAC,cAAc;oBACnB;gBACJ;gBACA,KAAK,IAAI,SAAS,OAAO,UAAU;oBAC/B,IAAI,MAAM,IAAI,CAAC,YAAY,OAAO,YAAY;oBAC9C,IAAI,KAAK;gBACb;gBACA,IAAI,CAAC,cAAc;YACvB;QACJ;IACJ;IACA,YAAY,MAAM,EAAE,KAAK,EAAE;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,gBAAgB,aAAa,EAAE;QAC3B,IAAI,UAAU,IAAI,CAAC,cAAc;QACjC,IAAI,aAAa,IAAI,CAAC,cAAc;QACpC,KAAK,IAAI,gBAAgB,cAAc;YACnC,0DAA0D;YAC1D,IAAI,CAAC,cAAc,MAAM,SAAS;YAClC,IAAI,CAAC,cAAc,UAAU,aAAa;YAC1C,+CAA+C;YAC/C,IAAI,SAAS,IAAI,CAAC,MAAM,WAAW,IAAI,aAAa;YACpD,IAAI,CAAC,cAAc,MAAM,OAAO,OAAO,IAAI,CAAC,cAAc;YAC1D,2CAA2C;YAC3C,KAAK,IAAI,SAAS,OAAO,UAAU;gBAC/B,IAAI,IAAI,CAAC,YAAY,OAAO,YAAY,QAAQ;YACpD;QACJ;QACA,IAAI,CAAC,cAAc,MAAM,SAAS;QAClC,OAAO;IACX;IACA,cAAc,QAAQ,EAAE,KAAK,EAAE;QAC3B,IAAI,SAAS,MAAM,QAAQ,IAAI,CAAC,cAAc,IAAI;QAClD,OAAO,SAAS;YACZ,KAAK;gBACD,OAAO,SAAS,OAAO,QAAQ;YACnC,KAAK;gBACD,KAAK,IAAI,SAAS,SAAS,aAAa;oBACpC,IAAI,MAAM,SAAS,SAAS,SAAS,MAAM,KAAK,OAAO,MAAM,qBAAqB,QAAQ,MAAM;gBACpG;gBACA;QACR;QACA,OAAO;IACX;IACA,MAAM,aAAa,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE;QACxC,IAAI,MAAM,IAAI,CAAC,cAAc;QAC7B,IAAI,QAAQ,IAAI,CAAC,cAAc,UAAU;QACzC,IAAI,MAAM;QACV,MAAM,MAAM,SAAS,UAAU,SAAS,GAAG,QAAQ,CAAC,IAAI,EAAE,OAAO;YAC7D,IAAI,SAAS,QAAQ,KAAK,IAAI,CAAC,cAAc;YAC7C;YACA,QAAQ,IAAI,CAAC,cAAc;QAC/B;QACA,IAAI,CAAC,cAAc,QAAQ;QAC3B,IAAI,MAAM,SAAS,QAAQ,OAAO;QAClC,OAAO,WAAW;IACtB;IACA,gBAAgB,aAAa,EAAE,QAAQ,EAAE;QACrC,OAAO,IAAI,CAAC,MAAM,eAAe,UAAU,CAAC,WAAW,QAAQ,cAAc,MAAM;IACvF;IACA,qBAAqB,aAAa,EAAE,QAAQ,EAAE;QAC1C,OAAO,IAAI,CAAC,MAAM,eAAe,UAAU,CAAC,WAAW;YACnD,sDAAsD;YACtD,IAAI,CAAE,CAAA,IAAI,CAAC,kBAAkB,MAAM,QAAO,GAAI,OAAO;YACrD,OAAO,cAAc,MAAM;QAC/B,GAAG,EAAE;IACT;IACA,wBAAwB,aAAa,EAAE,QAAQ,EAAE;QAC7C,OAAO,IAAI,CAAC,MAAM,eAAe,UAAU,CAAC,UAAU,QAAQ,IAAI,CAAC,cAAc,UAAU,MAAM,OAAO;IAC5G;IACA,WAAW,KAAK,EAAE,QAAQ,EAAE;QACxB,OAAO,SAAS;YACZ,KAAK;gBACD,IAAI,IAAI,QAAQ,SAAS;gBACzB,IAAI,KAAK,KAAK,IAAI,SAAS,gBAAgB,QAAQ,OAAO,SAAS,eAAe,CAAC,EAAE;gBACrF;YACJ,KAAK;gBACD,KAAK,IAAI,SAAS,SAAS,iBAAiB;oBACxC,IAAI,MAAM,SAAS,SAAS,SAAS,MAAM,KAAK,OAAO,MAAM;gBACjE;gBACA;QACR;QACA,OAAO;IACX;IACA,qBAAqB,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE;QACpD,OAAO,IAAI,CAAC,MAAM,eAAe,UAAU,CAAC,SAAS,QAAQ,YAAY,IAAI,CAAC,WAAW,MAAM,IAAI;IACvG;IACA,aAAa,KAAK,EAAE;QAChB,IAAI,OAAO;QACX,OAAO,MAAM;YACT,KAAK;gBACD,QAAQ,IAAI,CAAC,cAAc,MAAM;gBACjC,IAAI,UAAU,IAAI,OAAO;gBACzB,MAAM,MAAM,QAAQ,CAAC,MAAM;gBAC3B,KAAK,IAAI,QAAQ,IAAI;oBACjB,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,QAAQ,OAAO,IAAI,CAAC,gBAAgB,KAAK;gBAC9E;gBACA;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,cAAc,MAAM,cAAc,IAAI,OAAO;gBACtD,QAAQ,IAAI,CAAC,WAAW,IAAI,CAAC,cAAc,IAAI,IAAI,MAAM;gBACzD,IAAI,UAAU,IAAI,OAAO;gBACzB,MAAM,MAAM,QAAQ,CAAC,MAAM;gBAC3B,KAAK,IAAI,SAAS,IAAI;oBAClB,IAAI,IAAI,CAAC,qBAAqB,GAAG,MAAM,SAAS,MAAM,WAAW,OAAO,IAAI,CAAC,gBAAgB,MAAM;gBACvG;gBACA;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,wBAAwB,GAAG,MAAM,YAAY,OAAO,IAAI,CAAC,gBAAgB,MAAM;gBACxF;QACR;QACA,OAAO;IACX;IACA,qBAAqB,KAAK,EAAE;QACxB,IAAI;QACJ,OAAO,MAAM;YACT,KAAK;gBACD,QAAQ,IAAI,CAAC,cAAc,MAAM;gBACjC,IAAI,UAAU,IAAI,OAAO;gBACzB,IAAI,MAAM,MAAM,aAAa,CAAC,MAAM;gBACpC,KAAK,IAAI,QAAQ,IAAI;oBACjB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,UAAU,QAAQ,KAAK,cAAc,IAAI,CAAC,gBAAgB,GAAG,KAAK,UAAU,IAAI,CAAC,gBAAgB,IAAI,KAAK,MAAM,QAAQ,KAAK,YAAY,OAAO,IAAI,CAAC,gBAAgB,KAAK;gBAC7M;gBACA;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,cAAc,MAAM,cAAc,IAAI,OAAO;gBACtD,QAAQ,IAAI,CAAC,WAAW,IAAI,CAAC,cAAc,IAAI,IAAI,MAAM;gBACzD,IAAI,QAAQ,MAAM,aAAa,CAAC,MAAM;gBACtC,IAAI,CAAC,OAAO,OAAO;gBACnB,KAAK,IAAI,SAAS,MAAM;oBACpB,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,UAAU,QAAQ,MAAM,WAAW,MAAM,sBAAsB,IAAI,CAAC,qBAAqB,GAAG,MAAM,OAAO,MAAM,kBAAkB,IAAI,CAAC,qBAAqB,IAAI,MAAM,MAAM,QAAQ,MAAM,WAAW,MAAM,oBAAoB,OAAO,IAAI,CAAC,gBAAgB,MAAM;gBACzS;gBACA;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,qBAAqB,MAAM,sBAAsB,IAAI,CAAC,wBAAwB,GAAG,MAAM,kBAAkB,IAAI,CAAC,wBAAwB,MAAM,iBAAiB,MAAM,oBAAoB,OAAO,IAAI,CAAC,gBAAgB,MAAM;gBACjQ;QACR;QACA,OAAO;IACX;IACA,YAAY,IAAI,EAAE,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,cAAc;QACnB,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC;QAChB,gCAAgC;QAChC,IAAI,CAAC,kBAAkB,KAAK,sBAAsB,IAAI,CAAC,oBAAoB,KAAK,oBAAoB,oBAAoB;QACxH,0CAA0C;QAC1C,IAAI,CAAC;QACL,yCAAyC;QACzC,IAAI,CAAC,SAAS,EAAE;QAChB,IAAI,CAAC,YAAY,EAAE,EAAE,oBAAoB;QACzC,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,iBAAiB;IAC1B;AACJ;AAGA,MAAM;IACF,IAAI,KAAK;QACL,OAAO,IAAI,CAAC;IAChB;IACA,IAAI,GAAG,EAAE,EAAE;QACP,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,cAAc;QACnB,IAAI,OAAO,IAAI,CAAC,MAAM;QACtB,IAAI,QAAQ,KAAK,eAAe;YAC5B,sBAAsB;YACtB,IAAI,UAAU,AAAI,yCAA0C,UAAU,WAAW,IAAI,KAAK;YAC1F,IAAI,CAAC,SAAS,YAAY;YAC1B,IAAI,CAAC,aAAa,YAAY;YAC9B,IAAI,CAAC,SAAS,YAAY;YAC1B,IAAI,CAAC,qBAAqB,KAAK,qBAAqB,AAAI,yCAA0C,UAAU,WAAW,IAAI,KAAK,sBAAsB;QAC1J,OAAO;YACH,IAAI,CAAC,SAAS,IAAI,CAAC,WAAW,SAAS,KAAK,IAAI,CAAC,WAAW,MAAU,yBAAyB;YAC/F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,SAAS;YAC3C,IAAI,CAAC,qBAAqB;QAC9B;IACJ;IACA,OAAO;QACH,OAAO,IAAI,yCAAyC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC;IACnG;IACA,YAAY,IAAI,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,QAAQ,CAAC;QAC5C,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,MAAM,QAAQ,WAAW,IAAI,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,IAAI;YACjE,IAAI,UAAU,QAAQ,CAAC,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG;QAC7B;aACK,IAAI,OAAO,aAAa,UAAU,OAAO,OAAO,IAAI,CAAC,UAAU;QACpE,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,cAAc;QACnB,IAAI,CAAC,eAAe;IACxB;AACJ;AAGA,MAAM,iDAAqD;IACvD,OAAO,aAAa,IAAI,EAAE;QACtB,KAAK,IAAI;YACL;YACA;YACA;SACH,EAAE;IACP;IACA,OAAO,eAAe,IAAI,EAAE,MAAM,EAAE;QAChC,IAAI,QAAQ;QACZ,IAAI,IAAI;QACR,MAAM,IAAI,OAAO,OAAO;YACpB,IAAI;YACJ,IAAI,QAAQ,MAAM,CAAC,EAAE;YACrB,IAAI,OAAO,MAAM,UAAU,CAAC,EAAE;YAC9B,IAAI,OAAO,8BAA8B;YACzC,CAAC,QAAQ,MAAM,GAAG,iCAAiC,CAAC,MAAM,CAAC,KAAK;YAChE,OAAO;gBACH,KAAK;oBACD,sEAAsE;oBACtE,IAAI,CAAC,KAAK,KAAK,qBAAqB,OAAO,IAAI,gCAAgC,QAAQ,GAAG,KAAK;oBAC/F;gBACJ,KAAK;oBACD,wEAAwE;oBACxE,IAAI,8BAA8B,QAAQ,GAAG,KAAK;oBAClD;gBACJ,KAAK;oBACD,sGAAsG;oBACtG,sCAAsC,QAAQ,GAAG,KAAK;oBACtD;gBACJ,KAAK;oBACD,0EAA0E;oBAC1E,IAAI,yCAAyC,QAAQ,GAAG,KAAK;oBAC7D;YACR;YACA;QACJ;IACJ;AACJ;AACK,uBAAuB,wCAA0C,0CAA0C,kBAAkB;AAClI,MAAM,oCAAoC;AAC1C,MAAM,mCAAmC;AACzC,MAAM,qCAAqC,mCAAmC,oCAAoC;AAClH,MAAM,+BAA+B,QAAQ,OAAO;AACpD,MAAM,+BAA+B,QAAQ,QAAQ;AACrD,MAAM,+BAA+B,QAAQ,QAAQ;AACrD,MAAM,gCAAgC;AACtC,MAAM,gCAAgC;AACtC,MAAM,gCAAgC;AACtC,MAAM,8BAA8B,+BAA+B,gCAAgC;AACnG,MAAM,8BAA8B,+BAA+B,gCAAgC;AACnG,MAAM,8BAA8B,+BAA+B,gCAAgC;AACnG,MAAM,sCAAsC;AAC5C,MAAM,4BAA4B,CAAC,OAAO,UAAU,QAAQ,QAAQ,UAAU,UAAU,QAAQ,QAAQ;AACxG,MAAM,4BAA4B,CAAC,OAAO,UAAU,QAAQ,QAAQ,UAAU,UAAU,QAAQ,QAAQ;AACxG,MAAM,4BAA4B,CAAC,OAAO,UAAU,QAAQ,QAAQ,UAAU,UAAU,QAAQ,QAAQ;AACxG,MAAM,+BAA+B,CAAC,OAAO,UAAU,QAAQ,QAAQ;AACvE,MAAM,8BAA8B,CAAC,OAAO,qCAAqC,QAAQ,QAAQ;AACjG,MAAM,6BAA6B,CAAC,OAAO,OAAO,oCAAoC,sCAAsC,AAAC,CAAA,OAAO,iCAAgC,IAAK,kCAAkC;AAC3M,MAAM,qCAAqC,CAAC,OAAO,gCAAgC,QAAQ,QAAQ;AACnG,MAAM,qCAAqC,CAAC,OAAO,gCAAgC,QAAQ,QAAQ;AACnG,MAAM,qCAAqC,CAAC,OAAO,+BAA+B,KAAK,KAAK,QAAQ,QAAQ;AAC5G,uBAAuB;AACvB,MAAM,0BAA0B,GAAG,kBAAkB;AACrD,MAAM,0BAA0B,GAAG,oBAAoB;AACvD,MAAM,0BAA0B,GAAG,eAAe;AAClD,MAAM,0BAA0B,GAAG,qBAAqB;AACxD,MAAM,2BAA2B,GAAG,yBAAyB;AAC7D,MAAM,4BAA4B,GAAG,0BAA0B;AAC/D,MAAM,0BAA0B,GAAG,YAAY;AAC/C,mEAAmE;AACnE,SAAS,8BAA8B,IAAI;IACvC,IAAI,0BAA0B,OAAO,OAAO;IAC5C,IAAI,0BAA0B,OAAO,OAAO;IAC5C,IAAI,0BAA0B,OAAO,OAAO;IAC5C,IAAI,2BAA2B,OAAO,OAAO;IAC7C,IAAI,4BAA4B,OAAO,OAAO;IAC9C,IAAI,6BAA6B,OAAO,OAAO;IAC/C,OAAO;AACX;AACA,wBAAwB;AACxB,MAAM,kCAAkC;AACxC,MAAM,kCAAkC;AACxC,MAAM,gCAAgC;AACtC,MAAM,kCAAkC;AACxC,MAAM,gCAAgC;AACtC,yFAAyF;AACzF,uEAAuE;AACvE,MAAM,oCAAoC;IACtC,sHAAsH;IACtH,uBAAuB;IACvB;QACI;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;KACJ;IACD,eAAe;IACf;QACI;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;KACJ;IACD,yBAAyB;IACzB;QACI;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;KACJ;IACD,4BAA4B;IAC5B;QACI;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;QACD;YACI;YACA;SACH;KACJ;CACJ;AACD,SAAS,+BAA+B,IAAI,EAAE,IAAI,EAAE,QAAQ;IACxD,OAAO,IAAQ,yCAA0C,MAAM,KAAK,kBAAkB,MAAM,IAAI;QAC5F;KACH,EAAE;AACP;AACA,SAAS,gCAAgC,MAAM,EAAE,CAAC,EAAE,IAAI;IACpD,IAAI,QAAQ,MAAM,CAAC,EAAE;IACrB,IAAI,OAAO,MAAM,UAAU,CAAC,EAAE;IAC9B,IAAI,IAAI,OAAO;IACf,IAAI,IAAI,+BAA+B,IAAI;IAC3C,IAAI,IAAI,gCAAgC;IACxC,IAAI,IAAI,+BAA+B,IAAI,gCAAgC;IAC3E,IAAI,IAAI,+BAA+B,IAAI;IAC3C,6DAA6D;IAC7D,IAAI,CAAC,KAAK,qBAAqB,MAAM,CAAC,KAAK,qBAAqB,MAAM,MAAM,gCAAgC,CAAC,KAAK,qBAAqB,IAAI,OAAO;IAClJ,gEAAgE;IAChE,4DAA4D;IAC5D,IAAI,OAAO,+BAA+B,MAAM,GAAG,MAAM;IACzD,KAAK,SAAS,OAAO;IACrB,IAAI,OAAO,+BAA+B,MAAM,GAAG,MAAM;IACzD,KAAK,SAAS,OAAO;IACrB,IAAI,SAAS;QACT;QACA;KACH;IACD,IAAI,IAAI,8BAA8B;QAClC,IAAI,OAAO,+BAA+B,MAAM,GAAG,MAAM;QACzD,KAAK,SAAS,OAAO;QACrB,OAAO,KAAK;IAChB;IACA,OAAO,OAAO,GAAG,MAAM;IACvB,OAAO,IAAI,OAAO,SAAS;AAC/B;AACA,SAAS,8BAA8B,MAAM,EAAE,CAAC,EAAE,IAAI;IAClD,IAAI,QAAQ,MAAM,CAAC,EAAE;IACrB,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;IAClC,IAAI,OAAO,8BAA8B;IACzC,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE;IACtC,IAAI,WAAW,8BAA8B;IAC7C,sDAAsD;IACtD,IAAI,IAAI,MAAM,MAAM;IACpB,IAAI,aAAa,4BAA4B,SAAS,yBAAyB;QAC3E,SAAS;QACT,KAAK;QACL,OAAO;IACX,OAAO;QACH,IAAI,SAAS,yBAAyB;YAClC,QAAQ;YACR,OAAO,MAAM,CAAC,IAAI,EAAE;YACpB,OAAO;QACX,OAAO;YACH,UAAU;YACV,OAAO,MAAM,CAAC,IAAI,EAAE;YACpB,OAAO,MAAM,CAAC,IAAI,EAAE;YACpB,OAAO;QACX;QACA,IAAI,IAAI,KAAK,UAAU,CAAC,EAAE;QAC1B,IAAI,IAAI,KAAK,UAAU,CAAC,EAAE;QAC1B,6CAA6C;QAC7C,IAAI,mCAAmC,MAAM,mCAAmC,IAAI,KAAK,oCAAoC,AAAC,CAAA,AAAC,CAAA,IAAI,4BAA2B,IAAK,gCAAiC,CAAA,IAAI,4BAA2B,CAAC,IAAK;IAC7O;IACA,IAAI,IAAI,QAAQ,KAAK,UAAU,CAAC,EAAE,IAAI;IACtC,IAAI,MAAM,QAAS,CAAA,MAAM,gCAAgC,mCAAmC,EAAC,GAAI;QAC7F,IAAI,IAAI,KAAM,CAAA,IAAI,4BAA2B;QAC7C,0DAA0D;QAC1D,kEAAkE;QAClE,IAAI,KAAK,qBAAqB,IAAI;YAC9B,IAAI,MAAM,aAAa,0BAA0B,IAAI;YACrD,OAAO,OAAO,IAAI,MAAM,GAAG,KAAK,+BAA+B,MAAM,GAAG,MAAM;YAC9E,OAAO,IAAI,MAAM;QACrB;IACJ;IACA,4EAA4E;IAC5E,IAAI,MAAM,KAAK,SAAS,OAAO;IAC/B,IAAI,MAAM,KAAK,SAAS,OAAO;IAC/B,IAAI,MAAM,KAAK,SAAS,OAAO;IAC/B,IAAI,aAAa,0BAA0B;QACvC,6DAA6D;QAC7D,qEAAqE;QACrE,mDAAmD;QACnD,gCAAgC,QAAQ,IAAI,GAAG;QAC/C,OAAO,IAAI;IACf;IACA,OAAO;AACX;AACA,SAAS,gCAAgC,IAAI;IACzC,OAAO,8BAA8B;QACjC,KAAK;QACL,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;IACf;AACJ;AACA,SAAS,sCAAsC,MAAM,EAAE,CAAC,EAAE,IAAI;IAC1D,IAAI,QAAQ,MAAM,CAAC,EAAE;IACrB,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;IAClC,oFAAoF;IACpF,IAAI,KAAK,kBAAkB,MAAM,iBAAiB,GAAG;IACrD,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE;IACtC,IAAI,MAAM,gCAAgC;IAC1C,OAAO,OAAO,GAAG;IACjB,OAAO,OAAO,OAAO,IAAI,KAAK,GAAG;AACrC;AACA,SAAS,yCAAyC,MAAM,EAAE,CAAC,EAAE,IAAI;IAC7D,IAAI,QAAQ,MAAM,CAAC,EAAE;IACrB,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;IAClC,IAAI,KAAK,qBAAqB,sCAAsC;QAChE,IAAI,eAAe,+BAA+B,MAAM,qCAAqC,MAAM;QACnG,mFAAmF;QACnF,IAAI,MAAM,KAAK,kBAAkB,MAAM,iBAAiB,IAAI,IAAI,IAAI;QACpE,OAAO,OAAO,KAAK,GAAG;QACtB;IACJ;IACA,OAAO;AACX;AAUA,IAAI,4BAA4B,CAAC;AACjC,4BAA4B,KAAK,MAAM;AAGvC,IAAI,4BAA4B,CAAC;AACjC,4BAA4B,KAAK,MAAM;AAGvC,MAAM,4CAA4C;IAC9C,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,MAAM;IACN,KAAK;IACL,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,GAAG;IACH,aAAa;IACb,eAAe;IACf,IAAI;IACJ,OAAO;IACP,OAAO;IACP,IAAI;IACJ,IAAI;IACJ,QAAQ,OAAO,2CAA2C;AAC9D;AACA,MAAM,4CAA4C;IAC9C,OAAO;IACP,mBAAmB;IACnB,OAAO;IACP,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,SAAS;IACT,WAAW;IACX,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,SAAS;IACT,MAAM;IACN,KAAK;AACT;AACA,MAAM,2CAA2C,0CAA0C,IAAI,0CAA0C,KAAK,0CAA0C,KAAK,0CAA0C,IAAI,0CAA0C,cAAc,0CAA0C;AAC7U,MAAM,4CAA4C,0CAA0C,MAAM,0CAA0C;AAC5I,MAAM,2CAA2C,0CAA0C,IAAI,0CAA0C;AACzI,MAAM,4CAA4C;IAC9C,SAAS;QACL,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,YAAY;QACR,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,SAAS;QACL,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,UAAU;QACN,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,UAAU;QACN,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,OAAO;QACH,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,OAAO;QACH,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,QAAQ;QACJ,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,SAAS;QACL,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,WAAW;QACP,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;IACA,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,oBAAoB;IACpB,6BAA6B;IAC7B,mCAAmC;IACnC,0BAA0B;IAC1B,6BAA6B;IAC7B,KAAK;IACL,OAAO;QACH,YAAY;QACZ,QAAQ;QACR,SAAS;QACT,SAAS,0CAA0C;QACnD,UAAU;QACV,UAAU;IACd;AACJ;AACA,MAAM,4CAA4C;IAC9C,QAAQ;IACR,QAAQ;QACJ;QACA;KACH;IACD,QAAQ;QACJ;QACA;KACH;IACD,QAAQ;QACJ;QACA;KACH;IACD,QAAQ;QACJ;QACA;KACH;IACD,QAAQ;QACJ;QACA;KACH;AACL;AAIA,MAAM,EAAE,gBAAgB,oCAAoC,EAAG,GAAQ,WAAW,GAAE,uBAAuB;AAC3G,MAAM,6BAA6B,IAAS,CAAA,uBAAuB,mBAAkB,EAAI,AAAI,0CAA2C;AACxI,MAAM,qCAAqC,IAAS,CAAA,uBAAuB,WAAU,EAAS,WAAW,GAAE,uBAAuB;AAClI,MAAM,iDAAqD;IACvD,OAAO,aAAa,IAAI,EAAE;QACtB,KAAK,SAAS;QACd,KAAK,SAAS;YACV;YACA;SACH;QACD,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS;QACd,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,SAAS,QAAQ;QACtB,KAAK,SAAS;QACd,KAAK,SAAS;YACV,OAAO;gBACH;aACH;YACD,QAAQ;gBACJ;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACH;QACL;QACA,iDAAiD;QACjD,KAAK,gBAAgB,0CAA0C,KAAK;QACpE,KAAK,cAAc,AAAI,yCAA0C,CAAC,KAAK,cAAc,IAAI,AAAI,0CAA2C;QACxI,KAAK,YAAY,KAAK,YAAY,cAAc,KAAK,MAAM,CAAC,KAAK,OAAO,SAAS,EAAE,KAAK;IAC5F,iDAAiD;IACjD;IACA,OAAO,eAAe,IAAI,EAAE,MAAM,EAAE;QAChC,yBAAyB;QACzB,qDAAqD;QACrD,IAAI,IAAI,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,IAAI;YACvC,IAAI,YAAY,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;YACvC,IAAI,IAAI,AAAI,yCAA0C,CAAC,UAAU,IAAI,oCAAoC,CAAC,UAAU;YACpH,IAAI,GAAG;gBACH,IAAI,aAAa,EAAE,IAAI,CAAC;oBACpB,IAAI,IAAI,KAAK,KAAK,kBAAkB;oBACpC,OAAO,IAAQ,yCAA0C,KAAK,MAAM,EAAE,IAAI;wBACtE;qBACH,EAAE,MAAM,CAAC,EAAE,CAAC;gBACjB;gBACA,OAAO,OAAO,GAAG,MAAM;YAC3B;QACJ;IACJ;AACJ;AACK,uBAAuB,wCAA0C,0CAA0C,kBAAkB;AAClI,SAAS,oCAAoC,KAAK;IAC9C,OAAO,2BAA2B,IAAI,MAAM,UAAU,CAAC,EAAE,KAAK;AAClE;AACA,SAAS,oCAAoC,KAAK;IAC9C,OAAO,KAAM,CAAA,2BAA2B,IAAI,MAAM,UAAU,CAAC,EAAE,IAAI,IAAG;AAC1E;AACA,MAAM;IACF,YAAY,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC;QACnD,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,WAAW;IACpB;AACJ;AACA,SAAS,qCAAqC,IAAI,EAAE,MAAM;IACtD,IAAI,WAAW;IACf,IAAI,OAAO;IACX,KAAK,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,mCAAmC,MAAM,OAAO,IAAI,sCAAsC;QACrH,IAAI,QAAQ,MAAM;YACd,EAAE;YACF,IAAI,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,IAAI,gCAAgC,AAAI,0CAA2C,GAAG,AAAI,0CAA2C,KAAK,qBAAqB;QAC3N;QACA,EAAE;QACF,qBAAqB;QACrB,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,IAAI,gCAAgC,KAAK,oCAAoC,MAAM,CAAC,EAAE,GAAG,oCAAoC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE;QAC1M,OAAO,MAAM;IACjB;IACA,IAAI,OAAO,OAAO,QAAQ;QACtB,EAAE;QACF,IAAI,IAAI,IAAI,MAAM,IAAI,OAAO,QAAQ,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,IAAI,gCAAgC,AAAI,0CAA2C,GAAG,AAAI,0CAA2C,KAAK,qBAAqB;IACnO;AACJ;AACA,SAAS,kCAAkC,KAAK;IAC5C,OAAO,MAAM,WAAW,WAAe;AAC3C;AACA,SAAS,+BAA+B,KAAK;IACzC,OAAO,MAAM,WAAW,WAAe;AAC3C;AACA,SAAS,sCAAsC,KAAK;IAChD,OAAO,MAAM,WAAW,WAAe;AAC3C;AACA,SAAS,sCAAsC,MAAM,EAAE,OAAO;IAC1D,KAAK,IAAI,SAAS,OAAO,MAAM,WAAW;QACtC,CAAC,QAAQ,EAAE;IACf;IACA,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,MAAM,cAAc,OAAO;IAChD,KAAK,cAAc;QACf;KACH,EAAE;IACH,OAAO,OAAO,WAAW;AAC7B;AACA,SAAS,wCAAwC,IAAI,EAAE,SAAS,EAAE,MAAM;IACpE,IAAI,SAAS;QACT;QACA;QACA;KACH;IACD,IAAI,sCAAsC,OAAO,MAAM,GAAG,IAAI,WAAW,sCAAsC,OAAO,MAAM,GAAG,IAAI,SAAS,OAAO,AAAI,0CAA2C;SAC7L,IAAI,sCAAsC,OAAO,MAAM,GAAG,IAAI,WAAW,sCAAsC,OAAO,MAAM,GAAG,IAAI,SAAS,OAAO,AAAI,0CAA2C;SAClM,IAAI,sCAAsC,OAAO,MAAM,GAAG,IAAI,WAAW,sCAAsC,OAAO,MAAM,GAAG,IAAI,SAAS,OAAO,AAAI,0CAA2C;IACvM,OAAO,AAAI,0CAA2C;AAC1D;AACA,SAAS,wCAAwC,IAAI,EAAE,MAAM,EAAE,IAAI;IAC/D,IAAI,cAAc,KAAK;IACvB,IAAI,WAAW,KAAK,cAAc,OAAO,cAAc;IACvD,IAAI,eAAe,KAAK,kBAAkB,QAAQ;IAClD,IAAI,SAAS,KAAK,kBAAkB,YAAY,QAAQ;IACxD,IAAI,QAAQ;QACR,IAAI,OAAO,IAAQ,yCAA0C,MAAM,QAAQ;YACvE,YAAY;SACf;QACD,IAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,QAAQ,MAAM,CAAC,EAAE,CAAC,WAAW,WAAW,wCAAwC,MAAM,MAAM,CAAC,EAAE,CAAC,QAAQ;IACvO;IACA,IAAI,IAAI,QAAQ,GAAG,MAAM,mCAAmC,QAAQ,IAAI,QAAQ,OAAO,QAAQ,QAAQ,KAAK,MAAM,mCAAmC,QAAQ,OAAO;QAChK,IAAI,EAAE,UAAU,QAAQ,EAAG,cAAc,YAAY,EAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QACzE,IAAI,iBAAiB,oBAAoB,iBAAiB,qBAAqB;QAC/E,IAAI,iBAAiB,oBAAoB,cAAc;YACnD,IAAI,IAAI,IAAQ,yCAA0C,MAAM,cAAc;gBAC1E;aACH;YACD,EAAE,aAAa,IAAI,gCAAgC,KAAK,oCAAoC,IAAI,oCAAoC,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,cAAc,MAAM,CAAC,MAAM,CAAC,WAAW;YACxM,+BAA+B;YAC/B,IAAI,IAAI;YACR,MAAM,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,MAAM;YACxG,OAAO,OAAO,KAAK,GAAG;YACtB;QACJ;QACA,0BAA0B;QAC1B,EAAE;QACF,yEAAyE;QACzE,6EAA6E;QAC7E,0EAA0E;QAC1E,2EAA2E;QAC3E,0EAA0E;QAC1E,+BAA+B;QAC/B,IAAI,OAAO;QACX,IAAI,QAAQ;QACZ,IAAI,UAAU;QACd,sEAAsE;QACtE,sEAAsE;QACtE,mBAAmB;QACnB,IAAI,YAAY,YAAY,AAAI,0CAA2C,qBAAqB,SAAS,QAAQ,QAAQ,KAAK,OAAQ,CAAA,YAAY,aAAa,cAAc,CAAC,+BAA+B,MAAM,CAAC,QAAQ,EAAE,KAAK,YAAY,aAAa,cAAc,MAAM,CAAC,QAAQ,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAE,GAAI;YACrW,wCAAwC;YACxC,IAAI,IAAI;gBACJ,MAAM,CAAC,MAAM,CAAC;gBACd,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAClB,MAAM,CAAC,QAAQ,EAAE,CAAC;aACrB;YACD,IAAI,sCAAsC,EAAE,MAAM,GAAG,IAAI,WAAW,YAAY,aAAa,cAAc,sCAAsC,GAAG,SAAS;gBACzJ,SAAS;gBACT,MAAM,QAAQ,OAAO,+BAA+B,MAAM,CAAC,MAAM,EAAE;gBACnE,OAAO;gBACP,UAAU;YACd;QACJ,OAAO,IAAI,YAAY,aAAa,eAAe,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,AAAI,0CAA2C,OAAO;YAC3I;YACA,MAAM,QAAQ,OAAO,+BAA+B,MAAM,CAAC,MAAM,EAAE;YACnE,OAAO;YACP,UAAU;QACd;QACA,OAAO,YAAY;YACf,KAAK;gBACD;oBACI,wDAAwD;oBACxD,IAAI,IAAI;oBACR,IAAI,YAAY;oBAChB,GAAG;wBACC,IAAI,OAAO,MAAM,CAAC,EAAE,EAAE,CAAC;wBACvB,6BAA6B;wBAC7B,IAAI,kCAAkC,MAAM,CAAC,EAAE,GAAG;4BAC9C,oDAAoD;4BACpD,qDAAqD;4BACrD,IAAI,KAAK,aAAa,AAAI,0CAA2C,WAAY,CAAA,KAAK,aAAa,AAAI,0CAA2C,UAAU,SAAQ,GAAI;gCACpK,OAAO;gCACP;4BACJ;4BACA,2CAA2C;4BAC3C,EAAE;4BACF,wBAAwB;4BACxB,EAAE;4BACF,yEAAyE;4BACzE,8BAA8B;4BAC9B,EAAE;4BACF,kEAAkE;4BAClE,eAAe;4BACf,IAAI,KAAK,aAAa,AAAI,0CAA2C,SAAS,YAAY;4BAC1F,OAAO;wBACX,OAAO,IAAI,QAAQ,KAAK,KAAK,aAAa,AAAI,0CAA2C,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;oBAC5L,QAAQ,IAAI,OAAO;oBACnB;gBACJ;YACJ,KAAK;gBACD,0CAA0C;gBAC1C,OAAO;gBACP,2CAA2C;gBAC3C,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,kCAAkC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,WAAW,WAAW,AAAI,0CAA2C;QAC5K;QACA,sEAAsE;QACtE,sEAAsE;QACtE,mBAAmB;QACnB,EAAE;QACF,0DAA0D;QAC1D,IAAI,WAAW,SAAS,SAAS,QAAQ,QAAQ,GAAG,UAAU;QAC9D,mCAAmC;QACnC,EAAE;QACF,4EAA4E;QAC5E,wEAAwE;QACxE,6EAA6E;QAC7E,2EAA2E;QAC3E,0EAA0E;QAC1E,uBAAuB;QACvB,EAAE;QACF,6CAA6C;QAC7C,iCAAiC;QACjC,gCAAgC;QAChC,6CAA6C;QAC7C,EAAE;QACF,wBAAwB;QACxB,EAAE;QACF,4EAA4E;QAC5E,4BAA4B;QAC5B,wCAAwC;QACxC,EAAE;QACF,4EAA4E;QAC5E,4CAA4C;QAC5C,EAAE;QACF,wBAAwB;QACxB,EAAE;QACF,6EAA6E;QAC7E,qBAAqB;QACrB,IAAI,IAAI,KAAK,OAAO,KAAK,MAAM,KAAK;YAChC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;YACtB,KAAK,WAAW,KAAK,IAAI,AAAI,0CAA2C,OAAO,KAAK;QACxF;QACA,IAAI,OAAO,KAAK,MAAM,CAAC,KAAK,CAAC,WAAW,WAAW,AAAI,0CAA2C;QAClG,4EAA4E;QAC5E,iBAAiB;QACjB,IAAI,IAAI,KAAK,OAAO,GAAG,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;YAC3H,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,IAAI,IAAI,kCAAkC,MAAM,CAAC,EAAE,GAAG;gBAC/E,MAAM,CAAC,EAAE,CAAC,WAAW,WAAW,AAAI,0CAA2C;gBAC/E;YACJ;YACA;QACJ;QACA,sBAAsB;QACtB,IAAI,SAAS,MAAM,CAAC,MAAM,CAAC,WAAW,WAAW,AAAI,0CAA2C;QAChG,yEAAyE;QACzE,kBAAkB;QAClB,EAAE;QACF,yEAAyE;QACzE,yEAAyE;QACzE,sEAAsE;QACtE,0EAA0E;QAC1E,EAAE;QACF,qBAAqB;QACrB,8BAA8B;QAC9B,uCAAuC;QACvC,qDAAqD;QACrD,EAAE;QACF,uBAAuB;QACvB,4CAA4C;QAC5C,8CAA8C;QAC9C,IAAI,KAAK,WAAW;YAChB,IAAI,wBAAwB,KAAK,kBAAkB;YACnD,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;gBACvH,IAAI;gBACJ,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI;oBACxB,IAAI,kCAAkC,MAAM,CAAC,EAAE,KAAK,yBAAyB,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;gBACrK;gBACA,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,KAAK,IAAI,GAAG;oBAC7F,uCAAuC;oBACvC,IAAI,IAAI,MAAM,CAAC,EAAE;oBACjB,OAAO,OAAO,GAAG,MAAM,OAAO,OAAO,IAAI,GAAG,IAAI;oBAChD,MAAM,CAAC,EAAE,GAAG;gBAChB;gBACA;YACJ;QACJ;QACA,wDAAwD;QACxD,IAAI,UAAU,AAAI,0CAA2C;QAC7D,IAAI,IAAI,KAAK,OAAO,KAAK,KAAK,KAAK;YAC/B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;YACtB,IAAI,KAAK,WAAY,CAAA,AAAI,4CAA6C,AAAI,0CAA2C,IAAI,AAAI,0CAA2C,KAAK,AAAI,0CAA2C,KAAK,AAAI,2CAA4C,KAAK,QAAO,GAAI;gBAC7R,KAAK,WAAW;gBAChB,IAAI,KAAK,aAAa,AAAI,0CAA2C,KAAK,KAAK,aAAa,AAAI,0CAA2C,OAAO;oBAC9I,qDAAqD;oBACrD,8BAA8B;oBAC9B,gDAAgD;oBAChD,0DAA0D;oBAC1D,yDAAyD;oBACzD,wDAAwD;oBACxD,sBAAsB;oBACtB,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,OAAO;wBAC3H,KAAK,WAAW,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW;wBACzC;oBACJ;gBACJ;YACJ,OAAO,IAAI,KAAK,aAAa,AAAI,0CAA2C,MAAM,UAAU,KAAK;QACrG;QACA,6DAA6D;QAC7D,qCAAqC;QACrC,IAAI,OAAO;QACX,IAAI,IAAI,KAAK,OAAO,GAAG,KAAK,KAAK,KAAK;YAClC,IAAI,kCAAkC,MAAM,CAAC,GAAG,GAAG;gBAC/C,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,WAAW,AAAI,0CAA2C,MAAM,MAAM,CAAC,EAAE,CAAC,WAAW,WAAW,MAAM,CAAC,GAAG,CAAC,WAAW;gBACjL,OAAO;YACX,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG,OAAO;QAC3G;QACA,IAAI,MAAM,OAAO,MAAM,OAAO;QAC9B,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,WAAW,WAAW,EAAE,WAAW;QACtD,OAAO,OAAO,OAAO,IAAI,WAAW;QACpC,kBAAkB;QAClB,IAAI,IAAI,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,aAAa,AAAI,0CAA2C,QAAQ;YAC7H,OAAO;YACP;QACJ;QACA,qBAAqB;QACrB,OAAO;QACP,IAAI,IAAI,KAAK,OAAO,KAAK,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,aAAa,AAAI,0CAA2C,mBAAmB,KAAK,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;QACrK,WAAW;QACX,IAAI,OAAO,CAAC,KAAK,aAAa,YAAY,aAAa;QACvD,IAAI,IAAI,KAAK,OAAO,KAAK,MAAM,KAAK;YAChC,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;YAC3B,IAAI,MAAM,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;QACzC;QACA,YAAY;QACZ,IAAI,IAAI,KAAK,OAAO,GAAG,KAAK,KAAK,KAAK;YAClC,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;YAC3B,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;YAC3B,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;QAC/B;QACA,IAAI,KAAK,aAAa,KAAK,kBAAkB,cAAc;YACvD,yDAAyD;YACzD,QAAQ;YACR,EAAE;YACF,0DAA0D;YAC1D,4DAA4D;YAC5D,4DAA4D;YAC5D,2DAA2D;YAC3D,gEAAgE;YAChE,EAAE;YACF,gDAAgD;YAChD,2BAA2B;YAC3B,EAAE;YACF,yDAAyD;YACzD,yDAAyD;YACzD,oBAAoB;YACpB,EAAE;YACF,uDAAuD;YACvD,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,KAAM,CAAA,IAAI,MAAM,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAE,GAAI;gBACpU,MAAM,CAAC,EAAE,CAAC,SAAS,OAAO;gBAC1B,MAAM,CAAC,IAAI,EAAE,CAAC,SAAS,OAAO;YAClC;QACJ;QACA,IAAI,UAAU;QACd,IAAI,SAAS,QAAQ,OAAO,UAAU,KACtC,IAAI,IAAI,KAAK,OAAO,GAAG,KAAK,UAAU,IAAI,KAAK,KAAK;YAChD,IAAI,IAAI;gBACJ,MAAM,CAAC,GAAG,CAAC;gBACX,MAAM,CAAC,KAAK,EAAE,CAAC;aAClB;YACD,IAAI,sCAAsC,GAAG,SAAS;gBAClD,IAAI,IAAI,IAAI,GAAG,IAAI,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,OAAO;gBAC7D,yDAAyD;gBACzD,yBAAyB;gBACzB,sEAAsE;gBACtE,qCAAqC;gBACrC,qCAAqC;gBACrC,IAAI,SAAS,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;gBACnE;YACJ;QACJ;QACA,yBAAyB;QACzB,IAAI,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,MAAM,IAAI,+BAA+B,MAAM,CAAC,IAAI,GAAG;YACvF,IAAI,YAAY,MAAM,CAAC,IAAI,CAAC,WAAW,aAAa,AAAI,0CAA2C;YACnG,IAAI,IAAI;YACR,GAAG;gBACC;gBACA,wDAAwD;gBACxD,qDAAqD;gBACrD,6BAA6B;gBAC7B,wBAAwB;gBACxB,IAAI,WAAW,OAAO,MAAM,CAAC,EAAE,CAAC,SAAS;YAC7C,QAAQ,IAAI,SAAS,CAAC,kCAAkC,MAAM,CAAC,EAAE,GAAG;QACxE;IACJ;AACJ;AACA,SAAS,sCAAsC,IAAI,EAAE,MAAM,EAAE,IAAI;IAC7D,IAAI,cAAc,KAAK;IACvB,IAAI,WAAW,KAAK,cAAc,OAAO,cAAc;IACvD,IAAI,IAAI,QAAQ,GAAG,MAAM,mCAAmC,QAAQ,IAAI,QAAQ,OAAO,QAAQ,QAAQ,KAAK,MAAM,mCAAmC,QAAQ,OAAO;QAChK,uBAAuB;QACvB,EAAE;QACF,4EAA4E;QAC5E,oEAAoE;QACpE,2EAA2E;QAC3E,WAAW;QACX,IAAI,UAAU,CAAC,CAAC,SAAS;QACzB,kBAAkB;QAClB,IAAI,OAAO;QACX,MAAM,OAAO,KAAK,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,YAAY,AAAI,0CAA2C,QAAQ;YACpH,IAAI,WAAW,OAAO,IAAI,KAAK;gBAC3B,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,SAAS,MAAM;oBAC5D,IAAI,CAAE,CAAA,MAAM,CAAC,EAAE,CAAC,eAAe,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,YAAW,GAAI;wBAC5E,uDAAuD;wBACvD,yBAAyB;wBACzB,OAAO;wBACP,MAAM,OAAO,OAAO,sCAAsC,MAAM,CAAC,KAAK,EAAE;wBACxE,MAAM,CAAC,KAAK,CAAC,WAAW,WAAW,AAAI,0CAA2C;wBAClF,UAAU;oBACd;oBACA;gBACJ;YACJ;YACA,kEAAkE;YAClE,IAAI,KAAK,kBAAkB,aAAa,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,IAAI;gBACvE,MAAM,IAAI,OAAO,+BAA+B,MAAM,CAAC,EAAE,EAAE;gBAC3D,IAAI,MAAM,OAAO,CAAC,sCAAsC,MAAM,CAAC,EAAE,GAAG;gBACpE,KAAK,eAAe;gBACpB,MAAM,IAAI,OAAO,+BAA+B,MAAM,CAAC,EAAE,EAAE;gBAC3D,IAAI,IAAI,OAAO,kCAAkC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,SAAS;oBACrJ,OAAO;oBACP,MAAM,CAAC,KAAK,CAAC,WAAW,WAAW,AAAI,0CAA2C;gBACtF;YACJ;YACA,IAAI,QAAQ,QAAQ,MAAM,CAAC,KAAK,CAAC,WAAW,WAAW,AAAI,0CAA2C,QAAQ;YAC9G;QACJ;QACA,IAAI,SAAS,OAAO,QAAQ,QAAQ,MAAM,CAAC,OAAO,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,KAAK;QACjI,IAAI,OAAO,KAAK,MAAM,QAAQ,QAAQ,MAAM,CAAC,KAAK,CAAC,WAAW,WAAY,CAAA,AAAI,0CAA2C,IAAQ,wCAAwC,EAAG;QAC5K,oBAAoB;QACpB,EAAE;QACF,yEAAyE;QACzE,yEAAyE;QACzE,uEAAuE;QACvE,sEAAsE;QACtE,sEAAsE;QACtE,sCAAsC;QACtC,EAAE;QACF,IAAI,QAAQ,IAAI,OAAO,QAAQ,MAAM;YACjC,+DAA+D;YAC/D,IAAI,SAAS,SAAS,MAAM,OAAO,IAAI,OAAO;YAC9C,uEAAuE;YACvE,uEAAuE;YACvE,wCAAwC;YACxC,IAAI,KAAK,kBAAkB,eAAe,KAAK,kBAAkB,SAAS;gBACtE,MAAM,SAAS,SAAS,CAAE,CAAA,MAAM,CAAC,OAAO,CAAC,WAAW,WAAY,CAAA,AAAI,0CAA2C,IAAQ,wCAAwC,CAAC,EAAG;gBACnK,qCAAqC;gBACrC,4CAA4C;gBAC5C,kCAAkC;gBAClC,IAAI,sCAAsC,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC,WAAW,aAAa,AAAI,0CAA2C,OAE/I;oBAAA,IAAI,SAAS,IAAI,OAAO,+BAA+B,MAAM,CAAC,SAAS,EAAE,GAAG;gBAAQ,OACjF,SAAS,OAAO,WAAW;YACtC;YACA,IAAI,QAAQ,UAAU,MAAM,CAAC,OAAO,CAAC,WAAW,aAAa,AAAI,0CAA2C,OAAO;gBAC/G,+CAA+C;gBAC/C,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,OAAO;oBAC/H,IAAI,SAAS,IAAI;oBACjB,IAAI,SAAS,QAAQ,QAAQ,QAAQ;oBACrC,IAAI,MAAM,MAAM,CAAC,OAAO;oBACxB,OAAO,OAAO,QAAQ,MAAM,OAAO,OAAO,SAAS,GAAG,SAAS;oBAC/D,MAAM,CAAC,OAAO,GAAG;oBACjB;gBACJ;YACJ;QACJ;QACA,kBAAkB;QAClB,EAAE;QACF,uEAAuE;QACvE,yEAAyE;QACzE,qEAAqE;QACrE,yEAAyE;QACzE,yEAAyE;QACzE,aAAa;QACb,EAAE;QACF,6EAA6E;QAC7E,sEAAsE;QACtE,EAAE;QACF,+EAA+E;QAC/E,gFAAgF;QAChF,4CAA4C;QAC5C,IAAI,QAAQ,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,AAAI,0CAA2C,qBAAqB,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,AAAI,0CAA2C,UAAW,CAAA,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,YAAW,GAAI;YACtR,IAAI;YACJ,IAAI,UAAU,YAAY;YAC1B,IAAI,QAAQ;YACZ,mEAAmE;YACnE,wBAAwB;YACxB,IAAI,YAAY,AAAI,0CAA2C,YAAY;gBACvE,qEAAqE;gBACrE,oEAAoE;gBACpE,wEAAwE;gBACxE,qEAAqE;gBACrE,iEAAiE;gBACjE,gCAAgC;gBAChC,EAAE;gBACF,oEAAoE;gBACpE,qEAAqE;gBACrE,kCAAkC;gBAClC,aAAa,QAAQ;gBACrB,MAAM,aAAa,QAAQ,CAAC,sCAAsC,MAAM,CAAC,WAAW,EAAE;gBACtF,IAAI,aAAa,QAAQ,sCAAsC,MAAM,CAAC,WAAW,GAAG;oBAChF,0EAA0E;oBAC1E,IAAI,aAAa,IAAI,QAAQ,+BAA+B,MAAM,CAAC,aAAa,EAAE,GAAG;oBACrF,QAAQ;gBACZ;gBACA,uEAAuE;gBACvE,8DAA8D;gBAC9D,+DAA+D;gBAC/D,IAAI,CAAC,SAAS,YAAY,AAAI,0CAA2C,YAAY;oBACjF,aAAa;oBACb,MAAM,aAAa,IAAI,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC,WAAW,YAAY,AAAI,0CAA2C,WAAW;oBACtI,QAAQ,aAAa;gBACzB;gBACA,mEAAmE;gBACnE,uEAAuE;gBACvE,kEAAkE;gBAClE,wDAAwD;gBACxD,EAAE;gBACF,yEAAyE;gBACzE,IAAI,CAAC,SAAS,YAAY,AAAI,0CAA2C,WAAW;oBAChF,aAAa;oBACb,MAAM,aAAa,IAAI,OAAO,CAAE,CAAA,MAAM,CAAC,aAAa,EAAE,CAAC,WAAW,WAAY,CAAA,AAAI,0CAA2C,SAAS,AAAI,0CAA2C,aAAa,AAAI,0CAA2C,IAAG,CAAC,EAAG;oBACxP,QAAQ,aAAa;gBACzB;YACJ;YACA,wEAAwE;YACxE,sEAAsE;YACtE,wEAAwE;YACxE,sEAAsE;YACtE,oEAAoE;YACpE,0BAA0B;YAC1B,IAAI,CAAC,OAAO;gBACR,sBAAsB;gBACtB,aAAa,QAAQ;gBACrB,MAAM,aAAa,QAAQ,CAAC,sCAAsC,MAAM,CAAC,WAAW,EAAE;gBACtF,IAAI,aAAa,QAAQ,sCAAsC,MAAM,CAAC,WAAW,GAAG;oBAChF,0EAA0E;oBAC1E,IAAI,aAAa,IAAI,QAAQ,+BAA+B,MAAM,CAAC,aAAa,EAAE,GAAG;oBACrF,QAAQ;gBACZ;YACJ;YACA,yDAAyD;YACzD,IAAI,CAAC,OAAO;gBACR,aAAa,MAAM;gBACnB,MAAM,aAAa,SAAS,MAAM,CAAC,WAAW,CAAC,WAAW,aAAa,AAAI,0CAA2C,KAAK;gBAC3H,gEAAgE;gBAChE,oEAAoE;gBACpE,kEAAkE;gBAClE,6BAA6B;gBAC7B,2CAA2C;gBAC3C,IAAI,sCAAsC,MAAM,CAAC,WAAW,GAAG;oBAC3D,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,YAAY,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;gBACtI;YACJ;YACA,IAAI,OAAO,MAAM,CAAC,MAAM;YACxB,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,QAAQ,GAAG,aAAa;YACjE,MAAM,CAAC,WAAW,GAAG;YACrB,IAAI,QAAQ,QAAQ,QAAQ,YAAY;QAC5C;QACA,4CAA4C;QAC5C,EAAE;QACF,uEAAuE;QACvE,uBAAuB;QACvB,IAAI,WAAW,OAAO,IAAI,KAAK;YAC3B,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,SAAS,MAAM;gBAC5D,sEAAsE;gBACtE,4EAA4E;gBAC5E,8DAA8D;gBAC9D,2EAA2E;gBAC3E,wCAAwC;gBACxC,EAAE;gBACF,mCAAmC;gBACnC,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc;oBAChD,uEAAuE;oBACvE,uDAAuD;oBACvD,EAAE;oBACF,+DAA+D;oBAC/D,gBAAgB;oBAChB,IAAI,SAAS;oBACb,uEAAuE;oBACvE,uEAAuE;oBACvE,wCAAwC;oBACxC,IAAI,KAAK,kBAAkB,eAAe,KAAK,kBAAkB,SAAS;wBACtE,MAAM,SAAS,SAAS,CAAE,CAAA,MAAM,CAAC,SAAS,EAAE,CAAC,WAAW,WAAY,CAAA,AAAI,0CAA2C,IAAQ,wCAAwC,CAAC,EAAG;wBACvK,0EAA0E;wBAC1E,+EAA+E;wBAC/E,IAAI,SAAS,SAAS,MAAM,CAAC,SAAS,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;4BAC/G,IAAI,SAAS;4BACb,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,QAAQ,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,AAAI,0CAA2C,GAAG;gCAC1H;gCACA;4BACJ;wBACJ;oBACJ;oBACA,IAAI,SAAS,SAAS,sCAAsC,MAAM,CAAC,SAAS,EAAE,GAE1E;wBAAA,IAAI,SAAS,OAAO,+BAA+B,MAAM,CAAC,OAAO,GAAG;oBAAQ;oBAEhF,IAAI,SAAS;oBACb,IAAI,MAAM,MAAM,CAAC,OAAO;oBACxB,OAAO,OAAO,SAAS,GAAG,MAAM,OAAO,OAAO,QAAQ,SAAS;oBAC/D,MAAM,CAAC,OAAO,GAAG;oBACjB,IAAI,UAAU,QAAQ,OAAO,QAAQ;gBACzC;gBACA;YACJ;QACJ;QACA,uDAAuD;QACvD,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,AAAI,0CAA2C,SAAU,CAAA,CAAC,SAAS,CAAC,QAAQ,KAAK,AAAC,CAAA,GAAG,yBAAyB,WAAU,EAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAE,EAAC,GAAI,MAAM,CAAC,MAAM,CAAC,SAAS,OAAO;IAC3O;AACJ;AACA,SAAS,mCAAmC,MAAM,EAAE,KAAK;IACrD,IAAI,SAAS,OAAO,QAAQ,OAAO;IACnC,IAAI,WAAW,MAAM,CAAC,MAAM,CAAC,WAAW;IACxC,MAAM,EAAE,QAAQ,OAAO,UAAU,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa;IACvE,OAAO;AACX;AAUA,MAAM,EAAE,YAAY,gCAAgC,EAAG,gBAAgB,oCAAoC,EAAG,GAAQ,WAAW,GAAE,uBAAuB;AAC1J,MAAM,6BAA6B,IAAS,CAAA,uBAAuB,mBAAkB,EAAI,AAAI,0CAA2C;AACxI,MAAM,qCAAqC,IAAS,CAAA,uBAAuB,WAAU,EAAS,WAAW,GAAE,uBAAuB;AAClI,MAAM,iDAAqD;IACvD,OAAO,aAAa,IAAI,EAAE;QACtB,KAAK,SAAS;QACd,qCAAqC;QACrC,KAAK,SAAS;YACV;YACA;YACA;YACA;SACH;QACD,mBAAmB;QACnB,KAAK,SAAS;QACd,KAAK,SAAS;YACV;SACH,EAAE;QACH,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,SAAS;YACV;SACH;QACD,KAAK,SAAS;QACd,kCAAkC;QAClC,KAAK,SAAS;YACV;YACA;YACA;YACA;YACA;YACA;YACA;SACH;QACD,KAAK,SAAS;QACd,yBAAyB;QACzB,yFAAyF;QACzF,kFAAkF;QAClF,uEAAuE;QACvE,KAAK,SAAS;YACV;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,OAAO,eAAe,IAAI,EAAE,MAAM,EAAE;QAChC,yBAAyB;QACzB,qDAAqD;QACrD,IAAI,IAAI,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,IAAI;YACvC,IAAI,YAAY,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;YACvC,IAAI,oCAAoC,CAAC,UAAU,EAAE;gBACjD,IAAI,aAAa,oCAAoC,CAAC,UAAU,CAAC,IAAI,CAAC;oBAClE,IAAI,IAAI,KAAK,KAAK,kBAAkB;oBACpC,OAAO,IAAQ,yCAA0C,KAAK,MAAM,EAAE,IAAI;wBACtE;qBACH,EAAE,MAAM,CAAC,EAAE,CAAC;gBACjB;gBACA,OAAO,OAAO,GAAG,MAAM;YAC3B;QACJ;IACJ;AACJ;AACK,uBAAuB,wCAA0C,0CAA0C,kBAAkB;AAClI,SAAS,kCAAkC,KAAK;IAC5C,OAAO,2BAA2B,IAAI,MAAM,UAAU,CAAC,EAAE;AAC7D;AACA,MAAM;IACF,YAAY,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC;QACzC,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,WAAW;IACpB;AACJ;AACA,SAAS,qCAAqC,IAAI,EAAE,MAAM;IACtD,IAAI,WAAW;IACf,KAAK,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,mCAAmC,MAAM,OAAO,IAAI,oCAAoC;QACnH,EAAE;QACF,qBAAqB;QACrB,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,IAAI,8BAA8B,gCAAgC,CAAC,kCAAkC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QACnL,sBAAsB;QACtB,IAAI,QAAQ,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,MAAM,IAAI,KAAK,IAAI,GAAG,MAAM;QAC9E,IAAI,IAAI,KAAK,OAAO,KAAK,QAAQ,OAAO,KAAK,MAAM,CAAC,GAAG,CAAC,SAAS,OAAO;IAC5E;AACJ;AACA,SAAS,6CAA6C,IAAI,EAAE,MAAM;IAC9D,KAAK,IAAI,SAAS,OAAO,MAAM,cAAc;AACjD;AACA,SAAS,iCAAiC,IAAI,EAAE,MAAM;IAClD,KAAK,IAAI,SAAS,OAAO,IAAI,MAAM,eAAe,MAAM,SAAS,MACjE,MAAM,WAAW,WAAW;AAChC;AACA,SAAS,iCAAiC,IAAI,EAAE,MAAM;IAClD,KAAK,IAAI,SAAS,OAAO,IAAI,MAAM,aACnC,MAAM,WAAW,WAAW;AAChC;AACA,SAAS,8BAA8B,IAAI,EAAE,MAAM;IAC/C,IAAI,eAAe,KAAK,kBAAkB,QAAQ;IAClD,IAAI,IAAI,QAAQ,GAAG,MAAM,mCAAmC,QAAQ,IAAI,QAAQ,OAAO,QAAQ,QAAQ,KAAK,MAAM,mCAAmC,QAAQ,OAAO;QAChK,IAAI,GAAG;QACP,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC;QACzB,IAAI,OAAO,KAAK;QAChB,6CAA6C;QAC7C,IAAI,SAAS,+BAA+B,SAAS,sBAAsB,SAAS,kBAAkB;QACtG,mDAAmD;QACnD,IAAI,SAAS,oBAAoB,cAAc;YAC3C,IAAI,IAAI,IAAQ,yCAA0C,MAAM,cAAc;gBAC1E;aACH;YACD,EAAE,aAAa;YACf,+BAA+B;YAC/B,IAAI,IAAI,OAAO,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,WAAW,aAAa,KAAK;YACjE,OAAO,OAAO,EAAE,GAAG,GAAG;YACtB;QACJ;QACA,uBAAuB;QACvB,IAAI,KAAK,aAAa,OAAO,MAAM,QAAQ,GAC3C,IAAI,IAAI,QAAQ,GAAG,IAAI,KAAK,IAAI;YAC5B,OAAO,MAAM,CAAC,EAAE,CAAC;YACjB,IAAI,6BAA6B,SAAS,+BAA+B,MAAM,CAAC,EAAE,GAAG;gBACjF,0EAA0E;gBAC1E,+CAA+C;gBAC/C,IAAI,+BAA+B,MAAM,CAAC,EAAE,GAAG;gBAC/C,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,QAAQ,GAAG,IAAI,QAAQ,MAAM,CAAC,EAAE;gBACzE;YACJ;QACJ;QACA,oBAAoB;QACpB,IAAI,IAAI,OAAO,IAAI,KAAK,IAAI,KAAK,IAAI;YACjC,OAAO,MAAM,CAAC,EAAE,CAAC;YACjB,IAAI,6BAA6B,SAAS,+BAA+B,MAAM,CAAC,EAAE,GAClF,+CAA+C;YAC/C,IAAI,+BAA+B,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI;iBACnD,IAAI,AAAC,CAAA,KAAK,aAAa,UAAU,KAAK,aAAa,OAAM,KAAM,IAAI,GAAG,OAAO,OAAO,GAAG,GAAG,MAAM,CAAC,EAAE,KAAK,OAAO,OAAO,GAAG,IAAI;QACtI;IACJ;AACJ;AACA,SAAS,mCAAmC,MAAM,EAAE,KAAK;IACrD,IAAI,SAAS,OAAO,QAAQ,OAAO;IACnC,IAAI,WAAW,MAAM,CAAC,MAAM,CAAC,WAAW;IACxC,MAAM,EAAE,QAAQ,OAAO,UAAU,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa;IACvE,OAAO;AACX;AACA,SAAS,+BAA+B,KAAK;IACzC,OAAO,MAAM,WAAW,aAAa,OAAO,CAAC,MAAM;AACvD;AACA,SAAS,6BAA6B,IAAI;IACtC,OAAO,KAAK,aAAa,OAAO,KAAK,aAAa;AACtD;AAGA,MAAM,gCAAgC;IAClC,MAAU;IACV,MAAU;IACV,MAAU;IACV,QAAY;IACZ,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,oCAAoC;IACpC,uCAAuC;IACvC,MAAU;IACV,MAAU;IACV,sCAAsC;IACtC,mCAAmC;IACnC,MAAU;IACV,qCAAqC;IACrC,4CAA4C;IAC5C,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU;IACV,MAAU,yCAAyC,UAAU;AAEjE;AACA,SAAS,0CAA0C,MAAM;IACrD,IAAI,CAAC,MAAM,QAAQ,SAAS,SAAS;QACjC;KACH;IACD,KAAK,IAAI,KAAK,OAAO;QACjB,IAAI,SAAS,6BAA6B,CAAC,EAAE;QAC7C,IAAI,QAAQ,OAAO;IACvB;IACA,OAAU;AACd;AAMA,MAAM,iDAAqD;IACvD,YAAY,UAAU,EAAE,KAAK,EAAE;QAC3B,OAAO;YACH,KAAK;gBACD;oBACI,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI,OAAO;oBACzB,IAAI,QAAQ,IAAI,CAAC,cAAc;oBAC/B,OAAO,MAAM;wBACT,KAAK;4BACD,MAAM,KAAK,MAAM,KAAK,MAAM,eAAe;4BAC3C;wBACJ,KAAK;4BACD,MAAM,KAAK,MAAM,WAAW,IAAI;4BAChC;oBACR;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI;wBACd,IAAI,WAAW,MAAM,UAAU,IAAI;wBACnC,IAAI,SAAS,WAAW,GAAG;4BACvB,oDAAoD;4BACpD,oFAAoF;4BACpF,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,cAAc,OAAO;4BAC7C,OAAO;wBACX;wBACA,IAAI,CAAC,cAAc,IAAI,KAAK,QAAQ,CAAC,EAAE;wBACvC,IAAI,CAAC,cAAc,IAAI,oBAAoB;wBAC3C,IAAI,WAAW,IAAI,CAAC,cAAc,IAAI;wBACtC,IAAI,WAAW,IAAI,CAAC,cAAc;wBAClC,IAAI,cAAc,SAAS,MAAM,GAAG,IAAI,CAAC,KAAK;4BAC1C,IAAI,QAAQ,IAAQ,yCAA0C,IAAI,CAAC,MAAM,KAAK,WAAW;4BACzF,MAAM,aAAa,SAAS;4BAC5B,MAAM,YAAY,SAAS;4BAC3B,MAAM,oBAAoB,IAAI;4BAC9B,MAAM,cAAc;4BACpB,MAAM,eAAe;4BACrB,OAAO;wBACX;wBACA,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,cAAc,QAAQ,GAAG,MAAM;wBACvD,OAAO;oBACX;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI;wBACd,IAAI,aAAa,GAAG,OAAO;wBAC3B,IAAI,CAAC,cAAc,IAAI,KAAK,MAAM,aAAa,IAAI,MAAM,CAAC,WAAW;wBACrE,OAAO;oBACX;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI,OAAO;oBACzB,KAAK,IAAI,YAAY,MAAM,aAAa,IAAI,OAAO;wBAC/C,IAAI,UAAU,IAAI,CAAC,qBAAqB,GAAG,SAAS;wBACpD,IAAI,CAAC,SAAS;wBACd,IAAI,WAAW,IAAI,CAAC,cAAc;wBAClC,oEAAoE;wBACpE,IAAI,aAAa,SAAS,WAAW;wBACrC,KAAK,IAAI,SAAS,QAAQ,WAAW,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBAChE,wCAAwC;wBACxC,IAAI,gBAAgB,IAAQ,yCAA0C,IAAI,CAAC,MAAM,SAAS,OAAO,YAAY,SAAS;wBACtH,cAAc,aAAa,SAAS;wBACpC,cAAc,YAAY;wBAC1B,cAAc,cAAc;wBAC5B,iBAAiB;wBACjB,+EAA+E;wBAC/E,+EAA+E;wBAC/E,gFAAgF;wBAChF,4EAA4E;wBAC5E,gFAAgF;wBAChF,6EAA6E;wBAC7E,yEAAyE;wBACzE,gFAAgF;wBAChF,EAAE;wBACF,gFAAgF;wBAChF,4EAA4E;wBAC5E,0EAA0E;wBAC1E,2EAA2E;wBAC3E,4EAA4E;wBAC5E,8BAA8B;wBAC9B,EAAE;wBACF,6EAA6E;wBAC7E,6EAA6E;wBAC7E,iFAAiF;wBACjF,8EAA8E;wBAC9E,kDAAkD;wBAClD,EAAE;wBACF,8FAA8F;wBAC9F,IAAI,iBAAiB,SAAS;wBAC9B,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,UAAU,gBAAgB,IAAI,iBAAiB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBAClG,cAAc,aAAa,iBAAiB,OAAO,IAAI,CAAC;wBACxD,IAAI,YAAY,SAAS;wBACzB,IAAI,eAAe,SAAS,WAAW;wBACvC,IAAI,WAAW;wBACf,IAAI,MAAM,IAAI,CAAC,cAAc,QAAQ;wBACrC,4FAA4F;wBAC5F,uEAAuE;wBACvE,KAAK,IAAI,cAAc,QAAQ;4BAC3B,sEAAsE;4BACtE,IAAI,gBAAgB,MAAM;iCACrB,MAAM,MAAM,WAAW;gCACxB,IAAI,oBAAoB,WAAW,eAAe,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAG;gCACpG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,cAAc;gCAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB;gCACrC;4BACJ;4BACA,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;4BAC7B,eAAe,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;4BAC3C,YAAY;4BACZ,OAAO,kBAAkB;wBAC7B;wBACA,qDAAqD;wBACrD,IAAI,aAAa,CAAC,gBAAgB,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,CAAC,OAAO,QAAQ,KAAK;4BAC9E,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,WAAW;gCAC1C,IAAI,oBAAoB,WAAW,eAAe,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,GAAG;gCACnG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAoB;4BACxC,OAAO;wBACX;wBACA,mFAAmF;wBACnF,IAAI,IAAI,KAAK,QAAQ,SAAS,GAAG,MAAM,GAAG,KAAK,IAAI,CAAC,OAAO,OAAO,OAAO,CAAC,GAAG,EAAE;wBAC/E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,MAAM,GAAG;wBACxC,OAAO;oBACX;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD,OAAO,IAAI,CAAC,aAAa;YAC7B,KAAK;gBACD,OAAO,IAAI,CAAC,qBAAqB;YACrC,KAAK;gBACD,OAAO,IAAI,CAAC,YAAY,MAAM,YAAY,MAAM;YACpD;gBACI,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,WAAW,iBAAiB,CAAC;QACxE;IACJ;AACJ;AAIA,MAAM,iDAAqD;IACvD,mBAAmB,aAAa,EAAE,KAAK,EAAE;QACrC,IAAI,WAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,UAAU,eAAe;QAC1E,IAAI,MAAM,YAAY,MAAM,SAAS,YAAY,MAAM;QACvD,IAAI,MAAM,YAAY,MAAM,SAAS,YAAY,MAAM;QACvD,IAAI,MAAM,cAAc,MAAM,SAAS,WAAW,MAAM;QACxD,IAAI,MAAM,cAAc,MAAM,SAAS,WAAW,MAAM;QACxD,kCAAkC;QAClC,IAAI,qBAAqB,IAAI,CAAC,KAAK;QACnC,IAAI,iBAAiB,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,KAAK;QACtD,IAAI,sBAAsB,gBAAgB;YACtC,IAAI,MAAM,YAAY,SAAS,WAAW,mBAAmB,SAAS,gBAAgB,MAAM,WAAW,GAAG,MAAM,WAAW;YAC3H,IAAI,MAAM,YAAY,SAAS,WAAW,mBAAmB,SAAS,gBAAgB,MAAM,WAAW,GAAG,MAAM,WAAW;YAC3H,IAAI,MAAM,YAAY,SAAS,YAAY,mBAAmB,SAAS,gBAAgB,MAAM,WAAW,GAAG,MAAM,WAAW;YAC5H,IAAI,MAAM,YAAY,SAAS,YAAY,mBAAmB,SAAS,gBAAgB,MAAM,WAAW,GAAG,MAAM,WAAW;QAChI;IACJ,sBAAsB;IACtB;IACA,YAAY,UAAU,EAAE,KAAK,EAAE;QAC3B,OAAO;YACH,KAAK;gBACD;oBACI,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI,OAAO;oBACzB,OAAO,MAAM;wBACT,KAAK;4BACD,IAAI,CAAC,mBAAmB,GAAG,MAAM;4BACjC;wBACJ,KAAK;4BACD,IAAI,CAAC,mBAAmB,GAAG,MAAM,OAAO,IAAI;4BAC5C;oBACR;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,YAAY,IAAI,CAAC,cAAc;oBACnC,IAAI,CAAC,WAAW,OAAO;oBACvB,IAAI,QAAQ,IAAI,CAAC,cAAc,MAAM;oBACrC,IAAI,UAAU,IAAI,OAAO;oBACzB,OAAO,MAAM;wBACT,KAAK;4BACD,IAAI,MAAM,MAAM,SAAS,IAAI;4BAC7B,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK,gBAAgB,UAAU,IAAI;gCACxD,IAAI,CAAC,mBAAmB,GAAG,KAAK;gCAChC,IAAI,CAAC,mBAAmB,GAAG,KAAK;gCAChC,OAAO;4BACX;4BACA,OAAO;wBACX,KAAK;4BACD,IAAI,SAAS,IAAI,CAAC,WAAW,IAAI,CAAC,cAAc,IAAI,IAAI,MAAM;4BAC9D,IAAI,SAAS,IAAI,CAAC,WAAW,UAAU,IAAI,MAAM;4BACjD,IAAI,WAAW,MAAM,WAAW,IAAI,OAAO;4BAC3C,IAAI,QAAQ,MAAM,aAAa,IAAI,QAAQ,IAAI;4BAC/C,IAAI,CAAC,mBAAmB,GAAG,MAAM;4BACjC,IAAI,CAAC,mBAAmB,GAAG,MAAM;4BACjC,OAAO;oBACf;gBACJ;YACJ,KAAK;gBACD;oBACI,IAAI,YAAY,IAAI,CAAC,cAAc;oBACnC,IAAI,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU;oBACtC,IAAI,CAAC,WAAW,OAAO;oBACvB,IAAI,YAAY,MAAM,gBAAgB,CAAC,IAAI,CAAC,cAAc,MAAM,UAAU;oBAC1E,IAAI,CAAC,aAAa,CAAC,UAAU,YAAY,OAAO;oBAChD,IAAI,aAAa,MAAM,gBAAgB,CAAC,IAAI,CAAC,cAAc,MAAM,UAAU,UAAU,IAAI;oBACzF,IAAI,CAAC,cAAc,CAAC,WAAW,aAAa,OAAO;oBACnD,IAAI,QAAQ,IAAI,CAAC,UAAU,WAAW;oBACtC,IAAI,OAAO,IAAI,CAAC,UAAU,UAAU;oBACpC,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,MAAM;oBAClD,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU;oBACpC,IAAI;oBACJ,OAAO,IAAI,CAAC;wBACR,KAAK;4BACD,IAAI,WAAW,KAAK,IAAI,IAAI;4BAC5B,IAAI,MAAM,IAAI,KAAK;4BACnB,KAAK,YAAY;4BACjB,KAAK,WAAW;4BAChB;wBACJ,KAAK;4BACD,IAAI,KAAK,IAAI,IAAI;4BACjB,IAAI,YAAY;4BAChB,IAAI,WAAW;4BACf,KAAK,WAAW,MAAM,IAAI,KAAK;4BAC/B;oBACR;oBACA,IAAI,IAAI,CAAC,cAAc,MAAM,aAAa;wBACtC,IAAI,CAAC,cAAc,IAAI,oBAAoB;wBAC3C,IAAI,UAAU,MAAM,IAAI,KAAK;oBACjC,OAAO;wBACH,UAAU,oBAAoB,IAAI,CAAC,cAAc;wBACjD,IAAI,UAAU,KAAK,IAAI,MAAM;oBACjC;oBACA,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,YAAY,IAAI,CAAC,cAAc,MAAM;oBACzC,IAAI,cAAc,IAAI,OAAO;oBAC7B,mCAAmC;oBACnC,IAAI,iBAAiB,IAAI,CAAC,cAAc;oBACxC,MAAM,EAAE,kBAAkB,KAAM,CAAA,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,oBAAoB,CAAA;oBACtH,IAAI,iBAAiB,GAAG,OAAO;oBAC/B,IAAI,YAAY,IAAI,CAAC,cAAc,MAAM,cAAc,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;oBACnF,IAAI,cAAc,IAAI,OAAO;oBAC7B,IAAI,aAAa,MAAM,SAAS,CAAC,UAAU;oBAC3C,IAAI,aAAa,MAAM,SAAS,CAAC,UAAU,CAAC,WAAW,MAAM;oBAC7D,IAAI,CAAC,YAAY,YAAY,YAAY;oBACzC,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,YAAY,IAAI,CAAC,cAAc,MAAM;oBACzC,IAAI,cAAc,IAAI,OAAO;oBAC7B,mCAAmC;oBACnC,IAAI,iBAAiB,IAAI,CAAC,cAAc;oBACxC,MAAM,EAAE,kBAAkB,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;oBAC3D,IAAI,iBAAiB,GAAG,OAAO;oBAC/B,IAAI,WAAW,IAAI,CAAC,cAAc,MAAM,kBAAkB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;oBACtF,IAAI,aAAa,IAAI,OAAO;oBAC5B,IAAI,YAAY,MAAM,aAAa,CAAC,SAAS;oBAC7C,IAAI,YAAY,IAAI,CAAC,cAAc;oBACnC,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,eAAe;oBAC1C,IAAI,YAAY,SAAS,cAAc,SAAS,eAAe,UAAU,cAAc,UAAU,oBAAoB,IAAI,KAAK,IAAI,UAAU,mBAAmB,SAAS,WAAW,UAAU,IAAI,SAAS,WAAW,SAAS;oBAC9N,IAAI,aAAa,MAAM,SAAS,CAAC,UAAU;oBAC3C,IAAI,aAAa,SAAS,CAAC,UAAU,CAAC,WAAW,MAAM;oBACvD,IAAI,CAAC,YAAY,YAAY,YAAY;oBACzC,OAAO;gBACX;YACJ,KAAK;gBACD;oBACI,IAAI,aAAa,IAAI,CAAC,cAAc,MAAM;oBAC1C,IAAI,eAAe,IAAI,OAAO;oBAC9B,qCAAqC;oBACrC,IAAI,YAAY,IAAI,CAAC,cAAc,UAAU;oBAC7C,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU;oBACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,OAAO;oBAClC,IAAI,MAAM,IAAI,CAAC,cAAc;oBAC7B,iDAAiD;oBACjD,IAAI,OAAO;oBACX,IAAI,IAAI,eAAe,KAAK,YAAY;wBACpC,IAAI,CAAC,IAAI,YAAY,OAAO;6BACvB,IAAI,IAAI,sBAAsB,KAAK,mBAAmB,OAAO;oBACtE,OACA,6CAA6C;oBAC7C,IAAI,IAAI,cAAc,CAAC,IAAI,qBAAqB,KAAK,cAAc,CAAC,KAAK,mBAAmB,OAAO;oBACnG,IAAI,CAAC,MAAM,OAAO;oBAClB,IAAI,aAAa,IAAI,CAAC,cAAc,MAAM,eAAe,KAAK;oBAC9D,IAAI,eAAe,IAAI,OAAO;oBAC9B,IAAI,aAAa,MAAM,UAAU,CAAC,WAAW;oBAC7C,IAAI,aAAa,MAAM,UAAU,CAAC,WAAW,CAAC,WAAW,MAAM;oBAC/D,IAAI,CAAC,YAAY,YAAY,YAAY;oBACzC,OAAO;gBACX;YACJ,KAAK;gBACD,OAAO,IAAI,CAAC,aAAa;YAC7B,KAAK;gBACD,OAAO,IAAI,CAAC,qBAAqB;YACrC,KAAK;gBACD,OAAO,IAAI,CAAC,YAAY,MAAM,YAAY,MAAM;YACpD;gBACI,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,WAAW,CAAC;QAC/D;IACJ;IACA,YAAY,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE;QAChD,IAAI,aAAa,IAAI,CAAC,UAAU;QAChC,IAAI,aAAa,IAAI,CAAC,UAAU,WAAW;QAC3C,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,eAAe;QAC5C,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,MAAM;QACtD,QAAQ,UAAU,WAAW,IAAI,WAAW;QAC5C,QAAQ,UAAU,WAAW,IAAI,WAAW;QAC5C,IAAI,CAAC,cAAc,IAAI,iBAAiB;IAC5C;IACA,UAAU,MAAM,EAAE;QACd,qCAAqC;QACrC,IAAI,IAAI,OAAO;QACf,IAAI,IAAI,OAAO;QACf,kCAAkC;QAClC,IAAI,qBAAqB,IAAI,CAAC,KAAK;QACnC,IAAI,iBAAiB,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,KAAK;QACtD,IAAI,sBAAsB,gBAAgB;YACtC,IAAI,OAAO,cAAc,KAAK,mBAAmB,SAAS,gBAAgB,OAAO,aAAa,GAAG,OAAO,aAAa;YACrH,IAAI,OAAO,cAAc,KAAK,mBAAmB,SAAS,gBAAgB,OAAO,aAAa,GAAG,OAAO,aAAa;QACzH;QACA,OAAO;YACH,GAAG;YACH,GAAG;QACP;IACJ;IACA,cAAc,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE;QAC1C,KAAK,CAAC,cAAc,cAAc,QAAQ;QAC1C,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,QAAQ,IAAI,IAAI,CAAC,qBAAqB;QACrE,IAAI,CAAC;IACT;IACA,qBAAqB,CAAC,EAAE;QACpB,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,EAAE;QAC1B,IAAI,MAAM,qBAAqB,MAAM;YACjC,IAAI,IAAI,MAAM;YACd,MAAM,oBAAoB;YAC1B,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;QACnD;IACJ;IACA,oBAAoB;QAChB,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,QAAQ,IAAI;YACvC,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,EAAE;YAC1B,IAAI,MAAM,kBAAkB,MAAM;gBAC9B,IAAI,IAAI,MAAM;gBACd,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC/C,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC/C,IAAI,IAAI,CAAC,cAAc,OAAO,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI;oBACpD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;oBAC/C,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBACnD;qBACK,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK;oBACtC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;oBAChD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;gBACpD;YACJ;QACJ;IACJ;AACJ;AAGA,MAAM;IACF,MAAM,QAAQ,EAAE;QACZ,gEAAgE;QAChE,kEAAkE;QAClE,IAAI,CAAC,aAAa,SAAS,OAAO,IAAI,CAAC,QAAQ,IAAQ,yCAA0C,IAAI,CAAC,MAAM,MAAM,IAAI;mBAC3G,MAAM;aACZ;QACL,2DAA2D;QAC3D,IAAI,SAAS;QACb,IAAI,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,cAAc,aAAa,SAAS,QAAQ,SAAS,UAAU,SAAS;QAC9G,IAAI,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,cAAc,aAAa,SAAS,QAAQ,SAAS,UAAU,SAAS;QAC9G,iEAAiE;QACjE,2DAA2D;QAC3D,IAAI,CAAC,SAAS,0CAA0C;QACxD,IAAI,CAAC,OAAO,IAAQ,yCAA0C,IAAI,CAAC,MAAM,QAAQ,SAAS;QAC1F,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,YAAY,SAAS;QACtD,6CAA6C;QAC7C,IAAI,IAAI,OAAO,IAAI,CAAC,KAAK,YAAY,SAAS,QAAQ,CAAC,IAAI,GAAG;IAClE;IACA,WAAW,QAAQ,EAAE;QACjB,IAAI,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,eAAe,IAAI,CAAC;YAC3C,+CAA+C;YAC/C,SAAS,SAAS,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY,IAAI,CAAC,KAAK,SAAS,UAAU,IAAI,UAAU;QAClG;IACJ;IACA,SAAS,QAAQ,EAAE;QACf,IAAI,IAAI,CAAC,OAAO,mBAAmB,eAAe,IAAI,CAAC,iBAAiB,SAAS;QACjF,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,eAAe,IAAI,CAAC,YAAY,SAAS;QACxF,IAAI,IAAI,CAAC,OAAO,mBAAmB,cAAc,IAAI,CAAC,iBAAiB,SAAS;QAChF,kEAAkE;QAClE,IAAI,SAAS,cAAc,OAAO;YAC9B,SAAS,OAAO;YAChB,SAAS,UAAU;QACvB;QACA,OAAO,IAAI,CAAC,iBAAiB,IAAI,CAAC,cAAc;IACpD;IACA,iBAAiB,SAAS,EAAE;QACxB,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,QAAQ,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;YAC1E,SAAS,CAAC,EAAE,CAAC,WAAW;YACxB,SAAS,CAAC,EAAE,CAAC,WAAW;QAC5B;IACJ;IACA,UAAU;QACN,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,SAAS;IAClB;IACA,qBAAqB,MAAM,EAAE,QAAQ,EAAE;QACnC,IAAI,WAAW,EAAE;QACjB,IAAI,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc,aAAa,QAAQ;YACxC,SAAS,QAAQ,OAAO,KAAK,IAAI,CAAC,cAAc;QACpD;QACA,IAAI,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc,aAAa,QAAQ;YACxC,SAAS,QAAQ,OAAO,KAAK,IAAI,CAAC,cAAc;QACpD;QACA,OAAO;IACX;IACA,YAAY,IAAI,CAAC;QACb,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,gBAAgB;QACrB,IAAI,CAAC,gBAAgB;QACrB,IAAI,CAAC,mBAAmB;QACxB,IAAI,KAAK,MAAM,IAAI,CAAC,gBAAgB,IAAQ,yCAA0C,MAAM,KAAK;QACjG,IAAI,KAAK,MAAM,IAAI,CAAC,gBAAgB,IAAQ,yCAA0C,MAAM,KAAK;IACrG;AACJ;AAGA,MAAM;IACF,OAAO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;QAClD,uCAAuC;QACvC,IAAI,OAAO,aAAa,UAAU;YAC9B,YAAY;YACZ,WAAW;YACX,SAAS;YACT,WAAW,EAAE;QACjB;QACA,iCAAiC;QACjC,IAAI,OAAO,WAAW,UAAU;YAC5B,gEAAgE;YAChE,IAAI,UAAU,MAAM,SAAS,0CAA0C;YACvE,IAAI,SAAS,IAAI,CAAC,KAAK,gBAAgB;QAC3C,OAAO;YACH,2EAA2E;YAC3E,IAAI,UAAU,MAAM;gBAChB,IAAI,aAAa,EAAE;gBACnB,KAAK,IAAI,SAAS,OAAO,WAAW,QAAQ,MAAM;gBAClD,SAAS,0CAA0C;YACvD;YACA,IAAI,SAAS;QACjB;QACA,IAAI,WAAW,IAAQ,yCAA0C,QAAQ,UAAU,QAAQ,UAAU;QACrG,sCAAsC;QACtC,IAAI,OAAO,WAAW,GAAG;YACrB,SAAS,YAAY,EAAE;YACvB,OAAO;QACX;QACA,mCAAmC;QACnC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,OAAO,MAAM;QACxD,qCAAqC;QACrC,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,sBAAsB,SAAS,QAAQ,SAAS;QACrD,yDAAyD;QACzD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,SAAS,IAAI,CAAC,OAAO;QACpD,OAAO;IACX;IACA,WAAW,QAAQ,EAAE;QACjB,wDAAwD;QACxD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,YAAY,IAAI,CAAC,OAAO,WAAW;IACtE;IACA,SAAS,QAAQ,EAAE;QACf,8BAA8B;QAC9B,SAAS,YAAY,SAAS,OAAO,IAAI,CAAC,QAAQ,IAAQ,yCAA0C,MAAM;QAC1G,IAAI,aAAa;QACjB,iEAAiE;QACjE,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,UAAU,aAAa,IAAI,CAAC,OAAO,SAAS;QAC3E,uEAAuE;QACvE,IAAI,CAAC,cAAe,CAAA,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,gBAAe,GAAI;YAC/D,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,sBAAsB,IAAQ,yCAA0C,IAAI,CAAC;YACjH,IAAI,CAAC,oBAAoB,eAAe,SAAS,QAAQ,SAAS;QACtE;QACA,mFAAmF;QACnF,IAAI,AAAC,CAAA,CAAC,cAAc,CAAC,WAAW,IAAG,KAAM,SAAS,SAAS,SAAS,SAAS,IAAI,CAAC,KAAK,MAAM;YACzF,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,gBAAgB,IAAQ,yCAA0C,IAAI,CAAC;YACrG,IAAI,CAAC,cAAc,QAAQ,SAAS,QAAQ,SAAS;YACrD,SAAS,SAAS,OAAO;QAC7B;IACJ;IACA,sBAAsB,MAAM,EAAE,SAAS,EAAE;QACrC,IAAI,QAAQ,IAAI,CAAC,KAAK,kBAAkB;QACxC,IAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,IAAI,IAAI,CAAC,mBAAmB,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,GAAG;YACxF,MAAM,CAAC,EAAE,GAAG;YACZ,SAAS,CAAC,EAAE,CAAC,WAAW;YACxB,SAAS,CAAC,EAAE,CAAC,WAAW;QAC5B;IACJ;IACA,mBAAmB,EAAE,EAAE;QACnB,0DAA0D;QAC1D,yDAAyD;QACzD,6BAA6B;QAC7B,IAAI,QAAQ,MAAM;QAClB,IAAI,UAAU,GACd,OAAO,MAAM;YACT,KAAK;gBACD,OAAO,OAAO;YAClB,KAAK;gBACD,OAAO,OAAO;YAClB,KAAK;gBACD,OAAO,OAAO;YAClB,KAAK;gBACD,OAAO,UAAU,MAAM,MAAM;YACjC,KAAK;gBACD,OAAO,UAAU,MAAM,MAAM;YACjC,KAAK;gBACD,OAAO,UAAU,MAAM,MAAM,UAAU,UAAU,MAAM,MAAM,UAAU,UAAU,MAAM,MAAM;YACjG,KAAK;gBACD,OAAO,UAAU,MAAM,MAAM,UAAU,OAAO;YAClD,KAAK;gBACD,OAAO,UAAU,MAAM,MAAM;YACjC;gBACI,OAAO;QACf;aAEA,OAAO;YACH,KAAK;gBACD,OAAO,WAAW,MAAM,MAAM,WAAW,WAAW,MAAM,MAAM;YACpE,KAAK;gBACD,OAAO,WAAW,MAAM,MAAM;YAClC;gBACI,OAAO;QACf;IACJ;IACA,qBAAqB,MAAM,EAAE,QAAQ,EAAE;QACnC,IAAI,WAAW,EAAE;QACjB,IAAI,IAAI,CAAC,QAAQ,SAAS,QAAQ,IAAI,CAAC,OAAO,qBAAqB,QAAQ;QAC3E,IAAI,IAAI,CAAC,KAAK,QAAQ,SAAS,QAAQ,YAAY,IAAI,SAAS,KAAK;QACrE,OAAO;IACX;IACA,gBAAgB,GAAG,EAAE;QACjB,IAAI,SAAS,IAAI;QACjB,IAAI,aAAa,IAAI,CAAC,KAAK,eAAe,mBAAmB;QAC7D,KAAK,IAAI,aAAa,WAAW,OAAO,IAAI,OAAO,cAAc;QACjE,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,iBAAiB,KAAK,IAAI,UAAU,IAAI,CAAC,OAAO,gBAAgB,KAAK,OAAO,IAAI;QAC/G,OAAO,MAAM,KAAK;IACtB;IACA,YAAY,IAAI,CAAC;QACb,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,sBAAsB;QAC3B,IAAI,CAAC,gBAAgB;QACrB,+EAA+E;QAC/E,oFAAoF;QACpF,IAAI,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,SAAS,IAAQ,yCAA0C,IAAI,CAAC;aACpF,IAAI,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,SAAS,IAAQ,yCAA0C,IAAI,CAAC;IACpH;AACJ;AAOA,MAAM,qCAAqC;IACvC,QAAQ;IACR,QAAQ;IACR,kBAAkB;IAClB,eAAe;IACf,WAAW;AACf;AACA,MAAM;IACF;;;;GAID,GAAG,aAAa;QACX,OAAO,CAAC;YACJ,IAAI,CAAC,SAAS,QAAQ,CAAC;gBACnB,OAAO,GAAG,CAAC,EAAE,QAAQ,CAAC,MAAM,KAAK,EAAE;YACvC;QACJ;IACJ;IACA;;;GAGD,GAAG,QAAQ;QACN,IAAI,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC;YAC1B,IAAI,OAAO,EAAE,KAAK,IAAI,CAAC,MAAM,KAAK,MAAM,MAAM,OAAO;YACrD,OAAO,CAAC,EAAE,kCAAkC,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC;QAC9E;QACA,OAAO,KAAK,KAAK;IACrB;IACA;;;;;;GAMD,GAAG,IAAI,OAAO;QACT,IAAI,CAAC,IAAI,CAAC,OAAO;YACb,IAAI,OAAO,IAAQ;YACnB,KAAK,IAAI,YAAY,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,GAAG,IAAI,SAAS,KAAK,QAAQ,KAAK,EAAE,KAAK,SAAS,SAAS,IAAI,CAAC,EAAE,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE;YACvI,IAAI,CAAC,QAAQ,OAAO,OAAO;QAC/B;QACA,OAAO,IAAI,CAAC;IAChB;IACA;;;;GAID,GAAG,IAAI,OAAO;QACT,IAAI,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC;QAC5B,IAAI,OAAO,IAAQ;QACnB,IAAI,KAAK,GAAG,KAAK;QACjB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC,EAAE,GAAG,IAAK,CAAA,IAAI,CAAA,IAAK,KAAK,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE;QAC5I,KAAK,IAAI,KAAK,IAAI,CAAC,SAAS,OAAO,EAAE;YACjC,KAAK;YACL,KAAK;gBACD,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;gBACf,KAAK,SAAS,GAAG;gBACjB,KAAK;gBACL,KAAK;gBACL;YACJ,KAAK;YACL,KAAK;gBACD,IAAI,EAAE,YAAY,oBAAoB;oBAClC,mCAAmC;oBACnC,IAAI,CAAC,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE;oBAC/B,IAAI,OAAO,KAAK,IAAI,IAAK,CAAA,OAAO,EAAC,GAAI,8BAA8B;oBACnE,IAAI,OAAO,KAAK,IAAI,IAAK,CAAA,OAAO,EAAC;oBACjC,IAAI,OAAO,MAAM,IAAI,IAAK,CAAA,OAAO,GAAE,GAAI,8BAA8B;oBACrE,IAAI,OAAO,MAAM,IAAI,IAAK,CAAA,OAAO,GAAE;gBACvC,OAAO,IAAI,CAAC,MAAM,MAAM,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE;gBAClD,oFAAoF;gBACpF,KAAK,SAAS,KAAK;gBACnB,IAAI,KAAK;oBACL;oBACA;iBACH;gBACD,IAAI,KAAK;oBACL;oBACA;iBACH;gBACD,IAAI,KAAK;oBACL;oBACA;iBACH;gBACD,IAAI,KAAK;oBACL;oBACA;iBACH;gBACD,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI;oBACvB,IAAI,IAAI,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE;oBAC1C,IAAI,IAAI,KAAK,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE;oBACtD,IAAI,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE;oBACzB,IAAI,MAAM,GAAG;wBACT,IAAI,MAAM,GAAG;wBACb,IAAI,IAAI,CAAC,IAAI;wBACb,IAAI,IAAI,KAAK,IAAI,GAAG;4BAChB,IAAI,MAAM,GAAG,KAAK,SAAS,EAAE,IAAI,KAAK;iCACjC,IAAI,MAAM,GAAG,KAAK,SAAS,KAAK,MAAM,EAAE;wBACjD;wBACA;oBACJ;oBACA,IAAI,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI;oBACpC,IAAI,OAAO,GAAG;oBACd,IAAI,KAAK,AAAC,CAAA,CAAC,IAAI,KAAK,KAAK,KAAI,IAAM,CAAA,IAAI,CAAA;oBACvC,IAAI,IAAI,MAAM,KAAK,GAAG;wBAClB,IAAI,MAAM,GAAG,KAAK,SAAS,EAAE,KAAK,KAAK;6BAClC,IAAI,MAAM,GAAG,KAAK,SAAS,KAAK,MAAM,EAAE;oBACjD;oBACA,IAAI,KAAK,AAAC,CAAA,CAAC,IAAI,KAAK,KAAK,KAAI,IAAM,CAAA,IAAI,CAAA;oBACvC,IAAI,IAAI,MAAM,KAAK,GAAG;wBAClB,IAAI,MAAM,GAAG,KAAK,SAAS,EAAE,KAAK,KAAK;6BAClC,IAAI,MAAM,GAAG,KAAK,SAAS,KAAK,MAAM,EAAE;oBACjD;gBACJ;gBACA,KAAK;gBACL,KAAK;gBACL;QACR;QACA,OAAO,IAAI,CAAC,QAAQ,OAAO,OAAO;IACtC;IACA;;;;GAID,GAAG,UAAU,EAAE,EAAE;QACZ,IAAI,OAAO,IAAI;QACf,KAAK,IAAI,KAAK,IAAI,CAAC,SAAS;YACxB,IAAI,OAAO,EAAE;YACb,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,QAAQ,KAAK,EAAE;gBACrC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE;gBACxC,KAAK,KAAK,GAAG;YACjB;YACA,IAAI,CAAC,EAAE,QAAQ,IAAI;QACvB;QACA,OAAO;IACX;IACA;;GAED,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG;YACtB,MAAM,KAAK,KAAK,IAAI,KAAK,IAAI;YAC7B,MAAM,KAAK,KAAK,IAAI,KAAK,IAAI;YAC7B,OAAO;gBACH;gBACA;aACH;QACL;IACJ;IACA;;GAED,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;QACd,OAAO,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG;IACzC;IACA;;GAED,GAAG,OAAO,KAAK,EAAE;QACZ,IAAI,MAAM,KAAK,IAAI;QACnB,IAAI,MAAM,KAAK,IAAI;QACnB,OAAO,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,KAAK,KAAK,GAAG;IAClD;IACA;;GAED,GAAG,MAAM,MAAM,EAAE,SAAS,MAAM,EAAE;QAC7B,OAAO,IAAI,CAAC,UAAU,QAAQ,GAAG,GAAG,QAAQ,GAAG;IACnD;IACA,aAAa;QACT,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ;IACjB;AACJ;AACA,KAAK,IAAI,WAAW;IAChB;IACA;IACA;IACA;IACA;CACH,CAAC,yCAAyC,SAAS,CAAC,QAAQ,GAAG,SAAS,GAAG,IAAI;IAC5E,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ;IAC1B,IAAI,CAAC,SAAS,KAAK;QACf,SAAS;QACT,MAAM;IACV;IACA,OAAO,IAAI;AACf;AAIA,IAAI,2CAA2C;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAGD,MAAM;IACF,WAAW;QACP,OAAO,IAAQ;IACnB;IACA,WAAW;QACP,OAAO,IAAI,CAAC,KAAK;IACrB;IACA,WAAW;QACP,OAAO,IAAI,CAAC,KAAK;IACrB;IACA,iBAAiB,KAAK,EAAE;QACpB,IAAI,IAAI,CAAC,KAAK,MAAM,QAAQ,QAAQ,OAAO,MAAM,QAAQ,IAAI,IAAI,CAAC;QAClE,IAAI,SAAS,MAAM,QAAQ,IAAI,MAAM,QAAQ,SAAS;QACtD,IAAI,MAAM;YACN,SAAS,SAAS,OAAO,UAAU;YACnC,SAAS,MAAM,SAAS,IAAI,IAAI,CAAC,KAAK,MAAM,QAAQ,WAAW;QACnE;QACA,OAAO;IACX;IACA,YAAY,IAAI,EAAE;QACd,IAAI,IAAI,CAAC,UAAU,OAAO,IAAI,CAAC;QAC/B,IAAI,EAAE,SAAS,YAAY,EAAG,SAAS,WAAW,EAAG,GAAG,IAAI,CAAC,iBAAiB,IAAI,CAAC,MAAM;QACzF,6FAA6F;QAC7F,IAAI,IA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AAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D,4BAA4B,GAC3B;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC3D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC3D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC3D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D,4BAA4B,GAC3B;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAC5D;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;I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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c53d41175c5aad3e.js","src/js/main.js","../../../node_modules/buffer/index.js","../../../node_modules/base64-js/index.js","../../../node_modules/ieee754/index.js","node_modules/fontkit/dist/browser.cjs","node_modules/restructure/index.js","node_modules/restructure/src/EncodeStream.js","node_modules/restructure/src/DecodeStream.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/restructure/src/Array.js","node_modules/restructure/src/Base.js","node_modules/restructure/src/Number.js","node_modules/restructure/src/utils.js","node_modules/restructure/src/LazyArray.js","node_modules/restructure/src/Bitfield.js","node_modules/restructure/src/Boolean.js","node_modules/restructure/src/Buffer.js","node_modules/restructure/src/Enum.js","node_modules/restructure/src/Optional.js","node_modules/restructure/src/Reserved.js","node_modules/restructure/src/String.js","node_modules/restructure/src/Struct.js","node_modules/restructure/src/VersionedStruct.js","node_modules/restructure/src/Pointer.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/legacy-swc-helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_ts_decorate.js","node_modules/legacy-swc-helpers/lib/_ts_decorate.js","node_modules/tslib/tslib.es6.js","node_modules/fast-deep-equal/index.js","node_modules/unicode-properties/dist/module.mjs","node_modules/unicode-properties/dist/index.js","node_modules/unicode-properties/dist/data.json","node_modules/base64-js/index.js","node_modules/unicode-trie/index.js","node_modules/tiny-inflate/index.js","node_modules/unicode-trie/swap.js","node_modules/dfa/index.js","node_modules/dfa/src/StateMachine.js","node_modules/clone/clone.js","node_modules/brotli/decompress.js","node_modules/brotli/dec/decode.js","node_modules/brotli/dec/streams.js","node_modules/brotli/dec/bit_reader.js","node_modules/brotli/dec/dictionary.js","node_modules/brotli/dec/dictionary-browser.js","node_modules/brotli/dec/dictionary.bin.js","node_modules/brotli/dec/huffman.js","node_modules/brotli/dec/context.js","node_modules/brotli/dec/prefix.js","node_modules/brotli/dec/transform.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"0bcb44a518dbc454\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","const fontkit = require(\"fontkit\");\nvar originalPalette = [];\nvar customizedPalette = [];\nvar paletteCode = \"\";\nvar shareURL = window.location.href;\n\n\n\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\nvar tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n})\n\n\n  \n\n// For example, converter rgba(67, 255, 100, 255) to #43ff64\nfunction rgbaToHexColor(rgbaColorArray) {\n    return \"#\" + rgbaColorArray.slice(0, 3)\n        .map(ele => ele.toString(16))\n        .map(ele => ele.length == 1 ? \"0\" + ele : ele) //padding zero to two digits\n        .join(\"\");\n}\n\n\nfunction emojiToUnicode(emoji) {\n    var comp;\n    if (emoji.length === 1) {\n        comp = emoji.charCodeAt(0);\n    }\n    comp = (\n        (emoji.charCodeAt(0) - 0xD800) * 0x400 +\n        (emoji.charCodeAt(1) - 0xDC00) + 0x10000\n    );\n    if (comp < 0) {\n        comp = emoji.charCodeAt(0);\n    }\n    return `U+${comp.toString(\"16\").toUpperCase()}`;\n}\n\n\nfunction unicodeToEmoji(unicode) {\n    const codePoint = unicode.replace(\"U+\", \"\");\n    const intCodePoint = parseInt(codePoint, 16);\n    const character = String.fromCodePoint(intCodePoint);\n    return character\n}\n\n\n// Check if two RGBA colors are equal\nfunction areColorsEqual(rgba1, rgba2) {\n    return rgba1.every((component, index) => component === rgba2[index]);\n}\n\n\nfunction encodeURL(url) {\n    return (url.replaceAll(\" \", \"\").replaceAll(\"rgba\", \"\").replaceAll(\",\", \"*\"))\n}\n\n\nfunction decodeURL(url) {\n    return (url.replaceAll(\"*\", \", \").replaceAll(\"(\", \" rgba(\"))\n}\n\n\n// Get the CSS override colors\nfunction getOverrideStyleString() {\n    // Format Example:\n    // override-colors:\n    // 0 rgba(184, 126, 50, 255),\n    // 1 rgba(120, 8, 150, 255),\n    // ...\n    return customizedPalette\n        .map((rgbaColorArray, idx) => `${idx} rgba(${rgbaColorArray.join(\", \")})`)\n        // If customize colors are different from default colors, record them into overrides \n        .filter((_, idx) => !areColorsEqual(customizedPalette[idx], originalPalette[idx]))\n        .join(\", \");\n}\n\n\n\n// Update the CSS palette\nfunction setOverridePaletteStyle(overrideColors) {\n    document.getElementById(\"palette-overrides-style\").innerHTML = `\n\t\t@font-palette-values --palette {\n\t\t\tfont-family: \"Noto Color Emoji\";\n\t\t\tbase-palette: 0;\n\t\t\toverride-colors: ${overrideColors};\n\t\t}\n\t\t`;\n}\n\n\nfunction getRGBAFromPicker(paletteIndex, rgbColor) {\n    [0, 1, 2].forEach(idx => {\n        customizedPalette[paletteIndex][idx] = parseInt(rgbColor.substring(idx * 2, idx * 2 + 2), 16);\n    });\n}\n\n\n// Update a palette from input entry\nfunction updateEmojiAndURL() {\n    const overrideColors = getOverrideStyleString()\n    const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n    setOverridePaletteStyle(overrideColors);\n    window.location.hash = `${emojiToUnicode(thisEmoji)}-${encodeURIComponent(encodeURL(overrideColors))}`;\n    shareURL = window.location.href\n}\n\n\n\nasync function updateEmoji(thisEmoji, keepPalette) {\n    // Fetch Google Font Noto Sans Emoji CSS\n    const fontResponse = await fetch(\"https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&text=\" + encodeURIComponent(thisEmoji));\n    const fontStyle = await fontResponse.text();\n\n    // Reset CSS style\n    document.getElementById(\"emoji-style\").innerHTML = fontStyle;\n    document.getElementById(\"customized-emoji\").innerHTML = thisEmoji;\n    if (!keepPalette) {\n        document.getElementById(\"palette-overrides-style\").innerHTML = \"\";\n    }\n\n    // Get the URL of the woff2 file and convert to binary\n    const fontURL = fontStyle.split(\"\\n\").filter(ele => ele.indexOf(\"src:\") != -1)[0].match(/src:\\s+url\\(([^)]+)\\)/)[1];\n    const fontBinary = await (await fetch(fontURL)).arrayBuffer();\n    const fontBuffer = new Buffer.from(fontBinary);\n    const thisFont = fontkit.create(fontBuffer);\n\n    // Copy default palette to customized palette\n    originalPalette = thisFont.CPAL.colorRecords.slice(\n        thisFont.CPAL.colorRecordIndices[0],\n        thisFont.CPAL.colorRecordIndices[0] + thisFont.CPAL.numPaletteEntries\n    ).map(ele => [ele.red, ele.green, ele.blue, ele.alpha]);\n    customizedPalette = originalPalette.map(rgbaColorArray => [...rgbaColorArray]);\n\n    // Reset color color-pickers\n    const colorPickers = document.getElementById(\"color-pickers\");\n    while (colorPickers.firstChild) {\n        colorPickers.removeChild(colorPickers.firstChild);\n    }\n\n    // Check if color picker should be override\n    var modifiedColorPickers = {}\n    if (paletteCode.length !== 0) {\n        paletteCode.split(\"), \").forEach((rgbColor, _) => {\n            const match = rgbColor.match(/\\d+/g).map((str) => parseInt(str));\n            modifiedColorPickers[match[0]] = [match[1], match[2], match[3], match[4]]\n        })\n    }\n\n    // Add each color picker under color-picker DOM\n    customizedPalette.forEach((rgbaColorArray, idx) => {\n        const picker = document.createElement(\"input\");\n        picker.setAttribute(\"class\", \"color-block\");\n        picker.setAttribute(\"id\", `color-block-${idx}`);\n        picker.type = \"color\";\n\n        if (idx in modifiedColorPickers && keepPalette) {\n            picker.value = rgbaToHexColor(modifiedColorPickers[idx])\n        } else {\n            picker.value = rgbaToHexColor(rgbaColorArray)\n        };\n\n        colorPickers.appendChild(picker);\n        picker.addEventListener(\"input\", (event) => {\n            getRGBAFromPicker(idx, event.target.value.substring(1));\n            updateEmojiAndURL()\n        });\n    });\n\n    const loadPromises = Array.from(document.fonts.values()).map(fontFace => fontFace.load());\n    await Promise.all(loadPromises);\n\n    if (!keepPalette) {\n        window.location.hash = emojiToUnicode(thisEmoji);\n    }\n    updateCanvas(\"reference-canvas\", thisEmoji)\n}\n\n\nfunction updateCanvas(domIdName, thisEmoji) {\n    const canvas = document.getElementById(domIdName);\n    const ctx = canvas.getContext(\"2d\")\n    const scaleProp = 10\n    if (domIdName == \"result-canvas\") {\n        canvas.width = document.getElementById(\"customized-emoji\").clientWidth * scaleProp;\n        canvas.height = document.getElementById(\"customized-emoji\").clientHeight * scaleProp;\n        ctx.scale(scaleProp, scaleProp);\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get font size from px to em\n    const childFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\")).getPropertyValue(\"font-size\"));\n    const parentFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\").parentElement).getPropertyValue(\"font-size\"))\n    const realFontSizeEm = childFontSizePx / parentFontSizePx\n\n    // Set canvas\n    ctx.font = `${realFontSizeEm}em \"Noto Color Emoji\"`;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    if (domIdName == \"result-canvas\") {\n        ctx.fillText(thisEmoji, canvas.width / (2 * scaleProp), canvas.height / (2 * scaleProp));\n    } else {\n        ctx.fillText(thisEmoji, canvas.width / 2, canvas.height / 2);\n    }\n}\n\n\nfunction getRandomColor() {\n    const minVal = 0\n    const maxVal = 255\n    return Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\n}\n\n\nfunction selectRandomColor() {\n    numPicker = document.querySelectorAll(\".color-block\").length;\n    customizedPalette.forEach((_, idx) => {\n        customizedPalette[idx] = [getRandomColor(), getRandomColor(), getRandomColor(), 255]\n        document.getElementById(`color-block-${idx}`).value = rgbaToHexColor(customizedPalette[idx])\n    })\n    updateEmojiAndURL()\n}\n\n\nfunction selectedFromPicker(thisEmoji) {\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    if (emojiPickerContainer.style.display === \"none\") {\n        emojiPickerContainer.style.display = \"block\";\n    } else {\n        emojiPickerContainer.style.display = \"none\";\n    }\n    updateEmoji(thisEmoji, false)\n}\n\n\n// See https://github.com/missive/emoji-mart for more info and settings\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const emojiPickerOptionsDesktop = {\n        onEmojiSelect: (res, _) => selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8,\n    };\n    const emojiPickerDesktop = new EmojiMart.Picker(emojiPickerOptionsDesktop);\n    document.getElementById(\"emoji-picker\").appendChild(emojiPickerDesktop);\n\n    // RWD\n    const emojiPickerButton = document.getElementById(\"emoji-picker-button\");\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    const emojiPickerOptionsMobile = {\n        onEmojiSelect: (res, _) => selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8,\n    };\n    const emojiPickerMobile = new EmojiMart.Picker(emojiPickerOptionsMobile);\n    emojiPickerContainer.appendChild(emojiPickerMobile);\n\n    emojiPickerButton.addEventListener(\"click\", function() {\n        if (emojiPickerContainer.style.display === \"none\") {\n            emojiPickerContainer.style.display = \"block\";\n        } else {\n            emojiPickerContainer.style.display = \"none\";\n        }\n    });\n});\n\n\nArray.from(document.getElementsByClassName(\"random-emoji-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🎲 Random Select an Emoji 🎲...\")\n            updateEmoji(getRandomEmoji(), false);\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"random-color-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🎨 Random Set Colors 🎨...\")\n            selectRandomColor();\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"reset-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🪄 Restore Palette 🪄...\")\n            const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n            updateEmoji(thisEmoji, false)\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"download-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const resultCanvas = document.getElementById(\"result-canvas\")\n            updateCanvas(\"result-canvas\", document.getElementById(\"customized-emoji\").innerHTML);\n            const dataURL = resultCanvas.toDataURL(\"image/png\");\n\n            // Create an anchor element to trigger the download\n            const downloadLink = document.createElement(\"a\");\n            console.log(`...💾 Now Downloading Your ${document.getElementById(\"customized-emoji\").innerHTML} 💾 ...`)\n            downloadLink.href = dataURL;\n            downloadLink.download = `${emojiToUnicode(document.getElementById(\"customized-emoji\").innerHTML)}-EmojiOOTD.png`;\n            downloadLink.click();\n        });\n    });\n\n\nArray.from(document.getElementsByClassName(\"share-facebook\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const facebookShareURL = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareURL)}`;\n            window.open(facebookShareURL, \"_blank\");\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"share-twitter\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const message = `#EmojiSalon ${shareURL}`\n            const twitterShareURL = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n            window.open(twitterShareURL, \"_blank\");\n        });\n    });\n\n\nArray.from(document.getElementsByClassName(\"share-line\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const lineShareURL = `https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(shareURL)}`;\n            window.open(lineShareURL, \"_blank\");\n        });\n    });\n\nfunction showSupportIssueModal() {\n    const modal = document.getElementById(\"supportIssue\");\n    const closeButton = modal.querySelector(\".close\");\n  \n    modal.style.display = \"block\";\n  \n    closeButton.onclick = function () {\n      modal.style.display = \"none\";\n    };\n  \n    window.onclick = function (event) {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  }\n  \n\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nif (isSafari){\n    showSupportIssueModal(); \n    console.log(\"Oops, your browser seems to not support OpenType COLR/CPALv1 font, please change another browser such as Desktop Chrome or FireFox.\")        \n} else{\n    console.log(\"Great, your browser support OpenType COLR/CPALv1 font!\")\n}\n\n\n// default Emoji\nfunction getRandomEmoji() {\n    const defaultEmojis = [\"😀\", \"😙\", \"😎\", \"😪\", \"🤤\", \"😴\", \"😰\", \"🫁\", \"🦷\", \"🦴\", \"👀\", \"🚀\", \"👍\", \"🤟\", \"🤘\", \"🤙\", \"🧚‍♀️\", \"🧚\", \"🧚‍♂️\", \"🧑‍⚕️\", \"👨‍⚕️\", \"👩‍⚕️\", \"🧑‍🎓\", \"👨‍🎓\", \"👩‍🎓\", \"🧑‍🏫\", \"👨‍🏫\", \"👩‍🏫\", \"🧑‍⚖️\", \"👨‍⚖️\", \"👩‍⚖️\", \"🌟\", \"🧤\", \"🍣\", \"🍤\", \"🍥\", \"🥮\", \"🍡\", \"🥟\", \"🍔\", \"🐈\", \"🐈‍⬛\", \"🐟\", \"🍕\", \"🎉\", \"🐓\", \"🐱\", \"🌺\", \"🍎\", \"🏛\", \"🐭\", \"🐮\", \"🐯\", \"🐰\", \"🐲\", \"🐍\", \"🐴\", \"🐏\", \"🐵\", \"🐔\", \"🐶\", \"🐷\", \"🐕\", \"🐑\", \"🐤\", \"🦕\", \"🦖\", \"🐳\", \"🐋\", \"🐬\", \"🦋\", \"🍀\", \"🍒\", \"🌭\", \"🍩\", \"🏅\", \"🚂\", \"🚗\", \"🏍️\", \"🛳️\", \"☃️\", \"🥻\", \"🧥\", \"👜\", \"👢\", \"📱\", \"🧮\", \"🗃️\", \"🛋️\", \"🩴\", \"🎮\", \"🎠\", \"🛝\", \"🎡\", \"🎢\", \"💈\", \"🎪\"];\n    const randomIndex = Math.floor(Math.random() * defaultEmojis.length);\n    return defaultEmojis[randomIndex];\n}\n\n\n// Set canvas dimensions based on customized-emoji size\nconst originalCanvas = document.getElementById(\"reference-canvas\");\noriginalCanvas.width = document.getElementById(\"customized-emoji\").clientWidth;\noriginalCanvas.height = document.getElementById(\"customized-emoji\").clientHeight;\n\n\nif (window.location.hash) {\n    inputString = window.location.hash.substring(1)\n    const parts = inputString.split(\"-\");\n    // If url has Emoji info, use it\n    document.getElementById(\"customized-emoji\").innerHTML = unicodeToEmoji(parts[0])\n    updateEmoji(unicodeToEmoji(parts[0]), true);\n\n    // If irl has palette info, use it\n    if (parts.length > 1) {\n        paletteCode = decodeURIComponent(decodeURL(parts[1]));\n        setOverridePaletteStyle(paletteCode)\n    }\n} else {\n    updateEmoji(getRandomEmoji(), true);\n}\n\n\n\n\n\n\n\n  ","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var $gfJaN$restructure = require(\"restructure\");\nvar $gfJaN$swchelperslib_define_propertyjs = require(\"@swc/helpers/lib/_define_property.js\");\nvar $gfJaN$swchelperslib_ts_decoratejs = require(\"@swc/helpers/lib/_ts_decorate.js\");\nvar $gfJaN$fastdeepequal = require(\"fast-deep-equal\");\nvar $gfJaN$unicodeproperties = require(\"unicode-properties\");\nvar $gfJaN$unicodetrie = require(\"unicode-trie\");\nvar $gfJaN$dfa = require(\"dfa\");\nvar $gfJaN$clone = require(\"clone\");\nvar $gfJaN$tinyinflate = require(\"tiny-inflate\");\nvar $gfJaN$brotlidecompressjs = require(\"brotli/decompress.js\");\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $59aa4ed98453e1d4$exports = {};\n\n$parcel$export($59aa4ed98453e1d4$exports, \"logErrors\", () => $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78);\n$parcel$export($59aa4ed98453e1d4$exports, \"registerFormat\", () => $59aa4ed98453e1d4$export$36b2f24e97d43be);\n$parcel$export($59aa4ed98453e1d4$exports, \"create\", () => $59aa4ed98453e1d4$export$185802fd694ee1f5);\n$parcel$export($59aa4ed98453e1d4$exports, \"defaultLanguage\", () => $59aa4ed98453e1d4$export$42940898df819940);\n$parcel$export($59aa4ed98453e1d4$exports, \"setDefaultLanguage\", () => $59aa4ed98453e1d4$export$5157e7780d44cc36);\n\nlet $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78 = false;\nlet $59aa4ed98453e1d4$var$formats = [];\nfunction $59aa4ed98453e1d4$export$36b2f24e97d43be(format) {\n    $59aa4ed98453e1d4$var$formats.push(format);\n}\nfunction $59aa4ed98453e1d4$export$185802fd694ee1f5(buffer, postscriptName) {\n    for(let i = 0; i < $59aa4ed98453e1d4$var$formats.length; i++){\n        let format = $59aa4ed98453e1d4$var$formats[i];\n        if (format.probe(buffer)) {\n            let font = new format(new (0, $gfJaN$restructure.DecodeStream)(buffer));\n            if (postscriptName) return font.getFont(postscriptName);\n            return font;\n        }\n    }\n    throw new Error(\"Unknown font format\");\n}\nlet $59aa4ed98453e1d4$export$42940898df819940 = \"en\";\nfunction $59aa4ed98453e1d4$export$5157e7780d44cc36(lang = \"en\") {\n    $59aa4ed98453e1d4$export$42940898df819940 = lang;\n}\n\n\n\n\n\nfunction $3bda6911913b43f0$export$69a3209f1a06c04d(target, key1, descriptor) {\n    if (descriptor.get) {\n        let get = descriptor.get;\n        descriptor.get = function() {\n            let value = get.call(this);\n            Object.defineProperty(this, key1, {\n                value: value\n            });\n            return value;\n        };\n    } else if (typeof descriptor.value === \"function\") {\n        let fn = descriptor.value;\n        return {\n            get () {\n                let cache1 = new Map;\n                function memoized(...args) {\n                    let key = args.length > 0 ? args[0] : \"value\";\n                    if (cache1.has(key)) return cache1.get(key);\n                    let result = fn.apply(this, args);\n                    cache1.set(key, result);\n                    return result;\n                }\n                Object.defineProperty(this, key1, {\n                    value: memoized\n                });\n                return memoized;\n            }\n        };\n    }\n}\n\n\n\n\n\nlet $e4ae0436c91af89f$var$SubHeader = new $gfJaN$restructure.Struct({\n    firstCode: $gfJaN$restructure.uint16,\n    entryCount: $gfJaN$restructure.uint16,\n    idDelta: $gfJaN$restructure.int16,\n    idRangeOffset: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$CmapGroup = new $gfJaN$restructure.Struct({\n    startCharCode: $gfJaN$restructure.uint32,\n    endCharCode: $gfJaN$restructure.uint32,\n    glyphID: $gfJaN$restructure.uint32\n});\nlet $e4ae0436c91af89f$var$UnicodeValueRange = new $gfJaN$restructure.Struct({\n    startUnicodeValue: $gfJaN$restructure.uint24,\n    additionalCount: $gfJaN$restructure.uint8\n});\nlet $e4ae0436c91af89f$var$UVSMapping = new $gfJaN$restructure.Struct({\n    unicodeValue: $gfJaN$restructure.uint24,\n    glyphID: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$DefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UnicodeValueRange, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$NonDefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UVSMapping, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$VarSelectorRecord = new $gfJaN$restructure.Struct({\n    varSelector: $gfJaN$restructure.uint24,\n    defaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$DefaultUVS, {\n        type: \"parent\"\n    }),\n    nonDefaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$NonDefaultUVS, {\n        type: \"parent\"\n    })\n});\nlet $e4ae0436c91af89f$var$CmapSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        codeMap: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 256)\n    },\n    2: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        subHeaderKeys: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 256),\n        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys),\n        subHeaders: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$SubHeader, \"subHeaderCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"subHeaderCount\")\n    },\n    4: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        segCountX2: $gfJaN$restructure.uint16,\n        segCount: (t)=>t.segCountX2 >> 1,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        endCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        reservedPad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        startCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        idDelta: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"segCount\"),\n        idRangeOffset: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, (t)=>(t.length - t._currentOffset) / 2)\n    },\n    6: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        firstCode: $gfJaN$restructure.uint16,\n        entryCount: $gfJaN$restructure.uint16,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"entryCount\")\n    },\n    8: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint16,\n        is32: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 8192),\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    10: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        firstCode: $gfJaN$restructure.uint32,\n        entryCount: $gfJaN$restructure.uint32,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"numChars\")\n    },\n    12: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    13: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    14: {\n        length: $gfJaN$restructure.uint32,\n        numRecords: $gfJaN$restructure.uint32,\n        varSelectors: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$VarSelectorRecord, \"numRecords\")\n    }\n});\nlet $e4ae0436c91af89f$var$CmapEntry = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    table: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$CmapSubtable, {\n        type: \"parent\",\n        lazy: true\n    })\n});\nvar // character to glyph mapping\n$e4ae0436c91af89f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numSubtables: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($e4ae0436c91af89f$var$CmapEntry, \"numSubtables\")\n});\n\n\n\nvar // font header\n$55a60976afb7c261$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    revision: $gfJaN$restructure.int32,\n    checkSumAdjustment: $gfJaN$restructure.uint32,\n    magicNumber: $gfJaN$restructure.uint32,\n    flags: $gfJaN$restructure.uint16,\n    unitsPerEm: $gfJaN$restructure.uint16,\n    created: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    modified: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    macStyle: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"outline\",\n        \"shadow\",\n        \"condensed\",\n        \"extended\"\n    ]),\n    lowestRecPPEM: $gfJaN$restructure.uint16,\n    fontDirectionHint: $gfJaN$restructure.int16,\n    indexToLocFormat: $gfJaN$restructure.int16,\n    glyphDataFormat: $gfJaN$restructure.int16 // 0 for current format\n});\n\n\n\nvar // horizontal header\n$dde72b7b5b650596$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceWidthMax: $gfJaN$restructure.uint16,\n    minLeftSideBearing: $gfJaN$restructure.int16,\n    minRightSideBearing: $gfJaN$restructure.int16,\n    xMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance widths in 'hmtx' table\n});\n\n\n\nlet $a7c40184072c9a5b$var$HmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16\n});\nvar $a7c40184072c9a5b$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($a7c40184072c9a5b$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n\n\n\nvar // maxiumum profile\n$521197722369f691$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    maxPoints: $gfJaN$restructure.uint16,\n    maxContours: $gfJaN$restructure.uint16,\n    maxComponentPoints: $gfJaN$restructure.uint16,\n    maxComponentContours: $gfJaN$restructure.uint16,\n    maxZones: $gfJaN$restructure.uint16,\n    maxTwilightPoints: $gfJaN$restructure.uint16,\n    maxStorage: $gfJaN$restructure.uint16,\n    maxFunctionDefs: $gfJaN$restructure.uint16,\n    maxInstructionDefs: $gfJaN$restructure.uint16,\n    maxStackElements: $gfJaN$restructure.uint16,\n    maxSizeOfInstructions: $gfJaN$restructure.uint16,\n    maxComponentElements: $gfJaN$restructure.uint16,\n    maxComponentDepth: $gfJaN$restructure.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n\n\nfunction $e2613b812f052cbe$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {\n    if (platformID === 1 && $e2613b812f052cbe$export$479e671907f486d1[languageID]) return $e2613b812f052cbe$export$479e671907f486d1[languageID];\n    return $e2613b812f052cbe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nconst $e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS = new Set([\n    \"x-mac-roman\",\n    \"x-mac-cyrillic\",\n    \"iso-8859-6\",\n    \"iso-8859-8\"\n]);\nconst $e2613b812f052cbe$var$MAC_ENCODINGS = {\n    \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\u0160\\u2122\\xb4\\xa8\\u2260\\u017D\\xd8\\u221E\\xb1\\u2264\\u2265\\u2206\\xb5\\u2202\\u2211\\u220F\\u0161\\u222B\\xaa\\xba\\u03A9\\u017E\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u0106\\xab\\u010C\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\uF8FF\\xa9\\u2044\\u20AC\\u2039\\u203A\\xc6\\xbb\\u2013\\xb7\\u201A\\u201E\\u2030\\xc2\\u0107\\xc1\\u010D\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u0111\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u03C0\\xcb\\u02DA\\xb8\\xca\\xe6\\u02C7\",\n    \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u1E02\\xb1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xe6\\xf8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xff\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xb7\\u1EF2\\u1EF3\\u204A\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u2663\\xd2\\xda\\xdb\\xd9\\u0131\\xdd\\xfd\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n    \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc\\u0385\\xe0\\xe2\\xe4\\u0384\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3\\u2122\\xee\\xef\\u2022\\xbd\\u2030\\xf4\\xf6\\xa6\\u20AC\\xf9\\xfb\\xfc\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xdf\\xae\\xa9\\u03A3\\u03AA\\xa7\\u2260\\xb0\\xb7\\u0391\\xb1\\u2264\\u2265\\xa5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xac\\u039F\\u03A1\\u2248\\u03A4\\xab\\xbb\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xf7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xad\",\n    \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\xd0\\xf0\\xde\\xfe\\xfd\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xb0\\u14A1\\u14A5\\u14A6\\u2022\\xb6\\u14A7\\xae\\xa9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n    \"x-mac-ce\": \"\\xc4\\u0100\\u0101\\xc9\\u0104\\xd6\\xdc\\xe1\\u0105\\u010C\\xe4\\u010D\\u0106\\u0107\\xe9\\u0179\\u017A\\u010E\\xed\\u010F\\u0112\\u0113\\u0116\\xf3\\u0117\\xf4\\xf6\\xf5\\xfa\\u011A\\u011B\\xfc\\u2020\\xb0\\u0118\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\u0119\\xa8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xac\\u221A\\u0144\\u0147\\u2206\\xab\\xbb\\u2026 \\u0148\\u0150\\xd5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xc1\\u0164\\u0165\\xcd\\u017D\\u017E\\u016A\\xd3\\xd4\\u016B\\u016E\\xda\\u016F\\u0170\\u0171\\u0172\\u0173\\xdd\\xfd\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n    \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\u0102\\u0218\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\u0103\\u0219\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\uF8A0\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\"\n};\nconst $e2613b812f052cbe$var$encodingCache = new Map();\nfunction $e2613b812f052cbe$export$1dceb3c14ed68bee(encoding) {\n    let cached = $e2613b812f052cbe$var$encodingCache.get(encoding);\n    if (cached) return cached;\n    // These encodings aren't supported by TextDecoder.\n    let mapping = $e2613b812f052cbe$var$MAC_ENCODINGS[encoding];\n    if (mapping) {\n        let res = new Map();\n        for(let i = 0; i < mapping.length; i++)res.set(mapping.charCodeAt(i), 0x80 + i);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n    // Only single byte encodings can be mapped 1:1.\n    if ($e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n        // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n        // Use this to create a mapping of code points.\n        let decoder = new TextDecoder(encoding);\n        let mapping = new Uint8Array(0x80);\n        for(let i = 0; i < 0x80; i++)mapping[i] = 0x80 + i;\n        let res = new Map();\n        let s = decoder.decode(mapping);\n        for(let i1 = 0; i1 < 0x80; i1++)res.set(s.charCodeAt(i1), 0x80 + i1);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n}\nconst $e2613b812f052cbe$export$6fef87b7618bdf0b = [\n    // unicode\n    [\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\"\n    ],\n    // macintosh\n    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n    // 0\tRoman                 17\tMalayalam\n    // 1\tJapanese\t            18\tSinhalese\n    // 2\tTraditional Chinese\t  19\tBurmese\n    // 3\tKorean\t              20\tKhmer\n    // 4\tArabic\t              21\tThai\n    // 5\tHebrew\t              22\tLaotian\n    // 6\tGreek\t                23\tGeorgian\n    // 7\tRussian\t              24\tArmenian\n    // 8\tRSymbol\t              25\tSimplified Chinese\n    // 9\tDevanagari\t          26\tTibetan\n    // 10\tGurmukhi\t            27\tMongolian\n    // 11\tGujarati\t            28\tGeez\n    // 12\tOriya\t                29\tSlavic\n    // 13\tBengali\t              30\tVietnamese\n    // 14\tTamil\t                31\tSindhi\n    // 15\tTelugu\t              32\t(Uninterpreted)\n    // 16\tKannada\n    [\n        \"x-mac-roman\",\n        \"shift-jis\",\n        \"big5\",\n        \"euc-kr\",\n        \"iso-8859-6\",\n        \"iso-8859-8\",\n        \"x-mac-greek\",\n        \"x-mac-cyrillic\",\n        \"x-mac-symbol\",\n        \"x-mac-devanagari\",\n        \"x-mac-gurmukhi\",\n        \"x-mac-gujarati\",\n        \"Oriya\",\n        \"Bengali\",\n        \"Tamil\",\n        \"Telugu\",\n        \"Kannada\",\n        \"Malayalam\",\n        \"Sinhalese\",\n        \"Burmese\",\n        \"Khmer\",\n        \"iso-8859-11\",\n        \"Laotian\",\n        \"Georgian\",\n        \"Armenian\",\n        \"hz-gb-2312\",\n        \"Tibetan\",\n        \"Mongolian\",\n        \"Geez\",\n        \"x-mac-ce\",\n        \"Vietnamese\",\n        \"Sindhi\"\n    ],\n    // ISO (deprecated)\n    [\n        \"ascii\"\n    ],\n    // windows\n    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n    [\n        \"symbol\",\n        \"utf16be\",\n        \"shift-jis\",\n        \"gb18030\",\n        \"big5\",\n        \"x-cp20949\",\n        \"johab\",\n        null,\n        null,\n        null,\n        \"utf16be\"\n    ]\n];\nconst $e2613b812f052cbe$export$479e671907f486d1 = {\n    15: \"x-mac-icelandic\",\n    17: \"x-mac-turkish\",\n    18: \"x-mac-croatian\",\n    24: \"x-mac-ce\",\n    25: \"x-mac-ce\",\n    26: \"x-mac-ce\",\n    27: \"x-mac-ce\",\n    28: \"x-mac-ce\",\n    30: \"x-mac-icelandic\",\n    37: \"x-mac-romanian\",\n    38: \"x-mac-ce\",\n    39: \"x-mac-ce\",\n    40: \"x-mac-ce\",\n    143: \"x-mac-inuit\",\n    146: \"x-mac-gaelic\"\n};\nconst $e2613b812f052cbe$export$2092376fd002e13 = [\n    // unicode\n    [],\n    {\n        0: \"en\",\n        30: \"fo\",\n        60: \"ks\",\n        90: \"rw\",\n        1: \"fr\",\n        31: \"fa\",\n        61: \"ku\",\n        91: \"rn\",\n        2: \"de\",\n        32: \"ru\",\n        62: \"sd\",\n        92: \"ny\",\n        3: \"it\",\n        33: \"zh\",\n        63: \"bo\",\n        93: \"mg\",\n        4: \"nl\",\n        34: \"nl-BE\",\n        64: \"ne\",\n        94: \"eo\",\n        5: \"sv\",\n        35: \"ga\",\n        65: \"sa\",\n        128: \"cy\",\n        6: \"es\",\n        36: \"sq\",\n        66: \"mr\",\n        129: \"eu\",\n        7: \"da\",\n        37: \"ro\",\n        67: \"bn\",\n        130: \"ca\",\n        8: \"pt\",\n        38: \"cz\",\n        68: \"as\",\n        131: \"la\",\n        9: \"no\",\n        39: \"sk\",\n        69: \"gu\",\n        132: \"qu\",\n        10: \"he\",\n        40: \"si\",\n        70: \"pa\",\n        133: \"gn\",\n        11: \"ja\",\n        41: \"yi\",\n        71: \"or\",\n        134: \"ay\",\n        12: \"ar\",\n        42: \"sr\",\n        72: \"ml\",\n        135: \"tt\",\n        13: \"fi\",\n        43: \"mk\",\n        73: \"kn\",\n        136: \"ug\",\n        14: \"el\",\n        44: \"bg\",\n        74: \"ta\",\n        137: \"dz\",\n        15: \"is\",\n        45: \"uk\",\n        75: \"te\",\n        138: \"jv\",\n        16: \"mt\",\n        46: \"be\",\n        76: \"si\",\n        139: \"su\",\n        17: \"tr\",\n        47: \"uz\",\n        77: \"my\",\n        140: \"gl\",\n        18: \"hr\",\n        48: \"kk\",\n        78: \"km\",\n        141: \"af\",\n        19: \"zh-Hant\",\n        49: \"az-Cyrl\",\n        79: \"lo\",\n        142: \"br\",\n        20: \"ur\",\n        50: \"az-Arab\",\n        80: \"vi\",\n        143: \"iu\",\n        21: \"hi\",\n        51: \"hy\",\n        81: \"id\",\n        144: \"gd\",\n        22: \"th\",\n        52: \"ka\",\n        82: \"tl\",\n        145: \"gv\",\n        23: \"ko\",\n        53: \"mo\",\n        83: \"ms\",\n        146: \"ga\",\n        24: \"lt\",\n        54: \"ky\",\n        84: \"ms-Arab\",\n        147: \"to\",\n        25: \"pl\",\n        55: \"tg\",\n        85: \"am\",\n        148: \"el-polyton\",\n        26: \"hu\",\n        56: \"tk\",\n        86: \"ti\",\n        149: \"kl\",\n        27: \"es\",\n        57: \"mn-CN\",\n        87: \"om\",\n        150: \"az\",\n        28: \"lv\",\n        58: \"mn\",\n        88: \"so\",\n        151: \"nn\",\n        29: \"se\",\n        59: \"ps\",\n        89: \"sw\"\n    },\n    // ISO (deprecated)\n    [],\n    {\n        0x0436: \"af\",\n        0x4009: \"en-IN\",\n        0x0487: \"rw\",\n        0x0432: \"tn\",\n        0x041C: \"sq\",\n        0x1809: \"en-IE\",\n        0x0441: \"sw\",\n        0x045B: \"si\",\n        0x0484: \"gsw\",\n        0x2009: \"en-JM\",\n        0x0457: \"kok\",\n        0x041B: \"sk\",\n        0x045E: \"am\",\n        0x4409: \"en-MY\",\n        0x0412: \"ko\",\n        0x0424: \"sl\",\n        0x1401: \"ar-DZ\",\n        0x1409: \"en-NZ\",\n        0x0440: \"ky\",\n        0x2C0A: \"es-AR\",\n        0x3C01: \"ar-BH\",\n        0x3409: \"en-PH\",\n        0x0454: \"lo\",\n        0x400A: \"es-BO\",\n        0x0C01: \"ar\",\n        0x4809: \"en-SG\",\n        0x0426: \"lv\",\n        0x340A: \"es-CL\",\n        0x0801: \"ar-IQ\",\n        0x1C09: \"en-ZA\",\n        0x0427: \"lt\",\n        0x240A: \"es-CO\",\n        0x2C01: \"ar-JO\",\n        0x2C09: \"en-TT\",\n        0x082E: \"dsb\",\n        0x140A: \"es-CR\",\n        0x3401: \"ar-KW\",\n        0x0809: \"en-GB\",\n        0x046E: \"lb\",\n        0x1C0A: \"es-DO\",\n        0x3001: \"ar-LB\",\n        0x0409: \"en\",\n        0x042F: \"mk\",\n        0x300A: \"es-EC\",\n        0x1001: \"ar-LY\",\n        0x3009: \"en-ZW\",\n        0x083E: \"ms-BN\",\n        0x440A: \"es-SV\",\n        0x1801: \"ary\",\n        0x0425: \"et\",\n        0x043E: \"ms\",\n        0x100A: \"es-GT\",\n        0x2001: \"ar-OM\",\n        0x0438: \"fo\",\n        0x044C: \"ml\",\n        0x480A: \"es-HN\",\n        0x4001: \"ar-QA\",\n        0x0464: \"fil\",\n        0x043A: \"mt\",\n        0x080A: \"es-MX\",\n        0x0401: \"ar-SA\",\n        0x040B: \"fi\",\n        0x0481: \"mi\",\n        0x4C0A: \"es-NI\",\n        0x2801: \"ar-SY\",\n        0x080C: \"fr-BE\",\n        0x047A: \"arn\",\n        0x180A: \"es-PA\",\n        0x1C01: \"aeb\",\n        0x0C0C: \"fr-CA\",\n        0x044E: \"mr\",\n        0x3C0A: \"es-PY\",\n        0x3801: \"ar-AE\",\n        0x040C: \"fr\",\n        0x047C: \"moh\",\n        0x280A: \"es-PE\",\n        0x2401: \"ar-YE\",\n        0x140C: \"fr-LU\",\n        0x0450: \"mn\",\n        0x500A: \"es-PR\",\n        0x042B: \"hy\",\n        0x180C: \"fr-MC\",\n        0x0850: \"mn-CN\",\n        0x0C0A: \"es\",\n        0x044D: \"as\",\n        0x100C: \"fr-CH\",\n        0x0461: \"ne\",\n        0x040A: \"es\",\n        0x082C: \"az-Cyrl\",\n        0x0462: \"fy\",\n        0x0414: \"nb\",\n        0x540A: \"es-US\",\n        0x042C: \"az\",\n        0x0456: \"gl\",\n        0x0814: \"nn\",\n        0x380A: \"es-UY\",\n        0x046D: \"ba\",\n        0x0437: \"ka\",\n        0x0482: \"oc\",\n        0x200A: \"es-VE\",\n        0x042D: \"eu\",\n        0x0C07: \"de-AT\",\n        0x0448: \"or\",\n        0x081D: \"sv-FI\",\n        0x0423: \"be\",\n        0x0407: \"de\",\n        0x0463: \"ps\",\n        0x041D: \"sv\",\n        0x0845: \"bn\",\n        0x1407: \"de-LI\",\n        0x0415: \"pl\",\n        0x045A: \"syr\",\n        0x0445: \"bn-IN\",\n        0x1007: \"de-LU\",\n        0x0416: \"pt\",\n        0x0428: \"tg\",\n        0x201A: \"bs-Cyrl\",\n        0x0807: \"de-CH\",\n        0x0816: \"pt-PT\",\n        0x085F: \"tzm\",\n        0x141A: \"bs\",\n        0x0408: \"el\",\n        0x0446: \"pa\",\n        0x0449: \"ta\",\n        0x047E: \"br\",\n        0x046F: \"kl\",\n        0x046B: \"qu-BO\",\n        0x0444: \"tt\",\n        0x0402: \"bg\",\n        0x0447: \"gu\",\n        0x086B: \"qu-EC\",\n        0x044A: \"te\",\n        0x0403: \"ca\",\n        0x0468: \"ha\",\n        0x0C6B: \"qu\",\n        0x041E: \"th\",\n        0x0C04: \"zh-HK\",\n        0x040D: \"he\",\n        0x0418: \"ro\",\n        0x0451: \"bo\",\n        0x1404: \"zh-MO\",\n        0x0439: \"hi\",\n        0x0417: \"rm\",\n        0x041F: \"tr\",\n        0x0804: \"zh\",\n        0x040E: \"hu\",\n        0x0419: \"ru\",\n        0x0442: \"tk\",\n        0x1004: \"zh-SG\",\n        0x040F: \"is\",\n        0x243B: \"smn\",\n        0x0480: \"ug\",\n        0x0404: \"zh-TW\",\n        0x0470: \"ig\",\n        0x103B: \"smj-NO\",\n        0x0422: \"uk\",\n        0x0483: \"co\",\n        0x0421: \"id\",\n        0x143B: \"smj\",\n        0x042E: \"hsb\",\n        0x041A: \"hr\",\n        0x045D: \"iu\",\n        0x0C3B: \"se-FI\",\n        0x0420: \"ur\",\n        0x101A: \"hr-BA\",\n        0x085D: \"iu-Latn\",\n        0x043B: \"se\",\n        0x0843: \"uz-Cyrl\",\n        0x0405: \"cs\",\n        0x083C: \"ga\",\n        0x083B: \"se-SE\",\n        0x0443: \"uz\",\n        0x0406: \"da\",\n        0x0434: \"xh\",\n        0x203B: \"sms\",\n        0x042A: \"vi\",\n        0x048C: \"prs\",\n        0x0435: \"zu\",\n        0x183B: \"sma-NO\",\n        0x0452: \"cy\",\n        0x0465: \"dv\",\n        0x0410: \"it\",\n        0x1C3B: \"sms\",\n        0x0488: \"wo\",\n        0x0813: \"nl-BE\",\n        0x0810: \"it-CH\",\n        0x044F: \"sa\",\n        0x0485: \"sah\",\n        0x0413: \"nl\",\n        0x0411: \"ja\",\n        0x1C1A: \"sr-Cyrl-BA\",\n        0x0478: \"ii\",\n        0x0C09: \"en-AU\",\n        0x044B: \"kn\",\n        0x0C1A: \"sr\",\n        0x046A: \"yo\",\n        0x2809: \"en-BZ\",\n        0x043F: \"kk\",\n        0x181A: \"sr-Latn-BA\",\n        0x1009: \"en-CA\",\n        0x0453: \"km\",\n        0x081A: \"sr-Latn\",\n        0x2409: \"en-029\",\n        0x0486: \"quc\",\n        0x046C: \"nso\"\n    }\n];\n\n\nlet $51a9f4feb3a3b2b1$var$NameRecord = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    languageID: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    length: $gfJaN$restructure.uint16,\n    string: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", (t)=>(0, $e2613b812f052cbe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID)), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.parent.stringOffset,\n        allowNull: false\n    })\n});\nlet $51a9f4feb3a3b2b1$var$LangTagRecord = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    tag: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", \"utf16be\"), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.stringOffset\n    })\n});\nvar $51a9f4feb3a3b2b1$var$NameTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\")\n    },\n    1: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\"),\n        langTagCount: $gfJaN$restructure.uint16,\n        langTags: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$LangTagRecord, \"langTagCount\")\n    }\n});\nvar $51a9f4feb3a3b2b1$export$2e2bcd8739ae039 = $51a9f4feb3a3b2b1$var$NameTable;\nconst $51a9f4feb3a3b2b1$var$NAMES = [\n    \"copyright\",\n    \"fontFamily\",\n    \"fontSubfamily\",\n    \"uniqueSubfamily\",\n    \"fullName\",\n    \"version\",\n    \"postscriptName\",\n    \"trademark\",\n    \"manufacturer\",\n    \"designer\",\n    \"description\",\n    \"vendorURL\",\n    \"designerURL\",\n    \"license\",\n    \"licenseURL\",\n    null,\n    \"preferredFamily\",\n    \"preferredSubfamily\",\n    \"compatibleFull\",\n    \"sampleText\",\n    \"postscriptCIDFontName\",\n    \"wwsFamilyName\",\n    \"wwsSubfamilyName\"\n];\n$51a9f4feb3a3b2b1$var$NameTable.process = function(stream) {\n    var records = {};\n    for (let record of this.records){\n        // find out what language this is for\n        let language = (0, $e2613b812f052cbe$export$2092376fd002e13)[record.platformID][record.languageID];\n        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n        if (language == null) language = record.platformID + \"-\" + record.languageID;\n        // if the nameID is >= 256, it is a font feature record (AAT)\n        let key = record.nameID >= 256 ? \"fontFeatures\" : $51a9f4feb3a3b2b1$var$NAMES[record.nameID] || record.nameID;\n        if (records[key] == null) records[key] = {};\n        let obj = records[key];\n        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n        if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n    this.records = records;\n};\n$51a9f4feb3a3b2b1$var$NameTable.preEncode = function() {\n    if (Array.isArray(this.records)) return;\n    this.version = 0;\n    let records = [];\n    for(let key in this.records){\n        let val = this.records[key];\n        if (key === \"fontFeatures\") continue;\n        records.push({\n            platformID: 3,\n            encodingID: 1,\n            languageID: 0x409,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length * 2,\n            string: val.en\n        });\n        if (key === \"postscriptName\") records.push({\n            platformID: 1,\n            encodingID: 0,\n            languageID: 0,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length,\n            string: val.en\n        });\n    }\n    this.records = records;\n    this.count = records.length;\n    this.stringOffset = $51a9f4feb3a3b2b1$var$NameTable.size(this, null, false);\n};\n\n\n\nvar $114ea85db469b435$var$OS2 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        xAvgCharWidth: $gfJaN$restructure.int16,\n        usWeightClass: $gfJaN$restructure.uint16,\n        usWidthClass: $gfJaN$restructure.uint16,\n        fsType: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            null,\n            \"noEmbedding\",\n            \"viewOnly\",\n            \"editable\",\n            null,\n            null,\n            null,\n            null,\n            \"noSubsetting\",\n            \"bitmapOnly\"\n        ]),\n        ySubscriptXSize: $gfJaN$restructure.int16,\n        ySubscriptYSize: $gfJaN$restructure.int16,\n        ySubscriptXOffset: $gfJaN$restructure.int16,\n        ySubscriptYOffset: $gfJaN$restructure.int16,\n        ySuperscriptXSize: $gfJaN$restructure.int16,\n        ySuperscriptYSize: $gfJaN$restructure.int16,\n        ySuperscriptXOffset: $gfJaN$restructure.int16,\n        ySuperscriptYOffset: $gfJaN$restructure.int16,\n        yStrikeoutSize: $gfJaN$restructure.int16,\n        yStrikeoutPosition: $gfJaN$restructure.int16,\n        sFamilyClass: $gfJaN$restructure.int16,\n        panose: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 10),\n        ulCharRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 4),\n        vendorID: new $gfJaN$restructure.String(4),\n        fsSelection: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            \"italic\",\n            \"underscore\",\n            \"negative\",\n            \"outlined\",\n            \"strikeout\",\n            \"bold\",\n            \"regular\",\n            \"useTypoMetrics\",\n            \"wws\",\n            \"oblique\"\n        ]),\n        usFirstCharIndex: $gfJaN$restructure.uint16,\n        usLastCharIndex: $gfJaN$restructure.uint16 // The maximum Unicode index in this font\n    },\n    // The Apple version of this table ends here, but the Microsoft one continues on...\n    0: {},\n    1: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2)\n    },\n    2: {\n        // these should be common with version 1 somehow\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16\n    },\n    5: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16,\n        usLowerOpticalPointSize: $gfJaN$restructure.uint16,\n        usUpperOpticalPointSize: $gfJaN$restructure.uint16\n    }\n});\nlet $114ea85db469b435$var$versions = $114ea85db469b435$var$OS2.versions;\n$114ea85db469b435$var$versions[3] = $114ea85db469b435$var$versions[4] = $114ea85db469b435$var$versions[2];\nvar $114ea85db469b435$export$2e2bcd8739ae039 = $114ea85db469b435$var$OS2;\n\n\n\nvar // PostScript information\n$f93b30299e1ea0f5$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed32, {\n    header: {\n        italicAngle: $gfJaN$restructure.fixed32,\n        underlinePosition: $gfJaN$restructure.int16,\n        underlineThickness: $gfJaN$restructure.int16,\n        isFixedPitch: $gfJaN$restructure.uint32,\n        minMemType42: $gfJaN$restructure.uint32,\n        maxMemType42: $gfJaN$restructure.uint32,\n        minMemType1: $gfJaN$restructure.uint32,\n        maxMemType1: $gfJaN$restructure.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n    },\n    1: {},\n    2: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        glyphNameIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfGlyphs\"),\n        names: new $gfJaN$restructure.Array(new $gfJaN$restructure.String($gfJaN$restructure.uint8))\n    },\n    2.5: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numberOfGlyphs\")\n    },\n    3: {},\n    4: {\n        map: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.maxp.numGlyphs)\n    }\n});\n\n\n\nvar // An array of predefined values accessible by instructions\n$8fb09b0f473d61a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValues: new $gfJaN$restructure.Array($gfJaN$restructure.int16)\n});\n\n\n\nvar // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$873d79fea57d3161$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nlet $83c4155666d50c37$var$loca = new $gfJaN$restructure.VersionedStruct(\"head.indexToLocFormat\", {\n    0: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16)\n    },\n    1: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32)\n    }\n});\n$83c4155666d50c37$var$loca.process = function() {\n    if (this.version === 0 && !this._processed) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;\n        this._processed = true;\n    }\n};\n$83c4155666d50c37$var$loca.preEncode = function() {\n    if (this.version === 0 && this._processed !== false) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;\n        this._processed = false;\n    }\n};\nvar $83c4155666d50c37$export$2e2bcd8739ae039 = $83c4155666d50c37$var$loca;\n\n\n\nvar // Set of instructions executed whenever the point size or font transformation change\n$b12598db7cdf7042$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValueProgram: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nvar // only used for encoding\n$7707bdf21a3d89cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Array(new $gfJaN$restructure.Buffer);\n\n\n\n\nclass $9eaea3754914a290$export$2e2bcd8739ae039 {\n    getCFFVersion(ctx) {\n        while(ctx && !ctx.hdrSize)ctx = ctx.parent;\n        return ctx ? ctx.version : -1;\n    }\n    decode(stream, parent) {\n        let version = this.getCFFVersion(parent);\n        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n        if (count === 0) return [];\n        let offSize = stream.readUInt8();\n        let offsetType;\n        if (offSize === 1) offsetType = $gfJaN$restructure.uint8;\n        else if (offSize === 2) offsetType = $gfJaN$restructure.uint16;\n        else if (offSize === 3) offsetType = $gfJaN$restructure.uint24;\n        else if (offSize === 4) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n        let ret = [];\n        let startPos = stream.pos + (count + 1) * offSize - 1;\n        let start = offsetType.decode(stream);\n        for(let i = 0; i < count; i++){\n            let end = offsetType.decode(stream);\n            if (this.type != null) {\n                let pos = stream.pos;\n                stream.pos = startPos + start;\n                parent.length = end - start;\n                ret.push(this.type.decode(stream, parent));\n                stream.pos = pos;\n            } else ret.push({\n                offset: startPos + start,\n                length: end - start\n            });\n            start = end;\n        }\n        stream.pos = startPos + start;\n        return ret;\n    }\n    size(arr, parent) {\n        let size = 2;\n        if (arr.length === 0) return size;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let offset = 1;\n        for(let i = 0; i < arr.length; i++){\n            let item = arr[i];\n            offset += type.size(item, parent);\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        size += 1 + offsetType.size() * (arr.length + 1);\n        size += offset - 1;\n        return size;\n    }\n    encode(stream, arr, parent) {\n        stream.writeUInt16BE(arr.length);\n        if (arr.length === 0) return;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let sizes = [];\n        let offset = 1;\n        for (let item of arr){\n            let s = type.size(item, parent);\n            sizes.push(s);\n            offset += s;\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        // write offset size\n        stream.writeUInt8(offsetType.size());\n        // write elements\n        offset = 1;\n        offsetType.encode(stream, offset);\n        for (let size of sizes){\n            offset += size;\n            offsetType.encode(stream, offset);\n        }\n        for (let item1 of arr)type.encode(stream, item1, parent);\n        return;\n    }\n    constructor(type){\n        this.type = type;\n    }\n}\n\n\n\n\n\n\nconst $f77b592c17132d70$var$FLOAT_EOF = 0xf;\nconst $f77b592c17132d70$var$FLOAT_LOOKUP = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \".\",\n    \"E\",\n    \"E-\",\n    null,\n    \"-\"\n];\nconst $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP = {\n    \".\": 10,\n    \"E\": 11,\n    \"E-\": 12,\n    \"-\": 14\n};\nclass $f77b592c17132d70$export$2e2bcd8739ae039 {\n    static decode(stream, value) {\n        if (32 <= value && value <= 246) return value - 139;\n        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n        if (value === 28) return stream.readInt16BE();\n        if (value === 29) return stream.readInt32BE();\n        if (value === 30) {\n            let str = \"\";\n            while(true){\n                let b = stream.readUInt8();\n                let n1 = b >> 4;\n                if (n1 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n1];\n                let n2 = b & 15;\n                if (n2 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n2];\n            }\n            return parseFloat(str);\n        }\n        return null;\n    }\n    static size(value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, set to 32768\n        if (value.forceLarge) value = 32768;\n        if ((value | 0) !== value) {\n            let str = \"\" + value;\n            return 1 + Math.ceil((str.length + 1) / 2);\n        } else if (-107 <= value && value <= 107) return 1;\n        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;\n        else if (-32768 <= value && value <= 32767) return 3;\n        else return 5;\n    }\n    static encode(stream, value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, save the old value and set to 32768\n        let val = Number(value);\n        if (value.forceLarge) {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        } else if ((val | 0) !== val) {\n            stream.writeUInt8(30);\n            let str = \"\" + val;\n            for(let i = 0; i < str.length; i += 2){\n                let c1 = str[i];\n                let n1 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n                if (i === str.length - 1) var n2 = $f77b592c17132d70$var$FLOAT_EOF;\n                else {\n                    let c2 = str[i + 1];\n                    var n2 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n                }\n                stream.writeUInt8(n1 << 4 | n2 & 15);\n            }\n            if (n2 !== $f77b592c17132d70$var$FLOAT_EOF) return stream.writeUInt8($f77b592c17132d70$var$FLOAT_EOF << 4);\n        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);\n        else if (108 <= val && val <= 1131) {\n            val -= 108;\n            stream.writeUInt8((val >> 8) + 247);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-1131 <= val && val <= -108) {\n            val = -val - 108;\n            stream.writeUInt8((val >> 8) + 251);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-32768 <= val && val <= 32767) {\n            stream.writeUInt8(28);\n            return stream.writeInt16BE(val);\n        } else {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        }\n    }\n}\n\n\n\nclass $efe622f40a9c35bd$export$2e2bcd8739ae039 {\n    decodeOperands(type, stream, ret, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [\n                op\n            ]));\n        else if (type.decode != null) return type.decode(stream, ret, operands);\n        else switch(type){\n            case \"number\":\n            case \"offset\":\n            case \"sid\":\n                return operands[0];\n            case \"boolean\":\n                return !!operands[0];\n            default:\n                return operands;\n        }\n    }\n    encodeOperands(type, stream, ctx, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]);\n        else if (type.encode != null) return type.encode(stream, operands, ctx);\n        else if (typeof operands === \"number\") return [\n            operands\n        ];\n        else if (typeof operands === \"boolean\") return [\n            +operands\n        ];\n        else if (Array.isArray(operands)) return operands;\n        else return [\n            operands\n        ];\n    }\n    decode(stream, parent) {\n        let end = stream.pos + parent.length;\n        let ret = {};\n        let operands = [];\n        // define hidden properties\n        Object.defineProperties(ret, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            }\n        });\n        // fill in defaults\n        for(let key in this.fields){\n            let field = this.fields[key];\n            ret[field[1]] = field[3];\n        }\n        while(stream.pos < end){\n            let b = stream.readUInt8();\n            if (b < 28) {\n                if (b === 12) b = b << 8 | stream.readUInt8();\n                let field = this.fields[b];\n                if (!field) throw new Error(`Unknown operator ${b}`);\n                let val = this.decodeOperands(field[2], stream, ret, operands);\n                if (val != null) {\n                    if (val instanceof (0, $gfJaN$restructure.PropertyDescriptor)) Object.defineProperty(ret, field[1], val);\n                    else ret[field[1]] = val;\n                }\n                operands = [];\n            } else operands.push((0, $f77b592c17132d70$export$2e2bcd8739ae039).decode(stream, b));\n        }\n        return ret;\n    }\n    size(dict, parent, includePointers = true) {\n        let ctx = {\n            parent: parent,\n            val: dict,\n            pointerSize: 0,\n            startOffset: parent.startOffset || 0\n        };\n        let len = 0;\n        for(let k in this.fields){\n            let field = this.fields[k];\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], null, ctx, val);\n            for (let op of operands)len += (0, $f77b592c17132d70$export$2e2bcd8739ae039).size(op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            len += key.length;\n        }\n        if (includePointers) len += ctx.pointerSize;\n        return len;\n    }\n    encode(stream, dict, parent) {\n        let ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: dict,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n        for (let field of this.ops){\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], stream, ctx, val);\n            for (let op of operands)(0, $f77b592c17132d70$export$2e2bcd8739ae039).encode(stream, op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            for (let op1 of key)stream.writeUInt8(op1);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            let ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n        return;\n    }\n    constructor(ops = []){\n        this.ops = ops;\n        this.fields = {};\n        for (let field of ops){\n            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n            this.fields[key] = field;\n        }\n    }\n}\n\n\n\n\nclass $4aa1b0749c2770f8$export$2e2bcd8739ae039 extends $gfJaN$restructure.Pointer {\n    decode(stream, parent, operands) {\n        this.offsetType = {\n            decode: ()=>operands[0]\n        };\n        return super.decode(stream, parent, operands);\n    }\n    encode(stream, value, ctx) {\n        if (!stream) {\n            // compute the size (so ctx.pointerSize is correct)\n            this.offsetType = {\n                size: ()=>0\n            };\n            this.size(value, ctx);\n            return [\n                new $4aa1b0749c2770f8$var$Ptr(0)\n            ];\n        }\n        let ptr = null;\n        this.offsetType = {\n            encode: (stream, val)=>ptr = val\n        };\n        super.encode(stream, value, ctx);\n        return [\n            new $4aa1b0749c2770f8$var$Ptr(ptr)\n        ];\n    }\n    constructor(type, options = {}){\n        if (options.type == null) options.type = \"global\";\n        super(null, type, options);\n    }\n}\nclass $4aa1b0749c2770f8$var$Ptr {\n    valueOf() {\n        return this.val;\n    }\n    constructor(val){\n        this.val = val;\n        this.forceLarge = true;\n    }\n}\n\n\n\n\n\nclass $15a0cbb3d09cf7ee$var$CFFBlendOp {\n    static decode(stream, parent, operands) {\n        let numBlends = operands.pop();\n        // TODO: actually blend. For now just consume the deltas\n        // since we don't use any of the values anyway.\n        while(operands.length > numBlends)operands.pop();\n    }\n}\nvar $15a0cbb3d09cf7ee$export$2e2bcd8739ae039 = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                    type                                          default\n    [\n        6,\n        \"BlueValues\",\n        \"delta\",\n        null\n    ],\n    [\n        7,\n        \"OtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        8,\n        \"FamilyBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        9,\n        \"FamilyOtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            9\n        ],\n        \"BlueScale\",\n        \"number\",\n        0.039625\n    ],\n    [\n        [\n            12,\n            10\n        ],\n        \"BlueShift\",\n        \"number\",\n        7\n    ],\n    [\n        [\n            12,\n            11\n        ],\n        \"BlueFuzz\",\n        \"number\",\n        1\n    ],\n    [\n        10,\n        \"StdHW\",\n        \"number\",\n        null\n    ],\n    [\n        11,\n        \"StdVW\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            12\n        ],\n        \"StemSnapH\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            13\n        ],\n        \"StemSnapV\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            14\n        ],\n        \"ForceBold\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            17\n        ],\n        \"LanguageGroup\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            18\n        ],\n        \"ExpansionFactor\",\n        \"number\",\n        0.06\n    ],\n    [\n        [\n            12,\n            19\n        ],\n        \"initialRandomSeed\",\n        \"number\",\n        0\n    ],\n    [\n        20,\n        \"defaultWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        21,\n        \"nominalWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        22,\n        \"vsindex\",\n        \"number\",\n        0\n    ],\n    [\n        23,\n        \"blend\",\n        $15a0cbb3d09cf7ee$var$CFFBlendOp,\n        null\n    ],\n    [\n        19,\n        \"Subrs\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039), {\n            type: \"local\"\n        }),\n        null\n    ]\n]);\n\n\nvar // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$860d3574d7fa3a51$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\",\n    \"001.000\",\n    \"001.001\",\n    \"001.002\",\n    \"001.003\",\n    \"Black\",\n    \"Bold\",\n    \"Book\",\n    \"Light\",\n    \"Medium\",\n    \"Regular\",\n    \"Roman\",\n    \"Semibold\"\n];\n\n\nlet $c4ffe47cba1d7f36$export$dee0027060fa13bd = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"\",\n    \"questiondown\",\n    \"\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"\",\n    \"ring\",\n    \"cedilla\",\n    \"\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"AE\",\n    \"\",\n    \"ordfeminine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"ae\",\n    \"\",\n    \"\",\n    \"\",\n    \"dotlessi\",\n    \"\",\n    \"\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\"\n];\nlet $c4ffe47cba1d7f36$export$4f58f497e14a53c3 = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"\",\n    \"\",\n    \"isuperior\",\n    \"\",\n    \"\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"\",\n    \"\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"\",\n    \"\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"\",\n    \"Dotaccentsmall\",\n    \"\",\n    \"\",\n    \"Macronsmall\",\n    \"\",\n    \"\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"\",\n    \"\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"\",\n    \"\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\n\n\nlet $1e7c7c16984e4427$export$c33b50336c234f16 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\"\n];\nlet $1e7c7c16984e4427$export$3ed0f9e1fee8d489 = [\n    \".notdef\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $1e7c7c16984e4427$export$dc28be11139d4120 = [\n    \".notdef\",\n    \"space\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"hyphensuperior\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"centoldstyle\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\"\n];\n\n\n\n//########################\n// Scripts and Languages #\n//########################\nlet $b6dd765146ad212a$var$LangSysTable = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reqFeatureIndex: $gfJaN$restructure.uint16,\n    featureCount: $gfJaN$restructure.uint16,\n    featureIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"featureCount\")\n});\nlet $b6dd765146ad212a$var$LangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    langSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$var$Script = new $gfJaN$restructure.Struct({\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable),\n    count: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LangSysRecord, \"count\")\n});\nlet $b6dd765146ad212a$var$ScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Script, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$3e15fc05ce864229 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$ScriptRecord, $gfJaN$restructure.uint16);\n//#######################\n// Features and Lookups #\n//#######################\nlet $b6dd765146ad212a$var$FeatureParams = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$6e91cf7616333d5 = new $gfJaN$restructure.Struct({\n    featureParams: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$FeatureParams),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupListIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$FeatureRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    feature: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$aa18130def4b6cb4 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$FeatureRecord, $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$LookupFlags = new $gfJaN$restructure.Struct({\n    markAttachmentType: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"rightToLeft\",\n        \"ignoreBaseGlyphs\",\n        \"ignoreLigatures\",\n        \"ignoreMarks\",\n        \"useMarkFilteringSet\"\n    ])\n});\nfunction $b6dd765146ad212a$export$df0008c6ff2da22a(SubTable) {\n    let Lookup = new $gfJaN$restructure.Struct({\n        lookupType: $gfJaN$restructure.uint16,\n        flags: $b6dd765146ad212a$var$LookupFlags,\n        subTableCount: $gfJaN$restructure.uint16,\n        subTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, SubTable), \"subTableCount\"),\n        markFilteringSet: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.flags.flags.useMarkFilteringSet)\n    });\n    return new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, Lookup), $gfJaN$restructure.uint16);\n}\n//#################\n// Coverage Table #\n//#################\nlet $b6dd765146ad212a$var$RangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    startCoverageIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$17608c3f81a6111 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        glyphCount: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        rangeCount: $gfJaN$restructure.uint16,\n        rangeRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$RangeRecord, \"rangeCount\")\n    }\n});\n//#########################\n// Class Definition Table #\n//#########################\nlet $b6dd765146ad212a$var$ClassRangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    class: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$843d551fbbafef71 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        startGlyph: $gfJaN$restructure.uint16,\n        glyphCount: $gfJaN$restructure.uint16,\n        classValueArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        classRangeCount: $gfJaN$restructure.uint16,\n        classRangeRecord: new $gfJaN$restructure.Array($b6dd765146ad212a$var$ClassRangeRecord, \"classRangeCount\")\n    }\n});\nlet $b6dd765146ad212a$export$8215d14a63d9fb10 = new $gfJaN$restructure.Struct({\n    a: $gfJaN$restructure.uint16,\n    b: $gfJaN$restructure.uint16,\n    deltaFormat: $gfJaN$restructure.uint16\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nlet $b6dd765146ad212a$var$LookupRecord = new $gfJaN$restructure.Struct({\n    sequenceIndex: $gfJaN$restructure.uint16,\n    lookupListIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$var$Rule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$RuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Rule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$ClassRule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    classes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ClassSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$841858b892ce1f4c = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        ruleSetCount: $gfJaN$restructure.uint16,\n        ruleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$RuleSet), \"ruleSetCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        classDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        classSetCnt: $gfJaN$restructure.uint16,\n        classSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassSet), \"classSetCnt\")\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        lookupCount: $gfJaN$restructure.uint16,\n        coverages: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"glyphCount\"),\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nlet $b6dd765146ad212a$var$ChainRule = new $gfJaN$restructure.Struct({\n    backtrackGlyphCount: $gfJaN$restructure.uint16,\n    backtrack: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"backtrackGlyphCount\"),\n    inputGlyphCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.inputGlyphCount - 1),\n    lookaheadGlyphCount: $gfJaN$restructure.uint16,\n    lookahead: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookaheadGlyphCount\"),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ChainRuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$5e6d09e6861162f6 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        chainCount: $gfJaN$restructure.uint16,\n        chainRuleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        backtrackClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        inputClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        lookaheadClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        chainCount: $gfJaN$restructure.uint16,\n        chainClassSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    3: {\n        backtrackGlyphCount: $gfJaN$restructure.uint16,\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        inputGlyphCount: $gfJaN$restructure.uint16,\n        inputCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"inputGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        lookupCount: $gfJaN$restructure.uint16,\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n\n\n\n/*******************\n * Variation Store *\n *******************/ let $2e4adcda047b3383$var$F2DOT14 = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $2e4adcda047b3383$var$RegionAxisCoordinates = new $gfJaN$restructure.Struct({\n    startCoord: $2e4adcda047b3383$var$F2DOT14,\n    peakCoord: $2e4adcda047b3383$var$F2DOT14,\n    endCoord: $2e4adcda047b3383$var$F2DOT14\n});\nlet $2e4adcda047b3383$var$VariationRegionList = new $gfJaN$restructure.Struct({\n    axisCount: $gfJaN$restructure.uint16,\n    regionCount: $gfJaN$restructure.uint16,\n    variationRegions: new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($2e4adcda047b3383$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $2e4adcda047b3383$var$DeltaSet = new $gfJaN$restructure.Struct({\n    shortDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, (t)=>t.parent.shortDeltaCount),\n    regionDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int8, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount),\n    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)\n});\nlet $2e4adcda047b3383$var$ItemVariationData = new $gfJaN$restructure.Struct({\n    itemCount: $gfJaN$restructure.uint16,\n    shortDeltaCount: $gfJaN$restructure.uint16,\n    regionIndexCount: $gfJaN$restructure.uint16,\n    regionIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"regionIndexCount\"),\n    deltaSets: new $gfJaN$restructure.Array($2e4adcda047b3383$var$DeltaSet, \"itemCount\")\n});\nlet $2e4adcda047b3383$export$fe1b122a2710f241 = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint16,\n    variationRegionList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$VariationRegionList),\n    variationDataCount: $gfJaN$restructure.uint16,\n    itemVariationData: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/ let $2e4adcda047b3383$var$ConditionTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        axisIndex: $gfJaN$restructure.uint16,\n        axisIndex: $gfJaN$restructure.uint16,\n        filterRangeMinValue: $2e4adcda047b3383$var$F2DOT14,\n        filterRangeMaxValue: $2e4adcda047b3383$var$F2DOT14\n    }\n});\nlet $2e4adcda047b3383$var$ConditionSet = new $gfJaN$restructure.Struct({\n    conditionCount: $gfJaN$restructure.uint16,\n    conditionTable: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionTable), \"conditionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitutionRecord = new $gfJaN$restructure.Struct({\n    featureIndex: $gfJaN$restructure.uint16,\n    alternateFeatureTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$6e91cf7616333d5), {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitution = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    substitutionCount: $gfJaN$restructure.uint16,\n    substitutions: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureVariationRecord = new $gfJaN$restructure.Struct({\n    conditionSet: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionSet, {\n        type: \"parent\"\n    }),\n    featureTableSubstitution: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$FeatureTableSubstitution, {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$export$441b70b7971dd419 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    featureVariationRecordCount: $gfJaN$restructure.uint32,\n    featureVariationRecords: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass $5b547cf9e5da519b$var$PredefinedOp {\n    decode(stream, parent, operands) {\n        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n        return this.type.decode(stream, parent, operands);\n    }\n    size(value, ctx) {\n        return this.type.size(value, ctx);\n    }\n    encode(stream, value, ctx) {\n        let index = this.predefinedOps.indexOf(value);\n        if (index !== -1) return index;\n        return this.type.encode(stream, value, ctx);\n    }\n    constructor(predefinedOps, type){\n        this.predefinedOps = predefinedOps;\n        this.type = type;\n    }\n}\nclass $5b547cf9e5da519b$var$CFFEncodingVersion extends $gfJaN$restructure.Number {\n    decode(stream) {\n        return $gfJaN$restructure.uint8.decode(stream) & 0x7f;\n    }\n    constructor(){\n        super(\"UInt8\");\n    }\n}\nlet $5b547cf9e5da519b$var$Range1 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$Range2 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$CFFCustomEncoding = new $gfJaN$restructure.VersionedStruct(new $5b547cf9e5da519b$var$CFFEncodingVersion(), {\n    0: {\n        nCodes: $gfJaN$restructure.uint8,\n        codes: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"nCodes\")\n    },\n    1: {\n        nRanges: $gfJaN$restructure.uint8,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$Range1, \"nRanges\")\n    }\n});\nlet $5b547cf9e5da519b$var$CFFEncoding = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd),\n    (0, $c4ffe47cba1d7f36$export$4f58f497e14a53c3)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomEncoding, {\n    lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass $5b547cf9e5da519b$var$RangeArray extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        let length = (0, $gfJaN$restructure.resolveLength)(this.length, stream, parent);\n        let count = 0;\n        let res = [];\n        while(count < length){\n            let range = this.type.decode(stream, parent);\n            range.offset = count;\n            count += range.nLeft + 1;\n            res.push(range);\n        }\n        return res;\n    }\n}\nlet $5b547cf9e5da519b$var$CFFCustomCharset = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.CharStrings.length - 1)\n    },\n    1: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range1, (t)=>t.parent.CharStrings.length - 1)\n    },\n    2: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range2, (t)=>t.parent.CharStrings.length - 1)\n    }\n});\nlet $5b547cf9e5da519b$var$CFFCharset = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $1e7c7c16984e4427$export$c33b50336c234f16),\n    (0, $1e7c7c16984e4427$export$3ed0f9e1fee8d489),\n    (0, $1e7c7c16984e4427$export$dc28be11139d4120)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomCharset, {\n    lazy: true\n}));\nlet $5b547cf9e5da519b$var$FDRange3 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    fd: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$FDRange4 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint32,\n    fd: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$FDSelect = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        fds: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.CharStrings.length)\n    },\n    3: {\n        nRanges: $gfJaN$restructure.uint16,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange3, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint16\n    },\n    4: {\n        nRanges: $gfJaN$restructure.uint32,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange4, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint32\n    }\n});\nlet $5b547cf9e5da519b$var$ptr = new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)((0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039));\nclass $5b547cf9e5da519b$var$CFFPrivateOp {\n    decode(stream, parent, operands) {\n        parent.length = operands[0];\n        return $5b547cf9e5da519b$var$ptr.decode(stream, parent, [\n            operands[1]\n        ]);\n    }\n    size(dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.size(dict, ctx)[0]\n        ];\n    }\n    encode(stream, dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.encode(stream, dict, ctx)[0]\n        ];\n    }\n}\nlet $5b547cf9e5da519b$var$FontDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ], \n]);\nlet $5b547cf9e5da519b$var$CFFTopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        [\n            12,\n            30\n        ],\n        \"ROS\",\n        [\n            \"sid\",\n            \"sid\",\n            \"number\"\n        ],\n        null\n    ],\n    [\n        0,\n        \"version\",\n        \"sid\",\n        null\n    ],\n    [\n        1,\n        \"Notice\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            0\n        ],\n        \"Copyright\",\n        \"sid\",\n        null\n    ],\n    [\n        2,\n        \"FullName\",\n        \"sid\",\n        null\n    ],\n    [\n        3,\n        \"FamilyName\",\n        \"sid\",\n        null\n    ],\n    [\n        4,\n        \"Weight\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            1\n        ],\n        \"isFixedPitch\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            2\n        ],\n        \"ItalicAngle\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            3\n        ],\n        \"UnderlinePosition\",\n        \"number\",\n        -100\n    ],\n    [\n        [\n            12,\n            4\n        ],\n        \"UnderlineThickness\",\n        \"number\",\n        50\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            6\n        ],\n        \"CharstringType\",\n        \"number\",\n        2\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        13,\n        \"UniqueID\",\n        \"number\",\n        null\n    ],\n    [\n        5,\n        \"FontBBox\",\n        \"array\",\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            8\n        ],\n        \"StrokeWidth\",\n        \"number\",\n        0\n    ],\n    [\n        14,\n        \"XUID\",\n        \"array\",\n        null\n    ],\n    [\n        15,\n        \"charset\",\n        $5b547cf9e5da519b$var$CFFCharset,\n        (0, $1e7c7c16984e4427$export$c33b50336c234f16)\n    ],\n    [\n        16,\n        \"Encoding\",\n        $5b547cf9e5da519b$var$CFFEncoding,\n        (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd)\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            20\n        ],\n        \"SyntheticBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            21\n        ],\n        \"PostScript\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            22\n        ],\n        \"BaseFontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            23\n        ],\n        \"BaseFontBlend\",\n        \"delta\",\n        null\n    ],\n    // CID font specific\n    [\n        [\n            12,\n            31\n        ],\n        \"CIDFontVersion\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            32\n        ],\n        \"CIDFontRevision\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            33\n        ],\n        \"CIDFontType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            34\n        ],\n        \"CIDCount\",\n        \"number\",\n        8720\n    ],\n    [\n        [\n            12,\n            35\n        ],\n        \"UIDBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ]\n]);\nlet $5b547cf9e5da519b$var$VariationStore = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    itemVariationStore: (0, $2e4adcda047b3383$export$fe1b122a2710f241)\n});\nlet $5b547cf9e5da519b$var$CFF2TopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        24,\n        \"vstore\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$VariationStore),\n        null\n    ],\n    [\n        25,\n        \"maxstack\",\n        \"number\",\n        193\n    ]\n]);\nlet $5b547cf9e5da519b$var$CFFTop = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed16, {\n    1: {\n        hdrSize: $gfJaN$restructure.uint8,\n        offSize: $gfJaN$restructure.uint8,\n        nameIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        topDictIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFTopDict),\n        stringIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    },\n    2: {\n        hdrSize: $gfJaN$restructure.uint8,\n        length: $gfJaN$restructure.uint16,\n        topDict: $5b547cf9e5da519b$var$CFF2TopDict,\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    }\n});\nvar $5b547cf9e5da519b$export$2e2bcd8739ae039 = $5b547cf9e5da519b$var$CFFTop;\n\n\n\n\nclass $f717432b360040c7$var$CFFFont {\n    static decode(stream) {\n        return new $f717432b360040c7$var$CFFFont(stream);\n    }\n    decode() {\n        let start = this.stream.pos;\n        let top = (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).decode(this.stream);\n        for(let key in top){\n            let val = top[key];\n            this[key] = val;\n        }\n        if (this.version < 2) {\n            if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n            this.topDict = this.topDictIndex[0];\n        }\n        this.isCIDFont = this.topDict.ROS != null;\n        return this;\n    }\n    string(sid) {\n        if (this.version >= 2) return null;\n        if (sid < (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length) return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039)[sid];\n        return this.stringIndex[sid - (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length];\n    }\n    get postscriptName() {\n        if (this.version < 2) return this.nameIndex[0];\n        return null;\n    }\n    get fullName() {\n        return this.string(this.topDict.FullName);\n    }\n    get familyName() {\n        return this.string(this.topDict.FamilyName);\n    }\n    getCharString(glyph) {\n        this.stream.pos = this.topDict.CharStrings[glyph].offset;\n        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n    getGlyphName(gid) {\n        // CFF2 glyph names are in the post table.\n        if (this.version >= 2) return null;\n        // CID-keyed fonts don't have glyph names\n        if (this.isCIDFont) return null;\n        let { charset: charset  } = this.topDict;\n        if (Array.isArray(charset)) return charset[gid];\n        if (gid === 0) return \".notdef\";\n        gid -= 1;\n        switch(charset.version){\n            case 0:\n                return this.string(charset.glyphs[gid]);\n            case 1:\n            case 2:\n                for(let i = 0; i < charset.ranges.length; i++){\n                    let range = charset.ranges[i];\n                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n                }\n                break;\n        }\n        return null;\n    }\n    fdForGlyph(gid) {\n        if (!this.topDict.FDSelect) return null;\n        switch(this.topDict.FDSelect.version){\n            case 0:\n                return this.topDict.FDSelect.fds[gid];\n            case 3:\n            case 4:\n                let { ranges: ranges  } = this.topDict.FDSelect;\n                let low = 0;\n                let high = ranges.length - 1;\n                while(low <= high){\n                    let mid = low + high >> 1;\n                    if (gid < ranges[mid].first) high = mid - 1;\n                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;\n                    else return ranges[mid].fd;\n                }\n            default:\n                throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n        }\n    }\n    privateDictForGlyph(gid) {\n        if (this.topDict.FDSelect) {\n            let fd = this.fdForGlyph(gid);\n            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n            return null;\n        }\n        if (this.version < 2) return this.topDict.Private;\n        return this.topDict.FDArray[0].Private;\n    }\n    constructor(stream){\n        this.stream = stream;\n        this.decode();\n    }\n}\nvar $f717432b360040c7$export$2e2bcd8739ae039 = $f717432b360040c7$var$CFFFont;\n\n\n\nlet $8cb7ae73ed7aa7d8$var$VerticalOrigin = new $gfJaN$restructure.Struct({\n    glyphIndex: $gfJaN$restructure.uint16,\n    vertOriginY: $gfJaN$restructure.int16\n});\nvar $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    defaultVertOriginY: $gfJaN$restructure.int16,\n    numVertOriginYMetrics: $gfJaN$restructure.uint16,\n    metrics: new $gfJaN$restructure.Array($8cb7ae73ed7aa7d8$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\n\n\n\n\nlet $20e0c7bbecb76d75$export$16b227cb15d716a0 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    horiBearingX: $gfJaN$restructure.int8,\n    horiBearingY: $gfJaN$restructure.int8,\n    horiAdvance: $gfJaN$restructure.uint8,\n    vertBearingX: $gfJaN$restructure.int8,\n    vertBearingY: $gfJaN$restructure.int8,\n    vertAdvance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$export$62c53e75f69bfe12 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    bearingX: $gfJaN$restructure.int8,\n    bearingY: $gfJaN$restructure.int8,\n    advance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$var$EBDTComponent = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    xOffset: $gfJaN$restructure.int8,\n    yOffset: $gfJaN$restructure.int8\n});\nclass $20e0c7bbecb76d75$var$ByteAligned {\n}\nclass $20e0c7bbecb76d75$var$BitAligned {\n}\nlet $20e0c7bbecb76d75$export$f1f5ddeb20d14f = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    1: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    2: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    // format 3 is deprecated\n    // format 4 is not supported by Microsoft\n    5: {\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    6: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    7: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    8: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    9: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    17: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    18: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    19: {\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    }\n});\n\n\nlet $035bb95c0cdb1f6d$var$SBitLineMetrics = new $gfJaN$restructure.Struct({\n    ascender: $gfJaN$restructure.int8,\n    descender: $gfJaN$restructure.int8,\n    widthMax: $gfJaN$restructure.uint8,\n    caretSlopeNumerator: $gfJaN$restructure.int8,\n    caretSlopeDenominator: $gfJaN$restructure.int8,\n    caretOffset: $gfJaN$restructure.int8,\n    minOriginSB: $gfJaN$restructure.int8,\n    minAdvanceSB: $gfJaN$restructure.int8,\n    maxBeforeBL: $gfJaN$restructure.int8,\n    minAfterBL: $gfJaN$restructure.int8,\n    pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.int8, 2)\n});\nlet $035bb95c0cdb1f6d$var$CodeOffsetPair = new $gfJaN$restructure.Struct({\n    glyphCode: $gfJaN$restructure.uint16,\n    offset: $gfJaN$restructure.uint16\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        imageFormat: $gfJaN$restructure.uint16,\n        imageDataOffset: $gfJaN$restructure.uint32\n    },\n    1: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    2: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0)\n    },\n    3: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    4: {\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphArray: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$CodeOffsetPair, (t)=>t.numGlyphs + 1)\n    },\n    5: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0),\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphCodeArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numGlyphs\")\n    }\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtableArray = new $gfJaN$restructure.Struct({\n    firstGlyphIndex: $gfJaN$restructure.uint16,\n    lastGlyphIndex: $gfJaN$restructure.uint16,\n    subtable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $035bb95c0cdb1f6d$var$IndexSubtable)\n});\nlet $035bb95c0cdb1f6d$var$BitmapSizeTable = new $gfJaN$restructure.Struct({\n    indexSubTableArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$IndexSubtableArray, 1), {\n        type: \"parent\"\n    }),\n    indexTablesSize: $gfJaN$restructure.uint32,\n    numberOfIndexSubTables: $gfJaN$restructure.uint32,\n    colorRef: $gfJaN$restructure.uint32,\n    hori: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    vert: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    startGlyphIndex: $gfJaN$restructure.uint16,\n    endGlyphIndex: $gfJaN$restructure.uint16,\n    ppemX: $gfJaN$restructure.uint8,\n    ppemY: $gfJaN$restructure.uint8,\n    bitDepth: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"horizontal\",\n        \"vertical\"\n    ])\n});\nvar $035bb95c0cdb1f6d$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numSizes: $gfJaN$restructure.uint32,\n    sizes: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$BitmapSizeTable, \"numSizes\")\n});\n\n\n\nlet $73d13900b55a3c0c$var$ImageTable = new $gfJaN$restructure.Struct({\n    ppem: $gfJaN$restructure.uint16,\n    resolution: $gfJaN$restructure.uint16,\n    imageOffsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\"), (t)=>t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$73d13900b55a3c0c$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"renderOutlines\"\n    ]),\n    numImgTables: $gfJaN$restructure.uint32,\n    imageTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $73d13900b55a3c0c$var$ImageTable), \"numImgTables\")\n});\n\n\n\nlet $97f6b8be3a347a8f$var$LayerRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    paletteIndex: $gfJaN$restructure.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nlet $97f6b8be3a347a8f$var$BaseGlyphRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    // and is not rendered for color.\n    firstLayerIndex: $gfJaN$restructure.uint16,\n    // There will be numLayers consecutive entries for this base glyph.\n    numLayers: $gfJaN$restructure.uint16\n});\nvar $97f6b8be3a347a8f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numBaseGlyphRecords: $gfJaN$restructure.uint16,\n    baseGlyphRecord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n    layerRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$LayerRecord, \"numLayerRecords\"), {\n        lazy: true\n    }),\n    numLayerRecords: $gfJaN$restructure.uint16\n});\n\n\n\nlet $16ca60ecbdee30ea$var$ColorRecord = new $gfJaN$restructure.Struct({\n    blue: $gfJaN$restructure.uint8,\n    green: $gfJaN$restructure.uint8,\n    red: $gfJaN$restructure.uint8,\n    alpha: $gfJaN$restructure.uint8\n});\nvar $16ca60ecbdee30ea$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        numPaletteEntries: $gfJaN$restructure.uint16,\n        numPalettes: $gfJaN$restructure.uint16,\n        numColorRecords: $gfJaN$restructure.uint16,\n        colorRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($16ca60ecbdee30ea$var$ColorRecord, \"numColorRecords\")),\n        colorRecordIndices: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")\n    },\n    0: {},\n    1: {\n        offsetPaletteTypeArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numPalettes\")),\n        offsetPaletteLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")),\n        offsetPaletteEntryLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPaletteEntries\"))\n    }\n});\n\n\n\n\n\nlet $7327e41706f9d5c7$var$BaseCoord = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16 // X or Y value, in design units\n    },\n    2: {\n        coordinate: $gfJaN$restructure.int16,\n        referenceGlyph: $gfJaN$restructure.uint16,\n        baseCoordPoint: $gfJaN$restructure.uint16 // Index of contour point on the referenceGlyph\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)) // Device table for X or Y value\n    }\n});\nlet $7327e41706f9d5c7$var$BaseValues = new $gfJaN$restructure.Struct({\n    defaultIndex: $gfJaN$restructure.uint16,\n    baseCoordCount: $gfJaN$restructure.uint16,\n    baseCoords: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord), \"baseCoordCount\")\n});\nlet $7327e41706f9d5c7$var$FeatMinMaxRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }) // May be NULL\n});\nlet $7327e41706f9d5c7$var$MinMax = new $gfJaN$restructure.Struct({\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    featMinMaxCount: $gfJaN$restructure.uint16,\n    featMinMaxRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\nlet $7327e41706f9d5c7$var$BaseLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScript = new $gfJaN$restructure.Struct({\n    baseValues: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseValues),\n    defaultMinMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax),\n    baseLangSysCount: $gfJaN$restructure.uint16,\n    baseLangSysRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\nlet $7327e41706f9d5c7$var$BaseScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScript, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScriptList = new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseScriptRecord, $gfJaN$restructure.uint16);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet $7327e41706f9d5c7$var$BaseTagList = new $gfJaN$restructure.Array(new $gfJaN$restructure.String(4), $gfJaN$restructure.uint16);\nlet $7327e41706f9d5c7$var$Axis = new $gfJaN$restructure.Struct({\n    baseTagList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseTagList),\n    baseScriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScriptList)\n});\nvar $7327e41706f9d5c7$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        horizAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis),\n        vertAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis) // May be NULL\n    },\n    0x00010000: {},\n    0x00010001: {\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $7e48bbe9e5345664$var$AttachPoint = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$AttachList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    glyphCount: $gfJaN$restructure.uint16,\n    attachPoints: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachPoint), \"glyphCount\")\n});\nlet $7e48bbe9e5345664$var$CaretValue = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        caretValuePoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $7e48bbe9e5345664$var$LigGlyph = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$CaretValue), $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$LigCaretList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    ligGlyphCount: $gfJaN$restructure.uint16,\n    ligGlyphs: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $7e48bbe9e5345664$var$MarkGlyphSetsDef = new $gfJaN$restructure.Struct({\n    markSetTableFormat: $gfJaN$restructure.uint16,\n    markSetCount: $gfJaN$restructure.uint16,\n    coverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $7e48bbe9e5345664$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        glyphClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n        attachList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachList),\n        ligCaretList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigCaretList),\n        markAttachClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71))\n    },\n    0x00010000: {},\n    0x00010002: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef)\n    },\n    0x00010003: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef),\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $b687332511a4da75$var$ValueFormat = new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n    \"xPlacement\",\n    \"yPlacement\",\n    \"xAdvance\",\n    \"yAdvance\",\n    \"xPlaDevice\",\n    \"yPlaDevice\",\n    \"xAdvDevice\",\n    \"yAdvDevice\"\n]);\nlet $b687332511a4da75$var$types = {\n    xPlacement: $gfJaN$restructure.int16,\n    yPlacement: $gfJaN$restructure.int16,\n    xAdvance: $gfJaN$restructure.int16,\n    yAdvance: $gfJaN$restructure.int16,\n    xPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    xAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    })\n};\nclass $b687332511a4da75$var$ValueRecord {\n    buildStruct(parent) {\n        let struct = parent;\n        while(!struct[this.key] && struct.parent)struct = struct.parent;\n        if (!struct[this.key]) return;\n        let fields = {};\n        fields.rel = ()=>struct._startOffset;\n        let format = struct[this.key];\n        for(let key in format)if (format[key]) fields[key] = $b687332511a4da75$var$types[key];\n        return new $gfJaN$restructure.Struct(fields);\n    }\n    size(val, ctx) {\n        return this.buildStruct(ctx).size(val, ctx);\n    }\n    decode(stream, parent) {\n        let res = this.buildStruct(parent).decode(stream, parent);\n        delete res.rel;\n        return res;\n    }\n    constructor(key = \"valueFormat\"){\n        this.key = key;\n    }\n}\nlet $b687332511a4da75$var$PairValueRecord = new $gfJaN$restructure.Struct({\n    secondGlyph: $gfJaN$restructure.uint16,\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$PairSet = new $gfJaN$restructure.Array($b687332511a4da75$var$PairValueRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$Class2Record = new $gfJaN$restructure.Struct({\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$Anchor = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        anchorPoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        xDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)),\n        yDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $b687332511a4da75$var$EntryExitRecord = new $gfJaN$restructure.Struct({\n    entryAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    }),\n    exitAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkRecord = new $gfJaN$restructure.Struct({\n    class: $gfJaN$restructure.uint16,\n    markAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkArray = new $gfJaN$restructure.Array($b687332511a4da75$var$MarkRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$BaseRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.classCount);\nlet $b687332511a4da75$var$BaseArray = new $gfJaN$restructure.Array($b687332511a4da75$var$BaseRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$ComponentRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.parent.classCount);\nlet $b687332511a4da75$var$LigatureAttach = new $gfJaN$restructure.Array($b687332511a4da75$var$ComponentRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$LigatureArray = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureAttach), $gfJaN$restructure.uint16);\nlet $b687332511a4da75$export$73a8cfb19cd43a0f = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            value: new $b687332511a4da75$var$ValueRecord()\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            valueCount: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.LazyArray(new $b687332511a4da75$var$ValueRecord(), \"valueCount\")\n        }\n    }),\n    2: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            pairSetCount: $gfJaN$restructure.uint16,\n            pairSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$PairSet), \"pairSetCount\")\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            classDef1: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            classDef2: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            class1Count: $gfJaN$restructure.uint16,\n            class2Count: $gfJaN$restructure.uint16,\n            classRecords: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.LazyArray($b687332511a4da75$var$Class2Record, \"class2Count\"), \"class1Count\")\n        }\n    }),\n    3: {\n        format: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        entryExitCount: $gfJaN$restructure.uint16,\n        entryExitRecords: new $gfJaN$restructure.Array($b687332511a4da75$var$EntryExitRecord, \"entryExitCount\")\n    },\n    4: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        baseCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        baseArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    5: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        ligatureCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        ligatureArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureArray)\n    },\n    6: {\n        format: $gfJaN$restructure.uint16,\n        mark1Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        mark2Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        mark1Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        mark2Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    7: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    8: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    9: {\n        posFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    }\n});\n// Fix circular reference\n$b687332511a4da75$export$73a8cfb19cd43a0f.versions[9].extension.type = $b687332511a4da75$export$73a8cfb19cd43a0f;\nvar $b687332511a4da75$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($b687332511a4da75$export$73a8cfb19cd43a0f))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $99ccad60b96f92fb$var$Sequence = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$AlternateSet = $99ccad60b96f92fb$var$Sequence;\nlet $99ccad60b96f92fb$var$Ligature = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    compCount: $gfJaN$restructure.uint16,\n    components: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.compCount - 1)\n});\nlet $99ccad60b96f92fb$var$LigatureSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Ligature), $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$GSUBLookup = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            deltaGlyphID: $gfJaN$restructure.int16\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            glyphCount: $gfJaN$restructure.uint16,\n            substitute: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"glyphCount\")\n        }\n    }),\n    2: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        sequences: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Sequence), \"count\")\n    },\n    3: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        alternateSet: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$AlternateSet), \"count\")\n    },\n    4: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        ligatureSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$LigatureSet), \"count\")\n    },\n    5: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    6: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    7: {\n        substFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    },\n    8: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n        glyphCount: $gfJaN$restructure.uint16,\n        substitutes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    }\n});\n// Fix circular reference\n$99ccad60b96f92fb$var$GSUBLookup.versions[7].extension.type = $99ccad60b96f92fb$var$GSUBLookup;\nvar $99ccad60b96f92fb$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($99ccad60b96f92fb$var$GSUBLookup))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $573d5042c76c4940$var$JstfGSUBModList = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfPriority = new $gfJaN$restructure.Struct({\n    shrinkageEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f))),\n    extensionEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f)))\n});\nlet $573d5042c76c4940$var$JstfLangSys = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfPriority), $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    jstfLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys)\n});\nlet $573d5042c76c4940$var$JstfScript = new $gfJaN$restructure.Struct({\n    extenderGlyphs: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)),\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys),\n    langSysCount: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $573d5042c76c4940$var$JstfScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfScript, {\n        type: \"parent\"\n    })\n});\nvar $573d5042c76c4940$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    scriptCount: $gfJaN$restructure.uint16,\n    scriptList: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfScriptRecord, \"scriptCount\")\n});\n\n\n\n\n\n// TODO: add this to restructure\nclass $a5875b80d6087f61$var$VariableSizeNumber {\n    decode(stream, parent) {\n        switch(this.size(0, parent)){\n            case 1:\n                return stream.readUInt8();\n            case 2:\n                return stream.readUInt16BE();\n            case 3:\n                return stream.readUInt24BE();\n            case 4:\n                return stream.readUInt32BE();\n        }\n    }\n    size(val, parent) {\n        return (0, $gfJaN$restructure.resolveLength)(this._size, null, parent);\n    }\n    constructor(size){\n        this._size = size;\n    }\n}\nlet $a5875b80d6087f61$var$MapDataEntry = new $gfJaN$restructure.Struct({\n    entry: new $a5875b80d6087f61$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1),\n    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $a5875b80d6087f61$var$DeltaSetIndexMap = new $gfJaN$restructure.Struct({\n    entryFormat: $gfJaN$restructure.uint16,\n    mapCount: $gfJaN$restructure.uint16,\n    mapData: new $gfJaN$restructure.Array($a5875b80d6087f61$var$MapDataEntry, \"mapCount\")\n});\nvar $a5875b80d6087f61$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241)),\n    advanceWidthMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    LSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    RSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap)\n});\n\n\n\nlet $4423bc1ac09bbbd1$var$Signature = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    offset: $gfJaN$restructure.uint32\n});\nlet $4423bc1ac09bbbd1$var$SignatureBlock = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16, 2),\n    cbSignature: $gfJaN$restructure.uint32,\n    signature: new $gfJaN$restructure.Buffer(\"cbSignature\")\n});\nvar $4423bc1ac09bbbd1$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    ulVersion: $gfJaN$restructure.uint32,\n    usNumSigs: $gfJaN$restructure.uint16,\n    usFlag: $gfJaN$restructure.uint16,\n    signatures: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$Signature, \"usNumSigs\"),\n    signatureBlocks: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$SignatureBlock, \"usNumSigs\")\n});\n\n\n\nlet $7b50e3f8d83263de$var$GaspRange = new $gfJaN$restructure.Struct({\n    rangeMaxPPEM: $gfJaN$restructure.uint16,\n    rangeGaspBehavior: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"grayscale\",\n        \"gridfit\",\n        \"symmetricSmoothing\",\n        \"symmetricGridfit\" // only in version 1, for ClearType\n    ])\n});\nvar $7b50e3f8d83263de$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRanges: $gfJaN$restructure.uint16,\n    gaspRanges: new $gfJaN$restructure.Array($7b50e3f8d83263de$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\n\n\n\nlet $7bf92ec372cd2307$var$DeviceRecord = new $gfJaN$restructure.Struct({\n    pixelSize: $gfJaN$restructure.uint8,\n    maximumWidth: $gfJaN$restructure.uint8,\n    widths: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.parent.maxp.numGlyphs)\n});\nvar // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$7bf92ec372cd2307$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecords: $gfJaN$restructure.int16,\n    sizeDeviceRecord: $gfJaN$restructure.int32,\n    records: new $gfJaN$restructure.Array($7bf92ec372cd2307$var$DeviceRecord, \"numRecords\")\n});\n\n\n\nlet $a3f544bcf76542d1$var$KernPair = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.uint16,\n    right: $gfJaN$restructure.uint16,\n    value: $gfJaN$restructure.int16\n});\nlet $a3f544bcf76542d1$var$ClassTable = new $gfJaN$restructure.Struct({\n    firstGlyph: $gfJaN$restructure.uint16,\n    nGlyphs: $gfJaN$restructure.uint16,\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"nGlyphs\"),\n    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $a3f544bcf76542d1$var$Kern2Array = new $gfJaN$restructure.Struct({\n    off: (t)=>t._startOffset - t.parent.parent._startOffset,\n    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n    values: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"len\")\n});\nlet $a3f544bcf76542d1$var$KernSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        nPairs: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        pairs: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernPair, \"nPairs\")\n    },\n    2: {\n        rowWidth: $gfJaN$restructure.uint16,\n        leftTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        rightTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$Kern2Array, {\n            type: \"parent\"\n        })\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        kernValueCount: $gfJaN$restructure.uint8,\n        leftClassCount: $gfJaN$restructure.uint8,\n        rightClassCount: $gfJaN$restructure.uint8,\n        flags: $gfJaN$restructure.uint8,\n        kernValue: new $gfJaN$restructure.Array($gfJaN$restructure.int16, \"kernValueCount\"),\n        leftClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        rightClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        kernIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.leftClassCount * t.rightClassCount)\n    }\n});\nlet $a3f544bcf76542d1$var$KernTable = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    0: {\n        subVersion: $gfJaN$restructure.uint16,\n        length: $gfJaN$restructure.uint16,\n        format: $gfJaN$restructure.uint8,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            \"horizontal\",\n            \"minimum\",\n            \"crossStream\",\n            \"override\" // If set to 1 the value in this table replaces the accumulated value\n        ]),\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    },\n    1: {\n        length: $gfJaN$restructure.uint32,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            null,\n            null,\n            null,\n            null,\n            null,\n            \"variation\",\n            \"crossStream\",\n            \"vertical\" // Set if table has vertical kerning values\n        ]),\n        format: $gfJaN$restructure.uint8,\n        tupleIndex: $gfJaN$restructure.uint16,\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    }\n});\nvar $a3f544bcf76542d1$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        nTables: $gfJaN$restructure.uint16,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    },\n    1: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        nTables: $gfJaN$restructure.uint32,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    }\n});\n\n\n\nvar // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$86687befb45925d0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numGlyphs: $gfJaN$restructure.uint16,\n    yPels: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numGlyphs\")\n});\n\n\n\nvar // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$91429006e51e0fe8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    fontNumber: $gfJaN$restructure.uint32,\n    pitch: $gfJaN$restructure.uint16,\n    xHeight: $gfJaN$restructure.uint16,\n    style: $gfJaN$restructure.uint16,\n    typeFamily: $gfJaN$restructure.uint16,\n    capHeight: $gfJaN$restructure.uint16,\n    symbolSet: $gfJaN$restructure.uint16,\n    typeface: new $gfJaN$restructure.String(16),\n    characterComplement: new $gfJaN$restructure.String(8),\n    fileName: new $gfJaN$restructure.String(6),\n    strokeWeight: new $gfJaN$restructure.String(1),\n    widthType: new $gfJaN$restructure.String(1),\n    serifStyle: $gfJaN$restructure.uint8,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8)\n});\n\n\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nlet $627850fc9deed59a$var$Ratio = new $gfJaN$restructure.Struct({\n    bCharSet: $gfJaN$restructure.uint8,\n    xRatio: $gfJaN$restructure.uint8,\n    yStartRatio: $gfJaN$restructure.uint8,\n    yEndRatio: $gfJaN$restructure.uint8 // Ending y-Ratio value\n});\nlet $627850fc9deed59a$var$vTable = new $gfJaN$restructure.Struct({\n    yPelHeight: $gfJaN$restructure.uint16,\n    yMax: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16 // Minimum value (in pels) for this yPelHeight\n});\nlet $627850fc9deed59a$var$VdmxGroup = new $gfJaN$restructure.Struct({\n    recs: $gfJaN$restructure.uint16,\n    startsz: $gfJaN$restructure.uint8,\n    endsz: $gfJaN$restructure.uint8,\n    entries: new $gfJaN$restructure.Array($627850fc9deed59a$var$vTable, \"recs\") // The VDMX records\n});\nvar $627850fc9deed59a$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecs: $gfJaN$restructure.uint16,\n    numRatios: $gfJaN$restructure.uint16,\n    ratioRanges: new $gfJaN$restructure.Array($627850fc9deed59a$var$Ratio, \"numRatios\"),\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numRatios\"),\n    groups: new $gfJaN$restructure.Array($627850fc9deed59a$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\n\n\n\nvar // Vertical Header Table\n$65c33f5f068fc77f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceHeightMax: $gfJaN$restructure.int16,\n    minTopSideBearing: $gfJaN$restructure.int16,\n    minBottomSideBearing: $gfJaN$restructure.int16,\n    yMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\n\n\nlet $597d739523b65bb3$var$VmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16 // The top sidebearing of the glyph\n});\nvar // Vertical Metrics Table\n$597d739523b65bb3$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($597d739523b65bb3$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n\n\n\nlet $35aa0c87d9c3d3a0$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $35aa0c87d9c3d3a0$var$Correspondence = new $gfJaN$restructure.Struct({\n    fromCoord: $35aa0c87d9c3d3a0$var$shortFrac,\n    toCoord: $35aa0c87d9c3d3a0$var$shortFrac\n});\nlet $35aa0c87d9c3d3a0$var$Segment = new $gfJaN$restructure.Struct({\n    pairCount: $gfJaN$restructure.uint16,\n    correspondence: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Correspondence, \"pairCount\")\n});\nvar $35aa0c87d9c3d3a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    axisCount: $gfJaN$restructure.uint32,\n    segment: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Segment, \"axisCount\")\n});\n\n\n\n\nclass $22801616bd931ca3$var$UnboundedArrayAccessor {\n    getItem(index) {\n        if (this._items[index] == null) {\n            let pos = this.stream.pos;\n            this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n            this._items[index] = this.type.decode(this.stream, this.parent);\n            this.stream.pos = pos;\n        }\n        return this._items[index];\n    }\n    inspect() {\n        return `[UnboundedArray ${this.type.constructor.name}]`;\n    }\n    constructor(type, stream, parent){\n        this.type = type;\n        this.stream = stream;\n        this.parent = parent;\n        this.base = this.stream.pos;\n        this._items = [];\n    }\n}\nclass $22801616bd931ca3$export$c5af1eebc882e39a extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        return new $22801616bd931ca3$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n    constructor(type){\n        super(type, 0);\n    }\n}\nlet $22801616bd931ca3$export$8351f8c2ae2f103c = function(ValueType = $gfJaN$restructure.uint16) {\n    // Helper class that makes internal structures invisible to pointers\n    class Shadow {\n        decode(stream, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.decode(stream, ctx);\n        }\n        size(val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.size(val, ctx);\n        }\n        encode(stream, val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.encode(stream, val, ctx);\n        }\n        constructor(type){\n            this.type = type;\n        }\n    }\n    ValueType = new Shadow(ValueType);\n    let BinarySearchHeader = new $gfJaN$restructure.Struct({\n        unitSize: $gfJaN$restructure.uint16,\n        nUnits: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16\n    });\n    let LookupSegmentSingle = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    let LookupSegmentArray = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1), {\n            type: \"parent\"\n        })\n    });\n    let LookupSingle = new $gfJaN$restructure.Struct({\n        glyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    return new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        0: {\n            values: new $22801616bd931ca3$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n        },\n        2: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        4: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits)\n        },\n        6: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        8: {\n            firstGlyph: $gfJaN$restructure.uint16,\n            count: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.Array(ValueType, \"count\")\n        }\n    });\n};\nfunction $22801616bd931ca3$export$79f7d93d790934ba(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let entry = Object.assign({\n        newState: $gfJaN$restructure.uint16,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.nClasses));\n    let StateHeader = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint32,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$8351f8c2ae2f103c(lookupType)),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader;\n}\nfunction $22801616bd931ca3$export$105027425199cc51(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let ClassLookupTable = new $gfJaN$restructure.Struct({\n        version () {\n            return 8;\n        },\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16)\n    });\n    let entry = Object.assign({\n        newStateOffset: $gfJaN$restructure.uint16,\n        // convert offset to stateArray index\n        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.nClasses));\n    let StateHeader1 = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint16,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, ClassLookupTable),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader1;\n}\n\n\nlet $3a5ca96d3e3aaf20$var$BslnSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32)\n    },\n    1: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    },\n    2: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32)\n    },\n    3: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    }\n});\nvar $3a5ca96d3e3aaf20$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    defaultBaseline: $gfJaN$restructure.uint16,\n    subtable: $3a5ca96d3e3aaf20$var$BslnSubtable\n});\n\n\n\nlet $8d4241d96b2b0589$var$Setting = new $gfJaN$restructure.Struct({\n    setting: $gfJaN$restructure.uint16,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $8d4241d96b2b0589$var$FeatureName = new $gfJaN$restructure.Struct({\n    feature: $gfJaN$restructure.uint16,\n    nSettings: $gfJaN$restructure.uint16,\n    settingTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($8d4241d96b2b0589$var$Setting, \"nSettings\"), {\n        type: \"parent\"\n    }),\n    featureFlags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"hasDefault\",\n        \"exclusive\"\n    ]),\n    defaultSetting: $gfJaN$restructure.uint8,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $8d4241d96b2b0589$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    featureNameCount: $gfJaN$restructure.uint16,\n    reserved1: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reserved2: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint32),\n    featureNames: new $gfJaN$restructure.Array($8d4241d96b2b0589$var$FeatureName, \"featureNameCount\")\n});\n\n\n\nlet $a79cd5132b1cf476$var$Axis = new $gfJaN$restructure.Struct({\n    axisTag: new $gfJaN$restructure.String(4),\n    minValue: $gfJaN$restructure.fixed32,\n    defaultValue: $gfJaN$restructure.fixed32,\n    maxValue: $gfJaN$restructure.fixed32,\n    flags: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $a79cd5132b1cf476$var$Instance = new $gfJaN$restructure.Struct({\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID],\n    flags: $gfJaN$restructure.uint16,\n    coord: new $gfJaN$restructure.Array($gfJaN$restructure.fixed32, (t)=>t.parent.axisCount),\n    postscriptNameID: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $a79cd5132b1cf476$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    offsetToData: $gfJaN$restructure.uint16,\n    countSizePairs: $gfJaN$restructure.uint16,\n    axisCount: $gfJaN$restructure.uint16,\n    axisSize: $gfJaN$restructure.uint16,\n    instanceCount: $gfJaN$restructure.uint16,\n    instanceSize: $gfJaN$restructure.uint16,\n    axis: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Axis, \"axisCount\"),\n    instance: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Instance, \"instanceCount\")\n});\n\n\n\nlet $3f36f1a5e6989457$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nclass $3f36f1a5e6989457$var$Offset {\n    static decode(stream, parent) {\n        // In short format, offsets are multiplied by 2.\n        // This doesn't seem to be documented by Apple, but it\n        // is implemented this way in Freetype.\n        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n}\nlet $3f36f1a5e6989457$var$gvar = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    axisCount: $gfJaN$restructure.uint16,\n    globalCoordCount: $gfJaN$restructure.uint16,\n    globalCoords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($3f36f1a5e6989457$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n    glyphCount: $gfJaN$restructure.uint16,\n    flags: $gfJaN$restructure.uint16,\n    offsetToData: $gfJaN$restructure.uint32,\n    offsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($3f36f1a5e6989457$var$Offset, \"void\", {\n        relativeTo: (ctx)=>ctx.offsetToData,\n        allowNull: false\n    }), (t)=>t.glyphCount + 1)\n});\nvar $3f36f1a5e6989457$export$2e2bcd8739ae039 = $3f36f1a5e6989457$var$gvar;\n\n\n\n\nlet $0bd8fe7a6d1d9fb4$var$ClassTable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    coverage: $gfJaN$restructure.uint16,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    stateTable: new (0, $22801616bd931ca3$export$105027425199cc51)\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaRecord = new $gfJaN$restructure.Struct({\n    justClass: $gfJaN$restructure.uint32,\n    beforeGrowLimit: $gfJaN$restructure.fixed32,\n    beforeShrinkLimit: $gfJaN$restructure.fixed32,\n    afterGrowLimit: $gfJaN$restructure.fixed32,\n    afterShrinkLimit: $gfJaN$restructure.fixed32,\n    growFlags: $gfJaN$restructure.uint16,\n    shrinkFlags: $gfJaN$restructure.uint16\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$WidthDeltaRecord, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$ActionData = new $gfJaN$restructure.VersionedStruct(\"actionType\", {\n    0: {\n        lowerLimit: $gfJaN$restructure.fixed32,\n        upperLimit: $gfJaN$restructure.fixed32,\n        order: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)\n    },\n    1: {\n        addGlyph: $gfJaN$restructure.uint16\n    },\n    2: {\n        substThreshold: $gfJaN$restructure.fixed32,\n        addGlyph: $gfJaN$restructure.uint16,\n        substGlyph: $gfJaN$restructure.uint16\n    },\n    3: {},\n    4: {\n        variationAxis: $gfJaN$restructure.uint32,\n        minimumLimit: $gfJaN$restructure.fixed32,\n        noStretchValue: $gfJaN$restructure.fixed32,\n        maximumLimit: $gfJaN$restructure.fixed32\n    },\n    5: {\n        flags: $gfJaN$restructure.uint16,\n        glyph: $gfJaN$restructure.uint16\n    }\n});\nlet $0bd8fe7a6d1d9fb4$var$Action = new $gfJaN$restructure.Struct({\n    actionClass: $gfJaN$restructure.uint16,\n    actionType: $gfJaN$restructure.uint16,\n    actionLength: $gfJaN$restructure.uint32,\n    actionData: $0bd8fe7a6d1d9fb4$var$ActionData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.actionLength - t._currentOffset)\n});\nlet $0bd8fe7a6d1d9fb4$var$PostcompensationAction = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$Action, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$PostCompensationTable = new $gfJaN$restructure.Struct({\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostcompensationAction))\n});\nlet $0bd8fe7a6d1d9fb4$var$JustificationTable = new $gfJaN$restructure.Struct({\n    classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$ClassTable, {\n        type: \"parent\"\n    }),\n    wdcOffset: $gfJaN$restructure.uint16,\n    postCompensationTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostCompensationTable, {\n        type: \"parent\"\n    }),\n    widthDeltaClusters: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster, {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.wdcOffset\n    }))\n});\nvar $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    format: $gfJaN$restructure.uint16,\n    horizontal: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable),\n    vertical: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable)\n});\n\n\n\n\nlet $ef40c6dc80fd50a2$var$LigatureData = {\n    action: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$ContextualData = {\n    markIndex: $gfJaN$restructure.uint16,\n    currentIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$InsertionData = {\n    currentInsertIndex: $gfJaN$restructure.uint16,\n    markedInsertIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$SubstitutionTable = new $gfJaN$restructure.Struct({\n    items: new (0, $22801616bd931ca3$export$c5af1eebc882e39a)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)))\n});\nlet $ef40c6dc80fd50a2$var$SubtableData = new $gfJaN$restructure.VersionedStruct(\"type\", {\n    0: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)\n    },\n    1: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$ContextualData),\n        substitutionTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $ef40c6dc80fd50a2$var$SubstitutionTable)\n    },\n    2: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$LigatureData),\n        ligatureActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint32)),\n        components: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16)),\n        ligatureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    },\n    4: {\n        lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)\n    },\n    5: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$InsertionData),\n        insertionActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    }\n});\nlet $ef40c6dc80fd50a2$var$Subtable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint32,\n    coverage: $gfJaN$restructure.uint24,\n    type: $gfJaN$restructure.uint8,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    table: $ef40c6dc80fd50a2$var$SubtableData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n});\nlet $ef40c6dc80fd50a2$var$FeatureEntry = new $gfJaN$restructure.Struct({\n    featureType: $gfJaN$restructure.uint16,\n    featureSetting: $gfJaN$restructure.uint16,\n    enableFlags: $gfJaN$restructure.uint32,\n    disableFlags: $gfJaN$restructure.uint32\n});\nlet $ef40c6dc80fd50a2$var$MorxChain = new $gfJaN$restructure.Struct({\n    defaultFlags: $gfJaN$restructure.uint32,\n    chainLength: $gfJaN$restructure.uint32,\n    nFeatureEntries: $gfJaN$restructure.uint32,\n    nSubtables: $gfJaN$restructure.uint32,\n    features: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$FeatureEntry, \"nFeatureEntries\"),\n    subtables: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$Subtable, \"nSubtables\")\n});\nvar $ef40c6dc80fd50a2$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    unused: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    nChains: $gfJaN$restructure.uint32,\n    chains: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$MorxChain, \"nChains\")\n});\n\n\n\n\nlet $ab24dea08b58a7cc$var$OpticalBounds = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.int16,\n    top: $gfJaN$restructure.int16,\n    right: $gfJaN$restructure.int16,\n    bottom: $gfJaN$restructure.int16\n});\nvar $ab24dea08b58a7cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($ab24dea08b58a7cc$var$OpticalBounds)\n});\n\n\nlet $5825c04ce8f7102d$var$tables = {};\nvar $5825c04ce8f7102d$export$2e2bcd8739ae039 = $5825c04ce8f7102d$var$tables;\n$5825c04ce8f7102d$var$tables.cmap = (0, $e4ae0436c91af89f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.head = (0, $55a60976afb7c261$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hhea = (0, $dde72b7b5b650596$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hmtx = (0, $a7c40184072c9a5b$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.maxp = (0, $521197722369f691$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.name = (0, $51a9f4feb3a3b2b1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"OS/2\"] = (0, $114ea85db469b435$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.post = (0, $f93b30299e1ea0f5$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fpgm = (0, $873d79fea57d3161$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.loca = (0, $83c4155666d50c37$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.prep = (0, $b12598db7cdf7042$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"cvt \"] = (0, $8fb09b0f473d61a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.glyf = (0, $7707bdf21a3d89cc$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF \"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF2\"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VORG = (0, $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.EBLC = (0, $035bb95c0cdb1f6d$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CBLC = $5825c04ce8f7102d$var$tables.EBLC;\n$5825c04ce8f7102d$var$tables.sbix = (0, $73d13900b55a3c0c$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.COLR = (0, $97f6b8be3a347a8f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CPAL = (0, $16ca60ecbdee30ea$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.BASE = (0, $7327e41706f9d5c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GDEF = (0, $7e48bbe9e5345664$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GPOS = (0, $b687332511a4da75$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GSUB = (0, $99ccad60b96f92fb$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.JSTF = (0, $573d5042c76c4940$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.HVAR = (0, $a5875b80d6087f61$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.DSIG = (0, $4423bc1ac09bbbd1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gasp = (0, $7b50e3f8d83263de$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hdmx = (0, $7bf92ec372cd2307$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.kern = (0, $a3f544bcf76542d1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.LTSH = (0, $86687befb45925d0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.PCLT = (0, $91429006e51e0fe8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VDMX = (0, $627850fc9deed59a$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vhea = (0, $65c33f5f068fc77f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vmtx = (0, $597d739523b65bb3$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.avar = (0, $35aa0c87d9c3d3a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.bsln = (0, $3a5ca96d3e3aaf20$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.feat = (0, $8d4241d96b2b0589$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fvar = (0, $a79cd5132b1cf476$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gvar = (0, $3f36f1a5e6989457$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.just = (0, $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.morx = (0, $ef40c6dc80fd50a2$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.opbd = (0, $ab24dea08b58a7cc$export$2e2bcd8739ae039);\n\n\nlet $df50e1efe10a1247$var$TableEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    checkSum: $gfJaN$restructure.uint32,\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    length: $gfJaN$restructure.uint32\n});\nlet $df50e1efe10a1247$var$Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    numTables: $gfJaN$restructure.uint16,\n    searchRange: $gfJaN$restructure.uint16,\n    entrySelector: $gfJaN$restructure.uint16,\n    rangeShift: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($df50e1efe10a1247$var$TableEntry, \"numTables\")\n});\n$df50e1efe10a1247$var$Directory.process = function() {\n    let tables = {};\n    for (let table of this.tables)tables[table.tag] = table;\n    this.tables = tables;\n};\n$df50e1efe10a1247$var$Directory.preEncode = function() {\n    if (!Array.isArray(this.tables)) {\n        let tables = [];\n        for(let tag in this.tables){\n            let table = this.tables[tag];\n            if (table) tables.push({\n                tag: tag,\n                checkSum: 0,\n                offset: new $gfJaN$restructure.VoidPointer((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag], table),\n                length: (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag].size(table)\n            });\n        }\n        this.tables = tables;\n    }\n    this.tag = \"true\";\n    this.numTables = this.tables.length;\n    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n    let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n    this.searchRange = maxPowerOf2 * 16;\n    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n    this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $df50e1efe10a1247$export$2e2bcd8739ae039 = $df50e1efe10a1247$var$Directory;\n\n\n\n\nfunction $66a5b9fb5318558a$export$2e0ae67339d5f1ac(arr, cmp) {\n    let min = 0;\n    let max = arr.length - 1;\n    while(min <= max){\n        let mid = min + max >> 1;\n        let res = cmp(arr[mid]);\n        if (res < 0) max = mid - 1;\n        else if (res > 0) min = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\nfunction $66a5b9fb5318558a$export$d02631cccf789723(index, end) {\n    let range1 = [];\n    while(index < end)range1.push(index++);\n    return range1;\n}\nconst $66a5b9fb5318558a$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst $66a5b9fb5318558a$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $66a5b9fb5318558a$var$LOOKUP = new Uint8Array(256);\nfor(let i = 0; i < $66a5b9fb5318558a$var$CHARS.length; i++)$66a5b9fb5318558a$var$LOOKUP[$66a5b9fb5318558a$var$CHARS.charCodeAt(i)] = i;\nfunction $66a5b9fb5318558a$export$94fdf11bafc8de6b(base64) {\n    let bufferLength = base64.length * 0.75;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    let bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i1 = 0, len = base64.length; i1 < len; i1 += 4){\n        let encoded1 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1)];\n        let encoded2 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n        let encoded3 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n        let encoded4 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return bytes;\n}\n\n\n\n\n\nclass $0d6e160064c86e50$export$2e2bcd8739ae039 {\n    findSubtable(cmapTable, pairs) {\n        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){\n            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n        }\n        return null;\n    }\n    lookup(codepoint, variationSelector) {\n        // If there is no Unicode cmap in this font, we need to re-encode\n        // the codepoint in the encoding that the cmap supports.\n        if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;\n        else if (variationSelector) {\n            let gid = this.getVariationSelector(codepoint, variationSelector);\n            if (gid) return gid;\n        }\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return cmap.codeMap.get(codepoint) || 0;\n            case 4:\n                {\n                    let min = 0;\n                    let max = cmap.segCount - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;\n                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;\n                        else {\n                            let rangeOffset = cmap.idRangeOffset.get(mid);\n                            let gid;\n                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);\n                            else {\n                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                                gid = cmap.glyphIndexArray.get(index) || 0;\n                                if (gid !== 0) gid += cmap.idDelta.get(mid);\n                            }\n                            return gid & 0xffff;\n                        }\n                    }\n                    return 0;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n            case 12:\n            case 13:\n                {\n                    let min = 0;\n                    let max = cmap.nGroups - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        let group = cmap.groups.get(mid);\n                        if (codepoint < group.startCharCode) max = mid - 1;\n                        else if (codepoint > group.endCharCode) min = mid + 1;\n                        else {\n                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);\n                            else return group.glyphID;\n                        }\n                    }\n                    return 0;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    getVariationSelector(codepoint, variationSelector) {\n        if (!this.uvs) return 0;\n        let selectors = this.uvs.varSelectors.toArray();\n        let i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(selectors, (x)=>variationSelector - x.varSelector);\n        let sel = selectors[i];\n        if (i !== -1 && sel.defaultUVS) i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n        if (i !== -1 && sel.nonDefaultUVS) {\n            i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue);\n            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n        }\n        return 0;\n    }\n    getCharacterSet() {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(0, cmap.codeMap.length);\n            case 4:\n                {\n                    let res = [];\n                    let endCodes = cmap.endCode.toArray();\n                    for(let i = 0; i < endCodes.length; i++){\n                        let tail = endCodes[i] + 1;\n                        let start = cmap.startCode.get(i);\n                        res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(start, tail));\n                    }\n                    return res;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n            case 12:\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    codePointsForGlyph(gid) {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                {\n                    let res = [];\n                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);\n                    return res;\n                }\n            case 4:\n                {\n                    let res = [];\n                    for(let i = 0; i < cmap.segCount; i++){\n                        let end = cmap.endCode.get(i);\n                        let start = cmap.startCode.get(i);\n                        let rangeOffset = cmap.idRangeOffset.get(i);\n                        let delta = cmap.idDelta.get(i);\n                        for(var c = start; c <= end; c++){\n                            let g = 0;\n                            if (rangeOffset === 0) g = c + delta;\n                            else {\n                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                                g = cmap.glyphIndexArray.get(index) || 0;\n                                if (g !== 0) g += delta;\n                            }\n                            if (g === gid) res.push(c);\n                        }\n                    }\n                    return res;\n                }\n            case 12:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n                    return res;\n                }\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    constructor(cmapTable){\n        // Attempt to find a Unicode cmap first\n        this.encoding = null;\n        this.cmap = this.findSubtable(cmapTable, [\n            // 32-bit subtables\n            [\n                3,\n                10\n            ],\n            [\n                0,\n                6\n            ],\n            [\n                0,\n                4\n            ],\n            // 16-bit subtables\n            [\n                3,\n                1\n            ],\n            [\n                0,\n                3\n            ],\n            [\n                0,\n                2\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        // If not unicode cmap was found, take the first table with a supported encoding.\n        if (!this.cmap) for (let cmap of cmapTable.tables){\n            let encoding = (0, $e2613b812f052cbe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n            let mapping = (0, $e2613b812f052cbe$export$1dceb3c14ed68bee)(encoding);\n            if (mapping) {\n                this.cmap = cmap.table;\n                this.encoding = mapping;\n            }\n        }\n        if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n        this.uvs = this.findSubtable(cmapTable, [\n            [\n                0,\n                5\n            ]\n        ]);\n        if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\n\n\n\nclass $4646d52c2a559cdb$export$2e2bcd8739ae039 {\n    process(glyphs, positions) {\n        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){\n            let left = glyphs[glyphIndex].id;\n            let right = glyphs[glyphIndex + 1].id;\n            positions[glyphIndex].xAdvance += this.getKerning(left, right);\n        }\n    }\n    getKerning(left, right) {\n        let res = 0;\n        for (let table of this.kern.tables){\n            if (table.coverage.crossStream) continue;\n            switch(table.version){\n                case 0:\n                    if (!table.coverage.horizontal) continue;\n                    break;\n                case 1:\n                    if (table.coverage.vertical || table.coverage.variation) continue;\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning table version ${table.version}`);\n            }\n            let val = 0;\n            let s = table.subtable;\n            switch(table.format){\n                case 0:\n                    let pairIdx = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(s.pairs, function(pair) {\n                        return left - pair.left || right - pair.right;\n                    });\n                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n                    break;\n                case 2:\n                    let leftOffset = 0, rightOffset = 0;\n                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n                    else leftOffset = s.array.off;\n                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n                    let index = (leftOffset + rightOffset - s.array.off) / 2;\n                    val = s.array.values.get(index);\n                    break;\n                case 3:\n                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n            }\n            // Microsoft supports the override flag, which resets the result\n            // Otherwise, the sum of the results from all subtables is returned\n            if (table.coverage.override) res = val;\n            else res += val;\n        }\n        return res;\n    }\n    constructor(font){\n        this.kern = font.kern;\n    }\n}\n\n\n\nclass $a57a26817cd35108$export$2e2bcd8739ae039 {\n    positionGlyphs(glyphs, positions) {\n        // find each base + mark cluster, and position the marks relative to the base\n        let clusterStart = 0;\n        let clusterEnd = 0;\n        for(let index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.isMark) clusterEnd = index;\n            else {\n                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n                clusterStart = clusterEnd = index;\n            }\n        }\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        return positions;\n    }\n    positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n        let base = glyphs[clusterStart];\n        let baseBox = base.cbox.copy();\n        // adjust bounding box for ligature glyphs\n        if (base.codePoints.length > 1) // LTR. TODO: RTL support.\n        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n        let xOffset = -positions[clusterStart].xAdvance;\n        let yOffset = 0;\n        let yGap = this.font.unitsPerEm / 16;\n        // position each of the mark glyphs relative to the base glyph\n        for(let index = clusterStart + 1; index <= clusterEnd; index++){\n            let mark = glyphs[index];\n            let markBox = mark.cbox;\n            let position = positions[index];\n            let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n            if (combiningClass !== \"Not_Reordered\") {\n                position.xOffset = position.yOffset = 0;\n                // x positioning\n                switch(combiningClass){\n                    case \"Double_Above\":\n                    case \"Double_Below\":\n                        // LTR. TODO: RTL support.\n                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n                        break;\n                    case \"Attached_Below_Left\":\n                    case \"Below_Left\":\n                    case \"Above_Left\":\n                        // left align\n                        position.xOffset += baseBox.minX - markBox.minX;\n                        break;\n                    case \"Attached_Above_Right\":\n                    case \"Below_Right\":\n                    case \"Above_Right\":\n                        // right align\n                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n                        break;\n                    default:\n                        // center align\n                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n                }\n                // y positioning\n                switch(combiningClass){\n                    case \"Double_Below\":\n                    case \"Below_Left\":\n                    case \"Below\":\n                    case \"Below_Right\":\n                    case \"Attached_Below_Left\":\n                    case \"Attached_Below\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n                        position.yOffset = -baseBox.minY - markBox.maxY;\n                        baseBox.minY += markBox.height;\n                        break;\n                    case \"Double_Above\":\n                    case \"Above_Left\":\n                    case \"Above\":\n                    case \"Above_Right\":\n                    case \"Attached_Above\":\n                    case \"Attached_Above_Right\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n                        position.yOffset = baseBox.maxY - markBox.minY;\n                        baseBox.maxY += markBox.height;\n                        break;\n                }\n                position.xAdvance = position.yAdvance = 0;\n                position.xOffset += xOffset;\n                position.yOffset += yOffset;\n            } else {\n                xOffset -= position.xAdvance;\n                yOffset -= position.yAdvance;\n            }\n        }\n        return;\n    }\n    getCombiningClass(codePoint) {\n        let combiningClass = (0, $gfJaN$unicodeproperties.getCombiningClass)(codePoint);\n        // Thai / Lao need some per-character work\n        if ((codePoint & -256) === 0x0e00) {\n            if (combiningClass === \"Not_Reordered\") switch(codePoint){\n                case 0x0e31:\n                case 0x0e34:\n                case 0x0e35:\n                case 0x0e36:\n                case 0x0e37:\n                case 0x0e47:\n                case 0x0e4c:\n                case 0x0e3d:\n                case 0x0e4e:\n                    return \"Above_Right\";\n                case 0x0eb1:\n                case 0x0eb4:\n                case 0x0eb5:\n                case 0x0eb6:\n                case 0x0eb7:\n                case 0x0ebb:\n                case 0x0ecc:\n                case 0x0ecd:\n                    return \"Above\";\n                case 0x0ebc:\n                    return \"Below\";\n            }\n            else if (codePoint === 0x0e3a) return \"Below_Right\";\n        }\n        switch(combiningClass){\n            // Hebrew\n            case \"CCC10\":\n            case \"CCC11\":\n            case \"CCC12\":\n            case \"CCC13\":\n            case \"CCC14\":\n            case \"CCC15\":\n            case \"CCC16\":\n            case \"CCC17\":\n            case \"CCC18\":\n            case \"CCC20\":\n            case \"CCC22\":\n                return \"Below\";\n            case \"CCC23\":\n                return \"Attached_Above\";\n            case \"CCC24\":\n                return \"Above_Right\";\n            case \"CCC25\":\n            case \"CCC19\":\n                return \"Above_Left\";\n            case \"CCC26\":\n                return \"Above\";\n            case \"CCC21\":\n                break;\n            // Arabic and Syriac\n            case \"CCC27\":\n            case \"CCC28\":\n            case \"CCC30\":\n            case \"CCC31\":\n            case \"CCC33\":\n            case \"CCC34\":\n            case \"CCC35\":\n            case \"CCC36\":\n                return \"Above\";\n            case \"CCC29\":\n            case \"CCC32\":\n                return \"Below\";\n            // Thai\n            case \"CCC103\":\n                return \"Below_Right\";\n            case \"CCC107\":\n                return \"Above_Right\";\n            // Lao\n            case \"CCC118\":\n                return \"Below\";\n            case \"CCC122\":\n                return \"Above\";\n            // Tibetan\n            case \"CCC129\":\n            case \"CCC132\":\n                return \"Below\";\n            case \"CCC130\":\n                return \"Above\";\n        }\n        return combiningClass;\n    }\n    constructor(font){\n        this.font = font;\n    }\n}\n\n\nclass $0e2da1c4ce69e8ad$export$2e2bcd8739ae039 {\n    /**\n   * The width of the bounding box\n   * @type {number}\n   */ get width() {\n        return this.maxX - this.minX;\n    }\n    /**\n   * The height of the bounding box\n   * @type {number}\n   */ get height() {\n        return this.maxY - this.minY;\n    }\n    addPoint(x, y) {\n        if (Math.abs(x) !== Infinity) {\n            if (x < this.minX) this.minX = x;\n            if (x > this.maxX) this.maxX = x;\n        }\n        if (Math.abs(y) !== Infinity) {\n            if (y < this.minY) this.minY = y;\n            if (y > this.maxY) this.maxY = y;\n        }\n    }\n    copy() {\n        return new $0e2da1c4ce69e8ad$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){\n        /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */ this.minX = minX;\n        /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */ this.minY = minY;\n        /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */ this.maxX = maxX;\n        /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */ this.maxY = maxY;\n    }\n}\n\n\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst $e38a1a895f6aeb54$var$UNICODE_SCRIPTS = {\n    Caucasian_Albanian: \"aghb\",\n    Arabic: \"arab\",\n    Imperial_Aramaic: \"armi\",\n    Armenian: \"armn\",\n    Avestan: \"avst\",\n    Balinese: \"bali\",\n    Bamum: \"bamu\",\n    Bassa_Vah: \"bass\",\n    Batak: \"batk\",\n    Bengali: [\n        \"bng2\",\n        \"beng\"\n    ],\n    Bopomofo: \"bopo\",\n    Brahmi: \"brah\",\n    Braille: \"brai\",\n    Buginese: \"bugi\",\n    Buhid: \"buhd\",\n    Chakma: \"cakm\",\n    Canadian_Aboriginal: \"cans\",\n    Carian: \"cari\",\n    Cham: \"cham\",\n    Cherokee: \"cher\",\n    Coptic: \"copt\",\n    Cypriot: \"cprt\",\n    Cyrillic: \"cyrl\",\n    Devanagari: [\n        \"dev2\",\n        \"deva\"\n    ],\n    Deseret: \"dsrt\",\n    Duployan: \"dupl\",\n    Egyptian_Hieroglyphs: \"egyp\",\n    Elbasan: \"elba\",\n    Ethiopic: \"ethi\",\n    Georgian: \"geor\",\n    Glagolitic: \"glag\",\n    Gothic: \"goth\",\n    Grantha: \"gran\",\n    Greek: \"grek\",\n    Gujarati: [\n        \"gjr2\",\n        \"gujr\"\n    ],\n    Gurmukhi: [\n        \"gur2\",\n        \"guru\"\n    ],\n    Hangul: \"hang\",\n    Han: \"hani\",\n    Hanunoo: \"hano\",\n    Hebrew: \"hebr\",\n    Hiragana: \"hira\",\n    Pahawh_Hmong: \"hmng\",\n    Katakana_Or_Hiragana: \"hrkt\",\n    Old_Italic: \"ital\",\n    Javanese: \"java\",\n    Kayah_Li: \"kali\",\n    Katakana: \"kana\",\n    Kharoshthi: \"khar\",\n    Khmer: \"khmr\",\n    Khojki: \"khoj\",\n    Kannada: [\n        \"knd2\",\n        \"knda\"\n    ],\n    Kaithi: \"kthi\",\n    Tai_Tham: \"lana\",\n    Lao: \"lao \",\n    Latin: \"latn\",\n    Lepcha: \"lepc\",\n    Limbu: \"limb\",\n    Linear_A: \"lina\",\n    Linear_B: \"linb\",\n    Lisu: \"lisu\",\n    Lycian: \"lyci\",\n    Lydian: \"lydi\",\n    Mahajani: \"mahj\",\n    Mandaic: \"mand\",\n    Manichaean: \"mani\",\n    Mende_Kikakui: \"mend\",\n    Meroitic_Cursive: \"merc\",\n    Meroitic_Hieroglyphs: \"mero\",\n    Malayalam: [\n        \"mlm2\",\n        \"mlym\"\n    ],\n    Modi: \"modi\",\n    Mongolian: \"mong\",\n    Mro: \"mroo\",\n    Meetei_Mayek: \"mtei\",\n    Myanmar: [\n        \"mym2\",\n        \"mymr\"\n    ],\n    Old_North_Arabian: \"narb\",\n    Nabataean: \"nbat\",\n    Nko: \"nko \",\n    Ogham: \"ogam\",\n    Ol_Chiki: \"olck\",\n    Old_Turkic: \"orkh\",\n    Oriya: [\n        \"ory2\",\n        \"orya\"\n    ],\n    Osmanya: \"osma\",\n    Palmyrene: \"palm\",\n    Pau_Cin_Hau: \"pauc\",\n    Old_Permic: \"perm\",\n    Phags_Pa: \"phag\",\n    Inscriptional_Pahlavi: \"phli\",\n    Psalter_Pahlavi: \"phlp\",\n    Phoenician: \"phnx\",\n    Miao: \"plrd\",\n    Inscriptional_Parthian: \"prti\",\n    Rejang: \"rjng\",\n    Runic: \"runr\",\n    Samaritan: \"samr\",\n    Old_South_Arabian: \"sarb\",\n    Saurashtra: \"saur\",\n    Shavian: \"shaw\",\n    Sharada: \"shrd\",\n    Siddham: \"sidd\",\n    Khudawadi: \"sind\",\n    Sinhala: \"sinh\",\n    Sora_Sompeng: \"sora\",\n    Sundanese: \"sund\",\n    Syloti_Nagri: \"sylo\",\n    Syriac: \"syrc\",\n    Tagbanwa: \"tagb\",\n    Takri: \"takr\",\n    Tai_Le: \"tale\",\n    New_Tai_Lue: \"talu\",\n    Tamil: [\n        \"tml2\",\n        \"taml\"\n    ],\n    Tai_Viet: \"tavt\",\n    Telugu: [\n        \"tel2\",\n        \"telu\"\n    ],\n    Tifinagh: \"tfng\",\n    Tagalog: \"tglg\",\n    Thaana: \"thaa\",\n    Thai: \"thai\",\n    Tibetan: \"tibt\",\n    Tirhuta: \"tirh\",\n    Ugaritic: \"ugar\",\n    Vai: \"vai \",\n    Warang_Citi: \"wara\",\n    Old_Persian: \"xpeo\",\n    Cuneiform: \"xsux\",\n    Yi: \"yi  \",\n    Inherited: \"zinh\",\n    Common: \"zyyy\",\n    Unknown: \"zzzz\"\n};\nconst $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS = {};\nfor(let script in $e38a1a895f6aeb54$var$UNICODE_SCRIPTS){\n    let tag = $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script];\n    if (Array.isArray(tag)) for (let t of tag)$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[t] = script;\n    else $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $e38a1a895f6aeb54$export$b32f0b5f69d65e51(script1) {\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script1];\n}\nfunction $e38a1a895f6aeb54$export$ce50e82f12a827a4(tag) {\n    return $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $e38a1a895f6aeb54$export$e5cb25e204fb8450(string) {\n    let len = string.length;\n    let idx = 0;\n    while(idx < len){\n        let code = string.charCodeAt(idx++);\n        // Check if this is a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            let next = string.charCodeAt(idx);\n            // Check if this is a low surrogate\n            if (0xdc00 <= next && next <= 0xdfff) {\n                idx++;\n                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n            }\n        }\n        let script2 = (0, $gfJaN$unicodeproperties.getScript)(code);\n        if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script2];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints) {\n    for(let i = 0; i < codePoints.length; i++){\n        let codePoint = codePoints[i];\n        let script3 = (0, $gfJaN$unicodeproperties.getScript)(codePoint);\n        if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script3];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nconst $e38a1a895f6aeb54$var$RTL = {\n    arab: true,\n    hebr: true,\n    syrc: true,\n    thaa: true,\n    cprt: true,\n    khar: true,\n    phnx: true,\n    \"nko \": true,\n    lydi: true,\n    avst: true,\n    armi: true,\n    phli: true,\n    prti: true,\n    sarb: true,\n    orkh: true,\n    samr: true,\n    mand: true,\n    merc: true,\n    mero: true,\n    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n    mani: true,\n    mend: true,\n    nbat: true,\n    narb: true,\n    palm: true,\n    phlp: true // Psalter Pahlavi\n};\nfunction $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script4) {\n    if ($e38a1a895f6aeb54$var$RTL[script4]) return \"rtl\";\n    return \"ltr\";\n}\n\n\nclass $b19c79ec7a94fa39$export$2e2bcd8739ae039 {\n    /**\n   * The total advance width of the run.\n   * @type {number}\n   */ get advanceWidth() {\n        let width = 0;\n        for (let position of this.positions)width += position.xAdvance;\n        return width;\n    }\n    /**\n  * The total advance height of the run.\n  * @type {number}\n  */ get advanceHeight() {\n        let height = 0;\n        for (let position of this.positions)height += position.yAdvance;\n        return height;\n    }\n    /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */ get bbox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let x = 0;\n        let y = 0;\n        for(let index = 0; index < this.glyphs.length; index++){\n            let glyph = this.glyphs[index];\n            let p = this.positions[index];\n            let b = glyph.bbox;\n            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n            x += p.xAdvance;\n            y += p.yAdvance;\n        }\n        return bbox;\n    }\n    constructor(glyphs, features, script, language, direction){\n        /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */ this.glyphs = glyphs;\n        /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */ this.positions = null;\n        /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */ this.script = script;\n        /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */ this.language = language || null;\n        /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */ this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */ this.features = {};\n        // Convert features to an object\n        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;\n        else if (typeof features === \"object\") this.features = features;\n    }\n}\n\n\nclass $9195cf1266c12ea5$export$2e2bcd8739ae039 {\n    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){\n        /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */ this.xAdvance = xAdvance;\n        /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */ this.yAdvance = yAdvance;\n        /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */ this.xOffset = xOffset;\n        /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */ this.yOffset = yOffset;\n    }\n}\n\n\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst $2b7f887ebcb5888a$var$features = {\n    allTypographicFeatures: {\n        code: 0,\n        exclusive: false,\n        allTypeFeatures: 0\n    },\n    ligatures: {\n        code: 1,\n        exclusive: false,\n        requiredLigatures: 0,\n        commonLigatures: 2,\n        rareLigatures: 4,\n        // logos: 6\n        rebusPictures: 8,\n        diphthongLigatures: 10,\n        squaredLigatures: 12,\n        abbrevSquaredLigatures: 14,\n        symbolLigatures: 16,\n        contextualLigatures: 18,\n        historicalLigatures: 20\n    },\n    cursiveConnection: {\n        code: 2,\n        exclusive: true,\n        unconnected: 0,\n        partiallyConnected: 1,\n        cursive: 2\n    },\n    letterCase: {\n        code: 3,\n        exclusive: true\n    },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n    verticalSubstitution: {\n        code: 4,\n        exclusive: false,\n        substituteVerticalForms: 0\n    },\n    linguisticRearrangement: {\n        code: 5,\n        exclusive: false,\n        linguisticRearrangement: 0\n    },\n    numberSpacing: {\n        code: 6,\n        exclusive: true,\n        monospacedNumbers: 0,\n        proportionalNumbers: 1,\n        thirdWidthNumbers: 2,\n        quarterWidthNumbers: 3\n    },\n    smartSwash: {\n        code: 8,\n        exclusive: false,\n        wordInitialSwashes: 0,\n        wordFinalSwashes: 2,\n        // lineInitialSwashes: 4\n        // lineFinalSwashes: 6\n        nonFinalSwashes: 8\n    },\n    diacritics: {\n        code: 9,\n        exclusive: true,\n        showDiacritics: 0,\n        hideDiacritics: 1,\n        decomposeDiacritics: 2\n    },\n    verticalPosition: {\n        code: 10,\n        exclusive: true,\n        normalPosition: 0,\n        superiors: 1,\n        inferiors: 2,\n        ordinals: 3,\n        scientificInferiors: 4\n    },\n    fractions: {\n        code: 11,\n        exclusive: true,\n        noFractions: 0,\n        verticalFractions: 1,\n        diagonalFractions: 2\n    },\n    overlappingCharacters: {\n        code: 13,\n        exclusive: false,\n        preventOverlap: 0\n    },\n    typographicExtras: {\n        code: 14,\n        exclusive: false,\n        // hyphensToEmDash: 0\n        // hyphenToEnDash: 2\n        slashedZero: 4\n    },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n    mathematicalExtras: {\n        code: 15,\n        exclusive: false,\n        // hyphenToMinus: 0\n        // asteristoMultiply: 2\n        // slashToDivide: 4\n        // inequalityLigatures: 6\n        // exponents: 8\n        mathematicalGreek: 10\n    },\n    ornamentSets: {\n        code: 16,\n        exclusive: true,\n        noOrnaments: 0,\n        dingbats: 1,\n        piCharacters: 2,\n        fleurons: 3,\n        decorativeBorders: 4,\n        internationalSymbols: 5,\n        mathSymbols: 6\n    },\n    characterAlternatives: {\n        code: 17,\n        exclusive: true,\n        noAlternates: 0\n    },\n    // user defined options\n    designComplexity: {\n        code: 18,\n        exclusive: true,\n        designLevel1: 0,\n        designLevel2: 1,\n        designLevel3: 2,\n        designLevel4: 3,\n        designLevel5: 4\n    },\n    styleOptions: {\n        code: 19,\n        exclusive: true,\n        noStyleOptions: 0,\n        displayText: 1,\n        engravedText: 2,\n        illuminatedCaps: 3,\n        titlingCaps: 4,\n        tallCaps: 5\n    },\n    characterShape: {\n        code: 20,\n        exclusive: true,\n        traditionalCharacters: 0,\n        simplifiedCharacters: 1,\n        JIS1978Characters: 2,\n        JIS1983Characters: 3,\n        JIS1990Characters: 4,\n        traditionalAltOne: 5,\n        traditionalAltTwo: 6,\n        traditionalAltThree: 7,\n        traditionalAltFour: 8,\n        traditionalAltFive: 9,\n        expertCharacters: 10,\n        JIS2004Characters: 11,\n        hojoCharacters: 12,\n        NLCCharacters: 13,\n        traditionalNamesCharacters: 14\n    },\n    numberCase: {\n        code: 21,\n        exclusive: true,\n        lowerCaseNumbers: 0,\n        upperCaseNumbers: 1\n    },\n    textSpacing: {\n        code: 22,\n        exclusive: true,\n        proportionalText: 0,\n        monospacedText: 1,\n        halfWidthText: 2,\n        thirdWidthText: 3,\n        quarterWidthText: 4,\n        altProportionalText: 5,\n        altHalfWidthText: 6\n    },\n    transliteration: {\n        code: 23,\n        exclusive: true,\n        noTransliteration: 0\n    },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n    annotation: {\n        code: 24,\n        exclusive: true,\n        noAnnotation: 0,\n        boxAnnotation: 1,\n        roundedBoxAnnotation: 2,\n        circleAnnotation: 3,\n        invertedCircleAnnotation: 4,\n        parenthesisAnnotation: 5,\n        periodAnnotation: 6,\n        romanNumeralAnnotation: 7,\n        diamondAnnotation: 8,\n        invertedBoxAnnotation: 9,\n        invertedRoundedBoxAnnotation: 10\n    },\n    kanaSpacing: {\n        code: 25,\n        exclusive: true,\n        fullWidthKana: 0,\n        proportionalKana: 1\n    },\n    ideographicSpacing: {\n        code: 26,\n        exclusive: true,\n        fullWidthIdeographs: 0,\n        proportionalIdeographs: 1,\n        halfWidthIdeographs: 2\n    },\n    unicodeDecomposition: {\n        code: 27,\n        exclusive: false,\n        canonicalComposition: 0,\n        compatibilityComposition: 2,\n        transcodingComposition: 4\n    },\n    rubyKana: {\n        code: 28,\n        exclusive: false,\n        // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n        // rubyKana: 1     # deprecated - use rubyKanaOn instead\n        rubyKana: 2\n    },\n    CJKSymbolAlternatives: {\n        code: 29,\n        exclusive: true,\n        noCJKSymbolAlternatives: 0,\n        CJKSymbolAltOne: 1,\n        CJKSymbolAltTwo: 2,\n        CJKSymbolAltThree: 3,\n        CJKSymbolAltFour: 4,\n        CJKSymbolAltFive: 5\n    },\n    ideographicAlternatives: {\n        code: 30,\n        exclusive: true,\n        noIdeographicAlternatives: 0,\n        ideographicAltOne: 1,\n        ideographicAltTwo: 2,\n        ideographicAltThree: 3,\n        ideographicAltFour: 4,\n        ideographicAltFive: 5\n    },\n    CJKVerticalRomanPlacement: {\n        code: 31,\n        exclusive: true,\n        CJKVerticalRomanCentered: 0,\n        CJKVerticalRomanHBaseline: 1\n    },\n    italicCJKRoman: {\n        code: 32,\n        exclusive: false,\n        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n        CJKItalicRoman: 2\n    },\n    caseSensitiveLayout: {\n        code: 33,\n        exclusive: false,\n        caseSensitiveLayout: 0,\n        caseSensitiveSpacing: 2\n    },\n    alternateKana: {\n        code: 34,\n        exclusive: false,\n        alternateHorizKana: 0,\n        alternateVertKana: 2\n    },\n    stylisticAlternatives: {\n        code: 35,\n        exclusive: false,\n        noStylisticAlternates: 0,\n        stylisticAltOne: 2,\n        stylisticAltTwo: 4,\n        stylisticAltThree: 6,\n        stylisticAltFour: 8,\n        stylisticAltFive: 10,\n        stylisticAltSix: 12,\n        stylisticAltSeven: 14,\n        stylisticAltEight: 16,\n        stylisticAltNine: 18,\n        stylisticAltTen: 20,\n        stylisticAltEleven: 22,\n        stylisticAltTwelve: 24,\n        stylisticAltThirteen: 26,\n        stylisticAltFourteen: 28,\n        stylisticAltFifteen: 30,\n        stylisticAltSixteen: 32,\n        stylisticAltSeventeen: 34,\n        stylisticAltEighteen: 36,\n        stylisticAltNineteen: 38,\n        stylisticAltTwenty: 40\n    },\n    contextualAlternates: {\n        code: 36,\n        exclusive: false,\n        contextualAlternates: 0,\n        swashAlternates: 2,\n        contextualSwashAlternates: 4\n    },\n    lowerCase: {\n        code: 37,\n        exclusive: true,\n        defaultLowerCase: 0,\n        lowerCaseSmallCaps: 1,\n        lowerCasePetiteCaps: 2\n    },\n    upperCase: {\n        code: 38,\n        exclusive: true,\n        defaultUpperCase: 0,\n        upperCaseSmallCaps: 1,\n        upperCasePetiteCaps: 2\n    },\n    languageTag: {\n        code: 39,\n        exclusive: true\n    },\n    CJKRomanSpacing: {\n        code: 103,\n        exclusive: true,\n        halfWidthCJKRoman: 0,\n        proportionalCJKRoman: 1,\n        defaultCJKRoman: 2,\n        fullWidthCJKRoman: 3\n    }\n};\nconst $2b7f887ebcb5888a$var$feature = (name, selector)=>[\n        $2b7f887ebcb5888a$var$features[name].code,\n        $2b7f887ebcb5888a$var$features[name][selector]\n    ];\nconst $2b7f887ebcb5888a$var$OTMapping = {\n    rlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"requiredLigatures\"),\n    clig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"contextualLigatures\"),\n    dlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"rareLigatures\"),\n    hlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    liga: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"commonLigatures\"),\n    hist: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    smcp: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n    pcap: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n    frac: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    dnom: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    numr: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    afrc: $2b7f887ebcb5888a$var$feature(\"fractions\", \"verticalFractions\"),\n    // aalt\n    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n    // unic, vatu, vhal, vjmo, vpal, vrt2\n    // dist -> trak table?\n    // kern, vkrn -> kern table\n    // lfbd + opbd + rtbd -> opbd table?\n    // mark, mkmk -> acnt table?\n    // locl -> languageTag + ltag table\n    case: $2b7f887ebcb5888a$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n    ccmp: $2b7f887ebcb5888a$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n    cpct: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    valt: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    swsh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n    cswh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n    curs: $2b7f887ebcb5888a$var$feature(\"cursiveConnection\", \"cursive\"),\n    c2pc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n    c2sc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n    init: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n    fin2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    medi: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    med2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    fin3: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    fina: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    pkna: $2b7f887ebcb5888a$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n    half: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    halt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n    hkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n    vkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateVertKana\"),\n    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n    ital: $2b7f887ebcb5888a$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n    lnum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n    onum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n    mgrk: $2b7f887ebcb5888a$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n    // nalt: not enough info. what type of annotation?\n    // ornm: ditto, which ornament style?\n    calt: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n    vrt2: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    vert: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    tnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n    pnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n    sups: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"superiors\"),\n    subs: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"inferiors\"),\n    ordn: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"ordinals\"),\n    pwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    hwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    qwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"quarterWidthText\"),\n    twid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"thirdWidthText\"),\n    fwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    palt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altProportionalText\"),\n    trad: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalCharacters\"),\n    smpl: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n    jp78: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1978Characters\"),\n    jp83: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1983Characters\"),\n    jp90: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1990Characters\"),\n    jp04: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS2004Characters\"),\n    expt: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"expertCharacters\"),\n    hojo: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"hojoCharacters\"),\n    nlck: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"NLCCharacters\"),\n    tnam: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n    ruby: $2b7f887ebcb5888a$var$feature(\"rubyKana\", \"rubyKana\"),\n    titl: $2b7f887ebcb5888a$var$feature(\"styleOptions\", \"titlingCaps\"),\n    zero: $2b7f887ebcb5888a$var$feature(\"typographicExtras\", \"slashedZero\"),\n    ss01: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n    ss02: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n    ss03: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n    ss04: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n    ss05: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n    ss06: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n    ss07: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n    ss08: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n    ss09: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n    ss10: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n    ss11: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n    ss12: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n    ss13: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n    ss14: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n    ss15: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n    ss16: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n    ss17: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n    ss18: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n    ss19: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n    ss20: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor(let i = 1; i <= 99; i++)$2b7f887ebcb5888a$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [\n    $2b7f887ebcb5888a$var$features.characterAlternatives.code,\n    i\n];\n// create inverse mapping\nlet $2b7f887ebcb5888a$var$AATMapping = {};\nfor(let ot in $2b7f887ebcb5888a$var$OTMapping){\n    let aat = $2b7f887ebcb5888a$var$OTMapping[ot];\n    if ($2b7f887ebcb5888a$var$AATMapping[aat[0]] == null) $2b7f887ebcb5888a$var$AATMapping[aat[0]] = {};\n    $2b7f887ebcb5888a$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $2b7f887ebcb5888a$export$b813f7d2a1677c16(features1) {\n    let res = {};\n    for(let k in features1){\n        let r;\n        if (r = $2b7f887ebcb5888a$var$OTMapping[k]) {\n            if (res[r[0]] == null) res[r[0]] = {};\n            res[r[0]][r[1]] = features1[k];\n        }\n    }\n    return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $2b7f887ebcb5888a$var$mapFeatureStrings(f) {\n    let [type, setting] = f;\n    if (isNaN(type)) var typeCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type].code;\n    else var typeCode = type;\n    if (isNaN(setting)) var settingCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type][setting];\n    else var settingCode = setting;\n    return [\n        typeCode,\n        settingCode\n    ];\n}\nfunction $2b7f887ebcb5888a$export$bd6df347a4f391c4(features2) {\n    let res = {};\n    if (Array.isArray(features2)) for(let k = 0; k < features2.length; k++){\n        let r;\n        let f = $2b7f887ebcb5888a$var$mapFeatureStrings(features2[k]);\n        if (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]]) res[r] = true;\n    }\n    else if (typeof features2 === \"object\") for(let type in features2){\n        let feature1 = features2[type];\n        for(let setting in feature1){\n            let r;\n            let f = $2b7f887ebcb5888a$var$mapFeatureStrings([\n                type,\n                setting\n            ]);\n            if (feature1[setting] && (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]])) res[r] = true;\n        }\n    }\n    return Object.keys(res);\n}\n\n\n\n\n\n\n\nclass $f3d63ae925545400$export$2e2bcd8739ae039 {\n    lookup(glyph) {\n        switch(this.table.version){\n            case 0:\n                return this.table.values.getItem(glyph);\n            case 2:\n            case 4:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.firstGlyph === 0xffff) return null;\n                        if (glyph < seg.firstGlyph) max = mid - 1;\n                        else if (glyph > seg.lastGlyph) min = mid + 1;\n                        else {\n                            if (this.table.version === 2) return seg.value;\n                            else return seg.values[glyph - seg.firstGlyph];\n                        }\n                    }\n                    return null;\n                }\n            case 6:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.glyph === 0xffff) return null;\n                        if (glyph < seg.glyph) max = mid - 1;\n                        else if (glyph > seg.glyph) min = mid + 1;\n                        else return seg.value;\n                    }\n                    return null;\n                }\n            case 8:\n                return this.table.values[glyph - this.table.firstGlyph];\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n    }\n    glyphsForValue(classValue) {\n        let res = [];\n        switch(this.table.version){\n            case 2:\n            case 4:\n                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1));\n                else {\n                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n                }\n                break;\n            case 6:\n                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);\n                break;\n            case 8:\n                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n                break;\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n        return res;\n    }\n    constructor(table){\n        this.table = table;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $f3d63ae925545400$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\n\n\nconst $860c6347bb941b91$var$START_OF_TEXT_STATE = 0;\nconst $860c6347bb941b91$var$START_OF_LINE_STATE = 1;\nconst $860c6347bb941b91$var$END_OF_TEXT_CLASS = 0;\nconst $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $860c6347bb941b91$var$DELETED_GLYPH_CLASS = 2;\nconst $860c6347bb941b91$var$END_OF_LINE_CLASS = 3;\nconst $860c6347bb941b91$var$DONT_ADVANCE = 0x4000;\nclass $860c6347bb941b91$export$2e2bcd8739ae039 {\n    process(glyphs, reverse, processEntry) {\n        let currentState = $860c6347bb941b91$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n        let index = reverse ? glyphs.length - 1 : 0;\n        let dir = reverse ? -1 : 1;\n        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){\n            let glyph = null;\n            let classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n            let shouldAdvance = true;\n            if (index === glyphs.length || index === -1) classCode = $860c6347bb941b91$var$END_OF_TEXT_CLASS;\n            else {\n                glyph = glyphs[index];\n                if (glyph.id === 0xffff) classCode = $860c6347bb941b91$var$DELETED_GLYPH_CLASS;\n                else {\n                    classCode = this.lookupTable.lookup(glyph.id);\n                    if (classCode == null) classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n                }\n            }\n            let row = this.stateTable.stateArray.getItem(currentState);\n            let entryIndex = row[classCode];\n            let entry = this.stateTable.entryTable.getItem(entryIndex);\n            if (classCode !== $860c6347bb941b91$var$END_OF_TEXT_CLASS && classCode !== $860c6347bb941b91$var$DELETED_GLYPH_CLASS) {\n                processEntry(glyph, entry, index);\n                shouldAdvance = !(entry.flags & $860c6347bb941b91$var$DONT_ADVANCE);\n            }\n            currentState = entry.newState;\n            if (shouldAdvance) index += dir;\n        }\n        return glyphs;\n    }\n    /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */ traverse(opts, state = 0, visited = new Set) {\n        if (visited.has(state)) return;\n        visited.add(state);\n        let { nClasses: nClasses , stateArray: stateArray , entryTable: entryTable  } = this.stateTable;\n        let row = stateArray.getItem(state);\n        // Skip predefined classes\n        for(let classCode = 4; classCode < nClasses; classCode++){\n            let entryIndex = row[classCode];\n            let entry = entryTable.getItem(entryIndex);\n            // Try all glyphs in the class\n            for (let glyph of this.lookupTable.glyphsForValue(classCode)){\n                if (opts.enter) opts.enter(glyph, entry);\n                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n                if (opts.exit) opts.exit(glyph, entry);\n            }\n        }\n    }\n    constructor(stateTable){\n        this.stateTable = stateTable;\n        this.lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(stateTable.classTable);\n    }\n}\n\n\n\n\n// indic replacement flags\nconst $99be642f82069918$var$MARK_FIRST = 0x8000;\nconst $99be642f82069918$var$MARK_LAST = 0x2000;\nconst $99be642f82069918$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nconst $99be642f82069918$var$SET_MARK = 0x8000;\n// ligature entry flags\nconst $99be642f82069918$var$SET_COMPONENT = 0x8000;\nconst $99be642f82069918$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nconst $99be642f82069918$var$LAST_MASK = 0x80000000;\nconst $99be642f82069918$var$STORE_MASK = 0x40000000;\nconst $99be642f82069918$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $99be642f82069918$var$VERTICAL_ONLY = 0x800000;\nconst $99be642f82069918$var$REVERSE_DIRECTION = 0x400000;\nconst $99be642f82069918$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nconst $99be642f82069918$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $99be642f82069918$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $99be642f82069918$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $99be642f82069918$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $99be642f82069918$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $99be642f82069918$var$MARKED_INSERT_COUNT = 0x001F;\nclass $99be642f82069918$export$2e2bcd8739ae039 {\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    process(glyphs, features = {}) {\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            // enable/disable the requested features\n            for (let feature of chain.features){\n                let f;\n                if (f = features[feature.featureType]) {\n                    if (f[feature.featureSetting]) {\n                        flags &= feature.disableFlags;\n                        flags |= feature.enableFlags;\n                    } else if (f[feature.featureSetting] === false) {\n                        flags |= ~feature.disableFlags;\n                        flags &= ~feature.enableFlags;\n                    }\n                }\n            }\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n        }\n        // remove deleted glyphs\n        let index = glyphs.length - 1;\n        while(index >= 0){\n            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n            index--;\n        }\n        return glyphs;\n    }\n    processSubtable(subtable, glyphs) {\n        this.subtable = subtable;\n        this.glyphs = glyphs;\n        if (this.subtable.type === 4) {\n            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n            return;\n        }\n        this.ligatureStack = [];\n        this.markedGlyph = null;\n        this.firstGlyph = null;\n        this.lastGlyph = null;\n        this.markedIndex = null;\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let reverse = !!(this.subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        return stateMachine.process(this.glyphs, reverse, process);\n    }\n    getStateMachine(subtable) {\n        return new (0, $860c6347bb941b91$export$2e2bcd8739ae039)(subtable.table.stateTable);\n    }\n    getProcessor() {\n        switch(this.subtable.type){\n            case 0:\n                return this.processIndicRearragement;\n            case 1:\n                return this.processContextualSubstitution;\n            case 2:\n                return this.processLigature;\n            case 4:\n                return this.processNoncontextualSubstitutions;\n            case 5:\n                return this.processGlyphInsertion;\n            default:\n                throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n        }\n    }\n    processIndicRearragement(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$MARK_FIRST) this.firstGlyph = index;\n        if (entry.flags & $99be642f82069918$var$MARK_LAST) this.lastGlyph = index;\n        $99be642f82069918$var$reorderGlyphs(this.glyphs, entry.flags & $99be642f82069918$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n    processContextualSubstitution(glyph, entry, index) {\n        let subsitutions = this.subtable.table.substitutionTable.items;\n        if (entry.markIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.markIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[this.markedGlyph];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.currentIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.currentIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[index];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedGlyph = index;\n    }\n    processLigature(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_COMPONENT) this.ligatureStack.push(index);\n        if (entry.flags & $99be642f82069918$var$PERFORM_ACTION) {\n            let actions = this.subtable.table.ligatureActions;\n            let components = this.subtable.table.components;\n            let ligatureList = this.subtable.table.ligatureList;\n            let actionIndex = entry.action;\n            let last = false;\n            let ligatureIndex = 0;\n            let codePoints = [];\n            let ligatureGlyphs = [];\n            while(!last){\n                let componentGlyph = this.ligatureStack.pop();\n                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n                let action = actions.getItem(actionIndex++);\n                last = !!(action & $99be642f82069918$var$LAST_MASK);\n                let store = !!(action & $99be642f82069918$var$STORE_MASK);\n                let offset = (action & $99be642f82069918$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n                offset += this.glyphs[componentGlyph].id;\n                let component = components.getItem(offset);\n                ligatureIndex += component;\n                if (last || store) {\n                    let ligatureEntry = ligatureList.getItem(ligatureIndex);\n                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n                    ligatureGlyphs.push(componentGlyph);\n                    ligatureIndex = 0;\n                    codePoints = [];\n                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n            }\n            // Put ligature glyph indexes back on the stack\n            this.ligatureStack.push(...ligatureGlyphs);\n        }\n    }\n    processNoncontextualSubstitutions(subtable, glyphs, index) {\n        let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n        for(index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.id !== 0xffff) {\n                let gid = lookupTable.lookup(glyph.id);\n                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n            }\n        }\n    }\n    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n        let insertions = [];\n        while(count--){\n            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n            insertions.push(this.font.getGlyph(gid));\n        }\n        if (!isBefore) glyphIndex++;\n        this.glyphs.splice(glyphIndex, 0, ...insertions);\n    }\n    processGlyphInsertion(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedIndex = index;\n        if (entry.markedInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$MARKED_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$MARKED_INSERT_BEFORE);\n            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n        }\n        if (entry.currentInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$CURRENT_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$CURRENT_INSERT_BEFORE);\n            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n        }\n    }\n    getSupportedFeatures() {\n        let features = [];\n        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([\n            feature.featureType,\n            feature.featureSetting\n        ]);\n        return features;\n    }\n    generateInputs(gid) {\n        if (!this.inputCache) this.generateInputCache();\n        return this.inputCache[gid] || [];\n    }\n    generateInputCache() {\n        this.inputCache = {};\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n        }\n    }\n    generateInputsForSubtable(subtable) {\n        // Currently, only supporting ligature subtables.\n        if (subtable.type !== 2) return;\n        let reverse = !!(subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n        this.subtable = subtable;\n        this.ligatureStack = [];\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let input = [];\n        let stack = [];\n        this.glyphs = [];\n        stateMachine.traverse({\n            enter: (glyph, entry)=>{\n                let glyphs = this.glyphs;\n                stack.push({\n                    glyphs: glyphs.slice(),\n                    ligatureStack: this.ligatureStack.slice()\n                });\n                // Add glyph to input and glyphs to process.\n                let g1 = this.font.getGlyph(glyph);\n                input.push(g1);\n                glyphs.push(input[input.length - 1]);\n                // Process ligature substitution\n                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n                // Add input to result if only one matching (non-deleted) glyph remains.\n                let count = 0;\n                let found = 0;\n                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {\n                    count++;\n                    found = glyphs[i].id;\n                }\n                if (count === 1) {\n                    let result = input.map((g)=>g.id);\n                    let cache1 = this.inputCache[found];\n                    if (cache1) cache1.push(result);\n                    else this.inputCache[found] = [\n                        result\n                    ];\n                }\n            },\n            exit: ()=>{\n                ({ glyphs: this.glyphs , ligatureStack: this.ligatureStack  } = stack.pop());\n                input.pop();\n            }\n        });\n    }\n    constructor(font){\n        this.processIndicRearragement = this.processIndicRearragement.bind(this);\n        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n        this.processLigature = this.processLigature.bind(this);\n        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n        this.font = font;\n        this.morx = font.morx;\n        this.inputCache = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $99be642f82069918$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $99be642f82069918$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n    if (reverseB) end.reverse();\n    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n    if (reverseA) start.reverse();\n    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n    return glyphs;\n}\nfunction $99be642f82069918$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n    let length = lastGlyph - firstGlyph + 1;\n    switch(verb){\n        case 0:\n            return glyphs;\n        case 1:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 2:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 3:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 4:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 5:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ], true, false);\n        case 6:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 7:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 8:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 9:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 10:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 11:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ], true, false);\n        case 12:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 13:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, false);\n        case 14:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 15:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, true);\n        default:\n            throw new Error(`Unknown verb: ${verb}`);\n    }\n}\n\n\nclass $860fcbd64bc12fbc$export$2e2bcd8739ae039 {\n    substitute(glyphRun) {\n        // AAT expects the glyphs to be in visual order prior to morx processing,\n        // so reverse the glyphs if the script is right-to-left.\n        if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n        this.morxProcessor.process(glyphRun.glyphs, $2b7f887ebcb5888a$export$b813f7d2a1677c16(glyphRun.features));\n    }\n    getAvailableFeatures(script, language) {\n        return $2b7f887ebcb5888a$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n    stringsForGlyph(gid) {\n        let glyphStrings = this.morxProcessor.generateInputs(gid);\n        let result = new Set;\n        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, \"\");\n        return result;\n    }\n    _addStrings(glyphs, index, strings, string) {\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n        for (let codePoint of codePoints){\n            let s = string + String.fromCodePoint(codePoint);\n            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);\n            else strings.add(s);\n        }\n    }\n    constructor(font){\n        this.font = font;\n        this.morxProcessor = new (0, $99be642f82069918$export$2e2bcd8739ae039)(font);\n        this.fallbackPosition = false;\n    }\n}\n\n\n\nclass $d7e93cca3cf8ce8a$export$2e2bcd8739ae039 {\n    /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */ _addFeatures(features, global) {\n        let stageIndex = this.stages.length - 1;\n        let stage = this.stages[stageIndex];\n        for (let feature of features)if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n        }\n    }\n    /**\n   * Add features to the last stage\n   */ add(arg, global = true) {\n        if (this.stages.length === 0) this.stages.push([]);\n        if (typeof arg === \"string\") arg = [\n            arg\n        ];\n        if (Array.isArray(arg)) this._addFeatures(arg, global);\n        else if (typeof arg === \"object\") {\n            this._addFeatures(arg.global || [], true);\n            this._addFeatures(arg.local || [], false);\n        } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n   * Add a new stage\n   */ addStage(arg, global) {\n        if (typeof arg === \"function\") this.stages.push(arg, []);\n        else {\n            this.stages.push([]);\n            this.add(arg, global);\n        }\n    }\n    setFeatureOverrides(features) {\n        if (Array.isArray(features)) this.add(features);\n        else if (typeof features === \"object\") for(let tag in features){\n            if (features[tag]) this.add(tag);\n            else if (this.allFeatures[tag] != null) {\n                let stage = this.stages[this.allFeatures[tag]];\n                stage.splice(stage.indexOf(tag), 1);\n                delete this.allFeatures[tag];\n                delete this.globalFeatures[tag];\n            }\n        }\n    }\n    /**\n   * Assigns the global features to the given glyphs\n   */ assignGlobalFeatures(glyphs) {\n        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;\n    }\n    /**\n   * Executes the planned stages using the given OTProcessor\n   */ process(processor, glyphs, positions) {\n        for (let stage of this.stages){\n            if (typeof stage === \"function\") {\n                if (!positions) stage(this.font, glyphs, this);\n            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n    }\n    constructor(font, script, direction){\n        this.font = font;\n        this.script = script;\n        this.direction = direction;\n        this.stages = [];\n        this.globalFeatures = {};\n        this.allFeatures = {};\n    }\n}\n\n\n\n\nconst $d28fb665ee343afc$var$VARIATION_FEATURES = [\n    \"rvrn\"\n];\nconst $d28fb665ee343afc$var$COMMON_FEATURES = [\n    \"ccmp\",\n    \"locl\",\n    \"rlig\",\n    \"mark\",\n    \"mkmk\"\n];\nconst $d28fb665ee343afc$var$FRACTIONAL_FEATURES = [\n    \"frac\",\n    \"numr\",\n    \"dnom\"\n];\nconst $d28fb665ee343afc$var$HORIZONTAL_FEATURES = [\n    \"calt\",\n    \"clig\",\n    \"liga\",\n    \"rclt\",\n    \"curs\",\n    \"kern\"\n];\nconst $d28fb665ee343afc$var$VERTICAL_FEATURES = [\n    \"vert\"\n];\nconst $d28fb665ee343afc$var$DIRECTIONAL_FEATURES = {\n    ltr: [\n        \"ltra\",\n        \"ltrm\"\n    ],\n    rtl: [\n        \"rtla\",\n        \"rtlm\"\n    ]\n};\nclass $d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static plan(plan, glyphs, features) {\n        // Plan the features we want to apply\n        this.planPreprocessing(plan);\n        this.planFeatures(plan);\n        this.planPostprocessing(plan, features);\n        // Assign the global features to all the glyphs\n        plan.assignGlobalFeatures(glyphs);\n        // Assign local features to glyphs\n        this.assignFeatures(plan, glyphs);\n    }\n    static planPreprocessing(plan) {\n        plan.add({\n            global: [\n                ...$d28fb665ee343afc$var$VARIATION_FEATURES,\n                ...$d28fb665ee343afc$var$DIRECTIONAL_FEATURES[plan.direction]\n            ],\n            local: $d28fb665ee343afc$var$FRACTIONAL_FEATURES\n        });\n    }\n    static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n    }\n    static planPostprocessing(plan, userFeatures) {\n        plan.add([\n            ...$d28fb665ee343afc$var$COMMON_FEATURES,\n            ...$d28fb665ee343afc$var$HORIZONTAL_FEATURES\n        ]);\n        plan.setFeatureOverrides(userFeatures);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Enable contextual fractions\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            if (glyph.codePoints[0] === 0x2044) {\n                let start = i;\n                let end = i + 1;\n                // Apply numerator\n                while(start > 0 && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[start - 1].codePoints[0])){\n                    glyphs[start - 1].features.numr = true;\n                    glyphs[start - 1].features.frac = true;\n                    start--;\n                }\n                // Apply denominator\n                while(end < glyphs.length && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[end].codePoints[0])){\n                    glyphs[end].features.dnom = true;\n                    glyphs[end].features.frac = true;\n                    end++;\n                }\n                // Apply fraction slash\n                glyph.features.frac = true;\n                i = end - 1;\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d28fb665ee343afc$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\n\n\n\n\n\n\nconst $17ba6019f27bfcf9$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $17ba6019f27bfcf9$var$FEATURES = [\n    \"isol\",\n    \"fina\",\n    \"fin2\",\n    \"fin3\",\n    \"medi\",\n    \"med2\",\n    \"init\"\n];\nconst $17ba6019f27bfcf9$var$ShapingClasses = {\n    Non_Joining: 0,\n    Left_Joining: 1,\n    Right_Joining: 2,\n    Dual_Joining: 3,\n    Join_Causing: 3,\n    ALAPH: 4,\n    \"DALATH RISH\": 5,\n    Transparent: 6\n};\nconst $17ba6019f27bfcf9$var$ISOL = \"isol\";\nconst $17ba6019f27bfcf9$var$FINA = \"fina\";\nconst $17ba6019f27bfcf9$var$FIN2 = \"fin2\";\nconst $17ba6019f27bfcf9$var$FIN3 = \"fin3\";\nconst $17ba6019f27bfcf9$var$MEDI = \"medi\";\nconst $17ba6019f27bfcf9$var$MED2 = \"med2\";\nconst $17ba6019f27bfcf9$var$INIT = \"init\";\nconst $17ba6019f27bfcf9$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nconst $17ba6019f27bfcf9$var$STATE_TABLE = [\n    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n    // State 0: prev was U,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 2: prev was D/L in ISOL form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 3: prev was D in FINA form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 4: prev was FINA ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 6: prev was DALATH/RISH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN3,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ]\n];\nclass $17ba6019f27bfcf9$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ccmp\",\n            \"locl\"\n        ]);\n        for(let i = 0; i < $17ba6019f27bfcf9$var$FEATURES.length; i++){\n            let feature = $17ba6019f27bfcf9$var$FEATURES[i];\n            plan.addStage(feature, false);\n        }\n        plan.addStage(\"mset\");\n    }\n    static assignFeatures(plan, glyphs) {\n        super.assignFeatures(plan, glyphs);\n        let prev = -1;\n        let state = 0;\n        let actions = [];\n        // Apply the state machine to map glyphs to features\n        for(let i = 0; i < glyphs.length; i++){\n            let curAction, prevAction;\n            var glyph = glyphs[i];\n            let type = $17ba6019f27bfcf9$var$getShapingClass(glyph.codePoints[0]);\n            if (type === $17ba6019f27bfcf9$var$ShapingClasses.Transparent) {\n                actions[i] = $17ba6019f27bfcf9$var$NONE;\n                continue;\n            }\n            [prevAction, curAction, state] = $17ba6019f27bfcf9$var$STATE_TABLE[state][type];\n            if (prevAction !== $17ba6019f27bfcf9$var$NONE && prev !== -1) actions[prev] = prevAction;\n            actions[i] = curAction;\n            prev = i;\n        }\n        // Apply the chosen features to their respective glyphs\n        for(let index = 0; index < glyphs.length; index++){\n            let feature;\n            var glyph = glyphs[index];\n            if (feature = actions[index]) glyph.features[feature] = true;\n        }\n    }\n}\nfunction $17ba6019f27bfcf9$var$getShapingClass(codePoint) {\n    let res = $17ba6019f27bfcf9$var$trie.get(codePoint);\n    if (res) return res - 1;\n    let category = (0, $gfJaN$unicodeproperties.getCategory)(codePoint);\n    if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $17ba6019f27bfcf9$var$ShapingClasses.Transparent;\n    return $17ba6019f27bfcf9$var$ShapingClasses.Non_Joining;\n}\n\n\n\n\n\nclass $d6368085223f631e$export$2e2bcd8739ae039 {\n    reset(options = {}, index = 0) {\n        this.options = options;\n        this.flags = options.flags || {};\n        this.markAttachmentType = options.markAttachmentType || 0;\n        this.index = index;\n    }\n    get cur() {\n        return this.glyphs[this.index] || null;\n    }\n    shouldIgnore(glyph) {\n        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n    move(dir) {\n        this.index += dir;\n        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;\n        if (0 > this.index || this.index >= this.glyphs.length) return null;\n        return this.glyphs[this.index];\n    }\n    next() {\n        return this.move(1);\n    }\n    prev() {\n        return this.move(-1);\n    }\n    peek(count = 1) {\n        let idx = this.index;\n        let res = this.increment(count);\n        this.index = idx;\n        return res;\n    }\n    peekIndex(count = 1) {\n        let idx = this.index;\n        this.increment(count);\n        let res = this.index;\n        this.index = idx;\n        return res;\n    }\n    increment(count = 1) {\n        let dir = count < 0 ? -1 : 1;\n        count = Math.abs(count);\n        while(count--)this.move(dir);\n        return this.glyphs[this.index];\n    }\n    constructor(glyphs, options){\n        this.glyphs = glyphs;\n        this.reset(options);\n    }\n}\n\n\n\nconst $7b226e6bbeadedeb$var$DEFAULT_SCRIPTS = [\n    \"DFLT\",\n    \"dflt\",\n    \"latn\"\n];\nclass $7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    findScript(script) {\n        if (this.table.scriptList == null) return null;\n        if (!Array.isArray(script)) script = [\n            script\n        ];\n        for (let s of script)for (let entry of this.table.scriptList){\n            if (entry.tag === s) return entry;\n        }\n        return null;\n    }\n    selectScript(script, language, direction) {\n        let changed = false;\n        let entry;\n        if (!this.script || script !== this.scriptTag) {\n            entry = this.findScript(script);\n            if (!entry) entry = this.findScript($7b226e6bbeadedeb$var$DEFAULT_SCRIPTS);\n            if (!entry) return this.scriptTag;\n            this.scriptTag = entry.tag;\n            this.script = entry.script;\n            this.language = null;\n            this.languageTag = null;\n            changed = true;\n        }\n        if (!direction || direction !== this.direction) this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n        if (!language || language !== this.languageTag) {\n            this.language = null;\n            for (let lang of this.script.langSysRecords)if (lang.tag === language) {\n                this.language = lang.langSys;\n                this.languageTag = lang.tag;\n                break;\n            }\n            if (!this.language) {\n                this.language = this.script.defaultLangSys;\n                this.languageTag = null;\n            }\n            changed = true;\n        }\n        // Build a feature lookup table\n        if (changed) {\n            this.features = {};\n            if (this.language) for (let featureIndex of this.language.featureIndexes){\n                let record = this.table.featureList[featureIndex];\n                let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n                this.features[record.tag] = substituteFeature || record.feature;\n            }\n        }\n        return this.scriptTag;\n    }\n    lookupsForFeatures(userFeatures = [], exclude) {\n        let lookups = [];\n        for (let tag of userFeatures){\n            let feature = this.features[tag];\n            if (!feature) continue;\n            for (let lookupIndex of feature.lookupListIndexes){\n                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n                lookups.push({\n                    feature: tag,\n                    index: lookupIndex,\n                    lookup: this.table.lookupList.get(lookupIndex)\n                });\n            }\n        }\n        lookups.sort((a, b)=>a.index - b.index);\n        return lookups;\n    }\n    substituteFeatureForVariations(featureIndex) {\n        if (this.variationsIndex === -1) return null;\n        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n        let substitutions = record.featureTableSubstitution.substitutions;\n        for (let substitution of substitutions){\n            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n        return null;\n    }\n    findVariationsIndex(coords) {\n        let variations = this.table.featureVariations;\n        if (!variations) return -1;\n        let records = variations.featureVariationRecords;\n        for(let i = 0; i < records.length; i++){\n            let conditions = records[i].conditionSet.conditionTable;\n            if (this.variationConditionsMatch(conditions, coords)) return i;\n        }\n        return -1;\n    }\n    variationConditionsMatch(conditions, coords) {\n        return conditions.every((condition)=>{\n            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n        });\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        let lookups = this.lookupsForFeatures(userFeatures);\n        this.applyLookups(lookups, glyphs, advances);\n    }\n    applyLookups(lookups, glyphs, positions) {\n        this.glyphs = glyphs;\n        this.positions = positions;\n        this.glyphIterator = new (0, $d6368085223f631e$export$2e2bcd8739ae039)(glyphs);\n        for (let { feature: feature , lookup: lookup  } of lookups){\n            this.currentFeature = feature;\n            this.glyphIterator.reset(lookup.flags);\n            while(this.glyphIterator.index < glyphs.length){\n                if (!(feature in this.glyphIterator.cur.features)) {\n                    this.glyphIterator.next();\n                    continue;\n                }\n                for (let table of lookup.subTables){\n                    let res = this.applyLookup(lookup.lookupType, table);\n                    if (res) break;\n                }\n                this.glyphIterator.next();\n            }\n        }\n    }\n    applyLookup(lookup, table) {\n        throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n    applyLookupList(lookupRecords) {\n        let options = this.glyphIterator.options;\n        let glyphIndex = this.glyphIterator.index;\n        for (let lookupRecord of lookupRecords){\n            // Reset flags and find glyph index for this lookup record\n            this.glyphIterator.reset(options, glyphIndex);\n            this.glyphIterator.increment(lookupRecord.sequenceIndex);\n            // Get the lookup and setup flags for subtables\n            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n            // Apply lookup subtables until one matches\n            for (let table of lookup.subTables){\n                if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n        }\n        this.glyphIterator.reset(options, glyphIndex);\n        return true;\n    }\n    coverageIndex(coverage, glyph) {\n        if (glyph == null) glyph = this.glyphIterator.cur.id;\n        switch(coverage.version){\n            case 1:\n                return coverage.glyphs.indexOf(glyph);\n            case 2:\n                for (let range of coverage.rangeRecords){\n                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n                }\n                break;\n        }\n        return -1;\n    }\n    match(sequenceIndex, sequence, fn, matched) {\n        let pos = this.glyphIterator.index;\n        let glyph = this.glyphIterator.increment(sequenceIndex);\n        let idx = 0;\n        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){\n            if (matched) matched.push(this.glyphIterator.index);\n            idx++;\n            glyph = this.glyphIterator.next();\n        }\n        this.glyphIterator.index = pos;\n        if (idx < sequence.length) return false;\n        return matched || true;\n    }\n    sequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id);\n    }\n    sequenceMatchIndices(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>{\n            // If the current feature doesn't apply to this glyph,\n            if (!(this.currentFeature in glyph.features)) return false;\n            return component === glyph.id;\n        }, []);\n    }\n    coverageSequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0);\n    }\n    getClassID(glyph, classDef) {\n        switch(classDef.version){\n            case 1:\n                let i = glyph - classDef.startGlyph;\n                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n                break;\n            case 2:\n                for (let range of classDef.classRangeRecord){\n                    if (range.start <= glyph && glyph <= range.end) return range.class;\n                }\n                break;\n        }\n        return 0;\n    }\n    classSequenceMatches(sequenceIndex, sequence, classDef) {\n        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef));\n    }\n    applyContext(table) {\n        let index, set;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                set = table.ruleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n                if (index === -1) return false;\n                set = table.classSet[index];\n                for (let rule1 of set){\n                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    applyChainingContext(table) {\n        let index;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                let set = table.chainRuleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n                let rules = table.chainClassSet[index];\n                if (!rules) return false;\n                for (let rule2 of rules){\n                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    constructor(font, table){\n        this.font = font;\n        this.table = table;\n        this.script = null;\n        this.scriptTag = null;\n        this.language = null;\n        this.languageTag = null;\n        this.features = {};\n        this.lookups = {};\n        // Setup variation substitutions\n        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n        // initialize to default script + language\n        this.selectScript();\n        // current context (set by applyFeatures)\n        this.glyphs = [];\n        this.positions = []; // only used by GPOS\n        this.ligatureID = 1;\n        this.currentFeature = null;\n    }\n}\n\n\nclass $f22bb23c9fd478d8$export$2e2bcd8739ae039 {\n    get id() {\n        return this._id;\n    }\n    set id(id) {\n        this._id = id;\n        this.substituted = true;\n        let GDEF = this._font.GDEF;\n        if (GDEF && GDEF.glyphClassDef) {\n            // TODO: clean this up\n            let classID = (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n            this.isBase = classID === 1;\n            this.isLigature = classID === 2;\n            this.isMark = classID === 3;\n            this.markAttachmentType = GDEF.markAttachClassDef ? (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n        } else {\n            this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n            this.isBase = !this.isMark;\n            this.isLigature = this.codePoints.length > 1;\n            this.markAttachmentType = 0;\n        }\n    }\n    copy() {\n        return new $f22bb23c9fd478d8$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n    constructor(font, id, codePoints = [], features){\n        this._font = font;\n        this.codePoints = codePoints;\n        this.id = id;\n        this.features = {};\n        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){\n            let feature = features[i];\n            this.features[feature] = true;\n        }\n        else if (typeof features === \"object\") Object.assign(this.features, features);\n        this.ligatureID = null;\n        this.ligatureComponent = null;\n        this.isLigated = false;\n        this.cursiveAttachment = null;\n        this.markAttachment = null;\n        this.shaperInfo = null;\n        this.substituted = false;\n        this.isMultiplied = false;\n    }\n}\n\n\nclass $fa1d9fd80dd7279e$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ljmo\",\n            \"vjmo\",\n            \"tjmo\"\n        ], false);\n    }\n    static assignFeatures(plan, glyphs) {\n        let state = 0;\n        let i = 0;\n        while(i < glyphs.length){\n            let action;\n            let glyph = glyphs[i];\n            let code = glyph.codePoints[0];\n            let type = $fa1d9fd80dd7279e$var$getType(code);\n            [action, state] = $fa1d9fd80dd7279e$var$STATE_TABLE[state][type];\n            switch(action){\n                case $fa1d9fd80dd7279e$var$DECOMPOSE:\n                    // Decompose the composed syllable if it is not supported by the font.\n                    if (!plan.font.hasGlyphForCodePoint(code)) i = $fa1d9fd80dd7279e$var$decompose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$COMPOSE:\n                    // Found a decomposed syllable. Try to compose if supported by the font.\n                    i = $fa1d9fd80dd7279e$var$compose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$TONE_MARK:\n                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n                    $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$INVALID:\n                    // Tone mark has no valid syllable to attach to, so insert a dotted circle\n                    i = $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, plan.font);\n                    break;\n            }\n            i++;\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($fa1d9fd80dd7279e$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $fa1d9fd80dd7279e$var$HANGUL_BASE = 0xac00;\nconst $fa1d9fd80dd7279e$var$HANGUL_END = 0xd7a4;\nconst $fa1d9fd80dd7279e$var$HANGUL_COUNT = $fa1d9fd80dd7279e$var$HANGUL_END - $fa1d9fd80dd7279e$var$HANGUL_BASE + 1;\nconst $fa1d9fd80dd7279e$var$L_BASE = 0x1100; // lead\nconst $fa1d9fd80dd7279e$var$V_BASE = 0x1161; // vowel\nconst $fa1d9fd80dd7279e$var$T_BASE = 0x11a7; // trail\nconst $fa1d9fd80dd7279e$var$L_COUNT = 19;\nconst $fa1d9fd80dd7279e$var$V_COUNT = 21;\nconst $fa1d9fd80dd7279e$var$T_COUNT = 28;\nconst $fa1d9fd80dd7279e$var$L_END = $fa1d9fd80dd7279e$var$L_BASE + $fa1d9fd80dd7279e$var$L_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$V_END = $fa1d9fd80dd7279e$var$V_BASE + $fa1d9fd80dd7279e$var$V_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$T_END = $fa1d9fd80dd7279e$var$T_BASE + $fa1d9fd80dd7279e$var$T_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$DOTTED_CIRCLE = 0x25cc;\nconst $fa1d9fd80dd7279e$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst $fa1d9fd80dd7279e$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst $fa1d9fd80dd7279e$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst $fa1d9fd80dd7279e$var$isTone = (code)=>0x302e <= code && code <= 0x302f;\nconst $fa1d9fd80dd7279e$var$isLVT = (code)=>$fa1d9fd80dd7279e$var$HANGUL_BASE <= code && code <= $fa1d9fd80dd7279e$var$HANGUL_END;\nconst $fa1d9fd80dd7279e$var$isLV = (code)=>code - $fa1d9fd80dd7279e$var$HANGUL_BASE < $fa1d9fd80dd7279e$var$HANGUL_COUNT && (code - $fa1d9fd80dd7279e$var$HANGUL_BASE) % $fa1d9fd80dd7279e$var$T_COUNT === 0;\nconst $fa1d9fd80dd7279e$var$isCombiningL = (code)=>$fa1d9fd80dd7279e$var$L_BASE <= code && code <= $fa1d9fd80dd7279e$var$L_END;\nconst $fa1d9fd80dd7279e$var$isCombiningV = (code)=>$fa1d9fd80dd7279e$var$V_BASE <= code && code <= $fa1d9fd80dd7279e$var$V_END;\nconst $fa1d9fd80dd7279e$var$isCombiningT = (code)=>$fa1d9fd80dd7279e$var$T_BASE + 1 && 1 <= code && code <= $fa1d9fd80dd7279e$var$T_END;\n// Character categories\nconst $fa1d9fd80dd7279e$var$X = 0; // Other character\nconst $fa1d9fd80dd7279e$var$L = 1; // Leading consonant\nconst $fa1d9fd80dd7279e$var$V = 2; // Medial vowel\nconst $fa1d9fd80dd7279e$var$T = 3; // Trailing consonant\nconst $fa1d9fd80dd7279e$var$LV = 4; // Composed <LV> syllable\nconst $fa1d9fd80dd7279e$var$LVT = 5; // Composed <LVT> syllable\nconst $fa1d9fd80dd7279e$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $fa1d9fd80dd7279e$var$getType(code) {\n    if ($fa1d9fd80dd7279e$var$isL(code)) return $fa1d9fd80dd7279e$var$L;\n    if ($fa1d9fd80dd7279e$var$isV(code)) return $fa1d9fd80dd7279e$var$V;\n    if ($fa1d9fd80dd7279e$var$isT(code)) return $fa1d9fd80dd7279e$var$T;\n    if ($fa1d9fd80dd7279e$var$isLV(code)) return $fa1d9fd80dd7279e$var$LV;\n    if ($fa1d9fd80dd7279e$var$isLVT(code)) return $fa1d9fd80dd7279e$var$LVT;\n    if ($fa1d9fd80dd7279e$var$isTone(code)) return $fa1d9fd80dd7279e$var$M;\n    return $fa1d9fd80dd7279e$var$X;\n}\n// State machine actions\nconst $fa1d9fd80dd7279e$var$NO_ACTION = 0;\nconst $fa1d9fd80dd7279e$var$DECOMPOSE = 1;\nconst $fa1d9fd80dd7279e$var$COMPOSE = 2;\nconst $fa1d9fd80dd7279e$var$TONE_MARK = 4;\nconst $fa1d9fd80dd7279e$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst $fa1d9fd80dd7279e$var$STATE_TABLE = [\n    //       X                 L                 V                T                  LV                LVT               M\n    // State 0: start state\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 1: <L>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 2: <L,V> or <LV>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ],\n    // State 3: <L,V,T> or <LVT>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ]\n];\nfunction $fa1d9fd80dd7279e$var$getGlyph(font, code, features) {\n    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [\n        code\n    ], features);\n}\nfunction $fa1d9fd80dd7279e$var$decompose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyph.codePoints[0];\n    let s = code - $fa1d9fd80dd7279e$var$HANGUL_BASE;\n    let t = $fa1d9fd80dd7279e$var$T_BASE + s % $fa1d9fd80dd7279e$var$T_COUNT;\n    s = s / $fa1d9fd80dd7279e$var$T_COUNT | 0;\n    let l = $fa1d9fd80dd7279e$var$L_BASE + s / $fa1d9fd80dd7279e$var$V_COUNT | 0;\n    let v = $fa1d9fd80dd7279e$var$V_BASE + s % $fa1d9fd80dd7279e$var$V_COUNT;\n    // Don't decompose if all of the components are not available\n    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $fa1d9fd80dd7279e$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n    // Replace the current glyph with decomposed L, V, and T glyphs,\n    // and apply the proper OpenType features to each component.\n    let ljmo = $fa1d9fd80dd7279e$var$getGlyph(font, l, glyph.features);\n    ljmo.features.ljmo = true;\n    let vjmo = $fa1d9fd80dd7279e$var$getGlyph(font, v, glyph.features);\n    vjmo.features.vjmo = true;\n    let insert = [\n        ljmo,\n        vjmo\n    ];\n    if (t > $fa1d9fd80dd7279e$var$T_BASE) {\n        let tjmo = $fa1d9fd80dd7279e$var$getGlyph(font, t, glyph.features);\n        tjmo.features.tjmo = true;\n        insert.push(tjmo);\n    }\n    glyphs.splice(i, 1, ...insert);\n    return i + insert.length - 1;\n}\nfunction $fa1d9fd80dd7279e$var$compose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    let type = $fa1d9fd80dd7279e$var$getType(code);\n    let prev = glyphs[i - 1].codePoints[0];\n    let prevType = $fa1d9fd80dd7279e$var$getType(prev);\n    // Figure out what type of syllable we're dealing with\n    let lv, ljmo, vjmo, tjmo;\n    if (prevType === $fa1d9fd80dd7279e$var$LV && type === $fa1d9fd80dd7279e$var$T) {\n        // <LV,T>\n        lv = prev;\n        tjmo = glyph;\n    } else {\n        if (type === $fa1d9fd80dd7279e$var$V) {\n            // <L,V>\n            ljmo = glyphs[i - 1];\n            vjmo = glyph;\n        } else {\n            // <L,V,T>\n            ljmo = glyphs[i - 2];\n            vjmo = glyphs[i - 1];\n            tjmo = glyph;\n        }\n        let l = ljmo.codePoints[0];\n        let v = vjmo.codePoints[0];\n        // Make sure L and V are combining characters\n        if ($fa1d9fd80dd7279e$var$isCombiningL(l) && $fa1d9fd80dd7279e$var$isCombiningV(v)) lv = $fa1d9fd80dd7279e$var$HANGUL_BASE + ((l - $fa1d9fd80dd7279e$var$L_BASE) * $fa1d9fd80dd7279e$var$V_COUNT + (v - $fa1d9fd80dd7279e$var$V_BASE)) * $fa1d9fd80dd7279e$var$T_COUNT;\n    }\n    let t = tjmo && tjmo.codePoints[0] || $fa1d9fd80dd7279e$var$T_BASE;\n    if (lv != null && (t === $fa1d9fd80dd7279e$var$T_BASE || $fa1d9fd80dd7279e$var$isCombiningT(t))) {\n        let s = lv + (t - $fa1d9fd80dd7279e$var$T_BASE);\n        // Replace with a composed glyph if supported by the font,\n        // otherwise apply the proper OpenType features to each component.\n        if (font.hasGlyphForCodePoint(s)) {\n            let del = prevType === $fa1d9fd80dd7279e$var$V ? 3 : 2;\n            glyphs.splice(i - del + 1, del, $fa1d9fd80dd7279e$var$getGlyph(font, s, glyph.features));\n            return i - del + 1;\n        }\n    }\n    // Didn't compose (either a non-combining component or unsupported by font).\n    if (ljmo) ljmo.features.ljmo = true;\n    if (vjmo) vjmo.features.vjmo = true;\n    if (tjmo) tjmo.features.tjmo = true;\n    if (prevType === $fa1d9fd80dd7279e$var$LV) {\n        // Sequence was originally <L,V>, which got combined earlier.\n        // Either the T was non-combining, or the LVT glyph wasn't supported.\n        // Decompose the glyph again and apply OT features.\n        $fa1d9fd80dd7279e$var$decompose(glyphs, i - 1, font);\n        return i + 1;\n    }\n    return i;\n}\nfunction $fa1d9fd80dd7279e$var$getLength(code) {\n    switch($fa1d9fd80dd7279e$var$getType(code)){\n        case $fa1d9fd80dd7279e$var$LV:\n        case $fa1d9fd80dd7279e$var$LVT:\n            return 1;\n        case $fa1d9fd80dd7279e$var$V:\n            return 2;\n        case $fa1d9fd80dd7279e$var$T:\n            return 3;\n    }\n}\nfunction $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    // Move tone mark to the beginning of the previous syllable, unless it is zero width\n    if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n    let prev = glyphs[i - 1].codePoints[0];\n    let len = $fa1d9fd80dd7279e$var$getLength(prev);\n    glyphs.splice(i, 1);\n    return glyphs.splice(i - len, 0, glyph);\n}\nfunction $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    if (font.hasGlyphForCodePoint($fa1d9fd80dd7279e$var$DOTTED_CIRCLE)) {\n        let dottedCircle = $fa1d9fd80dd7279e$var$getGlyph(font, $fa1d9fd80dd7279e$var$DOTTED_CIRCLE, glyph.features);\n        // If the tone mark is zero width, insert the dotted circle before, otherwise after\n        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n        glyphs.splice(idx, 0, dottedCircle);\n        i++;\n    }\n    return i;\n}\n\n\n\n\n\n\n\n\n\nvar $d22b56f2cf15e5ba$exports = {};\n$d22b56f2cf15e5ba$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\n\n\nvar $79781f8c452881c2$exports = {};\n$79781f8c452881c2$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\n\n\nconst $79e3b6f2c331d0bf$export$a513ea61a7bee91c = {\n    X: 1,\n    C: 2,\n    V: 4,\n    N: 8,\n    H: 16,\n    ZWNJ: 32,\n    ZWJ: 64,\n    M: 128,\n    SM: 256,\n    VD: 512,\n    A: 1024,\n    Placeholder: 2048,\n    Dotted_Circle: 4096,\n    RS: 8192,\n    Coeng: 16384,\n    Repha: 32768,\n    Ra: 65536,\n    CM: 131072,\n    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\nconst $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0 = {\n    Start: 1,\n    Ra_To_Become_Reph: 2,\n    Pre_M: 4,\n    Pre_C: 8,\n    Base_C: 16,\n    After_Main: 32,\n    Above_C: 64,\n    Before_Sub: 128,\n    Below_C: 256,\n    After_Sub: 512,\n    Before_Post: 1024,\n    Post_C: 2048,\n    After_Post: 4096,\n    Final_C: 8192,\n    SMVD: 16384,\n    End: 32768\n};\nconst $79e3b6f2c331d0bf$export$8519deaa7de2b07 = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.C | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Ra | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.CM | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.V | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Placeholder | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Dotted_Circle;\nconst $79e3b6f2c331d0bf$export$bbcd928767338e0d = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWNJ;\nconst $79e3b6f2c331d0bf$export$ca9599b2a300afc = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.H | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Coeng;\nconst $79e3b6f2c331d0bf$export$e99d119da76a0fc5 = {\n    Default: {\n        hasOldSpec: false,\n        virama: 0,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Devanagari: {\n        hasOldSpec: true,\n        virama: 0x094D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Bengali: {\n        hasOldSpec: true,\n        virama: 0x09CD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gurmukhi: {\n        hasOldSpec: true,\n        virama: 0x0A4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gujarati: {\n        hasOldSpec: true,\n        virama: 0x0ACD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Oriya: {\n        hasOldSpec: true,\n        virama: 0x0B4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Tamil: {\n        hasOldSpec: true,\n        virama: 0x0BCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Telugu: {\n        hasOldSpec: true,\n        virama: 0x0C4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Explicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Kannada: {\n        hasOldSpec: true,\n        virama: 0x0CCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Malayalam: {\n        hasOldSpec: true,\n        virama: 0x0D4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Log_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    // Handled by UniversalShaper\n    // Sinhala: {\n    //   hasOldSpec: false,\n    //   virama: 0x0DCA,\n    //   basePos: 'Last_Sinhala',\n    //   rephPos: POSITIONS.After_Main,\n    //   rephMode: 'Explicit',\n    //   blwfMode: 'Pre_And_Post'\n    // },\n    Khmer: {\n        hasOldSpec: false,\n        virama: 0x17D2,\n        basePos: \"First\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n        rephMode: \"Vis_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    }\n};\nconst $79e3b6f2c331d0bf$export$f647c9cfdd77d95a = {\n    // Khmer\n    0x17BE: [\n        0x17C1,\n        0x17BE\n    ],\n    0x17BF: [\n        0x17C1,\n        0x17BF\n    ],\n    0x17C0: [\n        0x17C1,\n        0x17C0\n    ],\n    0x17C4: [\n        0x17C1,\n        0x17C4\n    ],\n    0x17C5: [\n        0x17C1,\n        0x17C5\n    ]\n};\n\n\n\nconst { decompositions: $d203e6b9523d0071$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $d203e6b9523d0071$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"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\"));\nconst $d203e6b9523d0071$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($d22b56f2cf15e5ba$exports))));\nclass $d203e6b9523d0071$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($d203e6b9523d0071$var$setupSyllables);\n        plan.addStage([\n            \"locl\",\n            \"ccmp\"\n        ]);\n        plan.addStage($d203e6b9523d0071$var$initialReordering);\n        plan.addStage(\"nukt\");\n        plan.addStage(\"akhn\");\n        plan.addStage(\"rphf\", false);\n        plan.addStage(\"rkrf\");\n        plan.addStage(\"pref\", false);\n        plan.addStage(\"blwf\", false);\n        plan.addStage(\"abvf\", false);\n        plan.addStage(\"half\", false);\n        plan.addStage(\"pstf\", false);\n        plan.addStage(\"vatu\");\n        plan.addStage(\"cjct\");\n        plan.addStage(\"cfar\", false);\n        plan.addStage($d203e6b9523d0071$var$finalReordering);\n        plan.addStage({\n            local: [\n                \"init\"\n            ],\n            global: [\n                \"pres\",\n                \"abvs\",\n                \"blws\",\n                \"psts\",\n                \"haln\",\n                \"dist\",\n                \"abvm\",\n                \"blwm\",\n                \"calt\",\n                \"clig\"\n            ]\n        });\n        // Setup the indic config for the selected script\n        plan.unicodeScript = $e38a1a895f6aeb54$export$ce50e82f12a827a4(plan.script);\n        plan.indicConfig = (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5).Default;\n        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n    // TODO: turn off kern (Khmer) and liga features.\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split matras\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            let d = (0, $79e3b6f2c331d0bf$export$f647c9cfdd77d95a)[codepoint] || $d203e6b9523d0071$var$decompositions[codepoint];\n            if (d) {\n                let decomposed = d.map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d203e6b9523d0071$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $d203e6b9523d0071$var$indicCategory(glyph) {\n    return $d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $d203e6b9523d0071$var$indicPosition(glyph) {\n    return 1 << ($d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nclass $d203e6b9523d0071$var$IndicInfo {\n    constructor(category, position, syllableType, syllable){\n        this.category = category;\n        this.position = position;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $d203e6b9523d0071$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    let last = 0;\n    for (let [start, end, tags] of $d203e6b9523d0071$var$stateMachine.match(glyphs.map($d203e6b9523d0071$var$indicCategory))){\n        if (start > last) {\n            ++syllable;\n            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n        }\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(glyphs[i]), $d203e6b9523d0071$var$indicPosition(glyphs[i]), tags[0], syllable);\n        last = end + 1;\n    }\n    if (last < glyphs.length) {\n        ++syllable;\n        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n    }\n}\nfunction $d203e6b9523d0071$var$isConsonant(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$8519deaa7de2b07);\n}\nfunction $d203e6b9523d0071$var$isJoiner(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$bbcd928767338e0d);\n}\nfunction $d203e6b9523d0071$var$isHalantOrCoeng(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc);\n}\nfunction $d203e6b9523d0071$var$wouldSubstitute(glyphs, feature) {\n    for (let glyph of glyphs)glyph.features = {\n        [feature]: true\n    };\n    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n    GSUB.applyFeatures([\n        feature\n    ], glyphs);\n    return glyphs.length === 1;\n}\nfunction $d203e6b9523d0071$var$consonantPosition(font, consonant, virama) {\n    let glyphs = [\n        virama,\n        consonant,\n        virama\n    ];\n    if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n}\nfunction $d203e6b9523d0071$var$initialReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    let virama = font.glyphForCodePoint(indicConfig.virama).id;\n    if (virama) {\n        let info = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, virama, [\n            indicConfig.virama\n        ]);\n        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) glyphs[i].shaperInfo.position = $d203e6b9523d0071$var$consonantPosition(font, glyphs[i].copy(), info);\n    }\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        let { category: category , syllableType: syllableType  } = glyphs[start].shaperInfo;\n        if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n        if (syllableType === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(g), $d203e6b9523d0071$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n            // Insert after possible Repha.\n            let i = start;\n            while(i < end && glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha)i++;\n            glyphs.splice(i++, 0, g);\n            end++;\n        }\n        // 1. Find base consonant:\n        //\n        // The shaping engine finds the base consonant of the syllable, using the\n        // following algorithm: starting from the end of the syllable, move backwards\n        // until a consonant is found that does not have a below-base or post-base\n        // form (post-base forms have to follow below-base forms), or that is not a\n        // pre-base reordering Ra, or arrive at the first consonant. The consonant\n        // stopped at will be the base.\n        let base = end;\n        let limit = start;\n        let hasReph = false;\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        if (indicConfig.rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$d203e6b9523d0071$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n            // See if it matches the 'rphf' feature.\n            let g = [\n                glyphs[start].copy(),\n                glyphs[start + 1].copy(),\n                glyphs[start + 2].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $d203e6b9523d0071$var$wouldSubstitute(g, \"rphf\")) {\n                limit += 2;\n                while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n                base = start;\n                hasReph = true;\n            }\n        } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha) {\n            limit++;\n            while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n            base = start;\n            hasReph = true;\n        }\n        switch(indicConfig.basePos){\n            case \"Last\":\n                {\n                    // starting from the end of the syllable, move backwards\n                    let i = end;\n                    let seenBelow = false;\n                    do {\n                        let info = glyphs[--i].shaperInfo;\n                        // until a consonant is found\n                        if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) {\n                            // that does not have a below-base or post-base form\n                            // (post-base forms have to follow below-base forms),\n                            if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C && (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                                base = i;\n                                break;\n                            }\n                            // or that is not a pre-base reordering Ra,\n                            //\n                            // IMPLEMENTATION NOTES:\n                            //\n                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n                            // by the logic above already.\n                            //\n                            // or arrive at the first consonant. The consonant stopped at will\n                            // be the base.\n                            if (info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n                            base = i;\n                        } else if (start < i && info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ && glyphs[i - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                    }while (i > limit);\n                    break;\n                }\n            case \"First\":\n                // The first consonant is always the base.\n                base = start;\n                // Mark all subsequent consonants as below.\n                for(let i = base + 1; i < end; i++)if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n        }\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        //\n        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n        if (hasReph && base === start && limit - base <= 2) hasReph = false;\n        // 2. Decompose and reorder Matras:\n        //\n        // Each matra and any syllable modifier sign in the cluster are moved to the\n        // appropriate position relative to the consonant(s) in the cluster. The\n        // shaping engine decomposes two- or three-part matras into their constituent\n        // parts before any repositioning. Matra characters are classified by which\n        // consonant in a conjunct they have affinity for and are reordered to the\n        // following positions:\n        //\n        //   o Before first half form in the syllable\n        //   o After subjoined consonants\n        //   o After post-form consonant\n        //   o After main consonant (for above marks)\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // The normalize() routine has already decomposed matras for us, so we don't\n        // need to worry about that.\n        // 3.  Reorder marks to canonical order:\n        //\n        // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n        // if necessary, so that the nukta is first.\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // We don't need to do this: the normalize() routine already did this for us.\n        // Reorder characters\n        for(let i1 = start; i1 < base; i1++){\n            let info = glyphs[i1].shaperInfo;\n            info.position = Math.min((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_C, info.position);\n        }\n        if (base < end) glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n        // Mark final consonants.  A final consonant is one appearing after a matra,\n        // like in Khmer.\n        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n            for(let j = i2 + 1; j < end; j++)if ($d203e6b9523d0071$var$isConsonant(glyphs[j])) {\n                glyphs[j].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Final_C;\n                break;\n            }\n            break;\n        }\n        // Handle beginning Ra\n        if (hasReph) glyphs[start].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;\n        // For old-style Indic script tags, move the first post-base Halant after\n        // last consonant.\n        //\n        // Reports suggest that in some scripts Uniscribe does this only if there\n        // is *not* a Halant after last consonant already (eg. Kannada), while it\n        // does it unconditionally in other scripts (eg. Malayalam).  We don't\n        // currently know about other scripts, so we single out Malayalam for now.\n        //\n        // Kannada test case:\n        // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n        // With some versions of Lohit Kannada.\n        // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n        //\n        // Malayalam test case:\n        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n        // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n        if (plan.isOldSpec) {\n            let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) {\n                let j;\n                for(j = end - 1; j > i; j--){\n                    if ($d203e6b9523d0071$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                }\n                if (glyphs[j].shaperInfo.category !== (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && j > i) {\n                    // Move Halant to after last consonant.\n                    let t = glyphs[i];\n                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n                    glyphs[j] = t;\n                }\n                break;\n            }\n        }\n        // Attach misc marks to previous char to move with them.\n        let lastPos = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Start;\n        for(let i3 = start; i3 < end; i3++){\n            let info = glyphs[i3].shaperInfo;\n            if (info.category & ((0, $79e3b6f2c331d0bf$export$bbcd928767338e0d) | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).RS | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).CM | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc) & info.category)) {\n                info.position = lastPos;\n                if (info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    // Uniscribe doesn't move the Halant with Left Matra.\n                    // TEST: U+092B,U+093F,U+094DE\n                    // We follow.  This is important for the Sinhala\n                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n                    // where U+0DD9 is a left matra and U+0DCA is the virama.\n                    // We don't want to move the virama with the left matra.\n                    // TEST: U+0D9A,U+0DDA\n                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                        info.position = glyphs[j - 1].shaperInfo.position;\n                        break;\n                    }\n                }\n            } else if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) lastPos = info.position;\n        }\n        // For post-base consonants let them own anything before them\n        // since the last consonant or matra.\n        let last = base;\n        for(let i4 = base + 1; i4 < end; i4++){\n            if ($d203e6b9523d0071$var$isConsonant(glyphs[i4])) {\n                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n                last = i4;\n            } else if (glyphs[i4].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) last = i4;\n        }\n        let arr = glyphs.slice(start, end);\n        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position);\n        glyphs.splice(start, arr.length, ...arr);\n        // Find base again\n        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            base = i5;\n            break;\n        }\n        // Setup features now\n        // Reph\n        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;\n        // Pre-base\n        let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n        for(let i7 = start; i7 < base; i7++){\n            glyphs[i7].features.half = true;\n            if (blwf) glyphs[i7].features.blwf = true;\n        }\n        // Post-base\n        for(let i8 = base + 1; i8 < end; i8++){\n            glyphs[i8].features.abvf = true;\n            glyphs[i8].features.pstf = true;\n            glyphs[i8].features.blwf = true;\n        }\n        if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n            // Old-spec eye-lash Ra needs special handling.  From the\n            // spec:\n            //\n            // \"The feature 'below-base form' is applied to consonants\n            // having below-base forms and following the base consonant.\n            // The exception is vattu, which may appear below half forms\n            // as well as below the base glyph. The feature 'below-base\n            // form' will be applied to all such occurrences of Ra as well.\"\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n            // with Sanskrit 2003 font.\n            //\n            // However, note that Ra,Halant,ZWJ is the correct way to\n            // request eyelash form of Ra, so we wouldbn't inhibit it\n            // in that sequence.\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Ra && glyphs[i + 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n                glyphs[i].features.blwf = true;\n                glyphs[i + 1].features.blwf = true;\n            }\n        }\n        let prefLen = 2;\n        if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n        for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){\n            let g = [\n                glyphs[i9].copy(),\n                glyphs[i9 + 1].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g, \"pref\")) {\n                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;\n                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n                // Read the feature spec.\n                // This allows distinguishing the following cases with MS Khmer fonts:\n                // U+1784,U+17D2,U+179A,U+17D2,U+1782\n                // U+1784,U+17D2,U+1782,U+17D2,U+179A\n                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;\n                break;\n            }\n        }\n        // Apply ZWJ/ZWNJ effects\n        for(let i10 = start + 1; i10 < end; i10++)if ($d203e6b9523d0071$var$isJoiner(glyphs[i10])) {\n            let nonJoiner = glyphs[i10].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWNJ;\n            let j = i10;\n            do {\n                j--;\n                // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n                // being there, since we don't skip them for the CJCT\n                // feature (ie. F_MANUAL_ZWJ)\n                // A ZWNJ disables HALF.\n                if (nonJoiner) delete glyphs[j].features.half;\n            }while (j > start && !$d203e6b9523d0071$var$isConsonant(glyphs[j]));\n        }\n    }\n}\nfunction $d203e6b9523d0071$var$finalReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        // 4. Final reordering:\n        //\n        // After the localized forms and basic shaping forms GSUB features have been\n        // applied (see below), the shaping engine performs some final glyph\n        // reordering before applying all the remaining font features to the entire\n        // cluster.\n        let tryPref = !!features.pref;\n        // Find base again\n        let base = start;\n        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            if (tryPref && base + 1 < end) {\n                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                        // Ok, this was a 'pref' candidate but didn't form any.\n                        // Base is around here...\n                        base = i;\n                        while(base < end && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[base]))base++;\n                        glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).BASE_C;\n                        tryPref = false;\n                    }\n                    break;\n                }\n            }\n            // For Malayalam, skip over unformed below- (but NOT post-) forms.\n            if (plan.unicodeScript === \"Malayalam\") for(let i = base + 1; i < end; i++){\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i === end || !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[i])) break;\n                i++; // Skip halant.\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i < end && $d203e6b9523d0071$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) {\n                    base = i;\n                    glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n                }\n            }\n            if (start < base && glyphs[base].shaperInfo.position > (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) base--;\n            break;\n        }\n        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ) base--;\n        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc)))base--;\n        // o Reorder matras:\n        //\n        // If a pre-base matra character had been reordered before applying basic\n        // features, the glyph can be moved closer to the main consonant based on\n        // whether half-forms had been formed. Actual position for the matra is\n        // defined as “after last standalone halant glyph, after initial matra\n        // position and before the main consonant”. If ZWJ or ZWNJ follow this\n        // halant, position is moved after it.\n        //\n        if (start + 1 < end && start < base) {\n            // If we lost track of base, alas, position before last thingy.\n            let newPos = base === end ? base - 2 : base - 1;\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                // If we found no Halant we are done.\n                // Otherwise only proceed if the Halant does\n                // not belong to the Matra itself!\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.\n                {\n                    if (newPos + 1 < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos + 1])) newPos++;\n                } else newPos = start; // No move.\n            }\n            if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                // Now go see if there's actually any matras...\n                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    let oldPos = i - 1;\n                    if (oldPos < base && base <= newPos) base--;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n                    glyphs[newPos] = tmp;\n                    newPos--;\n                }\n            }\n        }\n        // o Reorder reph:\n        //\n        // Reph’s original position is always at the beginning of the syllable,\n        // (i.e. it is not reordered at the character reordering stage). However,\n        // it will be reordered according to the basic-forms shaping results.\n        // Possible positions for reph, depending on the script, are; after main,\n        // before post-base consonant forms, and after post-base consonant forms.\n        // Two cases:\n        //\n        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n        //   we should only move it if the sequence ligated to the repha form.\n        //\n        // - If repha is encoded separately and in the logical position, we should only\n        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n        //   to make it work without the reordering.\n        if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n            let newRephPos;\n            let rephPos = indicConfig.rephPos;\n            let found = false;\n            // 1. If reph should be positioned after post-base consonant forms,\n            //    proceed to step 5.\n            if (rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post) {\n                //  2. If the reph repositioning class is not after post-base: target\n                //     position is after the first explicit halant glyph between the\n                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n                //     are following this halant, position is moved after it. If such\n                //     position is found, this is the target position. Otherwise,\n                //     proceed to the next step.\n                //\n                //     Note: in old-implementation fonts, where classifications were\n                //     fixed in shaping engine, there was no case where reph position\n                //     will be found on this step.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n                // 3. If reph should be repositioned after the main consonant: find the\n                //    first consonant not ligated with main, or find the first\n                //    consonant that is not a potential pre-base reordering Ra.\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main)newRephPos++;\n                    found = newRephPos < end;\n                }\n                // 4. If reph should be positioned before post-base consonant, find\n                //    first post-base classified consonant not ligated with main. If no\n                //    consonant is found, the target position should be before the\n                //    first matra, syllable modifier sign or vedic sign.\n                //\n                // This is our take on what step 4 is trying to say (and failing, BADLY).\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Sub) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)))newRephPos++;\n                    found = newRephPos < end;\n                }\n            }\n            //  5. If no consonant is found in steps 3 or 4, move reph to a position\n            //     immediately before the first post-base matra, syllable modifier\n            //     sign or vedic sign that has a reordering class after the intended\n            //     reph position. For example, if the reordering position for reph\n            //     is post-main, it will skip above-base matras that also have a\n            //     post-main position.\n            if (!found) {\n                // Copied from step 2.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n            }\n            // 6. Otherwise, reorder reph to the end of the syllable.\n            if (!found) {\n                newRephPos = end - 1;\n                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)newRephPos--;\n                // If the Reph is to be ending up after a Matra,Halant sequence,\n                // position it before that Halant so it can interact with the Matra.\n                // However, if it's a plain Consonant,Halant we shouldn't do that.\n                // Uniscribe doesn't do this.\n                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) newRephPos--;\n                }\n            }\n            let reph = glyphs[start];\n            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n            glyphs[newRephPos] = reph;\n            if (start < base && base <= newRephPos) base--;\n        }\n        // o Reorder pre-base reordering consonants:\n        //\n        // If a pre-base reordering consonant is found, reorder it according to\n        // the following rules:\n        if (tryPref && base + 1 < end) {\n            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                // 1. Only reorder a glyph produced by substitution during application\n                //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n                //    the feature generally but block it in certain contexts.)\n                // Note: We just check that something got substituted.  We don't check that\n                // the <pref> feature actually did it...\n                //\n                // Reorder pref only if it ligated.\n                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n                    // 2. Try to find a target position the same way as for pre-base matra.\n                    //    If it is found, reorder pre-base consonant glyph.\n                    //\n                    // 3. If position is not found, reorder immediately before main\n                    //    consonant.\n                    let newPos = base;\n                    // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n                    // We want to position matra after them.\n                    if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n                        // split matra, it should be reordered to *before* the left part of such matra.\n                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                            let oldPos = i;\n                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                                newPos--;\n                                break;\n                            }\n                        }\n                    }\n                    if (newPos > start && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n                    {\n                        if (newPos < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos])) newPos++;\n                    }\n                    let oldPos = i;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n                    glyphs[newPos] = tmp;\n                    if (newPos <= base && base < oldPos) base++;\n                }\n                break;\n            }\n        }\n        // Apply 'init' to the Left Matra if it's a word start.\n        if (glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $gfJaN$unicodeproperties.getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n    }\n}\nfunction $d203e6b9523d0071$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\n\n\n\n\n\n\n\n\n\nconst { categories: $9b772791ccede8a5$var$categories , decompositions: $9b772791ccede8a5$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $9b772791ccede8a5$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"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\"));\nconst $9b772791ccede8a5$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports))));\nclass $9b772791ccede8a5$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($9b772791ccede8a5$var$setupSyllables);\n        // Default glyph pre-processing group\n        plan.addStage([\n            \"locl\",\n            \"ccmp\",\n            \"nukt\",\n            \"akhn\"\n        ]);\n        // Reordering group\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"rphf\"\n        ], false);\n        plan.addStage($9b772791ccede8a5$var$recordRphf);\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"pref\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$recordPref);\n        // Orthographic unit shaping group\n        plan.addStage([\n            \"rkrf\",\n            \"abvf\",\n            \"blwf\",\n            \"half\",\n            \"pstf\",\n            \"vatu\",\n            \"cjct\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$reorder);\n        // Topographical features\n        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n        // Standard topographic presentation and positional feature application\n        plan.addStage([\n            \"abvs\",\n            \"blws\",\n            \"pres\",\n            \"psts\",\n            \"dist\",\n            \"abvm\",\n            \"blwm\"\n        ]);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split vowels\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            if ($9b772791ccede8a5$var$decompositions[codepoint]) {\n                let decomposed = $9b772791ccede8a5$var$decompositions[codepoint].map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($9b772791ccede8a5$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $9b772791ccede8a5$var$useCategory(glyph) {\n    return $9b772791ccede8a5$var$trie.get(glyph.codePoints[0]);\n}\nclass $9b772791ccede8a5$var$USEInfo {\n    constructor(category, syllableType, syllable){\n        this.category = category;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $9b772791ccede8a5$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    for (let [start, end, tags] of $9b772791ccede8a5$var$stateMachine.match(glyphs.map($9b772791ccede8a5$var$useCategory))){\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $9b772791ccede8a5$var$USEInfo($9b772791ccede8a5$var$categories[$9b772791ccede8a5$var$useCategory(glyphs[i])], tags[0], syllable);\n        // Assign rphf feature\n        let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;\n    }\n}\nfunction $9b772791ccede8a5$var$clearSubstitutionFlags(font, glyphs) {\n    for (let glyph of glyphs)glyph.substituted = false;\n}\nfunction $9b772791ccede8a5$var$recordRphf(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.\n    glyph.shaperInfo.category = \"R\";\n}\nfunction $9b772791ccede8a5$var$recordPref(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.\n    glyph.shaperInfo.category = \"VPre\";\n}\nfunction $9b772791ccede8a5$var$reorder(font, glyphs) {\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    for(let start = 0, end = $9b772791ccede8a5$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $9b772791ccede8a5$var$nextSyllable(glyphs, start)){\n        let i, j;\n        let info = glyphs[start].shaperInfo;\n        let type = info.syllableType;\n        // Only a few syllable types need reordering.\n        if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n        // Insert a dotted circle glyph in broken clusters.\n        if (type === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = info;\n            // Insert after possible Repha.\n            for(i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n            glyphs.splice(++i, 0, g);\n            end++;\n        }\n        // Move things forward.\n        if (info.category === \"R\" && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.\n        for(i = start + 1; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) {\n                // If we hit a halant, move before it; otherwise it's a base: move to it's\n                // place, and shift things in between backward.\n                if ($9b772791ccede8a5$var$isHalant(glyphs[i])) i--;\n                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n                break;\n            }\n        }\n        // Move things back.\n        for(i = start, j = end; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's\n            // place, and shift things in between backward.\n            j = $9b772791ccede8a5$var$isHalant(glyphs[i]) ? i + 1 : i;\n            else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n        }\n    }\n}\nfunction $9b772791ccede8a5$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nfunction $9b772791ccede8a5$var$isHalant(glyph) {\n    return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $9b772791ccede8a5$var$isBase(info) {\n    return info.category === \"B\" || info.category === \"GB\";\n}\n\n\nconst $fdb4471fc82bc2c2$var$SHAPERS = {\n    arab: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mong: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    syrc: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    \"nko \": (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phag: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mand: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mani: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phlp: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    hang: (0, $fa1d9fd80dd7279e$export$2e2bcd8739ae039),\n    bng2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    beng: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    dev2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    deva: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gjr2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gujr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    guru: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gur2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knda: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knd2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlm2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlym: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    ory2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    orya: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    taml: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tml2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    telu: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tel2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    khmr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    bali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    batk: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    brah: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    bugi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    buhd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cakm: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cham: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    dupl: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    egyp: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    gran: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    hano: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    java: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kthi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khar: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khoj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sind: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lepc: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    limb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    mahj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mand: UniversalShaper, // Mandaic\n    // mani: UniversalShaper, // Manichaean\n    mtei: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    modi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mong: UniversalShaper, // Mongolian\n    // 'nko ': UniversalShaper, // N’Ko\n    hmng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // phag: UniversalShaper, // Phags-pa\n    // phlp: UniversalShaper, // Psalter Pahlavi\n    rjng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    saur: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    shrd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sidd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sinh: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    sund: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sylo: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tglg: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tagb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tale: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lana: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tavt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    takr: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tibt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tfng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tirh: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    latn: (0, $d28fb665ee343afc$export$2e2bcd8739ae039),\n    DFLT: (0, $d28fb665ee343afc$export$2e2bcd8739ae039 // Default\n    )\n};\nfunction $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script) {\n    if (!Array.isArray(script)) script = [\n        script\n    ];\n    for (let s of script){\n        let shaper = $fdb4471fc82bc2c2$var$SHAPERS[s];\n        if (shaper) return shaper;\n    }\n    return 0, $d28fb665ee343afc$export$2e2bcd8739ae039;\n}\n\n\n\n\n\nclass $86bc1883359e094a$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    let glyph = this.glyphIterator.cur;\n                    switch(table.version){\n                        case 1:\n                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                            break;\n                        case 2:\n                            glyph.id = table.substitute.get(index);\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let sequence = table.sequences.get(index);\n                        if (sequence.length === 0) {\n                            // If the sequence length is zero, delete the glyph.\n                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                            this.glyphs.splice(this.glyphIterator.index, 1);\n                            return true;\n                        }\n                        this.glyphIterator.cur.id = sequence[0];\n                        this.glyphIterator.cur.ligatureComponent = 0;\n                        let features = this.glyphIterator.cur.features;\n                        let curGlyph = this.glyphIterator.cur;\n                        let replacement = sequence.slice(1).map((gid, i)=>{\n                            let glyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, gid, undefined, features);\n                            glyph.shaperInfo = curGlyph.shaperInfo;\n                            glyph.isLigated = curGlyph.isLigated;\n                            glyph.ligatureComponent = i + 1;\n                            glyph.substituted = true;\n                            glyph.isMultiplied = true;\n                            return glyph;\n                        });\n                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n                        return true;\n                    }\n                    return false;\n                }\n            case 3:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let USER_INDEX = 0; // TODO\n                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n                        return true;\n                    }\n                    return false;\n                }\n            case 4:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    for (let ligature of table.ligatureSets.get(index)){\n                        let matched = this.sequenceMatchIndices(1, ligature.components);\n                        if (!matched) continue;\n                        let curGlyph = this.glyphIterator.cur;\n                        // Concatenate all of the characters the new ligature will represent\n                        let characters = curGlyph.codePoints.slice();\n                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);\n                        // Create the replacement ligature glyph\n                        let ligatureGlyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, curGlyph.features);\n                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n                        ligatureGlyph.isLigated = true;\n                        ligatureGlyph.substituted = true;\n                        // From Harfbuzz:\n                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                        //   the ligature to keep its old ligature id.  This will allow it to attach to\n                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                        //   later, we don't want them to lose their ligature id/component, otherwise\n                        //   GPOS will fail to correctly position the mark ligature on top of the\n                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                        //\n                        // - If a ligature is formed of components that some of which are also ligatures\n                        //   themselves, and those ligature components had marks attached to *their*\n                        //   components, we have to attach the marks to the new ligature component\n                        //   positions!  Now *that*'s tricky!  And these marks may be following the\n                        //   last component of the whole sequence, so we should loop forward looking\n                        //   for them and update them.\n                        //\n                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                        //   the new ligature with a component value of 2.\n                        //\n                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                        let isMarkLigature = curGlyph.isMark;\n                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;\n                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                        let lastLigID = curGlyph.ligatureID;\n                        let lastNumComps = curGlyph.codePoints.length;\n                        let curComps = lastNumComps;\n                        let idx = this.glyphIterator.index + 1;\n                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                        // This allows GPOS to attach marks to the correct ligature components.\n                        for (let matchIndex of matched){\n                            // Don't assign new ligature components for mark ligatures (see above)\n                            if (isMarkLigature) idx = matchIndex;\n                            else while(idx < matchIndex){\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                                idx++;\n                            }\n                            lastLigID = this.glyphs[idx].ligatureID;\n                            lastNumComps = this.glyphs[idx].codePoints.length;\n                            curComps += lastNumComps;\n                            idx++; // skip base glyph\n                        }\n                        // Adjust ligature components for any marks following\n                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){\n                            if (this.glyphs[i1].ligatureID === lastLigID) {\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[i1].ligatureComponent = ligatureComponent;\n                            } else break;\n                        }\n                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);\n                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                        return true;\n                    }\n                    return false;\n                }\n            case 5:\n                return this.applyContext(table);\n            case 6:\n                return this.applyChainingContext(table);\n            case 7:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n        }\n    }\n}\n\n\n\nclass $79ea6270f0a90256$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyPositionValue(sequenceIndex, value) {\n        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n        if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n        if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n        if (value.xPlacement != null) position.xOffset += value.xPlacement;\n        if (value.yPlacement != null) position.yOffset += value.yPlacement;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n        }\n    // TODO: device tables\n    }\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            this.applyPositionValue(0, table.value);\n                            break;\n                        case 2:\n                            this.applyPositionValue(0, table.values.get(index));\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let nextGlyph = this.glyphIterator.peek();\n                    if (!nextGlyph) return false;\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            let set = table.pairSets.get(index);\n                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {\n                                this.applyPositionValue(0, pair.value1);\n                                this.applyPositionValue(1, pair.value2);\n                                return true;\n                            }\n                            return false;\n                        case 2:\n                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                            if (class1 === -1 || class2 === -1) return false;\n                            var pair1 = table.classRecords.get(class1).get(class2);\n                            this.applyPositionValue(0, pair1.value1);\n                            this.applyPositionValue(1, pair1.value2);\n                            return true;\n                    }\n                }\n            case 3:\n                {\n                    let nextIndex = this.glyphIterator.peekIndex();\n                    let nextGlyph = this.glyphs[nextIndex];\n                    if (!nextGlyph) return false;\n                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n                    if (!curRecord || !curRecord.exitAnchor) return false;\n                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n                    if (!nextRecord || !nextRecord.entryAnchor) return false;\n                    let entry = this.getAnchor(nextRecord.entryAnchor);\n                    let exit = this.getAnchor(curRecord.exitAnchor);\n                    let cur = this.positions[this.glyphIterator.index];\n                    let next = this.positions[nextIndex];\n                    let d;\n                    switch(this.direction){\n                        case \"ltr\":\n                            cur.xAdvance = exit.x + cur.xOffset;\n                            d = entry.x + next.xOffset;\n                            next.xAdvance -= d;\n                            next.xOffset -= d;\n                            break;\n                        case \"rtl\":\n                            d = exit.x + cur.xOffset;\n                            cur.xAdvance -= d;\n                            cur.xOffset -= d;\n                            next.xAdvance = entry.x + next.xOffset;\n                            break;\n                    }\n                    if (this.glyphIterator.flags.rightToLeft) {\n                        this.glyphIterator.cur.cursiveAttachment = nextIndex;\n                        cur.yOffset = entry.y - exit.y;\n                    } else {\n                        nextGlyph.cursiveAttachment = this.glyphIterator.index;\n                        cur.yOffset = exit.y - entry.y;\n                    }\n                    return true;\n                }\n            case 4:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n                    if (baseGlyphIndex < 0) return false;\n                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (baseIndex === -1) return false;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 5:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n                    if (baseGlyphIndex < 0) return false;\n                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (ligIndex === -1) return false;\n                    let ligAttach = table.ligatureArray[ligIndex];\n                    let markGlyph = this.glyphIterator.cur;\n                    let ligGlyph = this.glyphs[baseGlyphIndex];\n                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = ligAttach[compIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 6:\n                {\n                    let mark1Index = this.coverageIndex(table.mark1Coverage);\n                    if (mark1Index === -1) return false;\n                    // get the previous mark to attach to\n                    let prevIndex = this.glyphIterator.peekIndex(-1);\n                    let prev = this.glyphs[prevIndex];\n                    if (!prev || !prev.isMark) return false;\n                    let cur = this.glyphIterator.cur;\n                    // The following logic was borrowed from Harfbuzz\n                    let good = false;\n                    if (cur.ligatureID === prev.ligatureID) {\n                        if (!cur.ligatureID) good = true;\n                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n                    } else // If ligature ids don't match, it may be the case that one of the marks\n                    // itself is a ligature, in which case match.\n                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n                    if (!good) return false;\n                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n                    if (mark2Index === -1) return false;\n                    let markRecord = table.mark1Array[mark1Index];\n                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, prevIndex);\n                    return true;\n                }\n            case 7:\n                return this.applyContext(table);\n            case 8:\n                return this.applyChainingContext(table);\n            case 9:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`Unsupported GPOS table: ${lookupType}`);\n        }\n    }\n    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n        let baseCoords = this.getAnchor(baseAnchor);\n        let markCoords = this.getAnchor(markRecord.markAnchor);\n        let basePos = this.positions[baseGlyphIndex];\n        let markPos = this.positions[this.glyphIterator.index];\n        markPos.xOffset = baseCoords.x - markCoords.x;\n        markPos.yOffset = baseCoords.y - markCoords.y;\n        this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n    getAnchor(anchor) {\n        // TODO: contour point, device tables\n        let x = anchor.xCoordinate;\n        let y = anchor.yCoordinate;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        super.applyFeatures(userFeatures, glyphs, advances);\n        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);\n        this.fixMarkAttachment();\n    }\n    fixCursiveAttachment(i) {\n        let glyph = this.glyphs[i];\n        if (glyph.cursiveAttachment != null) {\n            let j = glyph.cursiveAttachment;\n            glyph.cursiveAttachment = null;\n            this.fixCursiveAttachment(j);\n            this.positions[i].yOffset += this.positions[j].yOffset;\n        }\n    }\n    fixMarkAttachment() {\n        for(let i = 0; i < this.glyphs.length; i++){\n            let glyph = this.glyphs[i];\n            if (glyph.markAttachment != null) {\n                let j = glyph.markAttachment;\n                this.positions[i].xOffset += this.positions[j].xOffset;\n                this.positions[i].yOffset += this.positions[j].yOffset;\n                if (this.direction === \"ltr\") for(let k = j; k < i; k++){\n                    this.positions[i].xOffset -= this.positions[k].xAdvance;\n                    this.positions[i].yOffset -= this.positions[k].yAdvance;\n                }\n                else for(let k1 = j + 1; k1 < i + 1; k1++){\n                    this.positions[i].xOffset += this.positions[k1].xAdvance;\n                    this.positions[i].yOffset += this.positions[k1].yAdvance;\n                }\n            }\n        }\n    }\n}\n\n\nclass $b2f26a32cb9ab2fa$export$2e2bcd8739ae039 {\n    setup(glyphRun) {\n        // Map glyphs to GlyphInfo objects so data can be passed between\n        // GSUB and GPOS without mutating the real (shared) Glyph objects.\n        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, glyph.id, [\n                ...glyph.codePoints\n            ]));\n        // Select a script based on what is available in GSUB/GPOS.\n        let script = null;\n        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        // Choose a shaper based on the script, and setup a shaping plan.\n        // This determines which features to apply to which glyphs.\n        this.shaper = $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script);\n        this.plan = new (0, $d7e93cca3cf8ce8a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n        // Assign chosen features to output glyph run\n        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;\n    }\n    substitute(glyphRun) {\n        if (this.GSUBProcessor) {\n            this.plan.process(this.GSUBProcessor, this.glyphInfos);\n            // Map glyph infos back to normal Glyph objects\n            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n        }\n    }\n    position(glyphRun) {\n        if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n        if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        // Reverse the glyphs and positions if the script is right-to-left\n        if (glyphRun.direction === \"rtl\") {\n            glyphRun.glyphs.reverse();\n            glyphRun.positions.reverse();\n        }\n        return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n    zeroMarkAdvances(positions) {\n        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    cleanup() {\n        this.glyphInfos = null;\n        this.plan = null;\n        this.shaper = null;\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.GSUBProcessor) {\n            this.GSUBProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GSUBProcessor.features));\n        }\n        if (this.GPOSProcessor) {\n            this.GPOSProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GPOSProcessor.features));\n        }\n        return features;\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphInfos = null;\n        this.plan = null;\n        this.GSUBProcessor = null;\n        this.GPOSProcessor = null;\n        this.fallbackPosition = true;\n        if (font.GSUB) this.GSUBProcessor = new (0, $86bc1883359e094a$export$2e2bcd8739ae039)(font, font.GSUB);\n        if (font.GPOS) this.GPOSProcessor = new (0, $79ea6270f0a90256$export$2e2bcd8739ae039)(font, font.GPOS);\n    }\n}\n\n\nclass $9d641258c9d7180d$export$2e2bcd8739ae039 {\n    layout(string, features, script, language, direction) {\n        // Make the features parameter optional\n        if (typeof features === \"string\") {\n            direction = language;\n            language = script;\n            script = features;\n            features = [];\n        }\n        // Map string to glyphs if needed\n        if (typeof string === \"string\") {\n            // Attempt to detect the script from the string if not provided.\n            if (script == null) script = $e38a1a895f6aeb54$export$e5cb25e204fb8450(string);\n            var glyphs = this.font.glyphsForString(string);\n        } else {\n            // Attempt to detect the script from the glyph code points if not provided.\n            if (script == null) {\n                let codePoints = [];\n                for (let glyph of string)codePoints.push(...glyph.codePoints);\n                script = $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints);\n            }\n            var glyphs = string;\n        }\n        let glyphRun = new (0, $b19c79ec7a94fa39$export$2e2bcd8739ae039)(glyphs, features, script, language, direction);\n        // Return early if there are no glyphs\n        if (glyphs.length === 0) {\n            glyphRun.positions = [];\n            return glyphRun;\n        }\n        // Setup the advanced layout engine\n        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n        // Substitute and position the glyphs\n        this.substitute(glyphRun);\n        this.position(glyphRun);\n        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n        // Let the layout engine clean up any state it might have\n        if (this.engine && this.engine.cleanup) this.engine.cleanup();\n        return glyphRun;\n    }\n    substitute(glyphRun) {\n        // Call the advanced layout engine to make substitutions\n        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n    position(glyphRun) {\n        // Get initial glyph positions\n        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new (0, $9195cf1266c12ea5$export$2e2bcd8739ae039)(glyph.advanceWidth));\n        let positioned = null;\n        // Call the advanced layout engine. Returns the features applied.\n        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n        // if there is no GPOS table, use unicode properties to position marks.\n        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $a57a26817cd35108$export$2e2bcd8739ae039)(this.font);\n            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n        }\n        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n            if (!this.kernProcessor) this.kernProcessor = new (0, $4646d52c2a559cdb$export$2e2bcd8739ae039)(this.font);\n            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n            glyphRun.features.kern = true;\n        }\n    }\n    hideDefaultIgnorables(glyphs, positions) {\n        let space = this.font.glyphForCodePoint(0x20);\n        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n            glyphs[i] = space;\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    isDefaultIgnorable(ch) {\n        // From DerivedCoreProperties.txt in the Unicode database,\n        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n        // Harfbuzz and Uniscribe do.\n        let plane = ch >> 16;\n        if (plane === 0) // BMP\n        switch(ch >> 8){\n            case 0x00:\n                return ch === 0x00AD;\n            case 0x03:\n                return ch === 0x034F;\n            case 0x06:\n                return ch === 0x061C;\n            case 0x17:\n                return 0x17B4 <= ch && ch <= 0x17B5;\n            case 0x18:\n                return 0x180B <= ch && ch <= 0x180E;\n            case 0x20:\n                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n            case 0xFE:\n                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n            case 0xFF:\n                return 0xFFF0 <= ch && ch <= 0xFFF8;\n            default:\n                return false;\n        }\n        else // Other planes\n        switch(plane){\n            case 0x01:\n                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n            case 0x0E:\n                return 0xE0000 <= ch && ch <= 0xE0FFF;\n            default:\n                return false;\n        }\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n        if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n        return features;\n    }\n    stringsForGlyph(gid) {\n        let result = new Set;\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));\n        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);\n        return Array.from(result);\n    }\n    constructor(font){\n        this.font = font;\n        this.unicodeLayoutEngine = null;\n        this.kernProcessor = null;\n        // Choose an advanced layout engine. We try the AAT morx table first since more\n        // scripts are currently supported because the shaping logic is built into the font.\n        if (this.font.morx) this.engine = new (0, $860fcbd64bc12fbc$export$2e2bcd8739ae039)(this.font);\n        else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $b2f26a32cb9ab2fa$export$2e2bcd8739ae039)(this.font);\n    }\n}\n\n\n\n\n\n\nconst $67ee4828d81adb28$var$SVG_COMMANDS = {\n    moveTo: \"M\",\n    lineTo: \"L\",\n    quadraticCurveTo: \"Q\",\n    bezierCurveTo: \"C\",\n    closePath: \"Z\"\n};\nclass $67ee4828d81adb28$export$2e2bcd8739ae039 {\n    /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */ toFunction() {\n        return (ctx)=>{\n            this.commands.forEach((c)=>{\n                return ctx[c.command].apply(ctx, c.args);\n            });\n        };\n    }\n    /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */ toSVG() {\n        let cmds = this.commands.map((c)=>{\n            let args = c.args.map((arg)=>Math.round(arg * 100) / 100);\n            return `${$67ee4828d81adb28$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n        });\n        return cmds.join(\"\");\n    }\n    /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */ get cbox() {\n        if (!this._cbox) {\n            let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);\n            this._cbox = Object.freeze(cbox);\n        }\n        return this._cbox;\n    }\n    /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */ get bbox() {\n        if (this._bbox) return this._bbox;\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let cx = 0, cy = 0;\n        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        for (let c of this.commands)switch(c.command){\n            case \"moveTo\":\n            case \"lineTo\":\n                let [x, y] = c.args;\n                bbox.addPoint(x, y);\n                cx = x;\n                cy = y;\n                break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n                if (c.command === \"quadraticCurveTo\") {\n                    // http://fontforge.org/bezier.html\n                    var [qp1x, qp1y, p3x, p3y] = c.args;\n                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                    var cp1y = cy + 2 / 3 * (qp1y - cy);\n                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                bbox.addPoint(p3x, p3y);\n                var p0 = [\n                    cx,\n                    cy\n                ];\n                var p1 = [\n                    cp1x,\n                    cp1y\n                ];\n                var p2 = [\n                    cp2x,\n                    cp2y\n                ];\n                var p3 = [\n                    p3x,\n                    p3y\n                ];\n                for(var i = 0; i <= 1; i++){\n                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                    c = 3 * p1[i] - 3 * p0[i];\n                    if (a === 0) {\n                        if (b === 0) continue;\n                        let t = -c / b;\n                        if (0 < t && t < 1) {\n                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);\n                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n                        }\n                        continue;\n                    }\n                    let b2ac = Math.pow(b, 2) - 4 * c * a;\n                    if (b2ac < 0) continue;\n                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t1 && t1 < 1) {\n                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                    }\n                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t2 && t2 < 1) {\n                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                    }\n                }\n                cx = p3x;\n                cy = p3y;\n                break;\n        }\n        return this._bbox = Object.freeze(bbox);\n    }\n    /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */ mapPoints(fn) {\n        let path = new $67ee4828d81adb28$export$2e2bcd8739ae039;\n        for (let c of this.commands){\n            let args = [];\n            for(let i = 0; i < c.args.length; i += 2){\n                let [x, y] = fn(c.args[i], c.args[i + 1]);\n                args.push(x, y);\n            }\n            path[c.command](...args);\n        }\n        return path;\n    }\n    /**\n   * Transforms the path by the given matrix.\n   */ transform(m0, m1, m2, m3, m4, m5) {\n        return this.mapPoints((x, y)=>{\n            const tx = m0 * x + m2 * y + m4;\n            const ty = m1 * x + m3 * y + m5;\n            return [\n                tx,\n                ty\n            ];\n        });\n    }\n    /**\n   * Translates the path by the given offset.\n   */ translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n   * Rotates the path by the given angle (in radians).\n   */ rotate(angle) {\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n   * Scales the path.\n   */ scale(scaleX, scaleY = scaleX) {\n        return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n    constructor(){\n        this.commands = [];\n        this._bbox = null;\n        this._cbox = null;\n    }\n}\nfor (let command of [\n    \"moveTo\",\n    \"lineTo\",\n    \"quadraticCurveTo\",\n    \"bezierCurveTo\",\n    \"closePath\"\n])$67ee4828d81adb28$export$2e2bcd8739ae039.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n        command: command,\n        args: args\n    });\n    return this;\n};\n\n\n\nvar $85e16e40023cfb0f$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \".null\",\n    \"nonmarkingreturn\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quotesingle\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"grave\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"Adieresis\",\n    \"Aring\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ntilde\",\n    \"Odieresis\",\n    \"Udieresis\",\n    \"aacute\",\n    \"agrave\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"atilde\",\n    \"aring\",\n    \"ccedilla\",\n    \"eacute\",\n    \"egrave\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"iacute\",\n    \"igrave\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"ntilde\",\n    \"oacute\",\n    \"ograve\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"otilde\",\n    \"uacute\",\n    \"ugrave\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"dagger\",\n    \"degree\",\n    \"cent\",\n    \"sterling\",\n    \"section\",\n    \"bullet\",\n    \"paragraph\",\n    \"germandbls\",\n    \"registered\",\n    \"copyright\",\n    \"trademark\",\n    \"acute\",\n    \"dieresis\",\n    \"notequal\",\n    \"AE\",\n    \"Oslash\",\n    \"infinity\",\n    \"plusminus\",\n    \"lessequal\",\n    \"greaterequal\",\n    \"yen\",\n    \"mu\",\n    \"partialdiff\",\n    \"summation\",\n    \"product\",\n    \"pi\",\n    \"integral\",\n    \"ordfeminine\",\n    \"ordmasculine\",\n    \"Omega\",\n    \"ae\",\n    \"oslash\",\n    \"questiondown\",\n    \"exclamdown\",\n    \"logicalnot\",\n    \"radical\",\n    \"florin\",\n    \"approxequal\",\n    \"Delta\",\n    \"guillemotleft\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"nonbreakingspace\",\n    \"Agrave\",\n    \"Atilde\",\n    \"Otilde\",\n    \"OE\",\n    \"oe\",\n    \"endash\",\n    \"emdash\",\n    \"quotedblleft\",\n    \"quotedblright\",\n    \"quoteleft\",\n    \"quoteright\",\n    \"divide\",\n    \"lozenge\",\n    \"ydieresis\",\n    \"Ydieresis\",\n    \"fraction\",\n    \"currency\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"perthousand\",\n    \"Acircumflex\",\n    \"Ecircumflex\",\n    \"Aacute\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"apple\",\n    \"Ograve\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Ugrave\",\n    \"dotlessi\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"Lslash\",\n    \"lslash\",\n    \"Scaron\",\n    \"scaron\",\n    \"Zcaron\",\n    \"zcaron\",\n    \"brokenbar\",\n    \"Eth\",\n    \"eth\",\n    \"Yacute\",\n    \"yacute\",\n    \"Thorn\",\n    \"thorn\",\n    \"minus\",\n    \"multiply\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"onehalf\",\n    \"onequarter\",\n    \"threequarters\",\n    \"franc\",\n    \"Gbreve\",\n    \"gbreve\",\n    \"Idotaccent\",\n    \"Scedilla\",\n    \"scedilla\",\n    \"Cacute\",\n    \"cacute\",\n    \"Ccaron\",\n    \"ccaron\",\n    \"dcroat\"\n];\n\n\nclass $0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getPath() {\n        return new (0, $67ee4828d81adb28$export$2e2bcd8739ae039)();\n    }\n    _getCBox() {\n        return this.path.cbox;\n    }\n    _getBBox() {\n        return this.path.bbox;\n    }\n    _getTableMetrics(table) {\n        if (this.id < table.metrics.length) return table.metrics.get(this.id);\n        let metric = table.metrics.get(table.metrics.length - 1);\n        let res = {\n            advance: metric ? metric.advance : 0,\n            bearing: table.bearings.get(this.id - table.metrics.length) || 0\n        };\n        return res;\n    }\n    _getMetrics(cbox) {\n        if (this._metrics) return this._metrics;\n        let { advance: advanceWidth , bearing: leftBearing  } = this._getTableMetrics(this._font.hmtx);\n        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n        if (this._font.vmtx) var { advance: advanceHeight , bearing: topBearing  } = this._getTableMetrics(this._font.vmtx);\n        else {\n            let os2;\n            if (typeof cbox === \"undefined\" || cbox === null) ({ cbox: cbox  } = this);\n            if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n                var topBearing = os2.typoAscender - cbox.maxY;\n            } else {\n                let { hhea: hhea  } = this._font;\n                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n                var topBearing = hhea.ascent - cbox.maxY;\n            }\n        }\n        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n        return this._metrics = {\n            advanceWidth: advanceWidth,\n            advanceHeight: advanceHeight,\n            leftBearing: leftBearing,\n            topBearing: topBearing\n        };\n    }\n    /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */ get cbox() {\n        return this._getCBox();\n    }\n    /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */ get bbox() {\n        return this._getBBox();\n    }\n    /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */ get path() {\n        // Cache the path so we only decode it once\n        // Decoding is actually performed by subclasses\n        return this._getPath();\n    }\n    /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */ getScaledPath(size) {\n        let scale = 1 / this._font.unitsPerEm * size;\n        return this.path.scale(scale);\n    }\n    /**\n   * The glyph's advance width.\n   * @type {number}\n   */ get advanceWidth() {\n        return this._getMetrics().advanceWidth;\n    }\n    /**\n   * The glyph's advance height.\n   * @type {number}\n   */ get advanceHeight() {\n        return this._getMetrics().advanceHeight;\n    }\n    get ligatureCaretPositions() {}\n    _getName() {\n        let { post: post  } = this._font;\n        if (!post) return null;\n        switch(post.version){\n            case 1:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id];\n            case 2:\n                let id = post.glyphNameIndex[this.id];\n                if (id < (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length) return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[id];\n                return post.names[id - (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length];\n            case 2.5:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n            case 4:\n                return String.fromCharCode(post.map[this.id]);\n        }\n    }\n    /**\n   * The glyph's name\n   * @type {string}\n   */ get name() {\n        return this._getName();\n    }\n    /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */ render(ctx, size) {\n        ctx.save();\n        let scale = 1 / this._font.head.unitsPerEm * size;\n        ctx.scale(scale, scale);\n        let fn = this.path.toFunction();\n        fn(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n    constructor(id, codePoints, font){\n        /**\n     * The glyph id in the font\n     * @type {number}\n     */ this.id = id;\n        /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */ this.codePoints = codePoints;\n        this._font = font;\n        // TODO: get this info from GDEF if available\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n        this.isLigature = this.codePoints.length > 1;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"name\", null);\n\n\n\n\n\n// The header for both simple and composite glyphs\nlet $f680320fa07ef53d$var$GlyfHeader = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16\n});\n// Flags for simple glyphs\nconst $f680320fa07ef53d$var$ON_CURVE = 1;\nconst $f680320fa07ef53d$var$X_SHORT_VECTOR = 2;\nconst $f680320fa07ef53d$var$Y_SHORT_VECTOR = 4;\nconst $f680320fa07ef53d$var$REPEAT = 8;\nconst $f680320fa07ef53d$var$SAME_X = 16;\nconst $f680320fa07ef53d$var$SAME_Y = 32;\n// Flags for composite glyphs\nconst $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $f680320fa07ef53d$var$ARGS_ARE_XY_VALUES = 2;\nconst $f680320fa07ef53d$var$ROUND_XY_TO_GRID = 4;\nconst $f680320fa07ef53d$var$WE_HAVE_A_SCALE = 8;\nconst $f680320fa07ef53d$var$MORE_COMPONENTS = 32;\nconst $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $f680320fa07ef53d$var$USE_MY_METRICS = 512;\nconst $f680320fa07ef53d$var$OVERLAP_COMPOUND = 1024;\nconst $f680320fa07ef53d$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $f680320fa07ef53d$var$UNSCALED_COMPONENT_OFFSET = 4096;\nclass $f680320fa07ef53d$export$baf26146a414f24a {\n    copy() {\n        return new $f680320fa07ef53d$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n    constructor(onCurve, endContour, x = 0, y = 0){\n        this.onCurve = onCurve;\n        this.endContour = endContour;\n        this.x = x;\n        this.y = y;\n    }\n}\n// Represents a component in a composite glyph\nclass $f680320fa07ef53d$var$Component {\n    constructor(glyphID, dx, dy){\n        this.glyphID = glyphID;\n        this.dx = dx;\n        this.dy = dy;\n        this.pos = 0;\n        this.scaleX = this.scaleY = 1;\n        this.scale01 = this.scale10 = 0;\n    }\n}\nclass $f680320fa07ef53d$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    // Parses just the glyph header and returns the bounding box\n    _getCBox(internal) {\n        // We need to decode the glyph if variation processing is requested,\n        // so it's easier just to recompute the path's cbox after decoding.\n        if (this._font._variationProcessor && !internal) return this.path.cbox;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += this._font.loca.offsets[this.id];\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n        return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n    _parseGlyphCoord(stream, prev, short, same) {\n        if (short) {\n            var val = stream.readUInt8();\n            if (!same) val = -val;\n            val += prev;\n        } else if (same) var val = prev;\n        else var val = prev + stream.readInt16BE();\n        return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n    _decode() {\n        let glyfPos = this._font.loca.offsets[this.id];\n        let nextPos = this._font.loca.offsets[this.id + 1];\n        // Nothing to do if there is no data for this glyph\n        if (glyfPos === nextPos) return null;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += glyfPos;\n        let startPos = stream.pos;\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);\n        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n        return glyph;\n    }\n    _decodeSimple(glyph, stream) {\n        // this is a simple glyph\n        glyph.points = [];\n        let endPtsOfContours = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, glyph.numberOfContours).decode(stream);\n        glyph.instructions = new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16).decode(stream);\n        let flags = [];\n        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n        while(flags.length < numCoords){\n            var flag = stream.readUInt8();\n            flags.push(flag);\n            // check for repeat flag\n            if (flag & $f680320fa07ef53d$var$REPEAT) {\n                let count = stream.readUInt8();\n                for(let j = 0; j < count; j++)flags.push(flag);\n            }\n        }\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            let point = new $f680320fa07ef53d$export$baf26146a414f24a(!!(flag & $f680320fa07ef53d$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n            glyph.points.push(point);\n        }\n        let px = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $f680320fa07ef53d$var$X_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_X);\n        }\n        let py = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $f680320fa07ef53d$var$Y_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_Y);\n        }\n        if (this._font._variationProcessor) {\n            let points = glyph.points.slice();\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.slice(-4);\n        }\n        return;\n    }\n    _decodeComposite(glyph, stream, offset = 0) {\n        // this is a composite glyph\n        glyph.components = [];\n        let haveInstructions = false;\n        let flags = $f680320fa07ef53d$var$MORE_COMPONENTS;\n        while(flags & $f680320fa07ef53d$var$MORE_COMPONENTS){\n            flags = stream.readUInt16BE();\n            let gPos = stream.pos - offset;\n            let glyphID = stream.readUInt16BE();\n            if (!haveInstructions) haveInstructions = (flags & $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS) !== 0;\n            if (flags & $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS) {\n                var dx = stream.readInt16BE();\n                var dy = stream.readInt16BE();\n            } else {\n                var dx = stream.readInt8();\n                var dy = stream.readInt8();\n            }\n            var component = new $f680320fa07ef53d$var$Component(glyphID, dx, dy);\n            component.pos = gPos;\n            if (flags & $f680320fa07ef53d$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction\n            component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            else if (flags & $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            } else if (flags & $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            }\n            glyph.components.push(component);\n        }\n        if (this._font._variationProcessor) {\n            let points = [];\n            for(let j = 0; j < glyph.components.length; j++){\n                var component = glyph.components[j];\n                points.push(new $f680320fa07ef53d$export$baf26146a414f24a(true, true, component.dx, component.dy));\n            }\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.splice(-4, 4);\n            for(let i = 0; i < points.length; i++){\n                let point = points[i];\n                glyph.components[i].dx = point.x;\n                glyph.components[i].dy = point.y;\n            }\n        }\n        return haveInstructions;\n    }\n    _getPhantomPoints(glyph) {\n        let cbox = this._getCBox(true);\n        if (this._metrics == null) this._metrics = (0, $0e4f52d7996e478b$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n        let { advanceWidth: advanceWidth , advanceHeight: advanceHeight , leftBearing: leftBearing , topBearing: topBearing  } = this._metrics;\n        return [\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n        ];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n    _getContours() {\n        let glyph = this._decode();\n        if (!glyph) return [];\n        let points = [];\n        if (glyph.numberOfContours < 0) // resolve composite glyphs\n        for (let component of glyph.components){\n            let contours = this._font.getGlyph(component.glyphID)._getContours();\n            for(let i = 0; i < contours.length; i++){\n                let contour = contours[i];\n                for(let j = 0; j < contour.length; j++){\n                    let point = contour[j];\n                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n                    points.push(new $f680320fa07ef53d$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n                }\n            }\n        }\n        else points = glyph.points || [];\n        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n        }\n        let contours = [];\n        let cur = [];\n        for(let k = 0; k < points.length; k++){\n            var point = points[k];\n            cur.push(point);\n            if (point.endContour) {\n                contours.push(cur);\n                cur = [];\n            }\n        }\n        return contours;\n    }\n    _getMetrics() {\n        if (this._metrics) return this._metrics;\n        let cbox = this._getCBox(true);\n        super._getMetrics(cbox);\n        if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n        this.path;\n        return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n    _getPath() {\n        let contours = this._getContours();\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        for(let i = 0; i < contours.length; i++){\n            let contour = contours[i];\n            let firstPt = contour[0];\n            let lastPt = contour[contour.length - 1];\n            let start = 0;\n            if (firstPt.onCurve) {\n                // The first point will be consumed by the moveTo command, so skip in the loop\n                var curvePt = null;\n                start = 1;\n            } else {\n                if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve\n                firstPt = lastPt;\n                else // Start at the middle if both the first and last points are off curve\n                firstPt = new $f680320fa07ef53d$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n                var curvePt = firstPt;\n            }\n            path.moveTo(firstPt.x, firstPt.y);\n            for(let j = start; j < contour.length; j++){\n                let pt = contour[j];\n                let prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);\n                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;\n                else if (!prevPt.onCurve && !pt.onCurve) {\n                    let midX = (prevPt.x + pt.x) / 2;\n                    let midY = (prevPt.y + pt.y) / 2;\n                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n                    var curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    var curvePt = null;\n                } else throw new Error(\"Unknown TTF path state\");\n            }\n            // Connect the first and last points\n            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            path.closePath();\n        }\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n    }\n}\n\n\n\n\n\nclass $7ee0705195f3b047$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getName() {\n        if (this._font.CFF2) return super._getName();\n        return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n    bias(s) {\n        if (s.length < 1240) return 107;\n        else if (s.length < 33900) return 1131;\n        else return 32768;\n    }\n    _getPath() {\n        let cff = this._font.CFF2 || this._font[\"CFF \"];\n        let { stream: stream  } = cff;\n        let str = cff.topDict.CharStrings[this.id];\n        let end = str.offset + str.length;\n        stream.pos = str.offset;\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        let stack = [];\n        let trans = [];\n        let width = null;\n        let nStems = 0;\n        let x1 = 0, y1 = 0;\n        let usedGsubrs;\n        let usedSubrs;\n        let open = false;\n        this._usedGsubrs = usedGsubrs = {};\n        this._usedSubrs = usedSubrs = {};\n        let gsubrs = cff.globalSubrIndex || [];\n        let gsubrsBias = this.bias(gsubrs);\n        let privateDict = cff.privateDictForGlyph(this.id) || {};\n        let subrs = privateDict.Subrs || [];\n        let subrsBias = this.bias(subrs);\n        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n        let vsindex = privateDict.vsindex;\n        let variationProcessor = this._font._variationProcessor;\n        function checkWidth() {\n            if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n        }\n        function parseStems() {\n            if (stack.length % 2 !== 0) checkWidth();\n            nStems += stack.length >> 1;\n            return stack.length = 0;\n        }\n        function moveTo(x, y) {\n            if (open) path.closePath();\n            path.moveTo(x, y);\n            open = true;\n        }\n        let parse = function() {\n            while(stream.pos < end){\n                let op = stream.readUInt8();\n                if (op < 32) {\n                    let index, subr, phase;\n                    switch(op){\n                        case 1:\n                        case 3:\n                        case 18:\n                        case 23:\n                            parseStems();\n                            break;\n                        case 4:\n                            if (stack.length > 1) checkWidth();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 5:\n                            while(stack.length >= 2){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            break;\n                        case 6:\n                        case 7:\n                            phase = op === 6;\n                            while(stack.length >= 1){\n                                if (phase) x1 += stack.shift();\n                                else y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 8:\n                            while(stack.length > 0){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 10:\n                            index = stack.pop() + subrsBias;\n                            subr = subrs[index];\n                            if (subr) {\n                                usedSubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 11:\n                            if (cff.version >= 2) break;\n                            return;\n                        case 14:\n                            if (cff.version >= 2) break;\n                            if (stack.length > 0) checkWidth();\n                            if (open) {\n                                path.closePath();\n                                open = false;\n                            }\n                            break;\n                        case 15:\n                            if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                            vsindex = stack.pop();\n                            break;\n                        case 16:\n                            {\n                                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                                let numBlends = stack.pop();\n                                let numOperands = numBlends * blendVector.length;\n                                let delta = stack.length - numOperands;\n                                let base = delta - numBlends;\n                                for(let i = 0; i < numBlends; i++){\n                                    let sum = stack[base + i];\n                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];\n                                    stack[base + i] = sum;\n                                }\n                                while(numOperands--)stack.pop();\n                                break;\n                            }\n                        case 19:\n                        case 20:\n                            parseStems();\n                            stream.pos += nStems + 7 >> 3;\n                            break;\n                        case 21:\n                            if (stack.length > 2) checkWidth();\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 22:\n                            if (stack.length > 1) checkWidth();\n                            x1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 24:\n                            while(stack.length >= 8){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            path.lineTo(x1, y1);\n                            break;\n                        case 25:\n                            while(stack.length >= 8){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            var c1x = x1 + stack.shift();\n                            var c1y = y1 + stack.shift();\n                            var c2x = c1x + stack.shift();\n                            var c2y = c1y + stack.shift();\n                            x1 = c2x + stack.shift();\n                            y1 = c2y + stack.shift();\n                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            break;\n                        case 26:\n                            if (stack.length % 2) x1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1;\n                                c1y = y1 + stack.shift();\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x;\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 27:\n                            if (stack.length % 2) y1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1 + stack.shift();\n                                c1y = y1;\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y;\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 28:\n                            stack.push(stream.readInt16BE());\n                            break;\n                        case 29:\n                            index = stack.pop() + gsubrsBias;\n                            subr = gsubrs[index];\n                            if (subr) {\n                                usedGsubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 30:\n                        case 31:\n                            phase = op === 31;\n                            while(stack.length >= 4){\n                                if (phase) {\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    y1 = c2y + stack.shift();\n                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                                } else {\n                                    c1x = x1;\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    x1 = c2x + stack.shift();\n                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                                }\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 12:\n                            op = stream.readUInt8();\n                            switch(op){\n                                case 3:\n                                    let a = stack.pop();\n                                    let b = stack.pop();\n                                    stack.push(a && b ? 1 : 0);\n                                    break;\n                                case 4:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a || b ? 1 : 0);\n                                    break;\n                                case 5:\n                                    a = stack.pop();\n                                    stack.push(a ? 0 : 1);\n                                    break;\n                                case 9:\n                                    a = stack.pop();\n                                    stack.push(Math.abs(a));\n                                    break;\n                                case 10:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a + b);\n                                    break;\n                                case 11:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a - b);\n                                    break;\n                                case 12:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a / b);\n                                    break;\n                                case 14:\n                                    a = stack.pop();\n                                    stack.push(-a);\n                                    break;\n                                case 15:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a === b ? 1 : 0);\n                                    break;\n                                case 18:\n                                    stack.pop();\n                                    break;\n                                case 20:\n                                    let val = stack.pop();\n                                    let idx = stack.pop();\n                                    trans[idx] = val;\n                                    break;\n                                case 21:\n                                    idx = stack.pop();\n                                    stack.push(trans[idx] || 0);\n                                    break;\n                                case 22:\n                                    let s1 = stack.pop();\n                                    let s2 = stack.pop();\n                                    let v1 = stack.pop();\n                                    let v2 = stack.pop();\n                                    stack.push(v1 <= v2 ? s1 : s2);\n                                    break;\n                                case 23:\n                                    stack.push(Math.random());\n                                    break;\n                                case 24:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a * b);\n                                    break;\n                                case 26:\n                                    a = stack.pop();\n                                    stack.push(Math.sqrt(a));\n                                    break;\n                                case 27:\n                                    a = stack.pop();\n                                    stack.push(a, a);\n                                    break;\n                                case 28:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(b, a);\n                                    break;\n                                case 29:\n                                    idx = stack.pop();\n                                    if (idx < 0) idx = 0;\n                                    else if (idx > stack.length - 1) idx = stack.length - 1;\n                                    stack.push(stack[idx]);\n                                    break;\n                                case 30:\n                                    let n = stack.pop();\n                                    let j = stack.pop();\n                                    if (j >= 0) while(j > 0){\n                                        var t = stack[n - 1];\n                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];\n                                        stack[0] = t;\n                                        j--;\n                                    }\n                                    else while(j < 0){\n                                        var t = stack[0];\n                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];\n                                        stack[n - 1] = t;\n                                        j++;\n                                    }\n                                    break;\n                                case 34:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    let c3x = c2x + stack.shift();\n                                    let c3y = c2y;\n                                    let c4x = c3x + stack.shift();\n                                    let c4y = c3y;\n                                    let c5x = c4x + stack.shift();\n                                    let c5y = c4y;\n                                    let c6x = c5x + stack.shift();\n                                    let c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 35:\n                                    let pts = [];\n                                    for(let i = 0; i <= 5; i++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    stack.shift(); // fd\n                                    break;\n                                case 36:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    c3x = c2x + stack.shift();\n                                    c3y = c2y;\n                                    c4x = c3x + stack.shift();\n                                    c4y = c3y;\n                                    c5x = c4x + stack.shift();\n                                    c5y = c4y + stack.shift();\n                                    c6x = c5x + stack.shift();\n                                    c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 37:\n                                    let startx = x1;\n                                    let starty = y1;\n                                    pts = [];\n                                    for(let i1 = 0; i1 <= 4; i1++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                                        x1 += stack.shift();\n                                        y1 = starty;\n                                    } else {\n                                        x1 = startx;\n                                        y1 += stack.shift();\n                                    }\n                                    pts.push(x1, y1);\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    break;\n                                default:\n                                    throw new Error(`Unknown op: 12 ${op}`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown op: ${op}`);\n                    }\n                } else if (op < 247) stack.push(op - 139);\n                else if (op < 251) {\n                    var b1 = stream.readUInt8();\n                    stack.push((op - 247) * 256 + b1 + 108);\n                } else if (op < 255) {\n                    var b1 = stream.readUInt8();\n                    stack.push(-(op - 251) * 256 - b1 - 108);\n                } else stack.push(stream.readInt32BE() / 65536);\n            }\n        };\n        parse();\n        if (open) path.closePath();\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"CFF\");\n    }\n}\n\n\n\n\n\nlet $55855d6d316b015e$var$SBIXImage = new $gfJaN$restructure.Struct({\n    originX: $gfJaN$restructure.uint16,\n    originY: $gfJaN$restructure.uint16,\n    type: new $gfJaN$restructure.String(4),\n    data: new $gfJaN$restructure.Buffer((t)=>t.parent.buflen - t._currentOffset)\n});\nclass $55855d6d316b015e$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */ getImageForSize(size) {\n        for(let i = 0; i < this._font.sbix.imageTables.length; i++){\n            var table = this._font.sbix.imageTables[i];\n            if (table.ppem >= size) break;\n        }\n        let offsets = table.imageOffsets;\n        let start = offsets[this.id];\n        let end = offsets[this.id + 1];\n        if (start === end) return null;\n        this._font.stream.pos = start;\n        return $55855d6d316b015e$var$SBIXImage.decode(this._font.stream, {\n            buflen: end - start\n        });\n    }\n    render(ctx, size) {\n        let img = this.getImageForSize(size);\n        if (img != null) {\n            let scale = size / this._font.unitsPerEm;\n            ctx.image(img.data, {\n                height: size,\n                x: img.originX,\n                y: (this.bbox.minY - img.originY) * scale\n            });\n        }\n        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"SBIX\");\n    }\n}\n\n\n\n\n\nclass $42d9dbd2de9ee2d8$var$COLRLayer {\n    constructor(glyph, color){\n        this.glyph = glyph;\n        this.color = color;\n    }\n}\nclass $42d9dbd2de9ee2d8$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getBBox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        for(let i = 0; i < this.layers.length; i++){\n            let layer = this.layers[i];\n            let b = layer.glyph.bbox;\n            bbox.addPoint(b.minX, b.minY);\n            bbox.addPoint(b.maxX, b.maxY);\n        }\n        return bbox;\n    }\n    /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */ get layers() {\n        let cpal = this._font.CPAL;\n        let colr = this._font.COLR;\n        let low = 0;\n        let high = colr.baseGlyphRecord.length - 1;\n        while(low <= high){\n            let mid = low + high >> 1;\n            var rec = colr.baseGlyphRecord[mid];\n            if (this.id < rec.gid) high = mid - 1;\n            else if (this.id > rec.gid) low = mid + 1;\n            else {\n                var baseLayer = rec;\n                break;\n            }\n        }\n        // if base glyph not found in COLR table,\n        // default to normal glyph from glyf or CFF\n        if (baseLayer == null) {\n            var g = this._font._getBaseGlyph(this.id);\n            var color = {\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 255\n            };\n            return [\n                new $42d9dbd2de9ee2d8$var$COLRLayer(g, color)\n            ];\n        }\n        // otherwise, return an array of all the layers\n        let layers = [];\n        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){\n            var rec = colr.layerRecords[i];\n            var color = cpal.colorRecords[rec.paletteIndex];\n            var g = this._font._getBaseGlyph(rec.gid);\n            layers.push(new $42d9dbd2de9ee2d8$var$COLRLayer(g, color));\n        }\n        return layers;\n    }\n    render(ctx, size) {\n        for (let { glyph: glyph , color: color  } of this.layers){\n            ctx.fillColor([\n                color.red,\n                color.green,\n                color.blue\n            ], color.alpha / 255 * 100);\n            glyph.render(ctx, size);\n        }\n        return;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"COLR\");\n    }\n}\n\n\nconst $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$POINTS_ARE_WORDS = 0x80;\nconst $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO = 0x80;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS = 0x40;\nconst $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK = 0x3f;\nclass $7586bb9ea67c41d8$export$2e2bcd8739ae039 {\n    normalizeCoords(coords) {\n        // the default mapping is linear along each axis, in two segments:\n        // from the minValue to defaultValue, and from defaultValue to maxValue.\n        let normalized = [];\n        for(var i = 0; i < this.font.fvar.axis.length; i++){\n            let axis = this.font.fvar.axis[i];\n            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n        }\n        // if there is an avar table, the normalized value is calculated\n        // by interpolating between the two nearest mapped values.\n        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){\n            let segment = this.font.avar.segment[i];\n            for(let j = 0; j < segment.correspondence.length; j++){\n                let pair = segment.correspondence[j];\n                if (j >= 1 && normalized[i] < pair.fromCoord) {\n                    let prev = segment.correspondence[j - 1];\n                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n                    break;\n                }\n            }\n        }\n        return normalized;\n    }\n    transformPoints(gid, glyphPoints) {\n        if (!this.font.fvar || !this.font.gvar) return;\n        let { gvar: gvar  } = this.font;\n        if (gid >= gvar.glyphCount) return;\n        let offset = gvar.offsets[gid];\n        if (offset === gvar.offsets[gid + 1]) return;\n        // Read the gvar data for this glyph\n        let { stream: stream  } = this.font;\n        stream.pos = offset;\n        if (stream.pos >= stream.length) return;\n        let tupleCount = stream.readUInt16BE();\n        let offsetToData = offset + stream.readUInt16BE();\n        if (tupleCount & $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS) {\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            var sharedPoints = this.decodePoints();\n            offsetToData = stream.pos;\n            stream.pos = here;\n        }\n        let origPoints = glyphPoints.map((pt)=>pt.copy());\n        tupleCount &= $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK;\n        for(let i = 0; i < tupleCount; i++){\n            let tupleDataSize = stream.readUInt16BE();\n            let tupleIndex = stream.readUInt16BE();\n            if (tupleIndex & $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD) {\n                var tupleCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);\n            } else {\n                if ((tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n                var tupleCoords = gvar.globalCoords[tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK];\n            }\n            if (tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) {\n                var startCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);\n                var endCoords = [];\n                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);\n            }\n            // Get the factor at which to apply this tuple\n            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n            if (factor === 0) {\n                offsetToData += tupleDataSize;\n                continue;\n            }\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            if (tupleIndex & $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();\n            else var points = sharedPoints;\n            // points.length = 0 means there are deltas for all points\n            let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n            let xDeltas = this.decodeDeltas(nPoints);\n            let yDeltas = this.decodeDeltas(nPoints);\n            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){\n                var point = glyphPoints[i];\n                point.x += Math.round(xDeltas[i] * factor);\n                point.y += Math.round(yDeltas[i] * factor);\n            }\n            else {\n                let outPoints = origPoints.map((pt)=>pt.copy());\n                let hasDelta = glyphPoints.map(()=>false);\n                for(let i = 0; i < points.length; i++){\n                    let idx = points[i];\n                    if (idx < glyphPoints.length) {\n                        let point = outPoints[idx];\n                        hasDelta[idx] = true;\n                        point.x += Math.round(xDeltas[i] * factor);\n                        point.y += Math.round(yDeltas[i] * factor);\n                    }\n                }\n                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n                for(let i1 = 0; i1 < glyphPoints.length; i1++){\n                    let deltaX = outPoints[i1].x - origPoints[i1].x;\n                    let deltaY = outPoints[i1].y - origPoints[i1].y;\n                    glyphPoints[i1].x += deltaX;\n                    glyphPoints[i1].y += deltaY;\n                }\n            }\n            offsetToData += tupleDataSize;\n            stream.pos = here;\n        }\n    }\n    decodePoints() {\n        let stream = this.font.stream;\n        let count = stream.readUInt8();\n        if (count & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS) count = (count & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n        let points = new Uint16Array(count);\n        let i = 0;\n        let point = 0;\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) + 1;\n            let fn = run & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n            for(let j = 0; j < runCount && i < count; j++){\n                point += fn.call(stream);\n                points[i++] = point;\n            }\n        }\n        return points;\n    }\n    decodeDeltas(count) {\n        let stream = this.font.stream;\n        let i = 0;\n        let deltas = new Int16Array(count);\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK) + 1;\n            if (run & $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO) i += runCount;\n            else {\n                let fn = run & $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);\n            }\n        }\n        return deltas;\n    }\n    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n        let normalized = this.normalizedCoords;\n        let { gvar: gvar  } = this.font;\n        let factor = 1;\n        for(let i = 0; i < gvar.axisCount; i++){\n            if (tupleCoords[i] === 0) continue;\n            if (normalized[i] === 0) return 0;\n            if ((tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) === 0) {\n                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n            } else {\n                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;\n                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n            }\n        }\n        return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n    interpolateMissingDeltas(points, inPoints, hasDelta) {\n        if (points.length === 0) return;\n        let point = 0;\n        while(point < points.length){\n            let firstPoint = point;\n            // find the end point of the contour\n            let endPoint = point;\n            let pt = points[endPoint];\n            while(!pt.endContour)pt = points[++endPoint];\n            // find the first point that has a delta\n            while(point <= endPoint && !hasDelta[point])point++;\n            if (point > endPoint) continue;\n            let firstDelta = point;\n            let curDelta = point;\n            point++;\n            while(point <= endPoint){\n                // find the next point with a delta, and interpolate intermediate points\n                if (hasDelta[point]) {\n                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n                    curDelta = point;\n                }\n                point++;\n            }\n            // shift contour if we only have a single delta\n            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n            else {\n                // otherwise, handle the remaining points at the end and beginning of the contour\n                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n            }\n            point = endPoint + 1;\n        }\n    }\n    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n        if (p1 > p2) return;\n        let iterable = [\n            \"x\",\n            \"y\"\n        ];\n        for(let i = 0; i < iterable.length; i++){\n            let k = iterable[i];\n            if (inPoints[ref1][k] > inPoints[ref2][k]) {\n                var p = ref1;\n                ref1 = ref2;\n                ref2 = p;\n            }\n            let in1 = inPoints[ref1][k];\n            let in2 = inPoints[ref2][k];\n            let out1 = outPoints[ref1][k];\n            let out2 = outPoints[ref2][k];\n            // If the reference points have the same coordinate but different\n            // delta, inferred delta is zero.  Otherwise interpolate.\n            if (in1 !== in2 || out1 === out2) {\n                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n                for(let p = p1; p <= p2; p++){\n                    let out = inPoints[p][k];\n                    if (out <= in1) out += out1 - in1;\n                    else if (out >= in2) out += out2 - in2;\n                    else out = out1 + (out - in1) * scale;\n                    outPoints[p][k] = out;\n                }\n            }\n        }\n    }\n    deltaShift(p1, p2, ref, inPoints, outPoints) {\n        let deltaX = outPoints[ref].x - inPoints[ref].x;\n        let deltaY = outPoints[ref].y - inPoints[ref].y;\n        if (deltaX === 0 && deltaY === 0) return;\n        for(let p = p1; p <= p2; p++)if (p !== ref) {\n            outPoints[p].x += deltaX;\n            outPoints[p].y += deltaY;\n        }\n    }\n    getAdvanceAdjustment(gid, table) {\n        let outerIndex, innerIndex;\n        if (table.advanceWidthMapping) {\n            let idx = gid;\n            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n            let entryFormat = table.advanceWidthMapping.entryFormat;\n            ({ outerIndex: outerIndex , innerIndex: innerIndex  } = table.advanceWidthMapping.mapData[idx]);\n        } else {\n            outerIndex = 0;\n            innerIndex = gid;\n        }\n        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n    getDelta(itemStore, outerIndex, innerIndex) {\n        if (outerIndex >= itemStore.itemVariationData.length) return 0;\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (innerIndex >= varData.deltaSets.length) return 0;\n        let deltaSet = varData.deltaSets[innerIndex];\n        let blendVector = this.getBlendVector(itemStore, outerIndex);\n        let netAdjustment = 0;\n        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];\n        return netAdjustment;\n    }\n    getBlendVector(itemStore, outerIndex) {\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n        let normalizedCoords = this.normalizedCoords;\n        let blendVector = [];\n        // outer loop steps through master designs to be blended\n        for(let master = 0; master < varData.regionIndexCount; master++){\n            let scalar = 1;\n            let regionIndex = varData.regionIndexes[master];\n            let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n            // inner loop steps through axes in this region\n            for(let j = 0; j < axes.length; j++){\n                let axis = axes[j];\n                let axisScalar;\n                // compute the scalar contribution of this axis\n                // ignore invalid ranges\n                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;\n                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;\n                else if (axis.peakCoord === 0) axisScalar = 1;\n                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;\n                else {\n                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;\n                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n                }\n                // take product of all the axis scalars\n                scalar *= axisScalar;\n            }\n            blendVector[master] = scalar;\n        }\n        this.blendVectors.set(varData, blendVector);\n        return blendVector;\n    }\n    constructor(font, coords){\n        this.font = font;\n        this.normalizedCoords = this.normalizeCoords(coords);\n        this.blendVectors = new Map;\n    }\n}\n\n\n\n\nconst $a8ac370803cb82cf$var$resolved = Promise.resolve();\nclass $a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    includeGlyph(glyph) {\n        if (typeof glyph === \"object\") glyph = glyph.id;\n        if (this.mapping[glyph] == null) {\n            this.glyphs.push(glyph);\n            this.mapping[glyph] = this.glyphs.length - 1;\n        }\n        return this.mapping[glyph];\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphs = [];\n        this.mapping = {};\n        // always include the missing glyph\n        this.includeGlyph(0);\n    }\n}\n\n\n\n\n\n// Flags for simple glyphs\nconst $2784eedf0b35a048$var$ON_CURVE = 1;\nconst $2784eedf0b35a048$var$X_SHORT_VECTOR = 2;\nconst $2784eedf0b35a048$var$Y_SHORT_VECTOR = 4;\nconst $2784eedf0b35a048$var$REPEAT = 8;\nconst $2784eedf0b35a048$var$SAME_X = 16;\nconst $2784eedf0b35a048$var$SAME_Y = 32;\nclass $2784eedf0b35a048$var$Point {\n    static size(val) {\n        return val >= 0 && val <= 255 ? 1 : 2;\n    }\n    static encode(stream, value) {\n        if (value >= 0 && value <= 255) stream.writeUInt8(value);\n        else stream.writeInt16BE(value);\n    }\n}\nlet $2784eedf0b35a048$var$Glyf = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    endPtsOfContours: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfContours\"),\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16),\n    flags: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 0),\n    xPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0),\n    yPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0)\n});\nclass $2784eedf0b35a048$export$2e2bcd8739ae039 {\n    encodeSimple(path, instructions = []) {\n        let endPtsOfContours = [];\n        let xPoints = [];\n        let yPoints = [];\n        let flags = [];\n        let same = 0;\n        let lastX = 0, lastY = 0, lastFlag = 0;\n        let pointCount = 0;\n        for(let i = 0; i < path.commands.length; i++){\n            let c = path.commands[i];\n            for(let j = 0; j < c.args.length; j += 2){\n                let x = c.args[j];\n                let y = c.args[j + 1];\n                let flag = 0;\n                // If the ending point of a quadratic curve is the midpoint\n                // between the control point and the control point of the next\n                // quadratic curve, we can omit the ending point.\n                if (c.command === \"quadraticCurveTo\" && j === 2) {\n                    let next = path.commands[i + 1];\n                    if (next && next.command === \"quadraticCurveTo\") {\n                        let midX = (lastX + next.args[0]) / 2;\n                        let midY = (lastY + next.args[1]) / 2;\n                        if (x === midX && y === midY) continue;\n                    }\n                }\n                // All points except control points are on curve.\n                if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $2784eedf0b35a048$var$ON_CURVE;\n                flag = this._encodePoint(x, lastX, xPoints, flag, $2784eedf0b35a048$var$X_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_X);\n                flag = this._encodePoint(y, lastY, yPoints, flag, $2784eedf0b35a048$var$Y_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_Y);\n                if (flag === lastFlag && same < 255) {\n                    flags[flags.length - 1] |= $2784eedf0b35a048$var$REPEAT;\n                    same++;\n                } else {\n                    if (same > 0) {\n                        flags.push(same);\n                        same = 0;\n                    }\n                    flags.push(flag);\n                    lastFlag = flag;\n                }\n                lastX = x;\n                lastY = y;\n                pointCount++;\n            }\n            if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n        }\n        // Close the path if the last command didn't already\n        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n        let bbox = path.bbox;\n        let glyf = {\n            numberOfContours: endPtsOfContours.length,\n            xMin: bbox.minX,\n            yMin: bbox.minY,\n            xMax: bbox.maxX,\n            yMax: bbox.maxY,\n            endPtsOfContours: endPtsOfContours,\n            instructions: instructions,\n            flags: flags,\n            xPoints: xPoints,\n            yPoints: yPoints\n        };\n        let size = $2784eedf0b35a048$var$Glyf.size(glyf);\n        let tail = 4 - size % 4;\n        let stream = new $gfJaN$restructure.EncodeStream(size + tail);\n        $2784eedf0b35a048$var$Glyf.encode(stream, glyf);\n        // Align to 4-byte length\n        if (tail !== 0) stream.fill(0, tail);\n        return stream.buffer;\n    }\n    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n        let diff = value - last;\n        if (value === last) flag |= sameFlag;\n        else {\n            if (-255 <= diff && diff <= 255) {\n                flag |= shortFlag;\n                if (diff < 0) diff = -diff;\n                else flag |= sameFlag;\n            }\n            points.push(diff);\n        }\n        return flag;\n    }\n}\n\n\nclass $fe042f4b88f46896$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    _addGlyph(gid) {\n        let glyph = this.font.getGlyph(gid);\n        let glyf = glyph._decode();\n        // get the offset to the glyph from the loca table\n        let curOffset = this.font.loca.offsets[gid];\n        let nextOffset = this.font.loca.offsets[gid + 1];\n        let stream = this.font._getTableStream(\"glyf\");\n        stream.pos += curOffset;\n        let buffer = stream.readBuffer(nextOffset - curOffset);\n        // if it is a compound glyph, include its components\n        if (glyf && glyf.numberOfContours < 0) {\n            buffer = new Uint8Array(buffer);\n            let view = new DataView(buffer.buffer);\n            for (let component of glyf.components){\n                gid = this.includeGlyph(component.glyphID);\n                view.setUint16(component.pos, gid);\n            }\n        } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path\n        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n        this.glyf.push(buffer);\n        this.loca.offsets.push(this.offset);\n        this.hmtx.metrics.push({\n            advance: glyph.advanceWidth,\n            bearing: glyph._getMetrics().leftBearing\n        });\n        this.offset += buffer.length;\n        return this.glyf.length - 1;\n    }\n    encode() {\n        // tables required by PDF spec:\n        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n        //\n        // additional tables required for standalone fonts:\n        //   name, cmap, OS/2, post\n        this.glyf = [];\n        this.offset = 0;\n        this.loca = {\n            offsets: [],\n            version: this.font.loca.version\n        };\n        this.hmtx = {\n            metrics: [],\n            bearings: []\n        };\n        // include all the glyphs\n        // not using a for loop because we need to support adding more\n        // glyphs to the array as we go, and CoffeeScript caches the length.\n        let i = 0;\n        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);\n        let maxp = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.maxp);\n        maxp.numGlyphs = this.glyf.length;\n        this.loca.offsets.push(this.offset);\n        let head = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.head);\n        head.indexToLocFormat = this.loca.version;\n        let hhea = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.hhea);\n        hhea.numberOfMetrics = this.hmtx.metrics.length;\n        // map = []\n        // for index in [0...256]\n        //     if index < @numGlyphs\n        //         map[index] = index\n        //     else\n        //         map[index] = 0\n        //\n        // cmapTable =\n        //     version: 0\n        //     length: 262\n        //     language: 0\n        //     codeMap: map\n        //\n        // cmap =\n        //     version: 0\n        //     numSubtables: 1\n        //     tables: [\n        //         platformID: 1\n        //         encodingID: 0\n        //         table: cmapTable\n        //     ]\n        // TODO: subset prep, cvt, fpgm?\n        return (0, $df50e1efe10a1247$export$2e2bcd8739ae039).toBuffer({\n            tables: {\n                head: head,\n                hhea: hhea,\n                loca: this.loca,\n                maxp: maxp,\n                \"cvt \": this.font[\"cvt \"],\n                prep: this.font.prep,\n                glyf: this.glyf,\n                hmtx: this.hmtx,\n                fpgm: this.font.fpgm\n            }\n        });\n    }\n    constructor(font){\n        super(font);\n        this.glyphEncoder = new (0, $2784eedf0b35a048$export$2e2bcd8739ae039);\n    }\n}\n\n\n\n\n\n\nclass $ec40f80c07a4e08a$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    subsetCharstrings() {\n        this.charstrings = [];\n        let gsubrs = {};\n        for (let gid of this.glyphs){\n            this.charstrings.push(this.cff.getCharString(gid));\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;\n        }\n        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n    subsetSubrs(subrs, used) {\n        let res = [];\n        for(let i = 0; i < subrs.length; i++){\n            let subr = subrs[i];\n            if (used[i]) {\n                this.cff.stream.pos = subr.offset;\n                res.push(this.cff.stream.readBuffer(subr.length));\n            } else res.push(new Uint8Array([\n                11\n            ])); // return\n        }\n        return res;\n    }\n    subsetFontdict(topDict) {\n        topDict.FDArray = [];\n        topDict.FDSelect = {\n            version: 0,\n            fds: []\n        };\n        let used_fds = {};\n        let used_subrs = [];\n        let fd_select = {};\n        for (let gid of this.glyphs){\n            let fd = this.cff.fdForGlyph(gid);\n            if (fd == null) continue;\n            if (!used_fds[fd]) {\n                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n                used_subrs.push({});\n                fd_select[fd] = topDict.FDArray.length - 1;\n            }\n            used_fds[fd] = true;\n            topDict.FDSelect.fds.push(fd_select[fd]);\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;\n        }\n        for(let i = 0; i < topDict.FDArray.length; i++){\n            let dict = topDict.FDArray[i];\n            delete dict.FontName;\n            if (dict.Private && dict.Private.Subrs) {\n                dict.Private = Object.assign({}, dict.Private);\n                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n            }\n        }\n        return;\n    }\n    createCIDFontdict(topDict) {\n        let used_subrs = {};\n        for (let gid of this.glyphs){\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;\n        }\n        let privateDict = Object.assign({}, this.cff.topDict.Private);\n        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n        topDict.FDArray = [\n            {\n                Private: privateDict\n            }\n        ];\n        return topDict.FDSelect = {\n            version: 3,\n            nRanges: 1,\n            ranges: [\n                {\n                    first: 0,\n                    fd: 0\n                }\n            ],\n            sentinel: this.charstrings.length\n        };\n    }\n    addString(string) {\n        if (!string) return null;\n        if (!this.strings) this.strings = [];\n        this.strings.push(string);\n        return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length + this.strings.length - 1;\n    }\n    encode() {\n        this.subsetCharstrings();\n        let charset = {\n            version: this.charstrings.length > 255 ? 2 : 1,\n            ranges: [\n                {\n                    first: 1,\n                    nLeft: this.charstrings.length - 2\n                }\n            ]\n        };\n        let topDict = Object.assign({}, this.cff.topDict);\n        topDict.Private = null;\n        topDict.charset = charset;\n        topDict.Encoding = null;\n        topDict.CharStrings = this.charstrings;\n        for (let key of [\n            \"version\",\n            \"Notice\",\n            \"Copyright\",\n            \"FullName\",\n            \"FamilyName\",\n            \"Weight\",\n            \"PostScript\",\n            \"BaseFontName\",\n            \"FontName\"\n        ])topDict[key] = this.addString(this.cff.string(topDict[key]));\n        topDict.ROS = [\n            this.addString(\"Adobe\"),\n            this.addString(\"Identity\"),\n            0\n        ];\n        topDict.CIDCount = this.charstrings.length;\n        if (this.cff.isCIDFont) this.subsetFontdict(topDict);\n        else this.createCIDFontdict(topDict);\n        let top = {\n            version: 1,\n            hdrSize: this.cff.hdrSize,\n            offSize: 4,\n            header: this.cff.header,\n            nameIndex: [\n                this.cff.postscriptName\n            ],\n            topDictIndex: [\n                topDict\n            ],\n            stringIndex: this.strings,\n            globalSubrIndex: this.gsubrs\n        };\n        return (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).toBuffer(top);\n    }\n    constructor(font){\n        super(font);\n        this.cff = this.font[\"CFF \"];\n        if (!this.cff) throw new Error(\"Not a CFF Font\");\n    }\n}\n\n\n\n\nclass $0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let format = (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n        return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n    setDefaultLanguage(lang = null) {\n        this.defaultLanguage = lang;\n    }\n    _getTable(table) {\n        if (!(table.tag in this._tables)) try {\n            this._tables[table.tag] = this._decodeTable(table);\n        } catch (e) {\n            if ($59aa4ed98453e1d4$export$bd5c5d8b8dcafd78) {\n                console.error(`Error decoding table ${table.tag}`);\n                console.error(e.stack);\n            }\n        }\n        return this._tables[table.tag];\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            return this.stream;\n        }\n        return null;\n    }\n    _decodeDirectory() {\n        return this.directory = (0, $df50e1efe10a1247$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _decodeTable(table) {\n        let pos = this.stream.pos;\n        let stream = this._getTableStream(table.tag);\n        let result = (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n        this.stream.pos = pos;\n        return result;\n    }\n    /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */ getName(key, lang = this.defaultLanguage || $59aa4ed98453e1d4$export$42940898df819940) {\n        let record = this.name && this.name.records[key];\n        if (record) // Attempt to retrieve the entry, depending on which translation is available:\n        return record[lang] || record[this.defaultLanguage] || record[$59aa4ed98453e1d4$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n         || null;\n        return null;\n    }\n    /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */ get postscriptName() {\n        return this.getName(\"postscriptName\");\n    }\n    /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */ get fullName() {\n        return this.getName(\"fullName\");\n    }\n    /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */ get familyName() {\n        return this.getName(\"fontFamily\");\n    }\n    /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */ get subfamilyName() {\n        return this.getName(\"fontSubfamily\");\n    }\n    /**\n   * The font's copyright information\n   * @type {string}\n   */ get copyright() {\n        return this.getName(\"copyright\");\n    }\n    /**\n   * The font's version number\n   * @type {string}\n   */ get version() {\n        return this.getName(\"version\");\n    }\n    /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */ get ascent() {\n        return this.hhea.ascent;\n    }\n    /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */ get descent() {\n        return this.hhea.descent;\n    }\n    /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */ get lineGap() {\n        return this.hhea.lineGap;\n    }\n    /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */ get underlinePosition() {\n        return this.post.underlinePosition;\n    }\n    /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */ get underlineThickness() {\n        return this.post.underlineThickness;\n    }\n    /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */ get italicAngle() {\n        return this.post.italicAngle;\n    }\n    /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */ get capHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */ get xHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.xHeight : 0;\n    }\n    /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */ get numGlyphs() {\n        return this.maxp.numGlyphs;\n    }\n    /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */ get unitsPerEm() {\n        return this.head.unitsPerEm;\n    }\n    /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */ get bbox() {\n        return Object.freeze(new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n    get _cmapProcessor() {\n        return new (0, $0d6e160064c86e50$export$2e2bcd8739ae039)(this.cmap);\n    }\n    /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */ get characterSet() {\n        return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */ hasGlyphForCodePoint(codePoint) {\n        return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */ glyphForCodePoint(codePoint) {\n        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [\n            codePoint\n        ]);\n    }\n    /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */ glyphsForString(string) {\n        let glyphs = [];\n        let len = string.length;\n        let idx = 0;\n        let last = -1;\n        let state = -1;\n        while(idx <= len){\n            let code = 0;\n            let nextState = 0;\n            if (idx < len) {\n                // Decode the next codepoint from UTF 16\n                code = string.charCodeAt(idx++);\n                if (0xd800 <= code && code <= 0xdbff && idx < len) {\n                    let next = string.charCodeAt(idx);\n                    if (0xdc00 <= next && next <= 0xdfff) {\n                        idx++;\n                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n                    }\n                }\n                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n            } else idx++;\n            if (state === 0 && nextState === 1) // Variation selector following normal codepoint.\n            glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [\n                last,\n                code\n            ]));\n            else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.\n            glyphs.push(this.glyphForCodePoint(last));\n            last = code;\n            state = nextState;\n        }\n        return glyphs;\n    }\n    get _layoutEngine() {\n        return new (0, $9d641258c9d7180d$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */ layout(string, userFeatures, script, language, direction) {\n        return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */ stringsForGlyph(gid) {\n        return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */ get availableFeatures() {\n        return this._layoutEngine.getAvailableFeatures();\n    }\n    getAvailableFeatures(script, language) {\n        return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $f680320fa07ef53d$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $7ee0705195f3b047$export$2e2bcd8739ae039)(glyph, characters, this);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */ getGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $55855d6d316b015e$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $42d9dbd2de9ee2d8$export$2e2bcd8739ae039)(glyph, characters, this);\n            else this._getBaseGlyph(glyph, characters);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */ createSubset() {\n        if (this.directory.tables[\"CFF \"]) return new (0, $ec40f80c07a4e08a$export$2e2bcd8739ae039)(this);\n        return new (0, $fe042f4b88f46896$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */ get variationAxes() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n        };\n        return res;\n    }\n    /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */ get namedVariations() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let instance of this.fvar.instance){\n            let settings = {};\n            for(let i = 0; i < this.fvar.axis.length; i++){\n                let axis = this.fvar.axis[i];\n                settings[axis.axisTag.trim()] = instance.coord[i];\n            }\n            res[instance.name.en] = settings;\n        }\n        return res;\n    }\n    /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */ getVariation(settings) {\n        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n        if (typeof settings === \"string\") settings = this.namedVariations[settings];\n        if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n        // normalize the coordinates\n        let coords = this.fvar.axis.map((axis, i)=>{\n            let axisTag = axis.axisTag.trim();\n            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n            else return axis.defaultValue;\n        });\n        let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n        stream.pos = this._directoryPos;\n        let font = new $0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream, coords);\n        font._tables = this._tables;\n        return font;\n    }\n    get _variationProcessor() {\n        if (!this.fvar) return null;\n        let variationCoords = this.variationCoords;\n        // Ignore if no variation coords and not CFF2\n        if (!variationCoords && !this.CFF2) return null;\n        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue);\n        return new (0, $7586bb9ea67c41d8$export$2e2bcd8739ae039)(this, variationCoords);\n    }\n    // Standardized format plugin API\n    getFont(name) {\n        return this.getVariation(name);\n    }\n    constructor(stream, variationCoords = null){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n        this.defaultLanguage = null;\n        this.stream = stream;\n        this.variationCoords = variationCoords;\n        this._directoryPos = this.stream.pos;\n        this._tables = {};\n        this._glyphs = {};\n        this._decodeDirectory();\n        // define properties for each table to lazily parse\n        for(let tag in this.directory.tables){\n            let table = this.directory.tables[tag];\n            if ((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag] && table.length > 0) Object.defineProperty(this, tag, {\n                get: this._getTable.bind(this, table)\n            });\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\n\n\n\n\n\n\nlet $89f72d2d7c9afc0d$var$WOFFDirectoryEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    compLength: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    origChecksum: $gfJaN$restructure.uint32\n});\nlet $89f72d2d7c9afc0d$var$WOFFDirectory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($89f72d2d7c9afc0d$var$WOFFDirectoryEntry, \"numTables\")\n});\n$89f72d2d7c9afc0d$var$WOFFDirectory.process = function() {\n    let tables1 = {};\n    for (let table of this.tables)tables1[table.tag] = table;\n    this.tables = tables1;\n};\nvar $89f72d2d7c9afc0d$export$2e2bcd8739ae039 = $89f72d2d7c9afc0d$var$WOFFDirectory;\n\n\n\n\n\n\nclass $8a0a49baaf5d834d$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $89f72d2d7c9afc0d$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            if (table.compLength < table.length) {\n                this.stream.pos += 2; // skip deflate header\n                let outBuffer = new Uint8Array(table.length);\n                let buf = (0, ($parcel$interopDefault($gfJaN$tinyinflate)))(this.stream.readBuffer(table.compLength - 2), outBuffer);\n                return new $gfJaN$restructure.DecodeStream(buf);\n            } else return this.stream;\n        }\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF\");\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $44b9edca0e403d6d$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    _decode() {\n        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n        return this._font._transformedGlyphs[this.id];\n    }\n    _getCBox() {\n        return this.path.bbox;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n\n\n\nconst $2f0bfd9a5c1d7b58$var$Base128 = {\n    decode (stream) {\n        let result = 0;\n        let iterable = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        for(let j = 0; j < iterable.length; j++){\n            let i = iterable[j];\n            let code = stream.readUInt8();\n            // If any of the top seven bits are set then we're about to overflow.\n            if (result & 0xe0000000) throw new Error(\"Overflow\");\n            result = result << 7 | code & 0x7f;\n            if ((code & 0x80) === 0) return result;\n        }\n        throw new Error(\"Bad base 128 number\");\n    }\n};\nlet $2f0bfd9a5c1d7b58$var$knownTags = [\n    \"cmap\",\n    \"head\",\n    \"hhea\",\n    \"hmtx\",\n    \"maxp\",\n    \"name\",\n    \"OS/2\",\n    \"post\",\n    \"cvt \",\n    \"fpgm\",\n    \"glyf\",\n    \"loca\",\n    \"prep\",\n    \"CFF \",\n    \"VORG\",\n    \"EBDT\",\n    \"EBLC\",\n    \"gasp\",\n    \"hdmx\",\n    \"kern\",\n    \"LTSH\",\n    \"PCLT\",\n    \"VDMX\",\n    \"vhea\",\n    \"vmtx\",\n    \"BASE\",\n    \"GDEF\",\n    \"GPOS\",\n    \"GSUB\",\n    \"EBSC\",\n    \"JSTF\",\n    \"MATH\",\n    \"CBDT\",\n    \"CBLC\",\n    \"COLR\",\n    \"CPAL\",\n    \"SVG \",\n    \"sbix\",\n    \"acnt\",\n    \"avar\",\n    \"bdat\",\n    \"bloc\",\n    \"bsln\",\n    \"cvar\",\n    \"fdsc\",\n    \"feat\",\n    \"fmtx\",\n    \"fvar\",\n    \"gvar\",\n    \"hsty\",\n    \"just\",\n    \"lcar\",\n    \"mort\",\n    \"morx\",\n    \"opbd\",\n    \"prop\",\n    \"trak\",\n    \"Zapf\",\n    \"Silf\",\n    \"Glat\",\n    \"Gloc\",\n    \"Feat\",\n    \"Sill\"\n];\nlet $2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry = new $gfJaN$restructure.Struct({\n    flags: $gfJaN$restructure.uint8,\n    customTag: new $gfJaN$restructure.Optional(new $gfJaN$restructure.String(4), (t)=>(t.flags & 0x3f) === 0x3f),\n    tag: (t)=>t.customTag || $2f0bfd9a5c1d7b58$var$knownTags[t.flags & 0x3f],\n    length: $2f0bfd9a5c1d7b58$var$Base128,\n    transformVersion: (t)=>t.flags >>> 6 & 0x03,\n    transformed: (t)=>t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n    transformLength: new $gfJaN$restructure.Optional($2f0bfd9a5c1d7b58$var$Base128, (t)=>t.transformed)\n});\nlet $2f0bfd9a5c1d7b58$var$WOFF2Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    totalCompressedSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$2f0bfd9a5c1d7b58$var$WOFF2Directory.process = function() {\n    let tables = {};\n    for(let i = 0; i < this.tables.length; i++){\n        let table = this.tables[i];\n        tables[table.tag] = table;\n    }\n    return this.tables = tables;\n};\nvar $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039 = $2f0bfd9a5c1d7b58$var$WOFF2Directory;\n\n\n\nclass $333fb94547d9fb5c$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039).decode(this.stream);\n        this._dataPos = this.stream.pos;\n    }\n    _decompress() {\n        // decompress data and setup table offsets if we haven't already\n        if (!this._decompressed) {\n            this.stream.pos = this._dataPos;\n            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n            let decompressedSize = 0;\n            for(let tag in this.directory.tables){\n                let entry = this.directory.tables[tag];\n                entry.offset = decompressedSize;\n                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n            }\n            let decompressed = (0, ($parcel$interopDefault($gfJaN$brotlidecompressjs)))(buffer, decompressedSize);\n            if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n            this.stream = new $gfJaN$restructure.DecodeStream(decompressed);\n            this._decompressed = true;\n        }\n    }\n    _decodeTable(table) {\n        this._decompress();\n        return super._decodeTable(table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n                if (!this._transformedGlyphs) this._transformGlyfTable();\n                return this._glyphs[glyph] = new (0, $44b9edca0e403d6d$export$2e2bcd8739ae039)(glyph, characters, this);\n            } else return super._getBaseGlyph(glyph, characters);\n        }\n    }\n    _transformGlyfTable() {\n        this._decompress();\n        this.stream.pos = this.directory.tables.glyf.offset;\n        let table = $333fb94547d9fb5c$var$GlyfTable.decode(this.stream);\n        let glyphs = [];\n        for(let index = 0; index < table.numGlyphs; index++){\n            let glyph = {};\n            let nContours = table.nContours.readInt16BE();\n            glyph.numberOfContours = nContours;\n            if (nContours > 0) {\n                let nPoints = [];\n                let totalPoints = 0;\n                for(let i = 0; i < nContours; i++){\n                    let r1 = $333fb94547d9fb5c$var$read255UInt16(table.nPoints);\n                    totalPoints += r1;\n                    nPoints.push(totalPoints);\n                }\n                glyph.points = $333fb94547d9fb5c$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;\n                var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            } else if (nContours < 0) {\n                let haveInstructions = (0, $f680320fa07ef53d$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n                    _font: this\n                }, glyph, table.composites);\n                if (haveInstructions) var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            }\n            glyphs.push(glyph);\n        }\n        this._transformedGlyphs = glyphs;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n// Special class that accepts a length and returns a sub-stream for that data\nclass $333fb94547d9fb5c$var$Substream {\n    decode(stream, parent) {\n        return new $gfJaN$restructure.DecodeStream(this._buf.decode(stream, parent));\n    }\n    constructor(length){\n        this.length = length;\n        this._buf = new $gfJaN$restructure.Buffer(length);\n    }\n}\n// This struct represents the entire glyf table\nlet $333fb94547d9fb5c$var$GlyfTable = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    indexFormat: $gfJaN$restructure.uint16,\n    nContourStreamSize: $gfJaN$restructure.uint32,\n    nPointsStreamSize: $gfJaN$restructure.uint32,\n    flagStreamSize: $gfJaN$restructure.uint32,\n    glyphStreamSize: $gfJaN$restructure.uint32,\n    compositeStreamSize: $gfJaN$restructure.uint32,\n    bboxStreamSize: $gfJaN$restructure.uint32,\n    instructionStreamSize: $gfJaN$restructure.uint32,\n    nContours: new $333fb94547d9fb5c$var$Substream(\"nContourStreamSize\"),\n    nPoints: new $333fb94547d9fb5c$var$Substream(\"nPointsStreamSize\"),\n    flags: new $333fb94547d9fb5c$var$Substream(\"flagStreamSize\"),\n    glyphs: new $333fb94547d9fb5c$var$Substream(\"glyphStreamSize\"),\n    composites: new $333fb94547d9fb5c$var$Substream(\"compositeStreamSize\"),\n    bboxes: new $333fb94547d9fb5c$var$Substream(\"bboxStreamSize\"),\n    instructions: new $333fb94547d9fb5c$var$Substream(\"instructionStreamSize\")\n});\nconst $333fb94547d9fb5c$var$WORD_CODE = 253;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $333fb94547d9fb5c$var$LOWEST_U_CODE = 253;\nfunction $333fb94547d9fb5c$var$read255UInt16(stream) {\n    let code = stream.readUInt8();\n    if (code === $333fb94547d9fb5c$var$WORD_CODE) return stream.readUInt16BE();\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE;\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE * 2;\n    return code;\n}\nfunction $333fb94547d9fb5c$var$withSign(flag, baseval) {\n    return flag & 1 ? baseval : -baseval;\n}\nfunction $333fb94547d9fb5c$var$decodeTriplet(flags, glyphs, nPoints) {\n    let y;\n    let x = y = 0;\n    let res = [];\n    for(let i = 0; i < nPoints; i++){\n        let dx = 0, dy = 0;\n        let flag = flags.readUInt8();\n        let onCurve = !(flag >> 7);\n        flag &= 0x7f;\n        if (flag < 10) {\n            dx = 0;\n            dy = $333fb94547d9fb5c$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n        } else if (flag < 20) {\n            dx = $333fb94547d9fb5c$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n            dy = 0;\n        } else if (flag < 84) {\n            var b0 = flag - 20;\n            var b1 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n        } else if (flag < 120) {\n            var b0 = flag - 84;\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n        } else if (flag < 124) {\n            var b1 = glyphs.readUInt8();\n            let b2 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n        } else {\n            dx = $333fb94547d9fb5c$var$withSign(flag, glyphs.readUInt16BE());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, glyphs.readUInt16BE());\n        }\n        x += dx;\n        y += dy;\n        res.push(new (0, $f680320fa07ef53d$export$baf26146a414f24a)(onCurve, false, x, y));\n    }\n    return res;\n}\n\n\n\n\n\n\n\n\nlet $e0b2de9958441c02$var$TTCHeader = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    0x00010000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\")\n    },\n    0x00020000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\"),\n        dsigTag: $gfJaN$restructure.uint32,\n        dsigLength: $gfJaN$restructure.uint32,\n        dsigOffset: $gfJaN$restructure.uint32\n    }\n});\nclass $e0b2de9958441c02$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n    getFont(name) {\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTC\");\n        this.stream = stream;\n        if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n        this.header = $e0b2de9958441c02$var$TTCHeader.decode(stream);\n    }\n}\n\n\n\n\n\nlet $d0fe640dc6c78783$var$DFontName = new $gfJaN$restructure.String($gfJaN$restructure.uint8);\nlet $d0fe640dc6c78783$var$DFontData = new $gfJaN$restructure.Struct({\n    len: $gfJaN$restructure.uint32,\n    buf: new $gfJaN$restructure.Buffer(\"len\")\n});\nlet $d0fe640dc6c78783$var$Ref = new $gfJaN$restructure.Struct({\n    id: $gfJaN$restructure.uint16,\n    nameOffset: $gfJaN$restructure.int16,\n    attr: $gfJaN$restructure.uint8,\n    dataOffset: $gfJaN$restructure.uint24,\n    handle: $gfJaN$restructure.uint32\n});\nlet $d0fe640dc6c78783$var$Type = new $gfJaN$restructure.Struct({\n    name: new $gfJaN$restructure.String(4),\n    maxTypeIndex: $gfJaN$restructure.uint16,\n    refList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Ref, (t)=>t.maxTypeIndex + 1), {\n        type: \"parent\"\n    })\n});\nlet $d0fe640dc6c78783$var$TypeList = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    types: new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Type, (t)=>t.length + 1)\n});\nlet $d0fe640dc6c78783$var$DFontMap = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, 24),\n    typeList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $d0fe640dc6c78783$var$TypeList),\n    nameListOffset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, \"void\")\n});\nlet $d0fe640dc6c78783$var$DFontHeader = new $gfJaN$restructure.Struct({\n    dataOffset: $gfJaN$restructure.uint32,\n    map: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $d0fe640dc6c78783$var$DFontMap),\n    dataLength: $gfJaN$restructure.uint32,\n    mapLength: $gfJaN$restructure.uint32\n});\nclass $d0fe640dc6c78783$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let stream = new $gfJaN$restructure.DecodeStream(buffer);\n        try {\n            var header = $d0fe640dc6c78783$var$DFontHeader.decode(stream);\n        } catch (e) {\n            return false;\n        }\n        for (let type of header.map.typeList.types){\n            if (type.name === \"sfnt\") return true;\n        }\n        return false;\n    }\n    getFont(name) {\n        if (!this.sfnt) return null;\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"DFont\");\n        this.stream = stream;\n        this.header = $d0fe640dc6c78783$var$DFontHeader.decode(this.stream);\n        for (let type of this.header.map.typeList.types){\n            for (let ref of type.refList)if (ref.nameOffset >= 0) {\n                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n                ref.name = $d0fe640dc6c78783$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n            if (type.name === \"sfnt\") this.sfnt = type;\n        }\n    }\n}\n\n\n\n// Register font formats\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $8a0a49baaf5d834d$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $333fb94547d9fb5c$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $e0b2de9958441c02$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $d0fe640dc6c78783$export$2e2bcd8739ae039));\n$parcel$exportWildcard(module.exports, $59aa4ed98453e1d4$exports);\n\n\n//# sourceMappingURL=browser.cjs.map\n","export {EncodeStream} from './src/EncodeStream.js';\nexport {DecodeStream} from './src/DecodeStream.js';\nexport {Array} from './src/Array.js';\nexport {LazyArray} from './src/LazyArray.js';\nexport {Bitfield} from './src/Bitfield.js';\nexport {Boolean} from './src/Boolean.js';\nexport {Buffer} from './src/Buffer.js';\nexport {Enum} from './src/Enum.js';\nexport {Optional} from './src/Optional.js';\nexport {Reserved} from './src/Reserved.js';\nexport {String} from './src/String.js';\nexport {Struct} from './src/Struct.js';\nexport {VersionedStruct} from './src/VersionedStruct.js';\n\nexport * from './src/utils.js';\nexport * from './src/Number.js';\nexport * from './src/Pointer.js';\n","import {DecodeStream} from './DecodeStream.js';\n\nconst textEncoder = new TextEncoder();\nconst isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\n\nexport class EncodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  writeBuffer(buffer) {\n    this.buffer.set(buffer, this.pos);\n    this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    let buf;\n    switch (encoding) {\n      case 'utf16le':\n      case 'utf16-le':\n      case 'ucs2': // node treats this the same as utf16.\n        buf = stringToUtf16(string, isBigEndian);\n        break;\n\n      case 'utf16be':\n      case 'utf16-be':\n        buf = stringToUtf16(string, !isBigEndian);\n        break;\n\n      case 'utf8':\n        buf = textEncoder.encode(string);\n        break;\n\n      case 'ascii':\n        buf = stringToAscii(string);\n        break;\n\n      default:\n        throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n\n    this.writeBuffer(buf);\n  }\n\n  writeUInt24BE(val) {\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = val & 0xff;\n  }\n\n  writeUInt24LE(val) {\n    this.buffer[this.pos++] = val & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      this.writeUInt24BE(val);\n    } else {\n      this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      this.writeUInt24LE(val);\n    } else {\n      this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.buffer.fill(val, this.pos, this.pos + length);\n      this.pos += length;\n    } else {\n      const buf = new Uint8Array(length);\n      buf.fill(val);\n      this.writeBuffer(buf);\n    }\n  }\n}\n\nfunction stringToUtf16(string, swap) {\n  let buf = new Uint16Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i);\n    if (swap) {\n      code = (code >> 8) | ((code & 0xff) << 8);\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  let buf = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'set') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n      this.view[key](this.pos, value, false);\n      this.pos += bytes;\n    };\n\n    if (bytes !== 1) {\n      EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n      };\n    }\n  }\n}\n","// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n}\n\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass ArrayT extends Base {\n  constructor(type, length, lengthType = 'count') {\n    super();\n    this.type = type;\n    this.length = length;\n    this.lengthType = lengthType;\n  }\n\n  decode(stream, parent) {\n    let length;\n    const { pos } = stream;\n\n    const res = [];\n    let ctx = parent;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    }\n\n    if (this.length instanceof NumberT) {\n      // define hidden properties\n      Object.defineProperties(res, {\n        parent:         { value: parent },\n        _startOffset:   { value: pos },\n        _currentOffset: { value: 0, writable: true },\n        _length:        { value: length }\n      });\n\n      ctx = res;\n    }\n\n    if ((length == null) || (this.lengthType === 'bytes')) {\n      const target = (length != null) ?\n        stream.pos + length\n      : (parent != null ? parent._length : undefined) ?\n        parent._startOffset + parent._length\n      :\n        stream.length;\n\n      while (stream.pos < target) {\n        res.push(this.type.decode(stream, ctx));\n      }\n\n    } else {\n      for (let i = 0, end = length; i < end; i++) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    }\n\n    return res;\n  }\n\n  size(array, ctx, includePointers = true) {\n    if (!array) {\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n    }\n\n    let size = 0;\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n      ctx = {parent: ctx, pointerSize: 0};\n    }\n\n    for (let item of array) {\n      size += this.type.size(item, ctx);\n    }\n\n    if (ctx && includePointers && this.length instanceof NumberT) {\n      size += ctx.pointerSize;\n    }\n    \n    return size;\n  }\n\n  encode(stream, array, parent) {\n    let ctx = parent;\n    if (this.length instanceof NumberT) {\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent\n      };\n\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n      this.length.encode(stream, array.length);\n    }\n\n    for (let item of array) {\n      this.type.encode(stream, item, ctx);\n    }\n\n    if (this.length instanceof NumberT) {\n      let i = 0;\n      while (i < ctx.pointers.length) {\n        const ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }\n}\n\nexport {ArrayT as Array};\n","import {DecodeStream} from './DecodeStream.js';\nimport {EncodeStream} from './EncodeStream.js';\n\nexport class Base {\n  fromBuffer(buffer) {\n    let stream = new DecodeStream(buffer);\n    return this.decode(stream);\n  }\n\n  toBuffer(value) {\n    let size = this.size(value);\n    let buffer = new Uint8Array(size);\n    let stream = new EncodeStream(buffer);\n    this.encode(stream, value);\n    return buffer;\n  }\n}\n","import {DecodeStream} from './DecodeStream.js';\nimport {Base} from './Base.js';\n\nclass NumberT extends Base {\n  constructor(type, endian = 'BE') {\n    super();\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexport {NumberT as Number};\n\nexport const uint8 = new NumberT('UInt8');\nexport const uint16be = new NumberT('UInt16', 'BE');\nexport const uint16 = uint16be;\nexport const uint16le = new NumberT('UInt16', 'LE');\nexport const uint24be = new NumberT('UInt24', 'BE');\nexport const uint24 = uint24be;\nexport const uint24le = new NumberT('UInt24', 'LE');\nexport const uint32be = new NumberT('UInt32', 'BE');\nexport const uint32 = uint32be;\nexport const uint32le = new NumberT('UInt32', 'LE');\nexport const int8 = new NumberT('Int8');\nexport const int16be = new NumberT('Int16', 'BE');\nexport const int16 = int16be;\nexport const int16le = new NumberT('Int16', 'LE');\nexport const int24be = new NumberT('Int24', 'BE');\nexport const int24 = int24be;\nexport const int24le = new NumberT('Int24', 'LE');\nexport const int32be = new NumberT('Int32', 'BE');\nexport const int32 = int32be;\nexport const int32le = new NumberT('Int32', 'LE');\nexport const floatbe = new NumberT('Float', 'BE');\nexport const float = floatbe;\nexport const floatle = new NumberT('Float', 'LE');\nexport const doublebe = new NumberT('Double', 'BE');\nexport const double = doublebe;\nexport const doublele = new NumberT('Double', 'LE');\n\nexport class Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexport const fixed16be = new Fixed(16, 'BE');\nexport const fixed16 = fixed16be;\nexport const fixed16le = new Fixed(16, 'LE');\nexport const fixed32be = new Fixed(32, 'BE');\nexport const fixed32 = fixed32be;\nexport const fixed32le = new Fixed(32, 'LE');\n","import {Number as NumberT} from './Number.js';\n\nexport function resolveLength(length, stream, parent) {\n  let res;\n  if (typeof length === 'number') {\n    res = length;\n\n  } else if (typeof length === 'function') {\n    res = length.call(parent, parent);\n\n  } else if (parent && (typeof length === 'string')) {\n    res = parent[length];\n\n  } else if (stream && length instanceof NumberT) {\n    res = length.decode(stream);\n  }\n\n  if (isNaN(res)) {\n    throw new Error('Not a fixed size');\n  }\n\n  return res;\n};\n\nexport class PropertyDescriptor {\n  constructor(opts = {}) {\n    this.enumerable = true;\n    this.configurable = true;\n\n    for (let key in opts) {\n      const val = opts[key];\n      this[key] = val;\n    }\n  }\n}\n","import {Array as ArrayT} from './Array.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const { pos } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.size(val, ctx);\n  }\n\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.encode(stream, val, ctx);\n  }\n}\n\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n\n  get(index) {\n    if ((index < 0) || (index >= this.length)) {\n      return undefined;\n    }\n\n    if (this.items[index] == null) {\n      const { pos } = this.stream;\n      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n\n    return this.items[index];\n  }\n\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Bitfield extends Base {\n  constructor(type, flags = []) {\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & (1 << i));\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) { val |= (1 << i); }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class BooleanT extends Base {\n  constructor(type) {\n    super();\n    this.type = type;\n  }\n\n  decode(stream, parent) {\n    return !!this.type.decode(stream, parent);\n  }\n\n  size(val, parent) {\n    return this.type.size(val, parent);\n  }\n\n  encode(stream, val, parent) {\n    return this.type.encode(stream, +val, parent);\n  }\n}\n\nexport {BooleanT as Boolean};\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class BufferT extends Base {\n  constructor(length) {\n    super();\n    this.length = length;\n  }\n  \n  decode(stream, parent) {\n    const length = utils.resolveLength(this.length, stream, parent);\n    return stream.readBuffer(length);\n  }\n\n  size(val, parent) {\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let len = val.length;\n    if (this.length instanceof NumberT) {\n      len += this.length.size();\n    }\n\n    return len;\n  }\n\n  encode(stream, buf, parent) {\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, buf.length);\n    }\n\n    return stream.writeBuffer(buf);\n  }\n}\n\nexport {BufferT as Buffer};\n","import {Base} from './Base.js';\n\nexport class Enum extends Base {\n  constructor(type, options = []) {\n    super();\n    this.type = type;\n    this.options = options;\n  }\n  \n  decode(stream) {\n    const index = this.type.decode(stream);\n    return this.options[index] || index;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, val) {\n    const index = this.options.indexOf(val);\n    if (index === -1) {\n      throw new Error(`Unknown option in enum: ${val}`);\n    }\n\n    return this.type.encode(stream, index);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Optional extends Base {\n  constructor(type, condition = true) {\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n\n  decode(stream, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n\n  size(val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n\n  encode(stream, val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n}\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Reserved extends Base {\n  constructor(type, count = 1) {\n    super();\n    this.type = type;\n    this.count = count;\n  }\n  decode(stream, parent) {\n    stream.pos += this.size(null, parent);\n    return undefined;\n  }\n\n  size(data, parent) {\n    const count = utils.resolveLength(this.count, null, parent);\n    return this.type.size() * count;\n  }\n\n  encode(stream, val, parent) {\n    return stream.fill(0, this.size(val, parent));\n  }\n}\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length) && (buffer[pos] !== 0x00)) {\n        ++pos;\n      }\n\n      length = pos - stream.pos;\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos++;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size++;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Struct extends Base {\n  constructor(fields = {}) {\n    super();\n    this.fields = fields;\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n    this._parseFields(stream, res, this.fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  _setup(stream, parent, length) {\n    const res = {};\n\n    // define hidden properties\n    Object.defineProperties(res, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos },\n      _currentOffset: { value: 0, writable: true },\n      _length:        { value: length }\n    });\n\n    return res;\n  }\n\n  _parseFields(stream, res, fields) {\n    for (let key in fields) {\n      var val;\n      const type = fields[key];\n      if (typeof type === 'function') {\n        val = type.call(res, res);\n      } else {\n        val = type.decode(stream, res);\n      }\n\n      if (val !== undefined) {\n        if (val instanceof utils.PropertyDescriptor) {\n          Object.defineProperty(res, key, val);\n        } else {\n          res[key] = val;\n        }\n      }\n\n      res._currentOffset = stream.pos - res._startOffset;\n    }\n\n  }\n\n  size(val, parent, includePointers = true) {\n    if (val == null) { val = {}; }\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    let size = 0;\n    for (let key in this.fields) {\n      const type = this.fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    for (let key in this.fields) {\n      type = this.fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import {Struct} from './Struct.js';\n\nconst getPath = (object, pathArray) => {\n  return pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object);\n};\n\nexport class VersionedStruct extends Struct {\n  constructor(type, versions = {}) {\n    super();\n    this.type = type;\n    this.versions = versions;\n    if (typeof type === 'string') {\n      this.versionPath = type.split('.');\n    }\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n\n    if (typeof this.type === 'string') {\n      res.version = getPath(parent, this.versionPath);\n    } else {\n      res.version = this.type.decode(stream);\n    }\n\n    if (this.versions.header) {\n      this._parseFields(stream, res, this.versions.header);\n    }\n\n    const fields = this.versions[res.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${res.version}`);\n    }\n\n    if (fields instanceof VersionedStruct) {\n      return fields.decode(stream, parent);\n    }\n\n    this._parseFields(stream, res, fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  size(val, parent, includePointers = true) {\n    let key, type;\n    if (!val) {\n      throw new Error('Not a fixed size');\n    }\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    let size = 0;\n    if (typeof this.type !== 'string') {\n      size += this.type.size(val.version, ctx);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${val.version}`);\n    }\n\n    for (key in fields) {\n      type = fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let key, type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    if (typeof this.type !== 'string') {\n      this.type.encode(stream, val.version);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    for (key in fields) {\n      type = fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import * as utils from './utils.js';\nimport {Base} from './Base.js';\n\nexport class Pointer extends Base {\n  constructor(offsetType, type, options = {}) {\n    super();\n    this.offsetType = offsetType;\n    this.type = type;\n    this.options = options;\n    if (this.type === 'void') { this.type = null; }\n    if (this.options.type == null) { this.options.type = 'local'; }\n    if (this.options.allowNull == null) { this.options.allowNull = true; }\n    if (this.options.nullValue == null) { this.options.nullValue = 0; }\n    if (this.options.lazy == null) { this.options.lazy = false; }\n    if (this.options.relativeTo) {\n      if (typeof this.options.relativeTo !== 'function') {\n        throw new Error('relativeTo option must be a function');\n      }\n      this.relativeToGetter = options.relativeTo;\n    }\n  }\n\n  decode(stream, ctx) {\n    const offset = this.offsetType.decode(stream, ctx);\n\n    // handle NULL pointers\n    if ((offset === this.options.nullValue) && this.options.allowNull) {\n      return null;\n    }\n\n    let relative;\n    switch (this.options.type) {\n      case 'local':     relative = ctx._startOffset; break;\n      case 'immediate': relative = stream.pos - this.offsetType.size(); break;\n      case 'parent':    relative = ctx.parent._startOffset; break;\n      default:\n        var c = ctx;\n        while (c.parent) {\n          c = c.parent;\n        }\n\n        relative = c._startOffset || 0;\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(ctx);\n    }\n\n    const ptr = offset + relative;\n\n    if (this.type != null) {\n      let val = null;\n      const decodeValue = () => {\n        if (val != null) { return val; }\n\n        const { pos } = stream;\n        stream.pos = ptr;\n        val = this.type.decode(stream, ctx);\n        stream.pos = pos;\n        return val;\n      };\n\n      // If this is a lazy pointer, define a getter to decode only when needed.\n      // This obviously only works when the pointer is contained by a Struct.\n      if (this.options.lazy) {\n        return new utils.PropertyDescriptor({\n          get: decodeValue});\n      }\n\n      return decodeValue();\n    } else {\n      return ptr;\n    }\n  }\n\n  size(val, ctx) {\n    const parent = ctx;\n    switch (this.options.type) {\n      case 'local': case 'immediate':\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        break;\n      default: // global\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    if (val && ctx) {\n      // Must be written as two separate lines rather than += in case `type.size` mutates ctx.pointerSize.\n      let size = type.size(val, parent);\n      ctx.pointerSize += size;\n    }\n\n    return this.offsetType.size();\n  }\n\n  encode(stream, val, ctx) {\n    let relative;\n    const parent = ctx;\n    if ((val == null)) {\n      this.offsetType.encode(stream, this.options.nullValue);\n      return;\n    }\n\n    switch (this.options.type) {\n      case 'local':\n        relative = ctx.startOffset;\n        break;\n      case 'immediate':\n        relative = stream.pos + this.offsetType.size(val, parent);\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        relative = ctx.startOffset;\n        break;\n      default: // global\n        relative = 0;\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(parent.val);\n    }\n\n    this.offsetType.encode(stream, ctx.pointerOffset - relative);\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    ctx.pointers.push({\n      type,\n      val,\n      parent\n    });\n\n    return ctx.pointerOffset += type.size(val, parent);\n  }\n}\n\n// A pointer whose type is determined at decode time\nexport class VoidPointer {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n","module.exports = require(\"legacy-swc-helpers/lib/_define_property.js\")","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _defineProperty;\n    }\n});\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","module.exports = require(\"legacy-swc-helpers/lib/_ts_decorate.js\")","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _tslib[\"__decorate\"];\n    }\n});\nvar _tslib = require(\"tslib\");\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n",null,"import base64 from 'base64-js';\nimport UnicodeTrie from 'unicode-trie';\nimport data from './data.json';\n\nconst trie = new UnicodeTrie(base64.toByteArray(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\n\nconst log2 = Math.log2 || (n => Math.log(n) / Math.LN2);\nconst bits = (n) => ((log2(n) + 1) | 0);\n\n// compute the number of bits stored for each field\nconst CATEGORY_BITS = bits(data.categories.length - 1);\nconst COMBINING_BITS = bits(data.combiningClasses.length - 1);\nconst SCRIPT_BITS = bits(data.scripts.length - 1);\nconst EAW_BITS = bits(data.eaw.length - 1);\nconst NUMBER_BITS = 10;\n\n// compute shift and mask values for each field\nconst CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\nconst EAW_SHIFT = NUMBER_BITS;\nconst CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\nconst COMBINING_MASK = (1 << COMBINING_BITS) - 1;\nconst SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\nconst EAW_MASK = (1 << EAW_BITS) - 1;\nconst NUMBER_MASK = (1 << NUMBER_BITS) - 1;\n\nexport function getCategory(codePoint) {\n  const val = trie.get(codePoint);\n  return data.categories[(val >> CATEGORY_SHIFT) & CATEGORY_MASK];\n}\n\nexport function getCombiningClass(codePoint) {\n  const val = trie.get(codePoint);\n  return data.combiningClasses[(val >> COMBINING_SHIFT) & COMBINING_MASK];\n}\n\nexport function getScript(codePoint) {\n  const val = trie.get(codePoint);\n  return data.scripts[(val >> SCRIPT_SHIFT) & SCRIPT_MASK];\n}\n\nexport function getEastAsianWidth(codePoint) {\n  const val = trie.get(codePoint);\n  return data.eaw[(val >> EAW_SHIFT) & EAW_MASK];\n}\n\nexport function getNumericValue(codePoint) {\n  let val = trie.get(codePoint);\n  let num = val & NUMBER_MASK;\n\n  if (num === 0) {\n    return null;\n  } else if (num <= 50) {\n    return num - 1;\n  } else if (num < 0x1e0) {\n    const numerator = (num >> 4) - 12;\n    const denominator = (num & 0xf) + 1;\n    return numerator / denominator;\n  } else if (num < 0x300) {\n    val = (num >> 5) - 14;\n    let exp = (num & 0x1f) + 2;\n\n    while (exp > 0) {\n      val *= 10;\n      exp--;\n    }\n    return val;\n  } else {\n    val = (num >> 2) - 0xbf;\n    let exp = (num & 3) + 1;\n    while (exp > 0) {\n      val *= 60;\n      exp--;\n    }\n    return val;\n  }\n}\n\nexport function isAlphabetic(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Nl'\n  )\n}\n\nexport function isDigit(codePoint) {\n  return getCategory(codePoint) === 'Nd'\n}\n\nexport function isPunctuation(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Pc' ||\n    category === 'Pd' ||\n    category === 'Pe' ||\n    category === 'Pf' ||\n    category === 'Pi' ||\n    category === 'Po' ||\n    category === 'Ps'\n  );\n}\n\nexport function isLowerCase(codePoint) {\n  return getCategory(codePoint) === 'Ll';\n}\n\nexport function isUpperCase(codePoint) {\n  return getCategory(codePoint) === 'Lu'\n}\n\nexport function isTitleCase(codePoint) {\n  return getCategory(codePoint) === 'Lt'\n}\n\nexport function isWhiteSpace(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Zs' ||\n    category === 'Zl' ||\n    category === 'Zp'\n  );\n}\n\nexport function isBaseForm(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Nd' ||\n    category === 'No' ||\n    category === 'Nl' ||\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Me' ||\n    category === 'Mc'\n  )\n}\n\nexport function isMark(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Mn' ||\n    category === 'Me' ||\n    category === 'Mc'\n  );\n}\n\n// Backwards compatibility.\nexport default {\n  getCategory,\n  getCombiningClass,\n  getScript,\n  getEastAsianWidth,\n  getNumericValue,\n  isAlphabetic,\n  isDigit,\n  isPunctuation,\n  isLowerCase,\n  isUpperCase,\n  isTitleCase,\n  isWhiteSpace,\n  isBaseForm,\n  isMark\n};\n","{\"categories\":[\"Cc\",\"Zs\",\"Po\",\"Sc\",\"Ps\",\"Pe\",\"Sm\",\"Pd\",\"Nd\",\"Lu\",\"Sk\",\"Pc\",\"Ll\",\"So\",\"Lo\",\"Pi\",\"Cf\",\"No\",\"Pf\",\"Lt\",\"Lm\",\"Mn\",\"Me\",\"Mc\",\"Nl\",\"Zl\",\"Zp\",\"Cs\",\"Co\"],\"combiningClasses\":[\"Not_Reordered\",\"Above\",\"Above_Right\",\"Below\",\"Attached_Above_Right\",\"Attached_Below\",\"Overlay\",\"Iota_Subscript\",\"Double_Below\",\"Double_Above\",\"Below_Right\",\"Above_Left\",\"CCC10\",\"CCC11\",\"CCC12\",\"CCC13\",\"CCC14\",\"CCC15\",\"CCC16\",\"CCC17\",\"CCC18\",\"CCC19\",\"CCC20\",\"CCC21\",\"CCC22\",\"CCC23\",\"CCC24\",\"CCC25\",\"CCC30\",\"CCC31\",\"CCC32\",\"CCC27\",\"CCC28\",\"CCC29\",\"CCC33\",\"CCC34\",\"CCC35\",\"CCC36\",\"Nukta\",\"Virama\",\"CCC84\",\"CCC91\",\"CCC103\",\"CCC107\",\"CCC118\",\"CCC122\",\"CCC129\",\"CCC130\",\"CCC132\",\"Attached_Above\",\"Below_Left\",\"Left\",\"Kana_Voicing\",\"CCC26\",\"Right\"],\"scripts\":[\"Common\",\"Latin\",\"Bopomofo\",\"Inherited\",\"Greek\",\"Coptic\",\"Cyrillic\",\"Armenian\",\"Hebrew\",\"Arabic\",\"Syriac\",\"Thaana\",\"Nko\",\"Samaritan\",\"Mandaic\",\"Devanagari\",\"Bengali\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhala\",\"Thai\",\"Lao\",\"Tibetan\",\"Myanmar\",\"Georgian\",\"Hangul\",\"Ethiopic\",\"Cherokee\",\"Canadian_Aboriginal\",\"Ogham\",\"Runic\",\"Tagalog\",\"Hanunoo\",\"Buhid\",\"Tagbanwa\",\"Khmer\",\"Mongolian\",\"Limbu\",\"Tai_Le\",\"New_Tai_Lue\",\"Buginese\",\"Tai_Tham\",\"Balinese\",\"Sundanese\",\"Batak\",\"Lepcha\",\"Ol_Chiki\",\"Braille\",\"Glagolitic\",\"Tifinagh\",\"Han\",\"Hiragana\",\"Katakana\",\"Yi\",\"Lisu\",\"Vai\",\"Bamum\",\"Syloti_Nagri\",\"Phags_Pa\",\"Saurashtra\",\"Kayah_Li\",\"Rejang\",\"Javanese\",\"Cham\",\"Tai_Viet\",\"Meetei_Mayek\",\"null\",\"Linear_B\",\"Lycian\",\"Carian\",\"Old_Italic\",\"Gothic\",\"Old_Permic\",\"Ugaritic\",\"Old_Persian\",\"Deseret\",\"Shavian\",\"Osmanya\",\"Osage\",\"Elbasan\",\"Caucasian_Albanian\",\"Linear_A\",\"Cypriot\",\"Imperial_Aramaic\",\"Palmyrene\",\"Nabataean\",\"Hatran\",\"Phoenician\",\"Lydian\",\"Meroitic_Hieroglyphs\",\"Meroitic_Cursive\",\"Kharoshthi\",\"Old_South_Arabian\",\"Old_North_Arabian\",\"Manichaean\",\"Avestan\",\"Inscriptional_Parthian\",\"Inscriptional_Pahlavi\",\"Psalter_Pahlavi\",\"Old_Turkic\",\"Old_Hungarian\",\"Hanifi_Rohingya\",\"Old_Sogdian\",\"Sogdian\",\"Elymaic\",\"Brahmi\",\"Kaithi\",\"Sora_Sompeng\",\"Chakma\",\"Mahajani\",\"Sharada\",\"Khojki\",\"Multani\",\"Khudawadi\",\"Grantha\",\"Newa\",\"Tirhuta\",\"Siddham\",\"Modi\",\"Takri\",\"Ahom\",\"Dogra\",\"Warang_Citi\",\"Nandinagari\",\"Zanabazar_Square\",\"Soyombo\",\"Pau_Cin_Hau\",\"Bhaiksuki\",\"Marchen\",\"Masaram_Gondi\",\"Gunjala_Gondi\",\"Makasar\",\"Cuneiform\",\"Egyptian_Hieroglyphs\",\"Anatolian_Hieroglyphs\",\"Mro\",\"Bassa_Vah\",\"Pahawh_Hmong\",\"Medefaidrin\",\"Miao\",\"Tangut\",\"Nushu\",\"Duployan\",\"SignWriting\",\"Nyiakeng_Puachue_Hmong\",\"Wancho\",\"Mende_Kikakui\",\"Adlam\"],\"eaw\":[\"N\",\"Na\",\"A\",\"W\",\"H\",\"F\"]}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const inflate = require('tiny-inflate');\nconst { swap32LE } = require('./swap');\n\n// Shift size for getting the index-1 table offset.\nconst SHIFT_1 = 6 + 5;\n\n// Shift size for getting the index-2 table offset.\nconst SHIFT_2 = 5;\n\n// Difference between the two shift sizes,\n// for getting an index-1 offset from an index-2 offset. 6=11-5\nconst SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n// Number of index-1 entries for the BMP. 32=0x20\n// This part of the index-1 table is omitted from the serialized form.\nconst OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n// Number of entries in an index-2 block. 64=0x40\nconst INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n// Mask for getting the lower bits for the in-index-2-block offset. */\nconst INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n// Shift size for shifting left the index array values.\n// Increases possible data size with 16-bit index values at the cost\n// of compactability.\n// This requires data blocks to be aligned by DATA_GRANULARITY.\nconst INDEX_SHIFT = 2;\n\n// Number of entries in a data block. 32=0x20\nconst DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n// Mask for getting the lower bits for the in-data-block offset.\nconst DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n// The part of the index-2 table for U+D800..U+DBFF stores values for\n// lead surrogate code _units_ not code _points_.\n// Values for lead surrogate code _points_ are indexed with this portion of the table.\n// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)\nconst LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\nconst LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n// Count the lengths of both BMP pieces. 2080=0x820\nconst INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.\nconst UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\nconst UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;  // U+0800 is the first code point after 2-byte UTF-8\n\n// The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n// Variable length, for code points up to highStart, where the last single-value range starts.\n// Maximum length 512=0x200=0x100000>>SHIFT_1.\n// (For 0x100000 supplementary code points U+10000..U+10ffff.)\n//\n// The part of the index-2 table for supplementary code points starts\n// after this index-1 table.\n//\n// Both the index-1 table and the following part of the index-2 table\n// are omitted completely if there is only BMP data.\nconst INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n// The alignment size of a data block. Also the granularity for compaction.\nconst DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\nclass UnicodeTrie {\n  constructor(data) {\n    const isBuffer = (typeof data.readUInt32BE === 'function') && (typeof data.slice === 'function');\n\n    if (isBuffer || data instanceof Uint8Array) {\n      // read binary format\n      let uncompressedLength;\n      if (isBuffer) {\n        this.highStart = data.readUInt32LE(0);\n        this.errorValue = data.readUInt32LE(4);\n        uncompressedLength = data.readUInt32LE(8);\n        data = data.slice(12);\n      } else {\n        const view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0, true);\n        this.errorValue = view.getUint32(4, true);\n        uncompressedLength = view.getUint32(8, true);\n        data = data.subarray(12);\n      }\n\n      // double inflate the actual trie data\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n\n      // swap bytes from little-endian\n      swap32LE(data);\n\n      this.data = new Uint32Array(data.buffer);\n\n    } else {\n      // pre-parsed data\n      ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);\n    }\n  }\n\n  get(codePoint) {\n    let index;\n    if ((codePoint < 0) || (codePoint > 0x10ffff)) {\n      return this.errorValue;\n    }\n\n    if ((codePoint < 0xd800) || ((codePoint > 0xdbff) && (codePoint <= 0xffff))) {\n      // Ordinary BMP code point, excluding leading surrogates.\n      // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.\n      // data is stored in the index array itself.\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint <= 0xffff) {\n      // Lead Surrogate Code Point.  A Separate index section is stored for\n      // lead surrogate code units and code points.\n      //   The main index has the code unit data.\n      //   For this function, we need the code point data.\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint < this.highStart) {\n      // Supplemental code point, use two-level lookup.\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    return this.data[this.data.length - DATA_GRANULARITY];\n  }\n}\n\nmodule.exports = UnicodeTrie;","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n",null,"const INITIAL_STATE = 1;\nconst FAIL_STATE = 0;\n\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\nexport default class StateMachine {\n  constructor(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n  match(str) {\n    let self = this;\n    return {\n      *[Symbol.iterator]() {\n        let state = INITIAL_STATE;\n        let startRun = null;\n        let lastAccepting = null;\n        let lastState = null;\n\n        for (let p = 0; p < str.length; p++) {\n          let c = str[p];\n\n          lastState = state;\n          state = self.stateTable[state][c];\n\n          if (state === FAIL_STATE) {\n            // yield the last match if any\n            if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n              yield [startRun, lastAccepting, self.tags[lastState]];\n            }\n\n            // reset the state as if we started over from the initial state\n            state = self.stateTable[INITIAL_STATE][c];\n            startRun = null;\n          }\n\n          // start a run if not in the failure state\n          if (state !== FAIL_STATE && startRun == null) {\n            startRun = p;\n          }\n\n          // if accepting, mark the potential match end\n          if (self.accepting[state]) {\n            lastAccepting = p;\n          }\n\n          // reset the state to the initial state if we get into the failure state\n          if (state === FAIL_STATE) {\n            state = INITIAL_STATE;\n          }\n        }\n\n        // yield the last match if any\n        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n          yield [startRun, lastAccepting, self.tags[state]];\n        }\n      }\n    };\n  }\n\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */\n  apply(str, actions) {\n    for (let [start, end, tags] of this.match(str)) {\n      for (let tag of tags) {\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  }\n}\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","module.exports = require('./dec/decode').BrotliDecompressBuffer;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n","function BrotliInput(buffer) {\n  this.buffer = buffer;\n  this.pos = 0;\n}\n\nBrotliInput.prototype.read = function(buf, i, count) {\n  if (this.pos + count > this.buffer.length) {\n    count = this.buffer.length - this.pos;\n  }\n  \n  for (var p = 0; p < count; p++)\n    buf[i + p] = this.buffer[this.pos + p];\n  \n  this.pos += count;\n  return count;\n}\n\nexports.BrotliInput = BrotliInput;\n\nfunction BrotliOutput(buf) {\n  this.buffer = buf;\n  this.pos = 0;\n}\n\nBrotliOutput.prototype.write = function(buf, count) {\n  if (this.pos + count > this.buffer.length)\n    throw new Error('Output buffer is not large enough');\n  \n  this.buffer.set(buf.subarray(0, count), this.pos);\n  this.pos += count;\n  return count;\n};\n\nexports.BrotliOutput = BrotliOutput;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Bit reading helpers\n*/\n\nvar BROTLI_READ_SIZE = 4096;\nvar BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);\nvar BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);\n\nvar kBitMask = new Uint32Array([\n  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,\n  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215\n]);\n\n/* Input byte buffer, consist of a ringbuffer and a \"slack\" region where */\n/* bytes from the start of the ringbuffer are copied. */\nfunction BrotliBitReader(input) {\n  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);\n  this.input_ = input;    /* input callback */\n  \n  this.reset();\n}\n\nBrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;\nBrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;\n\nBrotliBitReader.prototype.reset = function() {\n  this.buf_ptr_ = 0;      /* next input will write here */\n  this.val_ = 0;          /* pre-fetched bits */\n  this.pos_ = 0;          /* byte position in stream */\n  this.bit_pos_ = 0;      /* current bit-reading position in val_ */\n  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */\n  this.eos_ = 0;          /* input stream is finished */\n  \n  this.readMoreInput();\n  for (var i = 0; i < 4; i++) {\n    this.val_ |= this.buf_[this.pos_] << (8 * i);\n    ++this.pos_;\n  }\n  \n  return this.bit_end_pos_ > 0;\n};\n\n/* Fills up the input ringbuffer by calling the input callback.\n\n   Does nothing if there are at least 32 bytes present after current position.\n\n   Returns 0 if either:\n    - the input callback returned an error, or\n    - there is no more input and the position is past the end of the stream.\n\n   After encountering the end of the input stream, 32 additional zero bytes are\n   copied to the ringbuffer, therefore it is safe to call this function after\n   every 32 bytes of input is read.\n*/\nBrotliBitReader.prototype.readMoreInput = function() {\n  if (this.bit_end_pos_ > 256) {\n    return;\n  } else if (this.eos_) {\n    if (this.bit_pos_ > this.bit_end_pos_)\n      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);\n  } else {\n    var dst = this.buf_ptr_;\n    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);\n    if (bytes_read < 0) {\n      throw new Error('Unexpected end of input');\n    }\n    \n    if (bytes_read < BROTLI_READ_SIZE) {\n      this.eos_ = 1;\n      /* Store 32 bytes of zero after the stream end. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[dst + bytes_read + p] = 0;\n    }\n    \n    if (dst === 0) {\n      /* Copy the head of the ringbuffer to the slack region. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];\n\n      this.buf_ptr_ = BROTLI_READ_SIZE;\n    } else {\n      this.buf_ptr_ = 0;\n    }\n    \n    this.bit_end_pos_ += bytes_read << 3;\n  }\n};\n\n/* Guarantees that there are at least 24 bits in the buffer. */\nBrotliBitReader.prototype.fillBitWindow = function() {    \n  while (this.bit_pos_ >= 8) {\n    this.val_ >>>= 8;\n    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;\n    ++this.pos_;\n    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;\n    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;\n  }\n};\n\n/* Reads the specified number of bits from Read Buffer. */\nBrotliBitReader.prototype.readBits = function(n_bits) {\n  if (32 - this.bit_pos_ < n_bits) {\n    this.fillBitWindow();\n  }\n  \n  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);\n  this.bit_pos_ += n_bits;\n  return val;\n};\n\nmodule.exports = BrotliBitReader;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Collection of static dictionary words.\n*/\n\nvar data = require('./dictionary-data');\nexports.init = function() {\n  exports.dictionary = data.init();\n};\n\nexports.offsetsByLength = new Uint32Array([\n     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,\n 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,\n 115968, 118528, 119872, 121280, 122016,\n]);\n\nexports.sizeBitsByLength = new Uint8Array([\n  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,\n 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,\n  7,  6,  6,  5,  5,\n]);\n\nexports.minDictionaryWordLength = 4;\nexports.maxDictionaryWordLength = 24;\n","var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. 😜\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n","module.exports=\"\";\n","function HuffmanCode(bits, value) {\n  this.bits = bits;   /* number of bits used for this symbol */\n  this.value = value; /* symbol value or table offset */\n}\n\nexports.HuffmanCode = HuffmanCode;\n\nvar MAX_LENGTH = 15;\n\n/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the\n   bit-wise reversal of the len least significant bits of key. */\nfunction GetNextKey(key, len) {\n  var step = 1 << (len - 1);\n  while (key & step) {\n    step >>= 1;\n  }\n  return (key & (step - 1)) + step;\n}\n\n/* Stores code in table[0], table[step], table[2*step], ..., table[end] */\n/* Assumes that end is an integer multiple of step */\nfunction ReplicateValue(table, i, step, end, code) {\n  do {\n    end -= step;\n    table[i + end] = new HuffmanCode(code.bits, code.value);\n  } while (end > 0);\n}\n\n/* Returns the table width of the next 2nd level table. count is the histogram\n   of bit lengths for the remaining symbols, len is the code length of the next\n   processed symbol */\nfunction NextTableBitSize(count, len, root_bits) {\n  var left = 1 << (len - root_bits);\n  while (len < MAX_LENGTH) {\n    left -= count[len];\n    if (left <= 0) break;\n    ++len;\n    left <<= 1;\n  }\n  return len - root_bits;\n}\n\nexports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {\n  var start_table = table;\n  var code;            /* current table entry */\n  var len;             /* current code length */\n  var symbol;          /* symbol index in original or sorted table */\n  var key;             /* reversed prefix code */\n  var step;            /* step size to replicate values in current table */\n  var low;             /* low bits for current root entry */\n  var mask;            /* mask for low bits */\n  var table_bits;      /* key length of current table */\n  var table_size;      /* size of current table */\n  var total_size;      /* sum of root table size and 2nd level table sizes */\n  var sorted;          /* symbols sorted by code length */\n  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */\n  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */\n\n  sorted = new Int32Array(code_lengths_size);\n\n  /* build histogram of code lengths */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    count[code_lengths[symbol]]++;\n  }\n\n  /* generate offsets into sorted symbol table by code length */\n  offset[1] = 0;\n  for (len = 1; len < MAX_LENGTH; len++) {\n    offset[len + 1] = offset[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    if (code_lengths[symbol] !== 0) {\n      sorted[offset[code_lengths[symbol]]++] = symbol;\n    }\n  }\n  \n  table_bits = root_bits;\n  table_size = 1 << table_bits;\n  total_size = table_size;\n\n  /* special case code with only one value */\n  if (offset[MAX_LENGTH] === 1) {\n    for (key = 0; key < total_size; ++key) {\n      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);\n    }\n    \n    return total_size;\n  }\n\n  /* fill in root table */\n  key = 0;\n  symbol = 0;\n  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + key, step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n\n  /* fill in 2nd level tables and add pointers to root table */\n  mask = total_size - 1;\n  low = -1;\n  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      if ((key & mask) !== low) {\n        table += table_size;\n        table_bits = NextTableBitSize(count, len, root_bits);\n        table_size = 1 << table_bits;\n        total_size += table_size;\n        low = key & mask;\n        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);\n      }\n      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n  \n  return total_size;\n}\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\n\nvar CONTEXT_LSB6         = 0;\nvar CONTEXT_MSB6         = 1;\nvar CONTEXT_UTF8         = 2;\nvar CONTEXT_SIGNED       = 3;\n\n/* Common context lookup table for all context modes. */\nexports.lookup = new Uint8Array([\n  /* CONTEXT_UTF8, last byte. */\n  /* ASCII range. */\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,\n  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,\n  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,\n  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,\n  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,\n  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,\n  /* UTF8 continuation byte range. */\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  /* UTF8 lead byte range. */\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  /* CONTEXT_UTF8 second last byte. */\n  /* ASCII range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,\n  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n  /* UTF8 continuation byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  /* UTF8 lead byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  /* CONTEXT_SIGNED, second last byte. */\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n  /* CONTEXT_LSB6, last byte. */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  /* CONTEXT_MSB6, last byte. */\n   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,\n   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,\n   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,\n  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,\n  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,\n  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,\n  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,\n  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,\n  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,\n  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,\n  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,\n  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,\n  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,\n  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,\n  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,\n  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n  /* CONTEXT_{M,L}SB6, second last byte, */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n]);\n\nexports.lookupOffsets = new Uint16Array([\n  /* CONTEXT_LSB6 */\n  1024, 1536,\n  /* CONTEXT_MSB6 */\n  1280, 1536,\n  /* CONTEXT_UTF8 */\n  0, 256,\n  /* CONTEXT_SIGNED */\n  768, 512,\n]);\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup tables to map prefix codes to value ranges. This is used during\n   decoding of the block lengths, literal insertion lengths and copy lengths.\n*/\n\n/* Represents the range of values belonging to a prefix code: */\n/* [offset, offset + 2^nbits) */\nfunction PrefixCodeRange(offset, nbits) {\n  this.offset = offset;\n  this.nbits = nbits;\n}\n\nexports.kBlockLengthPrefixCode = [\n  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),\n  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),\n  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),\n  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),\n  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),\n  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),\n  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)\n];\n\nexports.kInsertLengthPrefixCode = [\n  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),\n  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),\n  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),\n  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),\n  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),\n  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),\n];\n\nexports.kCopyLengthPrefixCode = [\n  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),\n  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),\n  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),\n  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),\n  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),\n  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),\n];\n\nexports.kInsertRangeLut = [\n  0, 0, 8, 8, 0, 16, 8, 16, 16,\n];\n\nexports.kCopyRangeLut = [\n  0, 8, 0, 8, 16, 0, 16, 8, 16,\n];\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\n\nvar kIdentity       = 0;\nvar kOmitLast1      = 1;\nvar kOmitLast2      = 2;\nvar kOmitLast3      = 3;\nvar kOmitLast4      = 4;\nvar kOmitLast5      = 5;\nvar kOmitLast6      = 6;\nvar kOmitLast7      = 7;\nvar kOmitLast8      = 8;\nvar kOmitLast9      = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll   = 11;\nvar kOmitFirst1     = 12;\nvar kOmitFirst2     = 13;\nvar kOmitFirst3     = 14;\nvar kOmitFirst4     = 15;\nvar kOmitFirst5     = 16;\nvar kOmitFirst6     = 17;\nvar kOmitFirst7     = 18;\nvar kOmitFirst8     = 19;\nvar kOmitFirst9     = 20;\n\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  \n  for (var i = 0; i < prefix.length; i++)\n    this.prefix[i] = prefix.charCodeAt(i);\n  \n  for (var i = 0; i < suffix.length; i++)\n    this.suffix[i] = suffix.charCodeAt(i);\n}\n\nvar kTransforms = [\n     new Transform(         \"\", kIdentity,       \"\"           ),\n     new Transform(         \"\", kIdentity,       \" \"          ),\n     new Transform(        \" \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kOmitFirst1,     \"\"           ),\n     new Transform(         \"\", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" the \"      ),\n     new Transform(        \" \", kIdentity,       \"\"           ),\n     new Transform(       \"s \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \" and \"      ),\n     new Transform(         \"\", kOmitFirst2,     \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"\"           ),\n     new Transform(       \", \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \", \"         ),\n     new Transform(        \" \", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" in \"       ),\n     new Transform(         \"\", kIdentity,       \" to \"       ),\n     new Transform(       \"e \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \"\\\"\"         ),\n     new Transform(         \"\", kIdentity,       \".\"          ),\n     new Transform(         \"\", kIdentity,       \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"\\n\"         ),\n     new Transform(         \"\", kOmitLast3,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"]\"          ),\n     new Transform(         \"\", kIdentity,       \" for \"      ),\n     new Transform(         \"\", kOmitFirst3,     \"\"           ),\n     new Transform(         \"\", kOmitLast2,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" a \"        ),\n     new Transform(         \"\", kIdentity,       \" that \"     ),\n     new Transform(        \" \", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \". \"         ),\n     new Transform(        \".\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \", \"         ),\n     new Transform(         \"\", kOmitFirst4,     \"\"           ),\n     new Transform(         \"\", kIdentity,       \" with \"     ),\n     new Transform(         \"\", kIdentity,       \"'\"          ),\n     new Transform(         \"\", kIdentity,       \" from \"     ),\n     new Transform(         \"\", kIdentity,       \" by \"       ),\n     new Transform(         \"\", kOmitFirst5,     \"\"           ),\n     new Transform(         \"\", kOmitFirst6,     \"\"           ),\n     new Transform(    \" the \", kIdentity,       \"\"           ),\n     new Transform(         \"\", kOmitLast4,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \". The \"     ),\n     new Transform(         \"\", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \" on \"       ),\n     new Transform(         \"\", kIdentity,       \" as \"       ),\n     new Transform(         \"\", kIdentity,       \" is \"       ),\n     new Transform(         \"\", kOmitLast7,      \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"ing \"       ),\n     new Transform(         \"\", kIdentity,       \"\\n\\t\"       ),\n     new Transform(         \"\", kIdentity,       \":\"          ),\n     new Transform(        \" \", kIdentity,       \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ed \"        ),\n     new Transform(         \"\", kOmitFirst9,     \"\"           ),\n     new Transform(         \"\", kOmitFirst7,     \"\"           ),\n     new Transform(         \"\", kOmitLast6,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kOmitLast8,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" at \"       ),\n     new Transform(         \"\", kIdentity,       \"ly \"        ),\n     new Transform(    \" the \", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kOmitLast5,      \"\"           ),\n     new Transform(         \"\", kOmitLast9,      \"\"           ),\n     new Transform(        \" \", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\"\"         ),\n     new Transform(        \".\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"=\\\"\"        ),\n     new Transform(        \" \", kIdentity,       \".\"          ),\n     new Transform(    \".com/\", kIdentity,       \"\"           ),\n     new Transform(    \" the \", kIdentity,       \" of the \"   ),\n     new Transform(         \"\", kUppercaseFirst, \"'\"          ),\n     new Transform(         \"\", kIdentity,       \". This \"    ),\n     new Transform(         \"\", kIdentity,       \",\"          ),\n     new Transform(        \".\", kIdentity,       \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kIdentity,       \" not \"      ),\n     new Transform(        \" \", kIdentity,       \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"er \"        ),\n     new Transform(        \" \", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kIdentity,       \"al \"        ),\n     new Transform(        \" \", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\"\"         ),\n     new Transform(         \"\", kUppercaseFirst, \". \"         ),\n     new Transform(        \" \", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kIdentity,       \"ful \"       ),\n     new Transform(        \" \", kUppercaseFirst, \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ive \"       ),\n     new Transform(         \"\", kIdentity,       \"less \"      ),\n     new Transform(         \"\", kUppercaseAll,   \"'\"          ),\n     new Transform(         \"\", kIdentity,       \"est \"       ),\n     new Transform(        \" \", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\">\"        ),\n     new Transform(        \" \", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseFirst, \",\"          ),\n     new Transform(         \"\", kIdentity,       \"ize \"       ),\n     new Transform(         \"\", kUppercaseAll,   \".\"          ),\n     new Transform( \"\\xc2\\xa0\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \",\"          ),\n     new Transform(         \"\", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(         \"\", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"ous \"       ),\n     new Transform(         \"\", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \",\"          ),\n     new Transform(        \" \", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseAll,   \",\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseAll,   \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \"='\"         )\n];\n\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\n\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n  \n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n  \n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\n\nexports.transformDictionaryWord = function(dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  \n  if (skip > len) {\n    skip = len;\n  }\n  \n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  \n  word += skip;\n  len -= skip;\n  \n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  \n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  \n  uppercase = idx - len;\n  \n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  \n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  \n  return idx - start_idx;\n}\n"],"names":["INITIAL_STATE","FAIL_STATE","StateMachine","constructor","dfa","stateTable","accepting","tags","match","str","self","Symbol","iterator","state","startRun","lastAccepting","lastState","p","length","c","apply","actions","start","end","tag","slice"],"version":3,"file":"index.18dbc454.js.map","sourceRoot":"/__parcel_source_root/"}