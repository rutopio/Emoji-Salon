function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var r,n,s,a,i,o,l="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},u={},c={},h=l.parcelRequire50bd;null==h&&((h=function(e){if(e in u)return u[e].exports;if(e in c){var t=c[e];delete c[e];var r={id:e,exports:{}};return u[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){c[e]=t},l.parcelRequire50bd=h),h.register("eQMeO",function(e,t){function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Object.defineProperty(e.exports,"__esModule",{value:!0}),Object.defineProperty(e.exports,"default",{enumerable:!0,get:function(){return r}})}),h.register("hieg9",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),Object.defineProperty(e.exports,"default",{enumerable:!0,get:function(){return r.__decorate}});var r=h("7WQrb")}),h.register("7WQrb",function(t,r){function n(e,t,r,n){var s,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(a<3?s(i):a>3?s(t,r,i):s(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i}e(t.exports,"__decorate",()=>n),"function"==typeof SuppressedError&&SuppressedError}),h.register("ktvS8",function(t,r){e(t.exports,"BrotliDecompressBuffer",()=>n,e=>n=e);var n,s=h("j5sEj"),a=s.BrotliInput,s=h("j5sEj"),i=s.BrotliOutput,o=h("8JSYM"),l=h("fo1rr"),u=h("kls9x"),c=u.HuffmanCode,u=h("kls9x"),f=u.BrotliBuildHuffmanTable,d=h("hX8C6"),p=h("7aaiK"),g=h("4zIc9"),m=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),y=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),b=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),A=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function w(e){var t;return 0===e.readBits(1)?16:(t=e.readBits(3))>0?17+t:(t=e.readBits(3))>0?8+t:17}/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */function v(e){if(e.readBits(1)){var t=e.readBits(3);return 0===t?1:e.readBits(t)+(1<<t)}return 0}function x(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function C(e){var t,r,n,s=new x;if(s.input_end=e.readBits(1),s.input_end&&e.readBits(1))return s;if(7===(t=e.readBits(2)+4)){if(s.is_metadata=!0,0!==e.readBits(1))throw Error("Invalid reserved bit");if(0===(r=e.readBits(2)))return s;for(n=0;n<r;n++){var a=e.readBits(8);if(n+1===r&&r>1&&0===a)throw Error("Invalid size byte");s.meta_block_length|=a<<8*n}}else for(n=0;n<t;++n){var i=e.readBits(4);if(n+1===t&&t>4&&0===i)throw Error("Invalid size nibble");s.meta_block_length|=i<<4*n}return++s.meta_block_length,s.input_end||s.is_metadata||(s.is_uncompressed=e.readBits(1)),s}/* Decodes the next Huffman code from bit-stream. */function I(e,t,r){var n;return r.fillBitWindow(),t+=r.val_>>>r.bit_pos_&255,(n=e[t].bits-8)>0&&(r.bit_pos_+=8,t+=e[t].value+(r.val_>>>r.bit_pos_&(1<<n)-1)),r.bit_pos_+=e[t].bits,e[t].value}function k(e,t,r,n){var s=0,a=new Uint8Array(e);if(n.readMoreInput(),1===/* simple_code_or_skip is used as follows:
     1 for simple code;
     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */(i=n.readBits(2))){for(var i,o,l=e-1,u=0,h=new Int32Array(4),d=n.readBits(2)+1;l;)l>>=1,++u;for(o=0;o<d;++o)h[o]=n.readBits(u)%e,a[h[o]]=2;switch(a[h[0]]=1,d){case 1:break;case 3:if(h[0]===h[1]||h[0]===h[2]||h[1]===h[2])throw Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(h[0]===h[1])throw Error("[ReadHuffmanCode] invalid symbols");a[h[1]]=1;break;case 4:if(h[0]===h[1]||h[0]===h[2]||h[0]===h[3]||h[1]===h[2]||h[1]===h[3]||h[2]===h[3])throw Error("[ReadHuffmanCode] invalid symbols");n.readBits(1)?(a[h[2]]=3,a[h[3]]=3):a[h[0]]=2}}else{var p=new Uint8Array(18),g=32,y=0,b=[new c(2,0),new c(2,4),new c(2,3),new c(3,2),new c(2,0),new c(2,4),new c(2,3),new c(4,1),new c(2,0),new c(2,4),new c(2,3),new c(3,2),new c(2,0),new c(2,4),new c(2,3),new c(4,5)];for(o=i;o<18&&g>0;++o){var o,A,w=m[o],v=0;n.fillBitWindow(),v+=n.val_>>>n.bit_pos_&15,n.bit_pos_+=b[v].bits,A=b[v].value,p[w]=A,0!==A&&(g-=32>>A,++y)}if(!(1===y||0===g))throw Error("[ReadHuffmanCode] invalid num_codes or space");!function(e,t,r,n){for(var s=0,a=8,i=0,o=0,l=32768,u=[],h=0;h<32;h++)u.push(new c(0,0));for(f(u,0,5,e,18);s<t&&l>0;){var d=0;if(n.readMoreInput(),n.fillBitWindow(),d+=n.val_>>>n.bit_pos_&31,n.bit_pos_+=u[d].bits,(p=255&u[d].value)<16)i=0,r[s++]=p,0!==p&&(a=p,l-=32768>>p);else{var p,g,m,y=p-14,b=0;if(16===p&&(b=a),o!==b&&(i=0,o=b),g=i,i>0&&(i-=2,i<<=y),i+=n.readBits(y)+3,s+(m=i-g)>t)throw Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var A=0;A<m;A++)r[s+A]=o;s+=m,0!==o&&(l-=m<<15-o)}}if(0!==l)throw Error("[ReadHuffmanCodeLengths] space = "+l);for(;s<t;s++)r[s]=0}(p,e,a,n)}if(0===(s=f(t,r,8,a,e)))throw Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return s}function E(e,t,r){var n,s;return n=I(e,t,r),s=p.kBlockLengthPrefixCode[n].nbits,p.kBlockLengthPrefixCode[n].offset+r.readBits(s)}/* Contains a collection of huffman trees with the same alphabet size. */function D(e,t){this.alphabet_size=e,this.num_htrees=t,this.codes=Array(t+t*A[e+31>>>5]),this.htrees=new Uint32Array(t)}function S(e,t){var r,n,s,a={num_htrees:null,context_map:null},i=0;t.readMoreInput();var o=a.num_htrees=v(t)+1,l=a.context_map=new Uint8Array(e);if(o<=1)return a;for(t.readBits(1)&&(i=t.readBits(4)+1),r=[],n=0;n<1080;n++)r[n]=new c(0,0);for(k(o+i,r,0,t),n=0;n<e;)if(t.readMoreInput(),0===(s=I(r,0,t)))l[n]=0,++n;else if(s<=i)for(var u=1+(1<<s)+t.readBits(s);--u;){if(n>=e)throw Error("[DecodeContextMap] i >= context_map_size");l[n]=0,++n}else l[n]=s-i,++n;return t.readBits(1)&&function(e,t){var r,n=new Uint8Array(256);for(r=0;r<256;++r)n[r]=r;for(r=0;r<t;++r){var s=e[r];e[r]=n[s],s&&function(e,t){for(var r=e[t],n=t;n;--n)e[n]=e[n-1];e[0]=r}(n,s)}}(l,e),a}function B(e,t,r,n,s,a,i){var o,l=2*r,u=I(t,1080*r,i);(o=0===u?s[l+(1&a[r])]:1===u?s[l+(a[r]-1&1)]+1:u-2)>=e&&(o-=e),n[r]=o,s[l+(1&a[r])]=o,++a[r]}D.prototype.decode=function(e){var t,r,n=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=n,r=k(this.alphabet_size,this.codes,n,e),n+=r},n=function(e,t){var r,n,s=new a(e);null==t&&(r=new a(e),w(n=new o(r)),t=C(n).meta_block_length);var u=new Uint8Array(t),h=new i(u);return function(e,t){var r=0,n=0,s=0,a=0,i=[16,15,11,4],u=0,h=0,f=0,m=[new D(0,0),new D(0,0),new D(0,0)],A=128+o.READ_SIZE;K=(1<</* Decode window size. */(s=w(er=new o(e))))-16,_=(Q=1<<s)-1,$=new Uint8Array(Q+A+l.maxDictionaryWordLength),ee=[],et=[];for(var x=0;x<3240;x++)ee[x]=new c(0,0),et[x]=new c(0,0);for(;!n;){var P=0,O=[268435456,268435456,268435456],T=[0],M=[1,1,1],F=[0,1,0,1,0,1],L=[0],U=null,G=null,R=null,N=null,z=0,V=null,W=0,j=0,Y=0;for(J=0;J<3;++J)m[J].codes=null,m[J].htrees=null;er.readMoreInput();var H=C(er);if(r+(P=H.meta_block_length)>t.buffer.length){/* We need to grow the output buffer to fit the additional data. */var q=new Uint8Array(r+P);q.set(t.buffer),t.buffer=q}if(n=H.input_end,en=H.is_uncompressed,H.is_metadata){for(/* Advances the bit reader position to the next byte boundary and verifies
   that any skipped bits are set to zero. */function(e){var t=e.bit_pos_+7&-8;e.readBits(t-e.bit_pos_)}(er);P>0;--P)er.readMoreInput(),/* Read one byte and ignore it. */er.readBits(8);continue}if(0!==P){if(en){er.bit_pos_=er.bit_pos_+7&-8,function(e,t,r,n,s,a){var i,l=s+1,u=r&s,c=a.pos_&o.IBUF_MASK;/* For short lengths copy byte-by-byte */if(t<8||a.bit_pos_+(t<<3)<a.bit_end_pos_){for(;t-- >0;)a.readMoreInput(),n[u++]=a.readBits(8),u===l&&(e.write(n,l),u=0);return}if(a.bit_end_pos_<32)throw Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");/* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */for(;a.bit_pos_<32;)n[u]=a.val_>>>a.bit_pos_,a.bit_pos_+=8,++u,--t;if(c+/* Copy remaining bytes from br.buf_ to ringbuffer. */(i=a.bit_end_pos_-a.bit_pos_>>3)>o.IBUF_MASK){for(var h=o.IBUF_MASK+1-c,f=0;f<h;f++)n[u+f]=a.buf_[c+f];i-=h,u+=h,t-=h,c=0}for(var f=0;f<i;f++)n[u+f]=a.buf_[c+f];/* If we wrote past the logical end of the ringbuffer, copy the tail of the
     ringbuffer to its beginning and flush the ringbuffer to the output. */if(u+=i,t-=i,u>=l){e.write(n,l),u-=l;for(var f=0;f<u;f++)n[f]=n[l+f]}/* If we have more to copy than the remaining size of the ringbuffer, then we
     first fill the ringbuffer from the input and then flush the ringbuffer to
     the output */for(;u+t>=l;){if(i=l-u,a.input_.read(n,u,i)<i)throw Error("[CopyUncompressedBlockToOutput] not enough bytes");e.write(n,l),t-=i,u=0}/* Copy straight from the input onto the ringbuffer. The ringbuffer will be
     flushed to the output at a later time. */if(a.input_.read(n,u,t)<t)throw Error("[CopyUncompressedBlockToOutput] not enough bytes");/* Restore the state of the bit reader. */a.reset()}(t,P,r,$,_,er),r+=P;continue}for(J=0;J<3;++J)M[J]=v(er)+1,M[J]>=2&&(k(M[J]+2,ee,1080*J,er),k(26,et,1080*J,er),O[J]=E(et,1080*J,er),L[J]=1);for(er.readMoreInput(),es=er.readBits(2),ea=16+(er.readBits(4)<<es),ei=(1<<es)-1,eo=ea+(48<<es),G=new Uint8Array(M[0]),J=0;J<M[0];++J)er.readMoreInput(),G[J]=er.readBits(2)<<1;var X=S(M[0]<<6,er);el=X.num_htrees,U=X.context_map;var Z=S(M[2]<<2,er);for(J=0,eu=Z.num_htrees,R=Z.context_map,m[0]=new D(256,el),m[1]=new D(704,M[1]),m[2]=new D(eo,eu);J<3;++J)m[J].decode(er);for(N=0,V=0,ec=G[T[0]],j=d.lookupOffsets[ec],Y=d.lookupOffsets[ec+1],eh=m[1].htrees[0];P>0;){for(er.readMoreInput(),0===O[1]&&(B(M[1],ee,1,T,F,L,er),O[1]=E(et,1080,er),eh=m[1].htrees[T[1]]),--O[1],(ed=(ef=I(m[1].codes,eh,er))>>6)>=2?(ed-=2,eb=-1):eb=0,ep=p.kInsertRangeLut[ed]+(ef>>3&7),eg=p.kCopyRangeLut[ed]+(7&ef),em=p.kInsertLengthPrefixCode[ep].offset+er.readBits(p.kInsertLengthPrefixCode[ep].nbits),ey=p.kCopyLengthPrefixCode[eg].offset+er.readBits(p.kCopyLengthPrefixCode[eg].nbits),h=$[r-1&_],f=$[r-2&_],ew=0;ew<em;++ew)er.readMoreInput(),0===O[0]&&(B(M[0],ee,0,T,F,L,er),O[0]=E(et,0,er),N=T[0]<<6,ec=G[T[0]],j=d.lookupOffsets[ec],Y=d.lookupOffsets[ec+1]),z=U[N+(d.lookup[j+h]|d.lookup[Y+f])],--O[0],f=h,h=I(m[0].codes,m[0].htrees[z],er),$[r&_]=h,(r&_)===_&&t.write($,Q),++r;if((P-=em)<=0)break;if(eb<0&&(er.readMoreInput(),0===O[2]&&(B(M[2],ee,2,T,F,L,er),O[2]=E(et,2160,er),V=T[2]<<2),--O[2],W=R[V+((ey>4?3:ey-2)&255)],(eb=I(m[2].codes,m[2].htrees[W],er))>=ea&&(eb-=ea,eC=eb&ei,eb>>=es,ex=(eb>>1)+1,eb=ea+((eI=(2+(1&eb)<<ex)-4)+er.readBits(ex)<<es)+eC)),/* Convert the distance code to the actual distance by possibly looking *//* up past distnaces from the ringbuffer. */(eA=function(e,t,r){var n;return e<16?(r+=y[e],r&=3,n=t[r]+b[e]):n=e-16+1,n}(eb,i,u))<0)throw Error("[BrotliDecompress] invalid distance");if(a=r<K&&a!==K?r:K,ev=r&_,eA>a){if(ey>=l.minDictionaryWordLength&&ey<=l.maxDictionaryWordLength){var J,K,Q,_,$,ee,et,er,en,es,ea,ei,eo,el,eu,ec,eh,ef,ed,ep,eg,em,ey,eb,eA,ew,ev,ex,eC,eI=l.offsetsByLength[ey],ek=eA-a-1,eE=l.sizeBitsByLength[ey],eD=ek&(1<<eE)-1,eS=ek>>eE;if(eI+=eD*ey,eS<g.kNumTransforms){var eB=g.transformDictionaryWord($,ev,eI,ey,eS);if(ev+=eB,r+=eB,P-=eB,ev>=Q){t.write($,Q);for(var eP=0;eP<ev-Q;eP++)$[eP]=$[Q+eP]}}else throw Error("Invalid backward reference. pos: "+r+" distance: "+eA+" len: "+ey+" bytes left: "+P)}else throw Error("Invalid backward reference. pos: "+r+" distance: "+eA+" len: "+ey+" bytes left: "+P)}else{if(eb>0&&(i[3&u]=eA,++u),ey>P)throw Error("Invalid backward reference. pos: "+r+" distance: "+eA+" len: "+ey+" bytes left: "+P);for(ew=0;ew<ey;++ew)$[r&_]=$[r-eA&_],(r&_)===_&&t.write($,Q),++r,--P}/* When we get here, we must have inserted at least one literal and *//* made a copy of at least length two, therefore accessing the last 2 *//* bytes is valid. */h=$[r-1&_],f=$[r-2&_]}/* Protect pos from overflow, wrap it around at every GB of input data */r&=1073741823}}t.write($,r&_)}(s,h),h.pos<h.buffer.length&&(h.buffer=h.buffer.subarray(0,h.pos)),h.buffer},l.init()}),h.register("j5sEj",function(t,r){var n,s;function a(e){this.buffer=e,this.pos=0}function i(e){this.buffer=e,this.pos=0}e(t.exports,"BrotliInput",()=>n,e=>n=e),e(t.exports,"BrotliOutput",()=>s,e=>s=e),a.prototype.read=function(e,t,r){this.pos+r>this.buffer.length&&(r=this.buffer.length-this.pos);for(var n=0;n<r;n++)e[t+n]=this.buffer[this.pos+n];return this.pos+=r,r},n=a,i.prototype.write=function(e,t){if(this.pos+t>this.buffer.length)throw Error("Output buffer is not large enough");return this.buffer.set(e.subarray(0,t),this.pos),this.pos+=t,t},s=i}),h.register("8JSYM",function(e,t){var r=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);/* Input byte buffer, consist of a ringbuffer and a "slack" region where *//* bytes from the start of the ringbuffer are copied. */function n(e){this.buf_=new Uint8Array(8224),this.input_=e,this.reset()}n.READ_SIZE=4096,n.IBUF_MASK=8191,n.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var e=0;e<4;e++)this.val_|=this.buf_[this.pos_]<<8*e,++this.pos_;return this.bit_end_pos_>0},/* Fills up the input ringbuffer by calling the input callback.

   Does nothing if there are at least 32 bytes present after current position.

   Returns 0 if either:
    - the input callback returned an error, or
    - there is no more input and the position is past the end of the stream.

   After encountering the end of the input stream, 32 additional zero bytes are
   copied to the ringbuffer, therefore it is safe to call this function after
   every 32 bytes of input is read.
*/n.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256)){if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var e=this.buf_ptr_,t=this.input_.read(this.buf_,e,4096);if(t<0)throw Error("Unexpected end of input");if(t<4096){this.eos_=1;/* Store 32 bytes of zero after the stream end. */for(var r=0;r<32;r++)this.buf_[e+t+r]=0}if(0===e){/* Copy the head of the ringbuffer to the slack region. */for(var r=0;r<32;r++)this.buf_[8192+r]=this.buf_[r];this.buf_ptr_=4096}else this.buf_ptr_=0;this.bit_end_pos_+=t<<3}}},/* Guarantees that there are at least 24 bits in the buffer. */n.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},/* Reads the specified number of bits from Read Buffer. */n.prototype.readBits=function(e){32-this.bit_pos_<e&&this.fillBitWindow();var t=this.val_>>>this.bit_pos_&r[e];return this.bit_pos_+=e,t},e.exports=n}),h.register("fo1rr",function(t,r){e(t.exports,"init",()=>n,e=>n=e),e(t.exports,"dictionary",()=>s,e=>s=e),e(t.exports,"offsetsByLength",()=>a,e=>a=e),e(t.exports,"sizeBitsByLength",()=>i,e=>i=e),e(t.exports,"minDictionaryWordLength",()=>o,e=>o=e),e(t.exports,"maxDictionaryWordLength",()=>l,e=>l=e);var n,s,a,i,o,l,u=h("uI49e");n=function(){s=u.init()},a=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),i=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),o=4,l=24}),h.register("uI49e",function(t,r){e(t.exports,"init",()=>n,e=>n=e);var n,s=h("kuxul");n=function(){return(0,h("ktvS8").BrotliDecompressBuffer)(s.toByteArray(h("3Cq5K")))}}),h.register("kuxul",function(t,r){e(t.exports,"byteLength",()=>n,e=>n=e),e(t.exports,"toByteArray",()=>s,e=>s=e),e(t.exports,"fromByteArray",()=>a,e=>a=e),n=// base64 is 4/3 + up to two characters of the original data
function(e){var t=f(e),r=t[0],n=t[1];return(r+n)*3/4-n},s=function(e){var t,r,n=f(e),s=n[0],a=n[1],i=new l((s+a)*3/4-a),u=0,c=a>0?s-4:s;for(r=0;r<c;r+=4)t=o[e.charCodeAt(r)]<<18|o[e.charCodeAt(r+1)]<<12|o[e.charCodeAt(r+2)]<<6|o[e.charCodeAt(r+3)],i[u++]=t>>16&255,i[u++]=t>>8&255,i[u++]=255&t;return 2===a&&(t=o[e.charCodeAt(r)]<<2|o[e.charCodeAt(r+1)]>>4,i[u++]=255&t),1===a&&(t=o[e.charCodeAt(r)]<<10|o[e.charCodeAt(r+1)]<<4|o[e.charCodeAt(r+2)]>>2,i[u++]=t>>8&255,i[u++]=255&t),i},a=function(e){// go through the array every three bytes, we'll deal with trailing stuff later
for(var t,r=e.length,n=r%3// if we have 1 byte left, pad 2 bytes
,s=[],a=0,o=r-n;a<o;a+=16383// must be multiple of 3
)s.push(function(e,t,r){for(var n,s=[],a=t;a<r;a+=3)s.push(i[(n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]))>>18&63]+i[n>>12&63]+i[n>>6&63]+i[63&n]);return s.join("")}(e,a,a+16383>o?o:a+16383));return 1===n?s.push(i[(t=e[r-1])>>2]+i[t<<4&63]+"=="):2===n&&s.push(i[(t=(e[r-2]<<8)+e[r-1])>>10]+i[t>>4&63]+i[t<<2&63]+"="),s.join("")};for(var n,s,a,i=[],o=[],l="undefined"!=typeof Uint8Array?Uint8Array:Array,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0,h=u.length;c<h;++c)i[c]=u[c],o[u.charCodeAt(c)]=c;function f(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63}),h.register("3Cq5K",function(e,t){e.exports=""}),h.register("kls9x",function(t,r){var n,s;function a(e,t){this.bits=e,this.value=t}/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the
   bit-wise reversal of the len least significant bits of key. */function i(e,t){for(var r=1<<t-1;e&r;)r>>=1;return(e&r-1)+r}/* Stores code in table[0], table[step], table[2*step], ..., table[end] *//* Assumes that end is an integer multiple of step */function o(e,t,r,n,s){do e[t+(n-=r)]=new a(s.bits,s.value);while(n>0)}e(t.exports,"HuffmanCode",()=>n,e=>n=e),e(t.exports,"BrotliBuildHuffmanTable",()=>s,e=>s=e),n=a,s=function(e,t,r,n,s){var l,u,c,h,f,d,p,g,m,y,b,A=t,w=new Int32Array(16),v=new Int32Array(16);/* build histogram of code lengths */for(c=0,b=new Int32Array(s);c<s;c++)w[n[c]]++;for(u=1,/* generate offsets into sorted symbol table by code length */v[1]=0;u<15;u++)v[u+1]=v[u]+w[u];/* sort symbols by length, by symbol order within each length */for(c=0;c<s;c++)0!==n[c]&&(b[v[n[c]]++]=c);/* special case code with only one value */if(y=m=1<<(g=r),1===v[15]){for(h=0;h<y;++h)e[t+h]=new a(0,65535&b[0]);return y}for(u=1,/* fill in root table */h=0,c=0,f=2;u<=r;++u,f<<=1)for(;w[u]>0;--w[u])o(e,t+h,f,m,l=new a(255&u,65535&b[c++])),h=i(h,u);for(/* fill in 2nd level tables and add pointers to root table */p=y-1,d=-1,u=r+1,f=2;u<=15;++u,f<<=1)for(;w[u]>0;--w[u])(h&p)!==d&&(t+=m,y+=m=1<<(g=/* Returns the table width of the next 2nd level table. count is the histogram
   of bit lengths for the remaining symbols, len is the code length of the next
   processed symbol */function(e,t,r){for(var n=1<<t-r;t<15&&!((n-=e[t])<=0);)++t,n<<=1;return t-r}(w,u,r)),e[A+(d=h&p)]=new a(g+r&255,t-A-d&65535)),l=new a(u-r&255,65535&b[c++]),o(e,t+(h>>r),f,m,l),h=i(h,u);return y}}),h.register("hX8C6",function(t,r){var n,s;e(t.exports,"lookup",()=>n,e=>n=e),e(t.exports,"lookupOffsets",()=>s,e=>s=e),n=new Uint8Array([/* CONTEXT_UTF8, last byte. *//* ASCII range. */0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,/* UTF8 continuation byte range. */0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,/* UTF8 lead byte range. */2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,/* CONTEXT_UTF8 second last byte. *//* ASCII range. */0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,/* UTF8 continuation byte range. */0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,/* UTF8 lead byte range. */0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,/* CONTEXT_SIGNED, second last byte. */0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,/* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,/* CONTEXT_LSB6, last byte. */0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,/* CONTEXT_MSB6, last byte. */0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,/* CONTEXT_{M,L}SB6, second last byte, */0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),s=new Uint16Array([/* CONTEXT_LSB6 */1024,1536,/* CONTEXT_MSB6 */1280,1536,/* CONTEXT_UTF8 */0,256,/* CONTEXT_SIGNED */768,512])}),h.register("7aaiK",function(t,r){var n,s,a,i,o;function l(e,t){this.offset=e,this.nbits=t}e(t.exports,"kBlockLengthPrefixCode",()=>n,e=>n=e),e(t.exports,"kInsertLengthPrefixCode",()=>s,e=>s=e),e(t.exports,"kCopyLengthPrefixCode",()=>a,e=>a=e),e(t.exports,"kInsertRangeLut",()=>i,e=>i=e),e(t.exports,"kCopyRangeLut",()=>o,e=>o=e),n=[new l(1,2),new l(5,2),new l(9,2),new l(13,2),new l(17,3),new l(25,3),new l(33,3),new l(41,3),new l(49,4),new l(65,4),new l(81,4),new l(97,4),new l(113,5),new l(145,5),new l(177,5),new l(209,5),new l(241,6),new l(305,6),new l(369,7),new l(497,8),new l(753,9),new l(1265,10),new l(2289,11),new l(4337,12),new l(8433,13),new l(16625,24)],s=[new l(0,0),new l(1,0),new l(2,0),new l(3,0),new l(4,0),new l(5,0),new l(6,1),new l(8,1),new l(10,2),new l(14,2),new l(18,3),new l(26,3),new l(34,4),new l(50,4),new l(66,5),new l(98,5),new l(130,6),new l(194,7),new l(322,8),new l(578,9),new l(1090,10),new l(2114,12),new l(6210,14),new l(22594,24)],a=[new l(2,0),new l(3,0),new l(4,0),new l(5,0),new l(6,0),new l(7,0),new l(8,0),new l(9,0),new l(10,1),new l(12,1),new l(14,2),new l(18,2),new l(22,3),new l(30,3),new l(38,4),new l(54,4),new l(70,5),new l(102,5),new l(134,6),new l(198,7),new l(326,8),new l(582,9),new l(1094,10),new l(2118,24)],i=[0,0,8,8,0,16,8,16,16],o=[0,8,0,8,16,0,16,8,16]}),h.register("4zIc9",function(t,r){e(t.exports,"kNumTransforms",()=>n,e=>n=e),e(t.exports,"transformDictionaryWord",()=>s,e=>s=e);var n,s,a=h("fo1rr");function i(e,t,r){this.prefix=new Uint8Array(e.length),this.transform=t,this.suffix=new Uint8Array(r.length);for(var n=0;n<e.length;n++)this.prefix[n]=e.charCodeAt(n);for(var n=0;n<r.length;n++)this.suffix[n]=r.charCodeAt(n)}var o=[new i("",0,""),new i("",0," "),new i(" ",0," "),new i("",12,""),new i("",10," "),new i("",0," the "),new i(" ",0,""),new i("s ",0," "),new i("",0," of "),new i("",10,""),new i("",0," and "),new i("",13,""),new i("",1,""),new i(", ",0," "),new i("",0,", "),new i(" ",10," "),new i("",0," in "),new i("",0," to "),new i("e ",0," "),new i("",0,'"'),new i("",0,"."),new i("",0,'">'),new i("",0,"\n"),new i("",3,""),new i("",0,"]"),new i("",0," for "),new i("",14,""),new i("",2,""),new i("",0," a "),new i("",0," that "),new i(" ",10,""),new i("",0,". "),new i(".",0,""),new i(" ",0,", "),new i("",15,""),new i("",0," with "),new i("",0,"'"),new i("",0," from "),new i("",0," by "),new i("",16,""),new i("",17,""),new i(" the ",0,""),new i("",4,""),new i("",0,". The "),new i("",11,""),new i("",0," on "),new i("",0," as "),new i("",0," is "),new i("",7,""),new i("",1,"ing "),new i("",0,"\n	"),new i("",0,":"),new i(" ",0,". "),new i("",0,"ed "),new i("",20,""),new i("",18,""),new i("",6,""),new i("",0,"("),new i("",10,", "),new i("",8,""),new i("",0," at "),new i("",0,"ly "),new i(" the ",0," of "),new i("",5,""),new i("",9,""),new i(" ",10,", "),new i("",10,'"'),new i(".",0,"("),new i("",11," "),new i("",10,'">'),new i("",0,'="'),new i(" ",0,"."),new i(".com/",0,""),new i(" the ",0," of the "),new i("",10,"'"),new i("",0,". This "),new i("",0,","),new i(".",0," "),new i("",10,"("),new i("",10,"."),new i("",0," not "),new i(" ",0,'="'),new i("",0,"er "),new i(" ",11," "),new i("",0,"al "),new i(" ",11,""),new i("",0,"='"),new i("",11,'"'),new i("",10,". "),new i(" ",0,"("),new i("",0,"ful "),new i(" ",10,". "),new i("",0,"ive "),new i("",0,"less "),new i("",11,"'"),new i("",0,"est "),new i(" ",10,"."),new i("",11,'">'),new i(" ",0,"='"),new i("",10,","),new i("",0,"ize "),new i("",11,"."),new i("\xc2\xa0",0,""),new i(" ",0,","),new i("",10,'="'),new i("",11,'="'),new i("",0,"ous "),new i("",11,", "),new i("",10,"='"),new i(" ",10,","),new i(" ",11,'="'),new i(" ",11,", "),new i("",11,","),new i("",11,"("),new i("",11,". "),new i(" ",11,"."),new i("",11,"='"),new i(" ",11,". "),new i(" ",10,'="'),new i(" ",11,"='"),new i(" ",10,"='")];function l(e,t){return e[t]<192?(e[t]>=97&&e[t]<=122&&(e[t]^=32),1):e[t]<224?(e[t+1]^=32,2):(/* An arbitrary transform for three byte characters. */e[t+2]^=5,3)}n=o.length,s=function(e,t,r,n,s){var i,u=o[s].prefix,c=o[s].suffix,h=o[s].transform,f=h<12?0:h-11,d=0,p=t;f>n&&(f=n);for(var g=0;g<u.length;)e[t++]=u[g++];for(r+=f,n-=f,h<=9&&(n-=h),d=0;d<n;d++)e[t++]=a.dictionary[r+d];if(i=t-n,10===h)l(e,i);else if(11===h)for(;n>0;){var m=l(e,i);i+=m,n-=m}for(var y=0;y<c.length;)e[t++]=c[y++];return t-p}}),r=function(e){// go through the array every three bytes, we'll deal with trailing stuff later
for(var t,r=e.length,n=r%3// if we have 1 byte left, pad 2 bytes
,s=[],a=0,i=r-n;a<i;a+=16383// must be multiple of 3
)s.push(function(e,t,r){for(var n,s=[],a=t;a<r;a+=3)s.push(f[(n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]))>>18&63]+f[n>>12&63]+f[n>>6&63]+f[63&n]);return s.join("")}(e,a,a+16383>i?i:a+16383));return 1===n?s.push(f[(t=e[r-1])>>2]+f[t<<4&63]+"=="):2===n&&s.push(f[(t=(e[r-2]<<8)+e[r-1])>>10]+f[t>>4&63]+f[t<<2&63]+"="),s.join("")};for(var f=[],d=[],p="undefined"!=typeof Uint8Array?Uint8Array:Array,g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",m=0,y=g.length;m<y;++m)f[m]=g[m],d[g.charCodeAt(m)]=m;// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
d["-".charCodeAt(0)]=62,d["_".charCodeAt(0)]=63,n=function(e,t,r,n,s){var a,i,o=8*s-n-1,l=(1<<o)-1,u=l>>1,c=-7,h=r?s-1:0,f=r?-1:1,d=e[t+h];for(h+=f,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=f,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=n;c>0;i=256*i+e[t+h],h+=f,c-=8);if(0===a)a=1-u;else{if(a===l)return i?NaN:(d?-1:1)*(1/0);i+=Math.pow(2,n),a-=u}return(d?-1:1)*i*Math.pow(2,a-n)},s=function(e,t,r,n,s,a){var i,o,l,u=8*a-s-1,c=(1<<u)-1,h=c>>1,f=23===s?5960464477539062e-23:0,d=n?0:a-1,p=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+h>=1?t+=f/l:t+=f*Math.pow(2,1-h),t*l>=2&&(i++,l/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*l-1)*Math.pow(2,s),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;e[r+d]=255&o,d+=p,o/=256,s-=8);for(i=i<<s|o,u+=s;u>0;e[r+d]=255&i,d+=p,i/=256,u-=8);e[r+d-p]|=128*g};const b="function"==typeof Symbol&&"function"// eslint-disable-line dot-notation
==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom")// eslint-disable-line dot-notation
:null;function A(e){if(e>2147483647)throw RangeError('The value "'+e+'" is invalid for option "size"');// Return an augmented `Uint8Array` instance
let t=new Uint8Array(e);return Object.setPrototypeOf(t,w.prototype),t}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function w(e,t,r){// Common case.
if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return C(e)}return v(e,t,r)}function v(e,t,r){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!w.isEncoding(t))throw TypeError("Unknown encoding: "+t);let r=0|D(e,t),n=A(r),s=n.write(e,t);return s!==r&&// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
(n=n.slice(0,s)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){let t=new Uint8Array(e);return k(t.buffer,t.byteOffset,t.byteLength)}return I(e)}(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return k(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return w.from(n,t,r);let s=function(e){var t;if(w.isBuffer(e)){let t=0|E(e.length),r=A(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t// eslint-disable-line no-self-compare
?A(0):I(e):"Buffer"===e.type&&Array.isArray(e.data)?I(e.data):void 0}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return w.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function x(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function C(e){return x(e),A(e<0?0:0|E(e))}function I(e){let t=e.length<0?0:0|E(e.length),r=A(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function k(e,t,r){let n;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return(// Return an augmented `Uint8Array` instance
Object.setPrototypeOf(n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),w.prototype),n)}function E(e){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(e>=2147483647)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function D(e,t){if(w.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;// Use a for loop to avoid recursion
let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return X(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Z(e).length;default:if(s)return n?-1:X(e).length// assume utf8
;t=(""+t).toLowerCase(),s=!0}}function S(e,t,n){let s=!1;// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===n||n>this.length)&&(n=this.length),n<=0||// Force coercion to uint32. This will also coerce falsey/NaN values to 0.
(n>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){let n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let s="";for(let n=t;n<r;++n)s+=Q[e[n]];return s}(this,t,n);case"utf8":case"utf-8":return T(this,t,n);case"ascii":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let s=t;s<r;++s)n+=String.fromCharCode(127&e[s]);return n}(this,t,n);case"latin1":case"binary":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let s=t;s<r;++s)n+=String.fromCharCode(e[s]);return n}(this,t,n);case"base64":var a,i;return a=t,i=n,0===a&&i===this.length?r(this):r(this.slice(a,i));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){let n=e.slice(t,r),s="";// If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
for(let e=0;e<n.length-1;e+=2)s+=String.fromCharCode(n[e]+256*n[e+1]);return s}(this,t,n);default:if(s)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),s=!0}}function B(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function P(e,t,r,n,s){var a;// Empty buffer means no match
if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),(a=r=+r// Coerce to Number.
)!=a&&(r=s?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(s)return -1;r=e.length-1}else if(r<0){if(!s)return -1;r=0}// Finally, search either indexOf (if dir is true) or lastIndexOf
if("string"==typeof t&&(t=w.from(t,n)),w.isBuffer(t))return(// Special case: looking for empty string/buffer always fails
0===t.length?-1:O(e,t,r,n,s));if("number"==typeof t)return(t&=255// Search for a byte value [0-255]
,"function"==typeof Uint8Array.prototype.indexOf)?s?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):O(e,[t],r,n,s);throw TypeError("val must be string, number or Buffer")}function O(e,t,r,n,s){let a,i=1,o=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;i=2,o/=2,l/=2,r/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(s){let n=-1;for(a=r;a<o;a++)if(u(e,a)===u(t,-1===n?0:a-n)){if(-1===n&&(n=a),a-n+1===l)return n*i}else -1!==n&&(a-=a-n),n=-1}else for(r+l>o&&(r=o-l),a=r;a>=0;a--){let r=!0;for(let n=0;n<l;n++)if(u(e,a+n)!==u(t,n)){r=!1;break}if(r)return a}return -1}function T(e,t,r){r=Math.min(e.length,r);let n=[],s=t;for(;s<r;){let t=e[s],a=null,i=t>239?4:t>223?3:t>191?2:1;if(s+i<=r){let r,n,o,l;switch(i){case 1:t<128&&(a=t);break;case 2:(192&(r=e[s+1]))==128&&(l=(31&t)<<6|63&r)>127&&(a=l);break;case 3:r=e[s+1],n=e[s+2],(192&r)==128&&(192&n)==128&&(l=(15&t)<<12|(63&r)<<6|63&n)>2047&&(l<55296||l>57343)&&(a=l);break;case 4:r=e[s+1],n=e[s+2],o=e[s+3],(192&r)==128&&(192&n)==128&&(192&o)==128&&(l=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&o)>65535&&l<1114112&&(a=l)}}null===a?(// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
a=65533,i=1):a>65535&&(// encode to utf16 (surrogate pair dance)
a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),s+=i}return function(e){let t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e)// avoid extra slice()
;// Decode in chunks to avoid "call stack size exceeded".
let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function M(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function F(e,t,r,n,s,a){if(!w.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw RangeError('"value" argument is out of bounds');if(r+n>e.length)throw RangeError("Index out of range")}function L(e,t,r,n,s){j(t,n,s,e,r,7);let a=Number(t&BigInt(4294967295));e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,r}function U(e,t,r,n,s){j(t,n,s,e,r,7);let a=Number(t&BigInt(4294967295));e[r+7]=a,a>>=8,e[r+6]=a,a>>=8,e[r+5]=a,a>>=8,e[r+4]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=i,i>>=8,e[r+2]=i,i>>=8,e[r+1]=i,i>>=8,e[r]=i,r+8}function G(e,t,r,n,s,a){if(r+n>e.length||r<0)throw RangeError("Index out of range")}function R(e,t,r,n,a){return t=+t,r>>>=0,a||G(e,t,r,4,34028234663852886e22,-34028234663852886e22),s(e,t,r,n,23,4),r+4}function N(e,t,r,n,a){return t=+t,r>>>=0,a||G(e,t,r,8,17976931348623157e292,-17976931348623157e292),s(e,t,r,n,52,8),r+8}/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */w.TYPED_ARRAY_SUPPORT=function(){// Can typed array instances can be augmented?
try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),w.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(w.prototype,"parent",{enumerable:!0,get:function(){if(w.isBuffer(this))return this.buffer}}),Object.defineProperty(w.prototype,"offset",{enumerable:!0,get:function(){if(w.isBuffer(this))return this.byteOffset}}),w.poolSize=8192// not used by this implementation
,/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/w.from=function(e,t,r){return v(e,t,r)},// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(w.prototype,Uint8Array.prototype),Object.setPrototypeOf(w,Uint8Array),/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/w.alloc=function(e,t,r){return(x(e),e<=0)?A(e):void 0!==t?"string"==typeof r?A(e).fill(t,r):A(e).fill(t):A(e)},/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */w.allocUnsafe=function(e){return C(e)},/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */w.allocUnsafeSlow=function(e){return C(e)},w.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==w.prototype// so Buffer.isBuffer(Buffer.prototype) will be false
},w.compare=function(e,t){if(K(e,Uint8Array)&&(e=w.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=w.from(t,t.offset,t.byteLength)),!w.isBuffer(e)||!w.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let s=0,a=Math.min(r,n);s<a;++s)if(e[s]!==t[s]){r=e[s],n=t[s];break}return r<n?-1:n<r?1:0},w.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},w.concat=function(e,t){let r;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return w.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;let n=w.allocUnsafe(t),s=0;for(r=0;r<e.length;++r){let t=e[r];if(K(t,Uint8Array))s+t.length>n.length?(w.isBuffer(t)||(t=w.from(t)),t.copy(n,s)):Uint8Array.prototype.set.call(n,t,s);else if(w.isBuffer(t))t.copy(n,s);else throw TypeError('"list" argument must be an Array of Buffers');s+=t.length}return n},w.byteLength=D,// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
w.prototype._isBuffer=!0,w.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)B(this,t,t+1);return this},w.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)B(this,t,t+3),B(this,t+1,t+2);return this},w.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)B(this,t,t+7),B(this,t+1,t+6),B(this,t+2,t+5),B(this,t+3,t+4);return this},w.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?T(this,0,e):S.apply(this,arguments)},w.prototype.toLocaleString=w.prototype.toString,w.prototype.equals=function(e){if(!w.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===w.compare(this,e)},w.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},b&&(w.prototype[b]=w.prototype.inspect),w.prototype.compare=function(e,t,r,n,s){if(K(e,Uint8Array)&&(e=w.from(e,e.offset,e.byteLength)),!w.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===s&&(s=this.length),t<0||r>e.length||n<0||s>this.length)throw RangeError("out of range index");if(n>=s&&t>=r)return 0;if(n>=s)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,n>>>=0,s>>>=0,this===e)return 0;let a=s-n,i=r-t,o=Math.min(a,i),l=this.slice(n,s),u=e.slice(t,r);for(let e=0;e<o;++e)if(l[e]!==u[e]){a=l[e],i=u[e];break}return a<i?-1:i<a?1:0},w.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},w.prototype.indexOf=function(e,t,r){return P(this,e,t,r,!0)},w.prototype.lastIndexOf=function(e,t,r){return P(this,e,t,r,!1)},w.prototype.write=function(e,t,r,n){var s,a,i,o,l,u,c,h;// Buffer#write(string)
if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let f=this.length-t;if((void 0===r||r>f)&&(r=f),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let d=!1;for(;;)switch(n){case"hex":return function(e,t,r,n){let s;r=Number(r)||0;let a=e.length-r;n?(n=Number(n))>a&&(n=a):n=a;let i=t.length;for(n>i/2&&(n=i/2),s=0;s<n;++s){let n=parseInt(t.substr(2*s,2),16);if(n!=n)break;e[r+s]=n}return s}(this,e,t,r);case"utf8":case"utf-8":return s=t,a=r,J(X(e,this.length-s),this,s,a);case"ascii":case"latin1":case"binary":return i=t,o=r,J(function(e){let t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(e),this,i,o);case"base64":// Warning: maxLength not taken into account in base64Write
return l=t,u=r,J(Z(e),this,l,u);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return c=t,h=r,J(function(e,t){let r,n;let s=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=(r=e.charCodeAt(a))>>8,s.push(r%256),s.push(n);return s}(e,this.length-c),this,c,h);default:if(d)throw TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),d=!0}},w.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},w.prototype.slice=function(e,t){let r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);let n=this.subarray(e,t);return(// Return an augmented `Uint8Array` instance
Object.setPrototypeOf(n,w.prototype),n)},w.prototype.readUintLE=w.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e],s=1,a=0;for(;++a<t&&(s*=256);)n+=this[e+a]*s;return n},w.prototype.readUintBE=w.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e+--t],s=1;for(;t>0&&(s*=256);)n+=this[e+--t]*s;return n},w.prototype.readUint8=w.prototype.readUInt8=function(e,t){return e>>>=0,t||M(e,1,this.length),this[e]},w.prototype.readUint16LE=w.prototype.readUInt16LE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]|this[e+1]<<8},w.prototype.readUint16BE=w.prototype.readUInt16BE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]<<8|this[e+1]},w.prototype.readUint32LE=w.prototype.readUInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},w.prototype.readUint32BE=w.prototype.readUInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},w.prototype.readBigUInt64LE=_(function(e){Y(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&H(e,this.length-8);let n=t+256*this[++e]+65536*this[++e]+16777216*this[++e],s=this[++e]+256*this[++e]+65536*this[++e]+16777216*r;return BigInt(n)+(BigInt(s)<<BigInt(32))}),w.prototype.readBigUInt64BE=_(function(e){Y(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&H(e,this.length-8);let n=16777216*t+65536*this[++e]+256*this[++e]+this[++e],s=16777216*this[++e]+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(s)}),w.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e],s=1,a=0;for(;++a<t&&(s*=256);)n+=this[e+a]*s;return n>=(s*=128)&&(n-=Math.pow(2,8*t)),n},w.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=t,s=1,a=this[e+--n];for(;n>0&&(s*=256);)a+=this[e+--n]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*t)),a},w.prototype.readInt8=function(e,t){return(e>>>=0,t||M(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},w.prototype.readInt16LE=function(e,t){e>>>=0,t||M(e,2,this.length);let r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},w.prototype.readInt16BE=function(e,t){e>>>=0,t||M(e,2,this.length);let r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},w.prototype.readInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},w.prototype.readInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},w.prototype.readBigInt64LE=_(function(e){Y(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&H(e,this.length-8);let n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24// Overflow
);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+16777216*this[++e])}),w.prototype.readBigInt64BE=_(function(e){Y(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&H(e,this.length-8);let n=(t<<24)+// Overflow
65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(16777216*this[++e]+65536*this[++e]+256*this[++e]+r)}),w.prototype.readFloatLE=function(e,t){return e>>>=0,t||M(e,4,this.length),n(this,e,!0,23,4)},w.prototype.readFloatBE=function(e,t){return e>>>=0,t||M(e,4,this.length),n(this,e,!1,23,4)},w.prototype.readDoubleLE=function(e,t){return e>>>=0,t||M(e,8,this.length),n(this,e,!0,52,8)},w.prototype.readDoubleBE=function(e,t){return e>>>=0,t||M(e,8,this.length),n(this,e,!1,52,8)},w.prototype.writeUintLE=w.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;F(this,e,t,r,n,0)}let s=1,a=0;for(this[t]=255&e;++a<r&&(s*=256);)this[t+a]=e/s&255;return t+r},w.prototype.writeUintBE=w.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;F(this,e,t,r,n,0)}let s=r-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+r},w.prototype.writeUint8=w.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,1,255,0),this[t]=255&e,t+1},w.prototype.writeUint16LE=w.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},w.prototype.writeUint16BE=w.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},w.prototype.writeUint32LE=w.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},w.prototype.writeUint32BE=w.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},w.prototype.writeBigUInt64LE=_(function(e,t=0){return L(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),w.prototype.writeBigUInt64BE=_(function(e,t=0){return U(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),w.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);F(this,e,t,r,n-1,-n)}let s=0,a=1,i=0;for(this[t]=255&e;++s<r&&(a*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+r},w.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);F(this,e,t,r,n-1,-n)}let s=r-1,a=1,i=0;for(this[t+s]=255&e;--s>=0&&(a*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+r},w.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},w.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},w.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},w.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},w.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||F(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},w.prototype.writeBigInt64LE=_(function(e,t=0){return L(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),w.prototype.writeBigInt64BE=_(function(e,t=0){return U(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),w.prototype.writeFloatLE=function(e,t,r){return R(this,e,t,!0,r)},w.prototype.writeFloatBE=function(e,t,r){return R(this,e,t,!1,r)},w.prototype.writeDoubleLE=function(e,t,r){return N(this,e,t,!0,r)},w.prototype.writeDoubleBE=function(e,t,r){return N(this,e,t,!1,r)},// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
w.prototype.copy=function(e,t,r,n){if(!w.isBuffer(e))throw TypeError("argument should be a Buffer");// Copy 0 bytes; we're done
if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r||0===e.length||0===this.length)return 0;// Fatal error conditions
if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(n<0)throw RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);let s=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),s},// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
w.prototype.fill=function(e,t,r,n){let s;// Handle string cases:
if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw TypeError("encoding must be a string");if("string"==typeof n&&!w.isEncoding(n))throw TypeError("Unknown encoding: "+n);if(1===e.length){let t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));// Invalid ranges are not set to a default, so can range check early.
if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(s=t;s<r;++s)this[s]=e;else{let a=w.isBuffer(e)?e:w.from(e,n),i=a.length;if(0===i)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<r-t;++s)this[s+t]=a[s%i]}return this};// CUSTOM ERRORS
// =============
// Simplified versions from Node, changed for Buffer-only usage
const z={};function V(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),// Add the error code to the name to include it in the stack trace.
this.name=`${this.name} [${e}]`,// Access the stack to generate the error message including the error code
// from the name.
this.stack// eslint-disable-line no-unused-expressions
,// Reset the name to the actual name.
delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function W(e){let t="",r=e.length,n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function j(e,t,r,n,s,a){if(e>r||e<t){let n;let s="bigint"==typeof t?"n":"";throw n=a>3?0===t||t===BigInt(0)?`>= 0${s} and < 2${s} ** ${(a+1)*8}${s}`:`>= -(2${s} ** ${(a+1)*8-1}${s}) and < 2 ** ${(a+1)*8-1}${s}`:`>= ${t}${s} and <= ${r}${s}`,new z.ERR_OUT_OF_RANGE("value",n,e)}Y(s,"offset"),(void 0===n[s]||void 0===n[s+a])&&H(s,n.length-(a+1))}function Y(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function H(e,t,r){if(Math.floor(e)!==e)throw Y(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}V("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),V("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),V("ERR_OUT_OF_RANGE",function(e,t,r){let n=`The value of "${e}" is out of range.`,s=r;return Number.isInteger(r)&&Math.abs(r)>4294967296?s=W(String(r)):"bigint"==typeof r&&(s=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(s=W(s)),s+="n"),n+=` It must be ${t}. Received ${s}`},RangeError);// HELPER FUNCTIONS
// ================
const q=/[^+/0-9A-Za-z-_]/g;function X(e,t){let r;t=t||1/0;let n=e.length,s=null,a=[];for(let i=0;i<n;++i){// is surrogate component
if((r=e.charCodeAt(i))>55295&&r<57344){// last char was a lead
if(!s){// no lead yet
if(r>56319||i+1===n){// unexpected trail
(t-=3)>-1&&a.push(239,191,189);continue}// valid lead
s=r;continue}// 2 leads in a row
if(r<56320){(t-=3)>-1&&a.push(239,191,189),s=r;continue}// valid surrogate pair
r=(s-55296<<10|r-56320)+65536}else s&&(t-=3)>-1&&a.push(239,191,189);// encode utf8
if(s=null,r<128){if((t-=1)<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return a}function Z(e){return function(e){var t,r,n=function(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}(e),s=n[0],a=n[1],i=new p((s+a)*3/4-a),o=0,l=a>0?s-4:s;for(r=0;r<l;r+=4)t=d[e.charCodeAt(r)]<<18|d[e.charCodeAt(r+1)]<<12|d[e.charCodeAt(r+2)]<<6|d[e.charCodeAt(r+3)],i[o++]=t>>16&255,i[o++]=t>>8&255,i[o++]=255&t;return 2===a&&(t=d[e.charCodeAt(r)]<<2|d[e.charCodeAt(r+1)]>>4,i[o++]=255&t),1===a&&(t=d[e.charCodeAt(r)]<<10|d[e.charCodeAt(r+1)]<<4|d[e.charCodeAt(r+2)]>>2,i[o++]=t>>8&255,i[o++]=255&t),i}(function(e){// Node converts strings with length < 2 to ''
if(// Node strips out invalid characters like \n and \t from the string, base64-js does not
(e=// Node takes equal signs as end of the Base64 encoding
(e=e.split("=")[0]).trim().replace(q,"")).length<2)return"";// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,r,n){let s;for(s=0;s<n&&!(s+r>=t.length)&&!(s>=e.length);++s)t[s+r]=e[s];return s}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const Q=function(){let e="0123456789abcdef",t=Array(256);for(let r=0;r<16;++r){let n=16*r;for(let s=0;s<16;++s)t[n+s]=e[r]+e[s]}return t}();// Return not function with Error if BigInt not supported
function _(e){return"undefined"==typeof BigInt?$:e}function $(){throw Error("BigInt not supported")}var ee={};// Node back-compat.
const et={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};class er{constructor(e){this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0,this.length=this.buffer.length}readString(e,t="ascii"){t=et[t]||t;let r=this.readBuffer(e);try{return new TextDecoder(t).decode(r)}catch(e){return r}}readBuffer(e){return this.buffer.slice(this.pos,this.pos+=e)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}}for(let e of(er.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8},Object.getOwnPropertyNames(DataView.prototype)))if("get"===e.slice(0,3)){let t=e.slice(3).replace("Ui","UI");"Float32"===t?t="Float":"Float64"===t&&(t="Double");let r=er.TYPES[t];er.prototype["read"+t+(1===r?"":"BE")]=function(){let t=this.view[e](this.pos,!1);return this.pos+=r,t},1!==r&&(er.prototype["read"+t+"LE"]=function(){let t=this.view[e](this.pos,!0);return this.pos+=r,t})}const en=new TextEncoder,es=18==new Uint8Array(new Uint16Array([4660]).buffer)[0];class ea{constructor(e){this.buffer=e,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(e){this.buffer.set(e,this.pos),this.pos+=e.length}writeString(e,t="ascii"){let r;switch(t){case"utf16le":case"utf16-le":case"ucs2":r=ei(e,es);break;case"utf16be":case"utf16-be":r=ei(e,!es);break;case"utf8":r=en.encode(e);break;case"ascii":r=function(e){let t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}(e);break;default:throw Error(`Unsupported encoding: ${t}`)}this.writeBuffer(r)}writeUInt24BE(e){this.buffer[this.pos++]=e>>>16&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=255&e}writeUInt24LE(e){this.buffer[this.pos++]=255&e,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e>>>16&255}writeInt24BE(e){e>=0?this.writeUInt24BE(e):this.writeUInt24BE(e+16777215+1)}writeInt24LE(e){e>=0?this.writeUInt24LE(e):this.writeUInt24LE(e+16777215+1)}fill(e,t){if(t<this.buffer.length)this.buffer.fill(e,this.pos,this.pos+t),this.pos+=t;else{let r=new Uint8Array(t);r.fill(e),this.writeBuffer(r)}}}function ei(e,t){let r=new Uint16Array(e.length);for(let n=0;n<e.length;n++){let s=e.charCodeAt(n);t&&(s=s>>8|(255&s)<<8),r[n]=s}return new Uint8Array(r.buffer)}for(let e of Object.getOwnPropertyNames(DataView.prototype))if("set"===e.slice(0,3)){let t=e.slice(3).replace("Ui","UI");"Float32"===t?t="Float":"Float64"===t&&(t="Double");let r=er.TYPES[t];ea.prototype["write"+t+(1===r?"":"BE")]=function(t){this.view[e](this.pos,t,!1),this.pos+=r},1!==r&&(ea.prototype["write"+t+"LE"]=function(t){this.view[e](this.pos,t,!0),this.pos+=r})}class eo{fromBuffer(e){let t=new er(e);return this.decode(t)}toBuffer(e){let t=this.size(e),r=new Uint8Array(t),n=new ea(r);return this.encode(n,e),r}}class el extends eo{constructor(e,t="BE"){super(),this.type=e,this.endian=t,this.fn=this.type,"8"!==this.type[this.type.length-1]&&(this.fn+=this.endian)}size(){return er.TYPES[this.type]}decode(e){return e[`read${this.fn}`]()}encode(e,t){return e[`write${this.fn}`](t)}}const eu=new el("UInt8"),ec=new el("UInt16","BE");new el("UInt16","LE");const eh=new el("UInt24","BE");new el("UInt24","LE");const ef=new el("UInt32","BE");new el("UInt32","LE");const ed=new el("Int8"),ep=new el("Int16","BE");new el("Int16","LE"),new el("Int24","BE"),new el("Int24","LE");const eg=new el("Int32","BE");new el("Int32","LE"),new el("Float","BE"),new el("Float","LE"),new el("Double","BE"),new el("Double","LE");class em extends el{constructor(e,t,r=e>>1){super(`Int${e}`,t),this._point=1<<r}decode(e){return super.decode(e)/this._point}encode(e,t){return super.encode(e,t*this._point|0)}}const ey=new em(16,"BE");new em(16,"LE");const eb=new em(32,"BE");function eA(e,t,r){let n;if("number"==typeof e?n=e:"function"==typeof e?n=e.call(r,r):r&&"string"==typeof e?n=r[e]:t&&e instanceof el&&(n=e.decode(t)),isNaN(n))throw Error("Not a fixed size");return n}new em(32,"LE");class ew{constructor(e={}){for(let t in this.enumerable=!0,this.configurable=!0,e){let r=e[t];this[t]=r}}}class ev extends eo{constructor(e,t,r="count"){super(),this.type=e,this.length=t,this.lengthType=r}decode(e,t){let r;let{pos:n}=e,s=[],a=t;if(null!=this.length&&(r=eA(this.length,e,t)),this.length instanceof el&&(// define hidden properties
Object.defineProperties(s,{parent:{value:t},_startOffset:{value:n},_currentOffset:{value:0,writable:!0},_length:{value:r}}),a=s),null==r||"bytes"===this.lengthType){let n=null!=r?e.pos+r:(null!=t?t._length:void 0)?t._startOffset+t._length:e.length;for(;e.pos<n;)s.push(this.type.decode(e,a))}else for(let t=0,n=r;t<n;t++)s.push(this.type.decode(e,a));return s}size(e,t,r=!0){if(!e)return this.type.size(null,t)*eA(this.length,null,t);let n=0;for(let r of(this.length instanceof el&&(n+=this.length.size(),t={parent:t,pointerSize:0}),e))n+=this.type.size(r,t);return t&&r&&this.length instanceof el&&(n+=t.pointerSize),n}encode(e,t,r){let n=r;for(let s of(this.length instanceof el&&((n={pointers:[],startOffset:e.pos,parent:r}).pointerOffset=e.pos+this.size(t,n,!1),this.length.encode(e,t.length)),t))this.type.encode(e,s,n);if(this.length instanceof el){let t=0;for(;t<n.pointers.length;){let r=n.pointers[t++];r.type.encode(e,r.val,r.parent)}}}}class ex extends ev{decode(e,t){let{pos:r}=e,n=eA(this.length,e,t);this.length instanceof el&&(t={parent:t,_startOffset:r,_currentOffset:0,_length:n});let s=new eC(this.type,n,e,t);return e.pos+=n*this.type.size(null,t),s}size(e,t){return e instanceof eC&&(e=e.toArray()),super.size(e,t)}encode(e,t,r){return t instanceof eC&&(t=t.toArray()),super.encode(e,t,r)}}class eC{constructor(e,t,r,n){this.type=e,this.length=t,this.stream=r,this.ctx=n,this.base=this.stream.pos,this.items=[]}get(e){if(!(e<0)&&!(e>=this.length)){if(null==this.items[e]){let{pos:t}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*e,this.items[e]=this.type.decode(this.stream,this.ctx),this.stream.pos=t}return this.items[e]}}toArray(){let e=[];for(let t=0,r=this.length;t<r;t++)e.push(this.get(t));return e}}class eI extends eo{constructor(e,t=[]){super(),this.type=e,this.flags=t}decode(e){let t=this.type.decode(e),r={};for(let e=0;e<this.flags.length;e++){let n=this.flags[e];null!=n&&(r[n]=!!(t&1<<e))}return r}size(){return this.type.size()}encode(e,t){let r=0;for(let e=0;e<this.flags.length;e++){let n=this.flags[e];null!=n&&t[n]&&(r|=1<<e)}return this.type.encode(e,r)}}class ek extends eo{constructor(e){super(),this.length=e}decode(e,t){let r=eA(this.length,e,t);return e.readBuffer(r)}size(e,t){if(!e)return eA(this.length,null,t);let r=e.length;return this.length instanceof el&&(r+=this.length.size()),r}encode(e,t,r){return this.length instanceof el&&this.length.encode(e,t.length),e.writeBuffer(t)}}class eE extends eo{constructor(e,t=!0){super(),this.type=e,this.condition=t}decode(e,t){let{condition:r}=this;if("function"==typeof r&&(r=r.call(t,t)),r)return this.type.decode(e,t)}size(e,t){let{condition:r}=this;return("function"==typeof r&&(r=r.call(t,t)),r)?this.type.size(e,t):0}encode(e,t,r){let{condition:n}=this;if("function"==typeof n&&(n=n.call(r,r)),n)return this.type.encode(e,t,r)}}class eD extends eo{constructor(e,t=1){super(),this.type=e,this.count=t}decode(e,t){e.pos+=this.size(null,t)}size(e,t){let r=eA(this.count,null,t);return this.type.size()*r}encode(e,t,r){return e.fill(0,this.size(t,r))}}class eS extends eo{constructor(e,t="ascii"){super(),this.length=e,this.encoding=t}decode(e,t){let r,n;if(null!=this.length)r=eA(this.length,e,t);else{let t;for({buffer:t,length:r,pos:n}=e;n<r&&0!==t[n];)++n;r=n-e.pos}let{encoding:s}=this;"function"==typeof s&&(s=s.call(t,t)||"ascii");let a=e.readString(r,s);return null==this.length&&e.pos<e.length&&e.pos++,a}size(e,t){// Use the defined value if no value was given
if(!e)return eA(this.length,null,t);let{encoding:r}=this;"function"==typeof r&&(r=r.call(null!=t?t.val:void 0,null!=t?t.val:void 0)||"ascii"),"utf16be"===r&&(r="utf16le");let n=eB(e,r);return this.length instanceof el&&(n+=this.length.size()),null==this.length&&n++,n}encode(e,t,r){let{encoding:n}=this;if("function"==typeof n&&(n=n.call(null!=r?r.val:void 0,null!=r?r.val:void 0)||"ascii"),this.length instanceof el&&this.length.encode(e,eB(t,n)),e.writeString(t,n),null==this.length)return e.writeUInt8(0)}}function eB(e,t){switch(t){case"ascii":return e.length;case"utf8":let r=0;for(let t=0;t<e.length;t++){let n=e.charCodeAt(t);if(n>=55296&&n<=56319&&t<e.length-1){let r=e.charCodeAt(++t);(64512&r)==56320?n=((1023&n)<<10)+(1023&r)+65536:t--}(4294967168&n)==0?r++:(4294965248&n)==0?r+=2:(4294901760&n)==0?r+=3:(4292870144&n)==0&&(r+=4)}return r;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return 2*e.length;default:throw Error("Unknown encoding "+t)}}class eP extends eo{constructor(e={}){super(),this.fields=e}decode(e,t,r=0){let n=this._setup(e,t,r);return this._parseFields(e,n,this.fields),null!=this.process&&this.process.call(n,e),n}_setup(e,t,r){let n={};return(// define hidden properties
Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos},_currentOffset:{value:0,writable:!0},_length:{value:r}}),n)}_parseFields(e,t,r){for(let s in r){var n;let a=r[s];void 0!==(n="function"==typeof a?a.call(t,t):a.decode(e,t))&&(n instanceof ew?Object.defineProperty(t,s,n):t[s]=n),t._currentOffset=e.pos-t._startOffset}}size(e,t,r=!0){null==e&&(e={});let n={parent:t,val:e,pointerSize:0};null!=this.preEncode&&this.preEncode.call(e);let s=0;for(let t in this.fields){let r=this.fields[t];null!=r.size&&(s+=r.size(e[t],n))}return r&&(s+=n.pointerSize),s}encode(e,t,r){let n;null!=this.preEncode&&this.preEncode.call(t,e);let s={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};for(let r in s.pointerOffset=e.pos+this.size(t,s,!1),this.fields)null!=(n=this.fields[r]).encode&&n.encode(e,t[r],s);let a=0;for(;a<s.pointers.length;){let t=s.pointers[a++];t.type.encode(e,t.val,t.parent)}}}const eO=(e,t)=>t.reduce((e,t)=>e&&e[t],e);class eT extends eP{constructor(e,t={}){super(),this.type=e,this.versions=t,"string"==typeof e&&(this.versionPath=e.split("."))}decode(e,t,r=0){let n=this._setup(e,t,r);"string"==typeof this.type?n.version=eO(t,this.versionPath):n.version=this.type.decode(e),this.versions.header&&this._parseFields(e,n,this.versions.header);let s=this.versions[n.version];if(null==s)throw Error(`Unknown version ${n.version}`);return s instanceof eT?s.decode(e,t):(this._parseFields(e,n,s),null!=this.process&&this.process.call(n,e),n)}size(e,t,r=!0){let n,s;if(!e)throw Error("Not a fixed size");null!=this.preEncode&&this.preEncode.call(e);let a={parent:t,val:e,pointerSize:0},i=0;if("string"!=typeof this.type&&(i+=this.type.size(e.version,a)),this.versions.header)for(n in this.versions.header)null!=(s=this.versions.header[n]).size&&(i+=s.size(e[n],a));let o=this.versions[e.version];if(null==o)throw Error(`Unknown version ${e.version}`);for(n in o)null!=(s=o[n]).size&&(i+=s.size(e[n],a));return r&&(i+=a.pointerSize),i}encode(e,t,r){let n,s;null!=this.preEncode&&this.preEncode.call(t,e);let a={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};if(a.pointerOffset=e.pos+this.size(t,a,!1),"string"!=typeof this.type&&this.type.encode(e,t.version),this.versions.header)for(n in this.versions.header)null!=(s=this.versions.header[n]).encode&&s.encode(e,t[n],a);let i=this.versions[t.version];for(n in i)null!=(s=i[n]).encode&&s.encode(e,t[n],a);let o=0;for(;o<a.pointers.length;){let t=a.pointers[o++];t.type.encode(e,t.val,t.parent)}}}class eM extends eo{constructor(e,t,r={}){if(super(),this.offsetType=e,this.type=t,this.options=r,"void"===this.type&&(this.type=null),null==this.options.type&&(this.options.type="local"),null==this.options.allowNull&&(this.options.allowNull=!0),null==this.options.nullValue&&(this.options.nullValue=0),null==this.options.lazy&&(this.options.lazy=!1),this.options.relativeTo){if("function"!=typeof this.options.relativeTo)throw Error("relativeTo option must be a function");this.relativeToGetter=r.relativeTo}}decode(e,t){let r;let n=this.offsetType.decode(e,t);// handle NULL pointers
if(n===this.options.nullValue&&this.options.allowNull)return null;switch(this.options.type){case"local":r=t._startOffset;break;case"immediate":r=e.pos-this.offsetType.size();break;case"parent":r=t.parent._startOffset;break;default:for(var s=t;s.parent;)s=s.parent;r=s._startOffset||0}this.options.relativeTo&&(r+=this.relativeToGetter(t));let a=n+r;if(null==this.type)return a;{let r=null,n=()=>{if(null!=r)return r;let{pos:n}=e;return e.pos=a,r=this.type.decode(e,t),e.pos=n,r};return(// If this is a lazy pointer, define a getter to decode only when needed.
// This obviously only works when the pointer is contained by a Struct.
this.options.lazy?new ew({get:n}):n())}}size(e,t){let r=t;switch(this.options.type){case"local":case"immediate":break;case"parent":t=t.parent;break;default:for(;t.parent;)t=t.parent}let{type:n}=this;if(null==n){if(!(e instanceof eF))throw Error("Must be a VoidPointer");({type:n}=e),e=e.value}if(e&&t){// Must be written as two separate lines rather than += in case `type.size` mutates ctx.pointerSize.
let s=n.size(e,r);t.pointerSize+=s}return this.offsetType.size()}encode(e,t,r){let n;let s=r;if(null==t){this.offsetType.encode(e,this.options.nullValue);return}switch(this.options.type){case"local":n=r.startOffset;break;case"immediate":n=e.pos+this.offsetType.size(t,s);break;case"parent":n=(r=r.parent).startOffset;break;default:for(n=0;r.parent;)r=r.parent}this.options.relativeTo&&(n+=this.relativeToGetter(s.val)),this.offsetType.encode(e,r.pointerOffset-n);let{type:a}=this;if(null==a){if(!(t instanceof eF))throw Error("Must be a VoidPointer");({type:a}=t),t=t.value}return r.pointers.push({type:a,val:t,parent:s}),r.pointerOffset+=a.size(t,s)}}class eF{constructor(e,t){this.type=e,this.value=t}}var eL={};eL=h("eQMeO");var eU={};eU=h("hieg9");var eG={};// do not edit .js files directly - edit src/index.jst
eG=function e(t,r){if(t===r)return!0;if(t&&r&&"object"==typeof t&&"object"==typeof r){if(t.constructor!==r.constructor)return!1;if(Array.isArray(t)){if((n=t.length)!=r.length)return!1;for(s=n;0!=s--;)if(!e(t[s],r[s]))return!1;return!0}if(t.constructor===RegExp)return t.source===r.source&&t.flags===r.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===r.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===r.toString();if((n=(a=Object.keys(t)).length)!==Object.keys(r).length)return!1;for(s=n;0!=s--;)if(!Object.prototype.hasOwnProperty.call(r,a[s]))return!1;for(s=n;0!=s--;){var n,s,a,i=a[s];if(!e(t[i],r[i]))return!1}return!0}// true if both NaN, false otherwise
return t!=t&&r!=r};var eR=h("kuxul"),eN={},ez={};function eV(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function eW(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new eV,this.dtree=new eV}/* --------------------------------------------------- *
 * -- uninitialized global data (static structures) -- *
 * --------------------------------------------------- */var ej=new eV,eY=new eV,eH=new Uint8Array(30),eq=new Uint16Array(30),eX=new Uint8Array(30),eZ=new Uint16Array(30),eJ=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),eK=new eV,eQ=new Uint8Array(320);/* ----------------------- *
 * -- utility functions -- *
 * ----------------------- *//* build extra bits and base tables */function e_(e,t,r,n){var s,a;/* build bits table */for(s=0;s<r;++s)e[s]=0;for(s=0;s<30-r;++s)e[s+r]=s/r|0;/* build base table */for(a=n,s=0;s<30;++s)t[s]=a,a+=1<<e[s]}/* given an array of code lengths, build a tree */var e$=new Uint16Array(16);function e0(e,t,r,n){var s,a;/* clear code length count table */for(s=0;s<16;++s)e.table[s]=0;/* scan symbol lengths, and sum code length counts */for(s=0;s<n;++s)e.table[t[r+s]]++;/* compute offset table for distribution sort */for(a=0,e.table[0]=0,s=0;s<16;++s)e$[s]=a,a+=e.table[s];/* create code->symbol translation table (symbols sorted by code) */for(s=0;s<n;++s)t[r+s]&&(e.trans[e$[t[r+s]]++]=s)}/* read a num bit value from a stream and add base */function e1(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+r}/* given a data stream and a tree, decode a symbol */function e2(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var r=0,n=0,s=0,a=e.tag;/* get more bits while code value is above sum */do n=2*n+(1&a),a>>>=1,++s,r+=t.table[s],n-=t.table[s];while(n>=0)return e.tag=a,e.bitcount-=s,t.trans[r+n]}/* ----------------------------- *
 * -- block inflate functions -- *
 * ----------------------------- *//* given a stream and two trees, inflate a block of data */function e3(e,t,r){for(;;){var n,s,a,i,o=e2(e,t);/* check for end of block */if(256===o)return 0;if(o<256)e.dest[e.destLen++]=o;else /* copy match */for(o-=257,/* possibly get more bits from length code */n=e1(e,eH[o],eq[o]),s=e2(e,r),i=/* possibly get more bits from distance code */a=e.destLen-e1(e,eX[s],eZ[s]);i<a+n;++i)e.dest[e.destLen++]=e.dest[i]}}!/* -------------------- *
 * -- initialization -- *
 * -------------------- *//* build fixed huffman trees *//* build the fixed huffman trees */function(e,t){var r;/* build fixed length tree */for(r=0;r<7;++r)e.table[r]=0;for(r=0,e.table[7]=24,e.table[8]=152,e.table[9]=112;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;/* build fixed distance tree */for(r=0;r<5;++r)t.table[r]=0;for(r=0,t.table[5]=32;r<32;++r)t.trans[r]=r}(ej,eY),/* build extra bits and base tables */e_(eH,eq,4,3),e_(eX,eZ,2,1),/* fix a special case */eH[28]=0,eq[28]=258,ez=/* inflate stream from source to dest */function(e,t){var r,n,s=new eW(e,t);do{/* decompress block */switch(/* read final block flag */r=/* ---------------------- *
 * -- decode functions -- *
 * ---------------------- *//* get one bit from source stream */function(e){e.bitcount--||(/* load next tag */e.tag=e.source[e.sourceIndex++],e.bitcount=7);/* shift bit out of tag */var t=1&e.tag;return e.tag>>>=1,t}(s),e1(s,2,0)){case 0:/* decompress uncompressed block */n=/* inflate an uncompressed block of data */function(e){/* unread from bitbuffer */for(var t,r;e.bitcount>8;)e.sourceIndex--,e.bitcount-=8;/* check length */if((t=256*/* get length */(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return -3;/* copy block */for(e.sourceIndex+=4,r=t;r;--r)e.dest[e.destLen++]=e.source[e.sourceIndex++];return(/* make sure we start next block on a byte boundary */e.bitcount=0,0)}(s);break;case 1:/* decompress block with fixed huffman trees */n=e3(s,ej,eY);break;case 2:/* decompress block with dynamic huffman trees *//* given a data stream, decode dynamic trees from it */(function(e,t,r){for(i=0,/* get 5 bits HLIT (257-286) */n=e1(e,5,257),/* get 5 bits HDIST (1-32) */s=e1(e,5,1),/* get 4 bits HCLEN (4-19) */a=e1(e,4,4);i<19;++i)eQ[i]=0;/* read code lengths for code length alphabet */for(i=0;i<a;++i){/* get 3 bits code length (0-7) */var n,s,a,i,o,l,u=e1(e,3,0);eQ[eJ[i]]=u}/* decode code lengths for the dynamic trees */for(/* build code length tree */e0(eK,eQ,0,19),o=0;o<n+s;){var c=e2(e,eK);switch(c){case 16:/* copy previous code length 3-6 times (read 2 bits) */var h=eQ[o-1];for(l=e1(e,2,3);l;--l)eQ[o++]=h;break;case 17:/* repeat code length 0 for 3-10 times (read 3 bits) */for(l=e1(e,3,3);l;--l)eQ[o++]=0;break;case 18:/* repeat code length 0 for 11-138 times (read 7 bits) */for(l=e1(e,7,11);l;--l)eQ[o++]=0;break;default:/* values 0-15 represent the actual code lengths */eQ[o++]=c}}/* build dynamic trees */e0(t,eQ,0,n),e0(r,eQ,n,s)})(s,s.ltree,s.dtree),n=e3(s,s.ltree,s.dtree);break;default:n=-3}if(0!==n)throw Error("Data error")}while(!r)return s.destLen<s.dest.length?"function"==typeof s.dest.slice?s.dest.slice(0,s.destLen):s.dest.subarray(0,s.destLen):s.dest};const e4=18===new Uint8Array(new Uint32Array([305419896]).buffer)[0],e5=(e,t,r)=>{let n=e[t];e[t]=e[r],e[r]=n},e6=e=>{let t=e.length;for(let r=0;r<t;r+=4)e5(e,r,r+3),e5(e,r+1,r+2)};var e8=e=>{e4&&e6(e)};function e9(e){return e&&e.__esModule?e.default:e}eN=class{constructor(e){let t="function"==typeof e.readUInt32BE&&"function"==typeof e.slice;if(t||e instanceof Uint8Array){// read binary format
let r;if(t)this.highStart=e.readUInt32LE(0),this.errorValue=e.readUInt32LE(4),r=e.readUInt32LE(8),e=e.slice(12);else{let t=new DataView(e.buffer);this.highStart=t.getUint32(0,!0),this.errorValue=t.getUint32(4,!0),r=t.getUint32(8,!0),e=e.subarray(12)}// double inflate the actual trie data
e=ez(e,new Uint8Array(r)),// swap bytes from little-endian
e8(e=ez(e,new Uint8Array(r))),this.data=new Uint32Array(e.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=e)}get(e){let t;return e<0||e>1114111?this.errorValue:e<55296||e>56319&&e<=65535?(// Ordinary BMP code point, excluding leading surrogates.
// BMP uses a single level lookup.  BMP index starts at offset 0 in the index.
// data is stored in the index array itself.
t=(this.data[e>>5]<<2)+(31&e),this.data[t]):e<=65535?(// Lead Surrogate Code Point.  A Separate index section is stored for
// lead surrogate code units and code points.
//   The main index has the code unit data.
//   For this function, we need the code point data.
t=(this.data[2048+(e-55296>>5)]<<2)+(31&e),this.data[t]):e<this.highStart?(// Supplemental code point, use two-level lookup.
t=this.data[2080+(e>>11)],t=((t=this.data[t+(e>>5&63)])<<2)+(31&e),this.data[t]):this.data[this.data.length-4]}};var e7={};e7=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');const te=new/*@__PURE__*/(t(eN))(/*@__PURE__*/t(eR).toByteArray("")),tt=Math.log2||(e=>Math.log(e)/Math.LN2),tr=e=>tt(e)+1|0,tn=tr(/*@__PURE__*/e9(e7).categories.length-1),ts=tr(/*@__PURE__*/e9(e7).combiningClasses.length-1),ta=tr(/*@__PURE__*/e9(e7).scripts.length-1),ti=tr(/*@__PURE__*/e9(e7).eaw.length-1),to=ts+ta+ti+10,tl=ta+ti+10,tu=ti+10,tc=(1<<tn)-1,th=(1<<ts)-1,tf=(1<<ta)-1;function td(e){let t=te.get(e);return /*@__PURE__*/e9(e7).categories[t>>to&tc]}function tp(e){let t=te.get(e);return /*@__PURE__*/e9(e7).scripts[t>>tu&tf]}function tg(e){let t=td(e);return"Mn"===t||"Me"===t||"Mc"===t}var tm={};tm=/**
 * A StateMachine represents a deterministic finite automaton.
 * It can perform matches over a sequence of values, similar to a regular expression.
 */class{constructor(e){this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}/**
   * Returns an iterable object that yields pattern matches over the input sequence.
   * Matches are of the form [startIndex, endIndex, tags].
   */match(e){var t=this;return{*[Symbol.iterator](){for(var r=1,n=null,s=null,a=null,i=0;i<e.length;i++){var o=e[i];a=r,0===(r=t.stateTable[r][o])&&(null!=n&&null!=s&&s>=n&&(yield[n,s,t.tags[a]]),// reset the state as if we started over from the initial state
r=t.stateTable[1][o],n=null),0!==r&&null==n&&(n=i),t.accepting[r]&&(s=i),0===r&&(r=1)}// yield the last match if any
null!=n&&null!=s&&s>=n&&(yield[n,s,t.tags[r]])}}}/**
   * For each match over the input sequence, action functions matching
   * the tag definitions in the input pattern are called with the startIndex,
   * endIndex, and sub-match sequence.
   */apply(e,t){for(var[r,n,s]of this.match(e))for(var a of s)"function"==typeof t[a]&&t[a](r,n,e.slice(r,n+1))}};var ty={},tb=function(){var e,t,r;function n(e,t){return null!=t&&e instanceof t}try{e=Map}catch(t){// maybe a reference error because no `Map`. Give it a dummy value that no
// value will ever be an instanceof.
e=function(){}}try{t=Set}catch(e){t=function(){}}try{r=Promise}catch(e){r=function(){}}/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/function s(a,o,l,u,c){"object"==typeof o&&(l=o.depth,u=o.prototype,c=o.includeNonEnumerable,o=o.circular);// maintain two arrays for circular references, where corresponding parents
// and children have the same index
var h=[],f=[];return void 0===o&&(o=!0),void 0===l&&(l=1/0),// recurse this function so we don't reset allParents and allChildren
function a(l,d){// cloning null always returns null
if(null===l)return null;if(0===d||"object"!=typeof l)return l;if(n(l,e))p=new e;else if(n(l,t))p=new t;else if(n(l,r))p=new r(function(e,t){l.then(function(t){e(a(t,d-1))},function(e){t(a(e,d-1))})});else if(s.__isArray(l))p=[];else if(s.__isRegExp(l))p=new RegExp(l.source,i(l)),l.lastIndex&&(p.lastIndex=l.lastIndex);else if(s.__isDate(l))p=new Date(l.getTime());else{if(w.isBuffer(l))return p=w.allocUnsafe?w.allocUnsafe(l.length):new w(l.length),l.copy(p),p;n(l,Error)?p=Object.create(l):void 0===u?p=Object.create(g=Object.getPrototypeOf(l)):(p=Object.create(u),g=u)}if(o){var p,g,m,y=h.indexOf(l);if(-1!=y)return f[y];h.push(l),f.push(p)}for(var b in n(l,e)&&l.forEach(function(e,t){var r=a(t,d-1),n=a(e,d-1);p.set(r,n)}),n(l,t)&&l.forEach(function(e){var t=a(e,d-1);p.add(t)}),l)g&&(m=Object.getOwnPropertyDescriptor(g,b)),m&&null==m.set||(p[b]=a(l[b],d-1));if(Object.getOwnPropertySymbols)for(var A=Object.getOwnPropertySymbols(l),b=0;b<A.length;b++){// Don't need to worry about cloning a symbol because it is a primitive,
// like a number or string.
var v=A[b],x=Object.getOwnPropertyDescriptor(l,v);(!x||x.enumerable||c)&&(p[v]=a(l[v],d-1),x.enumerable||Object.defineProperty(p,v,{enumerable:!1}))}if(c)for(var C=Object.getOwnPropertyNames(l),b=0;b<C.length;b++){var I=C[b],x=Object.getOwnPropertyDescriptor(l,I);x&&x.enumerable||(p[I]=a(l[I],d-1),Object.defineProperty(p,I,{enumerable:!1}))}return p}(a,l)}// private utility functions
function a(e){return Object.prototype.toString.call(e)}function i(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return(/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */s.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},s.__objToStr=a,s.__isDate=function(e){return"object"==typeof e&&"[object Date]"===a(e)},s.__isArray=function(e){return"object"==typeof e&&"[object Array]"===a(e)},s.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===a(e)},s.__getRegExpFlags=i,s)}();ty&&(ty=tb);var tA={};function tw(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function tv(e){return e&&e.__esModule?e.default:e}tA=h("ktvS8").BrotliDecompressBuffer;var tx={};tw(tx,"logErrors",()=>tC),tw(tx,"registerFormat",()=>tk),tw(tx,"create",()=>tE),tw(tx,"defaultLanguage",()=>tD),tw(tx,"setDefaultLanguage",()=>tS);let tC=!1,tI=[];function tk(e){tI.push(e)}function tE(e,t){for(let r=0;r<tI.length;r++){let n=tI[r];if(n.probe(e)){let r=new n(new er(e));if(t)return r.getFont(t);return r}}throw Error("Unknown font format")}let tD="en";function tS(e="en"){tD=e}function tB(e,t,r){if(r.get){let e=r.get;r.get=function(){let r=e.call(this);return Object.defineProperty(this,t,{value:r}),r}}else if("function"==typeof r.value){let e=r.value;return{get(){let r=new Map;function n(...t){let s=t.length>0?t[0]:"value";if(r.has(s))return r.get(s);let a=e.apply(this,t);return r.set(s,a),a}return Object.defineProperty(this,t,{value:n}),n}}}}let tP=new eP({firstCode:ec,entryCount:ec,idDelta:ep,idRangeOffset:ec}),tO=new eP({startCharCode:ef,endCharCode:ef,glyphID:ef}),tT=new eP({startUnicodeValue:eh,additionalCount:eu}),tM=new eP({unicodeValue:eh,glyphID:ec}),tF=new ev(tT,ef),tL=new ev(tM,ef),tU=new eP({varSelector:eh,defaultUVS:new eM(ef,tF,{type:"parent"}),nonDefaultUVS:new eM(ef,tL,{type:"parent"})}),tG=new eT(ec,{0:{length:ec,language:ec,codeMap:new ex(eu,256)},2:{length:ec,language:ec,subHeaderKeys:new ev(ec,256),subHeaderCount:e=>Math.max.apply(Math,e.subHeaderKeys),subHeaders:new ex(tP,"subHeaderCount"),glyphIndexArray:new ex(ec,"subHeaderCount")},4:{length:ec,language:ec,segCountX2:ec,segCount:e=>e.segCountX2>>1,searchRange:ec,entrySelector:ec,rangeShift:ec,endCode:new ex(ec,"segCount"),reservedPad:new eD(ec),startCode:new ex(ec,"segCount"),idDelta:new ex(ep,"segCount"),idRangeOffset:new ex(ec,"segCount"),glyphIndexArray:new ex(ec,e=>(e.length-e._currentOffset)/2)},6:{length:ec,language:ec,firstCode:ec,entryCount:ec,glyphIndices:new ex(ec,"entryCount")},8:{reserved:new eD(ec),length:ef,language:ec,is32:new ex(eu,8192),nGroups:ef,groups:new ex(tO,"nGroups")},10:{reserved:new eD(ec),length:ef,language:ef,firstCode:ef,entryCount:ef,glyphIndices:new ex(ec,"numChars")},12:{reserved:new eD(ec),length:ef,language:ef,nGroups:ef,groups:new ex(tO,"nGroups")},13:{reserved:new eD(ec),length:ef,language:ef,nGroups:ef,groups:new ex(tO,"nGroups")},14:{length:ef,numRecords:ef,varSelectors:new ex(tU,"numRecords")}}),tR=new eP({platformID:ec,encodingID:ec,table:new eM(ef,tG,{type:"parent",lazy:!0})});var tN=new eP({version:ec,numSubtables:ec,tables:new ev(tR,"numSubtables")}),tz=new eP({version:eg,revision:eg,checkSumAdjustment:ef,magicNumber:ef,flags:ec,unitsPerEm:ec,created:new ev(eg,2),modified:new ev(eg,2),xMin:ep,yMin:ep,xMax:ep,yMax:ep,macStyle:new eI(ec,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:ec,fontDirectionHint:ep,indexToLocFormat:ep,glyphDataFormat:ep}),tV=new eP({version:eg,ascent:ep,descent:ep,lineGap:ep,advanceWidthMax:ec,minLeftSideBearing:ep,minRightSideBearing:ep,xMaxExtent:ep,caretSlopeRise:ep,caretSlopeRun:ep,caretOffset:ep,reserved:new eD(ep,4),metricDataFormat:ep,numberOfMetrics:ec});let tW=new eP({advance:ec,bearing:ep});var tj=new eP({metrics:new ex(tW,e=>e.parent.hhea.numberOfMetrics),bearings:new ex(ep,e=>e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics)}),tY=new eP({version:eg,numGlyphs:ec,maxPoints:ec,maxContours:ec,maxComponentPoints:ec,maxComponentContours:ec,maxZones:ec,maxTwilightPoints:ec,maxStorage:ec,maxFunctionDefs:ec,maxInstructionDefs:ec,maxStackElements:ec,maxSizeOfInstructions:ec,maxComponentElements:ec,maxComponentDepth:ec});function tH(e,t,r=0){return 1===e&&tK[r]?tK[r]:tJ[e][t]}const tq=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),tX={"x-mac-croatian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xaeŠ™\xb4\xa8≠Ž\xd8∞\xb1≤≥∆\xb5∂∑∏š∫\xaa\xbaΩž\xf8\xbf\xa1\xac√ƒ≈Ć\xabČ… \xc0\xc3\xd5ŒœĐ—“”‘’\xf7◊\xa9⁄€‹›\xc6\xbb–\xb7‚„‰\xc2ć\xc1č\xc8\xcd\xce\xcf\xcc\xd3\xd4đ\xd2\xda\xdb\xd9ıˆ˜\xafπ\xcb˚\xb8\xca\xe6ˇ","x-mac-gaelic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8Ḃ\xb1≤≥ḃĊċḊḋḞḟĠġṀ\xe6\xf8ṁṖṗɼƒſṠ\xab\xbb… \xc0\xc3\xd5Œœ–—“”‘’ṡẛ\xffŸṪ€‹›Ŷŷṫ\xb7Ỳỳ⁊\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4♣\xd2\xda\xdb\xd9ı\xdd\xfdŴŵẄẅẀẁẂẃ","x-mac-greek":"\xc4\xb9\xb2\xc9\xb3\xd6\xdc΅\xe0\xe2\xe4΄\xa8\xe7\xe9\xe8\xea\xeb\xa3™\xee\xef•\xbd‰\xf4\xf6\xa6€\xf9\xfb\xfc†ΓΔΘΛΞΠ\xdf\xae\xa9ΣΪ\xa7≠\xb0\xb7Α\xb1≤≥\xa5ΒΕΖΗΙΚΜΦΫΨΩάΝ\xacΟΡ≈Τ\xab\xbb… ΥΧΆΈœ–―“”‘’\xf7ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\xad","x-mac-icelandic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩ\xe6\xf8\xbf\xa1\xac√ƒ≈∆\xab\xbb… \xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸ⁄€\xd0\xf0\xde\xfe\xfd\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ıˆ˜\xaf˘˙˚\xb8˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ\xb0ᒡᒥᒦ•\xb6ᒧ\xae\xa9™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"\xc4Āā\xc9Ą\xd6\xdc\xe1ąČ\xe4čĆć\xe9ŹźĎ\xedďĒēĖ\xf3ė\xf4\xf6\xf5\xfaĚě\xfc†\xb0Ę\xa3\xa7•\xb6\xdf\xae\xa9™ę\xa8≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ\xac√ńŇ∆\xab\xbb… ňŐ\xd5őŌ–—“”‘’\xf7◊ōŔŕŘ‹›řŖŗŠ‚„šŚś\xc1Ťť\xcdŽžŪ\xd3\xd4ūŮ\xdaůŰűŲų\xdd\xfdķŻŁżĢˇ","x-mac-romanian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠ĂȘ∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩăș\xbf\xa1\xac√ƒ≈∆\xab\xbb… \xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸ⁄€‹›Țț‡\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ıˆ˜\xaf˘˙˚\xb8˝˛ˇ","x-mac-turkish":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩ\xe6\xf8\xbf\xa1\xac√ƒ≈∆\xab\xbb… \xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸĞğİıŞş‡\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ˆ˜\xaf˘˙˚\xb8˝˛ˇ"},tZ=new Map,tJ=[// unicode
["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],// macintosh
// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
// 0	Roman                 17	Malayalam
// 1	Japanese	            18	Sinhalese
// 2	Traditional Chinese	  19	Burmese
// 3	Korean	              20	Khmer
// 4	Arabic	              21	Thai
// 5	Hebrew	              22	Laotian
// 6	Greek	                23	Georgian
// 7	Russian	              24	Armenian
// 8	RSymbol	              25	Simplified Chinese
// 9	Devanagari	          26	Tibetan
// 10	Gurmukhi	            27	Mongolian
// 11	Gujarati	            28	Geez
// 12	Oriya	                29	Slavic
// 13	Bengali	              30	Vietnamese
// 14	Tamil	                31	Sindhi
// 15	Telugu	              32	(Uninterpreted)
// 16	Kannada
["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","hz-gb-2312","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],// ISO (deprecated)
["ascii"],// windows
// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
["symbol","utf16be","shift-jis","gb18030","big5","x-cp20949","johab",null,null,null,"utf16be"]],tK={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},tQ=[// unicode
[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},// ISO (deprecated)
[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];let t_=new eP({platformID:ec,encodingID:ec,languageID:ec,nameID:ec,length:ec,string:new eM(ec,new eS("length",e=>tH(e.platformID,e.encodingID,e.languageID)),{type:"parent",relativeTo:e=>e.parent.stringOffset,allowNull:!1})}),t$=new eP({length:ec,tag:new eM(ec,new eS("length","utf16be"),{type:"parent",relativeTo:e=>e.stringOffset})});var t0=new eT(ec,{0:{count:ec,stringOffset:ec,records:new ev(t_,"count")},1:{count:ec,stringOffset:ec,records:new ev(t_,"count"),langTagCount:ec,langTags:new ev(t$,"langTagCount")}});const t1=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];t0.process=function(e){var t={};for(let e of this.records){// find out what language this is for
let r=tQ[e.platformID][e.languageID];null==r&&null!=this.langTags&&e.languageID>=32768&&(r=this.langTags[e.languageID-32768].tag),null==r&&(r=e.platformID+"-"+e.languageID);// if the nameID is >= 256, it is a font feature record (AAT)
let n=e.nameID>=256?"fontFeatures":t1[e.nameID]||e.nameID;null==t[n]&&(t[n]={});let s=t[n];e.nameID>=256&&(s=s[e.nameID]||(s[e.nameID]={})),("string"==typeof e.string||"string"!=typeof s[r])&&(s[r]=e.string)}this.records=t},t0.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let e=[];for(let t in this.records){let r=this.records[t];"fontFeatures"!==t&&(e.push({platformID:3,encodingID:1,languageID:1033,nameID:t1.indexOf(t),length:2*r.en.length,string:r.en}),"postscriptName"===t&&e.push({platformID:1,encodingID:0,languageID:0,nameID:t1.indexOf(t),length:r.en.length,string:r.en}))}this.records=e,this.count=e.length,this.stringOffset=t0.size(this,null,!1)};var t2=new eT(ec,{header:{xAvgCharWidth:ep,usWeightClass:ec,usWidthClass:ec,fsType:new eI(ec,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:ep,ySubscriptYSize:ep,ySubscriptXOffset:ep,ySubscriptYOffset:ep,ySuperscriptXSize:ep,ySuperscriptYSize:ep,ySuperscriptXOffset:ep,ySuperscriptYOffset:ep,yStrikeoutSize:ep,yStrikeoutPosition:ep,sFamilyClass:ep,panose:new ev(eu,10),ulCharRange:new ev(ef,4),vendorID:new eS(4),fsSelection:new eI(ec,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:ec,usLastCharIndex:ec},// The Apple version of this table ends here, but the Microsoft one continues on...
0:{},1:{typoAscender:ep,typoDescender:ep,typoLineGap:ep,winAscent:ec,winDescent:ec,codePageRange:new ev(ef,2)},2:{// these should be common with version 1 somehow
typoAscender:ep,typoDescender:ep,typoLineGap:ep,winAscent:ec,winDescent:ec,codePageRange:new ev(ef,2),xHeight:ep,capHeight:ep,defaultChar:ec,breakChar:ec,maxContent:ec},5:{typoAscender:ep,typoDescender:ep,typoLineGap:ep,winAscent:ec,winDescent:ec,codePageRange:new ev(ef,2),xHeight:ep,capHeight:ep,defaultChar:ec,breakChar:ec,maxContent:ec,usLowerOpticalPointSize:ec,usUpperOpticalPointSize:ec}});let t3=t2.versions;t3[3]=t3[4]=t3[2];var t4=new eT(eb,{header:{italicAngle:eb,underlinePosition:ep,underlineThickness:ep,isFixedPitch:ef,minMemType42:ef,maxMemType42:ef,minMemType1:ef,maxMemType1:ef},1:{},2:{numberOfGlyphs:ec,glyphNameIndex:new ev(ec,"numberOfGlyphs"),names:new ev(new eS(eu))},2.5:{numberOfGlyphs:ec,offsets:new ev(eu,"numberOfGlyphs")},3:{},4:{map:new ev(ef,e=>e.parent.maxp.numGlyphs)}}),t5=new eP({controlValues:new ev(ep)}),// is for the definition of functions that are used in many different glyph programs.
t6=new eP({instructions:new ev(eu)});let t8=new eT("head.indexToLocFormat",{0:{offsets:new ev(ec)},1:{offsets:new ev(ef)}});t8.process=function(){if(0===this.version&&!this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]<<=1;this._processed=!0}},t8.preEncode=function(){if(0===this.version&&!1!==this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1;this._processed=!1}};var t9=new eP({controlValueProgram:new ev(eu)}),t7=new ev(new ek);class re{getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let r;let n=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===n)return[];let s=e.readUInt8();if(1===s)r=eu;else if(2===s)r=ec;else if(3===s)r=eh;else if(4===s)r=ef;else throw Error(`Bad offset size in CFFIndex: ${s} ${e.pos}`);let a=[],i=e.pos+(n+1)*s-1,o=r.decode(e);for(let s=0;s<n;s++){let n=r.decode(e);if(null!=this.type){let r=e.pos;e.pos=i+o,t.length=n-o,a.push(this.type.decode(e,t)),e.pos=r}else a.push({offset:i+o,length:n-o});o=n}return e.pos=i+o,a}size(e,t){let r;if(0===e.length)return 2;let n=this.type||new ek,s=1;for(let r=0;r<e.length;r++){let a=e[r];s+=n.size(a,t)}if(s<=255)r=eu;else if(s<=65535)r=ec;else if(s<=16777215)r=eh;else if(s<=4294967295)r=ef;else throw Error("Bad offset in CFFIndex");return 2+(1+r.size()*(e.length+1)+(s-1))}encode(e,t,r){let n;if(e.writeUInt16BE(t.length),0===t.length)return;let s=this.type||new ek,a=[],i=1;for(let e of t){let t=s.size(e,r);a.push(t),i+=t}if(i<=255)n=eu;else if(i<=65535)n=ec;else if(i<=16777215)n=eh;else if(i<=4294967295)n=ef;else throw Error("Bad offset in CFFIndex");for(let t of(// write offset size
e.writeUInt8(n.size()),// write elements
i=1,n.encode(e,i),a))i+=t,n.encode(e,i);for(let n of t)s.encode(e,n,r)}constructor(e){this.type=e}}const rt=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],rr={".":10,E:11,"E-":12,"-":14};class rn{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return(t-247)*256+e.readUInt8()+108;if(251<=t&&t<=254)return-(256*(t-251))-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){let t="";for(;;){let r=e.readUInt8(),n=r>>4;if(15===n)break;t+=rt[n];let s=15&r;if(15===s)break;t+=rt[s]}return parseFloat(t)}return null}static size(e){return(e.forceLarge&&(e=32768),(0|e)!==e)?1+Math.ceil(((""+e).length+1)/2):-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){// if the value needs to be forced to the largest size (32 bit)
// e.g. for unknown pointers, save the old value and set to 32768
let r=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(r);if((0|r)!==r){e.writeUInt8(30);let t=""+r;for(let r=0;r<t.length;r+=2){let s=t[r],a=rr[s]||+s;if(r===t.length-1)var n=15;else{let e=t[r+1];var n=rr[e]||+e}e.writeUInt8(a<<4|15&n)}if(15!==n)return e.writeUInt8(240)}else if(-107<=r&&r<=107)return e.writeUInt8(r+139);else if(108<=r&&r<=1131)return r-=108,e.writeUInt8((r>>8)+247),e.writeUInt8(255&r);else if(-1131<=r&&r<=-108)return r=-r-108,e.writeUInt8((r>>8)+251),e.writeUInt8(255&r);else if(-32768<=r&&r<=32767)return e.writeUInt8(28),e.writeInt16BE(r);else return e.writeUInt8(29),e.writeInt32BE(r)}}class rs{decodeOperands(e,t,r,n){if(Array.isArray(e))return n.map((n,s)=>this.decodeOperands(e[s],t,r,[n]));if(null!=e.decode)return e.decode(t,r,n);switch(e){case"number":case"offset":case"sid":return n[0];case"boolean":return!!n[0];default:return n}}encodeOperands(e,t,r,n){return Array.isArray(e)?n.map((n,s)=>this.encodeOperands(e[s],t,r,n)[0]):null!=e.encode?e.encode(t,n,r):"number"==typeof n?[n]:"boolean"==typeof n?[+n]:Array.isArray(n)?n:[n]}decode(e,t){let r=e.pos+t.length,n={},s=[];// fill in defaults
for(let r in // define hidden properties
Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos}}),this.fields){let e=this.fields[r];n[e[1]]=e[3]}for(;e.pos<r;){let t=e.readUInt8();if(t<28){12===t&&(t=t<<8|e.readUInt8());let r=this.fields[t];if(!r)throw Error(`Unknown operator ${t}`);let a=this.decodeOperands(r[2],e,n,s);null!=a&&(a instanceof ew?Object.defineProperty(n,r[1],a):n[r[1]]=a),s=[]}else s.push(rn.decode(e,t))}return n}size(e,t,r=!0){let n={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},s=0;for(let t in this.fields){let r=this.fields[t],a=e[r[1]];if(!(null==a||tv(eG)(a,r[3]))){for(let e of this.encodeOperands(r[2],null,n,a))s+=rn.size(e);s+=(Array.isArray(r[0])?r[0]:[r[0]]).length}}return r&&(s+=n.pointerSize),s}encode(e,t,r){let n={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};for(let r of(n.pointerOffset=e.pos+this.size(t,n,!1),this.ops)){let s=t[r[1]];if(!(null==s||tv(eG)(s,r[3]))){for(let t of this.encodeOperands(r[2],e,n,s))rn.encode(e,t);for(let t of Array.isArray(r[0])?r[0]:[r[0]])e.writeUInt8(t)}}let s=0;for(;s<n.pointers.length;){let t=n.pointers[s++];t.type.encode(e,t.val,t.parent)}}constructor(e=[]){for(let t of(this.ops=e,this.fields={},e)){let e=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[e]=t}}}class ra extends eM{decode(e,t,r){return this.offsetType={decode:()=>r[0]},super.decode(e,t,r)}encode(e,t,r){if(!e)return(// compute the size (so ctx.pointerSize is correct)
this.offsetType={size:()=>0},this.size(t,r),[new ri(0)]);let n=null;return this.offsetType={encode:(e,t)=>n=t},super.encode(e,t,r),[new ri(n)]}constructor(e,t={}){null==t.type&&(t.type="global"),super(null,e,t)}}class ri{valueOf(){return this.val}constructor(e){this.val=e,this.forceLarge=!0}}var ro=new rs([// key       name                    type                                          default
[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",class{static decode(e,t,r){let n=r.pop();// TODO: actually blend. For now just consume the deltas
// since we don't use any of the values anyway.
for(;r.length>n;)r.pop()}},null],[19,"Subrs",new ra(new re,{type:"local"}),null]]),rl=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];let ru=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],rc=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],rh=new eP({reserved:new eD(ec),reqFeatureIndex:ec,featureCount:ec,featureIndexes:new ev(ec,"featureCount")}),rf=new eP({tag:new eS(4),langSys:new eM(ec,rh,{type:"parent"})}),rd=new eP({defaultLangSys:new eM(ec,rh),count:ec,langSysRecords:new ev(rf,"count")}),rp=new eP({tag:new eS(4),script:new eM(ec,rd,{type:"parent"})}),rg=new ev(rp,ec),rm=new eP({version:ec,nameID:ec}),ry=new eP({featureParams:new eM(ec,rm),lookupCount:ec,lookupListIndexes:new ev(ec,"lookupCount")}),rb=new eP({tag:new eS(4),feature:new eM(ec,ry,{type:"parent"})}),rA=new ev(rb,ec),rw=new eP({markAttachmentType:eu,flags:new eI(eu,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function rv(e){let t=new eP({lookupType:ec,flags:rw,subTableCount:ec,subTables:new ev(new eM(ec,e),"subTableCount"),markFilteringSet:new eE(ec,e=>e.flags.flags.useMarkFilteringSet)});return new ex(new eM(ec,t),ec)}//#################
// Coverage Table #
//#################
let rx=new eP({start:ec,end:ec,startCoverageIndex:ec}),rC=new eT(ec,{1:{glyphCount:ec,glyphs:new ev(ec,"glyphCount")},2:{rangeCount:ec,rangeRecords:new ev(rx,"rangeCount")}}),rI=new eP({start:ec,end:ec,class:ec}),rk=new eT(ec,{1:{startGlyph:ec,glyphCount:ec,classValueArray:new ev(ec,"glyphCount")},2:{classRangeCount:ec,classRangeRecord:new ev(rI,"classRangeCount")}}),rE=new eP({a:ec,b:ec,deltaFormat:ec}),rD=new eP({sequenceIndex:ec,lookupListIndex:ec}),rS=new eP({glyphCount:ec,lookupCount:ec,input:new ev(ec,e=>e.glyphCount-1),lookupRecords:new ev(rD,"lookupCount")}),rB=new ev(new eM(ec,rS),ec),rP=new eP({glyphCount:ec,lookupCount:ec,classes:new ev(ec,e=>e.glyphCount-1),lookupRecords:new ev(rD,"lookupCount")}),rO=new ev(new eM(ec,rP),ec),rT=new eT(ec,{1:{coverage:new eM(ec,rC),ruleSetCount:ec,ruleSets:new ev(new eM(ec,rB),"ruleSetCount")},2:{coverage:new eM(ec,rC),classDef:new eM(ec,rk),classSetCnt:ec,classSet:new ev(new eM(ec,rO),"classSetCnt")},3:{glyphCount:ec,lookupCount:ec,coverages:new ev(new eM(ec,rC),"glyphCount"),lookupRecords:new ev(rD,"lookupCount")}}),rM=new eP({backtrackGlyphCount:ec,backtrack:new ev(ec,"backtrackGlyphCount"),inputGlyphCount:ec,input:new ev(ec,e=>e.inputGlyphCount-1),lookaheadGlyphCount:ec,lookahead:new ev(ec,"lookaheadGlyphCount"),lookupCount:ec,lookupRecords:new ev(rD,"lookupCount")}),rF=new ev(new eM(ec,rM),ec),rL=new eT(ec,{1:{coverage:new eM(ec,rC),chainCount:ec,chainRuleSets:new ev(new eM(ec,rF),"chainCount")},2:{coverage:new eM(ec,rC),backtrackClassDef:new eM(ec,rk),inputClassDef:new eM(ec,rk),lookaheadClassDef:new eM(ec,rk),chainCount:ec,chainClassSet:new ev(new eM(ec,rF),"chainCount")},3:{backtrackGlyphCount:ec,backtrackCoverage:new ev(new eM(ec,rC),"backtrackGlyphCount"),inputGlyphCount:ec,inputCoverage:new ev(new eM(ec,rC),"inputGlyphCount"),lookaheadGlyphCount:ec,lookaheadCoverage:new ev(new eM(ec,rC),"lookaheadGlyphCount"),lookupCount:ec,lookupRecords:new ev(rD,"lookupCount")}}),rU=new em(16,"BE",14),rG=new eP({startCoord:rU,peakCoord:rU,endCoord:rU}),rR=new eP({axisCount:ec,regionCount:ec,variationRegions:new ev(new ev(rG,"axisCount"),"regionCount")}),rN=new eP({shortDeltas:new ev(ep,e=>e.parent.shortDeltaCount),regionDeltas:new ev(ed,e=>e.parent.regionIndexCount-e.parent.shortDeltaCount),deltas:e=>e.shortDeltas.concat(e.regionDeltas)}),rz=new eP({itemCount:ec,shortDeltaCount:ec,regionIndexCount:ec,regionIndexes:new ev(ec,"regionIndexCount"),deltaSets:new ev(rN,"itemCount")}),rV=new eP({format:ec,variationRegionList:new eM(ef,rR),variationDataCount:ec,itemVariationData:new ev(new eM(ef,rz),"variationDataCount")}),rW=new eT(ec,{1:{axisIndex:ec,axisIndex:ec,filterRangeMinValue:rU,filterRangeMaxValue:rU}}),rj=new eP({conditionCount:ec,conditionTable:new ev(new eM(ef,rW),"conditionCount")}),rY=new eP({featureIndex:ec,alternateFeatureTable:new eM(ef,ry,{type:"parent"})}),rH=new eP({version:eb,substitutionCount:ec,substitutions:new ev(rY,"substitutionCount")}),rq=new eP({conditionSet:new eM(ef,rj,{type:"parent"}),featureTableSubstitution:new eM(ef,rH,{type:"parent"})}),rX=new eP({majorVersion:ec,minorVersion:ec,featureVariationRecordCount:ef,featureVariationRecords:new ev(rq,"featureVariationRecordCount")});// Checks if an operand is an index of a predefined value,
// otherwise delegates to the provided type.
class rZ{decode(e,t,r){return this.predefinedOps[r[0]]?this.predefinedOps[r[0]]:this.type.decode(e,t,r)}size(e,t){return this.type.size(e,t)}encode(e,t,r){let n=this.predefinedOps.indexOf(t);return -1!==n?n:this.type.encode(e,t,r)}constructor(e,t){this.predefinedOps=e,this.type=t}}let rJ=new eP({first:ec,nLeft:eu}),rK=new eP({first:ec,nLeft:ec}),rQ=new eT(new class extends el{decode(e){return 127&eu.decode(e)}constructor(){super("UInt8")}},{0:{nCodes:eu,codes:new ev(eu,"nCodes")},1:{nRanges:eu,ranges:new ev(rJ,"nRanges")}}),r_=new rZ([ru,["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"]],new ra(rQ,{lazy:!0}));// Decodes an array of ranges until the total
// length is equal to the provided length.
class r$ extends ev{decode(e,t){let r=eA(this.length,e,t),n=0,s=[];for(;n<r;){let r=this.type.decode(e,t);r.offset=n,n+=r.nLeft+1,s.push(r)}return s}}let r0=new eT(eu,{0:{glyphs:new ev(ec,e=>e.parent.CharStrings.length-1)},1:{ranges:new r$(rJ,e=>e.parent.CharStrings.length-1)},2:{ranges:new r$(rK,e=>e.parent.CharStrings.length-1)}}),r1=new rZ([rc,[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"]],new ra(r0,{lazy:!0})),r2=new eP({first:ec,fd:eu}),r3=new eP({first:ef,fd:ec}),r4=new eT(eu,{0:{fds:new ev(eu,e=>e.parent.CharStrings.length)},3:{nRanges:ec,ranges:new ev(r2,"nRanges"),sentinel:ec},4:{nRanges:ef,ranges:new ev(r3,"nRanges"),sentinel:ef}}),r5=new ra(ro);class r6{decode(e,t,r){return t.length=r[0],r5.decode(e,t,[r[1]])}size(e,t){return[ro.size(e,t,!1),r5.size(e,t)[0]]}encode(e,t,r){return[ro.size(t,r,!1),r5.encode(e,t,r)[0]]}}let r8=new rs([// key       name                   type(s)                                 default
[18,"Private",new r6,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),r9=new rs([// key       name                   type(s)                                 default
[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",r1,rc],[16,"Encoding",r_,ru],[17,"CharStrings",new ra(new re),null],[18,"Private",new r6,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],// CID font specific
[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new ra(r4),null],[[12,36],"FDArray",new ra(new re(r8)),null],[[12,38],"FontName","sid",null]]),r7=new eP({length:ec,itemVariationStore:rV}),ne=new rs([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new ra(new re),null],[[12,37],"FDSelect",new ra(r4),null],[[12,36],"FDArray",new ra(new re(r8)),null],[24,"vstore",new ra(r7),null],[25,"maxstack","number",193]]),nt=new eT(ey,{1:{hdrSize:eu,offSize:eu,nameIndex:new re(new eS("length")),topDictIndex:new re(r9),stringIndex:new re(new eS("length")),globalSubrIndex:new re},2:{hdrSize:eu,length:ec,topDict:ne,globalSubrIndex:new re}});class nr{static decode(e){return new nr(e)}decode(){this.stream.pos;let e=nt.decode(this.stream);for(let t in e){let r=e[t];this[t]=r}if(this.version<2){if(1!==this.topDictIndex.length)throw Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this}string(e){return this.version>=2?null:e<rl.length?rl[e]:this.stringIndex[e-rl.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){// CFF2 glyph names are in the post table.
if(this.version>=2||this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(0===e)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let r=0;r<t.ranges.length;r++){let n=t.ranges[r];if(n.offset<=e&&e<=n.offset+n.nLeft)return this.string(n.first+(e-n.offset))}}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,r=0,n=t.length-1;for(;r<=n;){let s=r+n>>1;if(e<t[s].first)n=s-1;else{if(!(s<n)||!(e>=t[s+1].first))return t[s].fd;r=s+1}}default:throw Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}constructor(e){this.stream=e,this.decode()}}let nn=new eP({glyphIndex:ec,vertOriginY:ep});var ns=new eP({majorVersion:ec,minorVersion:ec,defaultVertOriginY:ep,numVertOriginYMetrics:ec,metrics:new ev(nn,"numVertOriginYMetrics")});let na=new eP({height:eu,width:eu,horiBearingX:ed,horiBearingY:ed,horiAdvance:eu,vertBearingX:ed,vertBearingY:ed,vertAdvance:eu}),ni=new eP({height:eu,width:eu,bearingX:ed,bearingY:ed,advance:eu}),no=new eP({glyph:ec,xOffset:ed,yOffset:ed});class nl{}class nu{}new eT("version",{1:{metrics:ni,data:nl},2:{metrics:ni,data:nu},// format 3 is deprecated
// format 4 is not supported by Microsoft
5:{data:nu},6:{metrics:na,data:nl},7:{metrics:na,data:nu},8:{metrics:ni,pad:new eD(eu),numComponents:ec,components:new ev(no,"numComponents")},9:{metrics:na,pad:new eD(eu),numComponents:ec,components:new ev(no,"numComponents")},17:{metrics:ni,dataLen:ef,data:new ek("dataLen")},18:{metrics:na,dataLen:ef,data:new ek("dataLen")},19:{dataLen:ef,data:new ek("dataLen")}});let nc=new eP({ascender:ed,descender:ed,widthMax:eu,caretSlopeNumerator:ed,caretSlopeDenominator:ed,caretOffset:ed,minOriginSB:ed,minAdvanceSB:ed,maxBeforeBL:ed,minAfterBL:ed,pad:new eD(ed,2)}),nh=new eP({glyphCode:ec,offset:ec}),nf=new eT(ec,{header:{imageFormat:ec,imageDataOffset:ef},1:{offsetArray:new ev(ef,e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1)},2:{imageSize:ef,bigMetrics:na},3:{offsetArray:new ev(ec,e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1)},4:{numGlyphs:ef,glyphArray:new ev(nh,e=>e.numGlyphs+1)},5:{imageSize:ef,bigMetrics:na,numGlyphs:ef,glyphCodeArray:new ev(ec,"numGlyphs")}}),nd=new eP({firstGlyphIndex:ec,lastGlyphIndex:ec,subtable:new eM(ef,nf)}),np=new eP({indexSubTableArray:new eM(ef,new ev(nd,1),{type:"parent"}),indexTablesSize:ef,numberOfIndexSubTables:ef,colorRef:ef,hori:nc,vert:nc,startGlyphIndex:ec,endGlyphIndex:ec,ppemX:eu,ppemY:eu,bitDepth:eu,flags:new eI(eu,["horizontal","vertical"])});var ng=new eP({version:ef,numSizes:ef,sizes:new ev(np,"numSizes")});let nm=new eP({ppem:ec,resolution:ec,imageOffsets:new ev(new eM(ef,"void"),e=>e.parent.parent.maxp.numGlyphs+1)});var // of several different sizes.
ny=new eP({version:ec,flags:new eI(ec,["renderOutlines"]),numImgTables:ef,imageTables:new ev(new eM(ef,nm),"numImgTables")});let nb=new eP({gid:ec,paletteIndex:ec}),nA=new eP({gid:ec,// and is not rendered for color.
firstLayerIndex:ec,// There will be numLayers consecutive entries for this base glyph.
numLayers:ec});// be less than numPaletteEntries in the CPAL table, except for
var nw=new eP({version:ec,numBaseGlyphRecords:ec,baseGlyphRecord:new eM(ef,new ev(nA,"numBaseGlyphRecords")),layerRecords:new eM(ef,new ev(nb,"numLayerRecords"),{lazy:!0}),numLayerRecords:ec});let nv=new eP({blue:eu,green:eu,red:eu,alpha:eu});var nx=new eT(ec,{header:{numPaletteEntries:ec,numPalettes:ec,numColorRecords:ec,colorRecords:new eM(ef,new ev(nv,"numColorRecords")),colorRecordIndices:new ev(ec,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new eM(ef,new ev(ef,"numPalettes")),offsetPaletteLabelArray:new eM(ef,new ev(ec,"numPalettes")),offsetPaletteEntryLabelArray:new eM(ef,new ev(ec,"numPaletteEntries"))}});let nC=new eT(ec,{1:{coordinate:ep},2:{coordinate:ep,referenceGlyph:ec,baseCoordPoint:ec},3:{coordinate:ep,deviceTable:new eM(ec,rE)// Device table for X or Y value
}}),nI=new eP({defaultIndex:ec,baseCoordCount:ec,baseCoords:new ev(new eM(ec,nC),"baseCoordCount")}),nk=new eP({tag:new eS(4),minCoord:new eM(ec,nC,{type:"parent"}),maxCoord:new eM(ec,nC,{type:"parent"})// May be NULL
}),nE=new eP({minCoord:new eM(ec,nC),maxCoord:new eM(ec,nC),featMinMaxCount:ec,featMinMaxRecords:new ev(nk,"featMinMaxCount")// In alphabetical order
}),nD=new eP({tag:new eS(4),minMax:new eM(ec,nE,{type:"parent"})}),nS=new eP({baseValues:new eM(ec,nI),defaultMinMax:new eM(ec,nE),baseLangSysCount:ec,baseLangSysRecords:new ev(nD,"baseLangSysCount")// in alphabetical order by BaseLangSysTag
}),nB=new eP({tag:new eS(4),script:new eM(ec,nS,{type:"parent"})}),nP=new ev(nB,ec),nO=new ev(new eS(4),ec),nT=new eP({baseTagList:new eM(ec,nO),baseScriptList:new eM(ec,nP)});var nM=new eT(ef,{header:{horizAxis:new eM(ec,nT),vertAxis:new eM(ec,nT)// May be NULL
},65536:{},65537:{itemVariationStore:new eM(ef,rV)}});let nF=new ev(ec,ec),nL=new eP({coverage:new eM(ec,rC),glyphCount:ec,attachPoints:new ev(new eM(ec,nF),"glyphCount")}),nU=new eT(ec,{1:{coordinate:ep},2:{caretValuePoint:ec},3:{coordinate:ep,deviceTable:new eM(ec,rE)}}),nG=new ev(new eM(ec,nU),ec),nR=new eP({coverage:new eM(ec,rC),ligGlyphCount:ec,ligGlyphs:new ev(new eM(ec,nG),"ligGlyphCount")}),nN=new eP({markSetTableFormat:ec,markSetCount:ec,coverage:new ev(new eM(ef,rC),"markSetCount")});var nz=new eT(ef,{header:{glyphClassDef:new eM(ec,rk),attachList:new eM(ec,nL),ligCaretList:new eM(ec,nR),markAttachClassDef:new eM(ec,rk)},65536:{},65538:{markGlyphSetsDef:new eM(ec,nN)},65539:{markGlyphSetsDef:new eM(ec,nN),itemVariationStore:new eM(ef,rV)}});let nV=new eI(ec,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),nW={xPlacement:ep,yPlacement:ep,xAdvance:ep,yAdvance:ep,xPlaDevice:new eM(ec,rE,{type:"global",relativeTo:e=>e.rel}),yPlaDevice:new eM(ec,rE,{type:"global",relativeTo:e=>e.rel}),xAdvDevice:new eM(ec,rE,{type:"global",relativeTo:e=>e.rel}),yAdvDevice:new eM(ec,rE,{type:"global",relativeTo:e=>e.rel})};class nj{buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let r={};r.rel=()=>t._startOffset;let n=t[this.key];for(let e in n)n[e]&&(r[e]=nW[e]);return new eP(r)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let r=this.buildStruct(t).decode(e,t);return delete r.rel,r}constructor(e="valueFormat"){this.key=e}}let nY=new eP({secondGlyph:ec,value1:new nj("valueFormat1"),value2:new nj("valueFormat2")}),nH=new ev(nY,ec),nq=new eP({value1:new nj("valueFormat1"),value2:new nj("valueFormat2")}),nX=new eT(ec,{1:{xCoordinate:ep,yCoordinate:ep},2:{xCoordinate:ep,yCoordinate:ep,anchorPoint:ec},3:{xCoordinate:ep,yCoordinate:ep,xDeviceTable:new eM(ec,rE),yDeviceTable:new eM(ec,rE)}}),nZ=new eP({entryAnchor:new eM(ec,nX,{type:"parent"}),exitAnchor:new eM(ec,nX,{type:"parent"})}),nJ=new eP({class:ec,markAnchor:new eM(ec,nX,{type:"parent"})}),nK=new ev(nJ,ec),nQ=new ev(new eM(ec,nX),e=>e.parent.classCount),n_=new ev(nQ,ec),n$=new ev(new eM(ec,nX),e=>e.parent.parent.classCount),n0=new ev(n$,ec),n1=new ev(new eM(ec,n0),ec),n2=new eT("lookupType",{1:new eT(ec,{1:{coverage:new eM(ec,rC),valueFormat:nV,value:new nj},2:{coverage:new eM(ec,rC),valueFormat:nV,valueCount:ec,values:new ex(new nj,"valueCount")}}),2:new eT(ec,{1:{coverage:new eM(ec,rC),valueFormat1:nV,valueFormat2:nV,pairSetCount:ec,pairSets:new ex(new eM(ec,nH),"pairSetCount")},2:{coverage:new eM(ec,rC),valueFormat1:nV,valueFormat2:nV,classDef1:new eM(ec,rk),classDef2:new eM(ec,rk),class1Count:ec,class2Count:ec,classRecords:new ex(new ex(nq,"class2Count"),"class1Count")}}),3:{format:ec,coverage:new eM(ec,rC),entryExitCount:ec,entryExitRecords:new ev(nZ,"entryExitCount")},4:{format:ec,markCoverage:new eM(ec,rC),baseCoverage:new eM(ec,rC),classCount:ec,markArray:new eM(ec,nK),baseArray:new eM(ec,n_)},5:{format:ec,markCoverage:new eM(ec,rC),ligatureCoverage:new eM(ec,rC),classCount:ec,markArray:new eM(ec,nK),ligatureArray:new eM(ec,n1)},6:{format:ec,mark1Coverage:new eM(ec,rC),mark2Coverage:new eM(ec,rC),classCount:ec,mark1Array:new eM(ec,nK),mark2Array:new eM(ec,n_)},7:rT,8:rL,9:{posFormat:ec,lookupType:ec,extension:new eM(ef,null)}});// Fix circular reference
n2.versions[9].extension.type=n2;var n3=new eT(ef,{header:{scriptList:new eM(ec,rg),featureList:new eM(ec,rA),lookupList:new eM(ec,new rv(n2))},65536:{},65537:{featureVariations:new eM(ef,rX)}});let n4=new ev(ec,ec),n5=new eP({glyph:ec,compCount:ec,components:new ev(ec,e=>e.compCount-1)}),n6=new ev(new eM(ec,n5),ec),n8=new eT("lookupType",{1:new eT(ec,{1:{coverage:new eM(ec,rC),deltaGlyphID:ep},2:{coverage:new eM(ec,rC),glyphCount:ec,substitute:new ex(ec,"glyphCount")}}),2:{substFormat:ec,coverage:new eM(ec,rC),count:ec,sequences:new ex(new eM(ec,n4),"count")},3:{substFormat:ec,coverage:new eM(ec,rC),count:ec,alternateSet:new ex(new eM(ec,n4),"count")},4:{substFormat:ec,coverage:new eM(ec,rC),count:ec,ligatureSets:new ex(new eM(ec,n6),"count")},5:rT,6:rL,7:{substFormat:ec,lookupType:ec,extension:new eM(ef,null)},8:{substFormat:ec,coverage:new eM(ec,rC),backtrackCoverage:new ev(new eM(ec,rC),"backtrackGlyphCount"),lookaheadGlyphCount:ec,lookaheadCoverage:new ev(new eM(ec,rC),"lookaheadGlyphCount"),glyphCount:ec,substitutes:new ev(ec,"glyphCount")}});// Fix circular reference
n8.versions[7].extension.type=n8;var n9=new eT(ef,{header:{scriptList:new eM(ec,rg),featureList:new eM(ec,rA),lookupList:new eM(ec,new rv(n8))},65536:{},65537:{featureVariations:new eM(ef,rX)}});let n7=new ev(ec,ec),se=new eP({shrinkageEnableGSUB:new eM(ec,n7),shrinkageDisableGSUB:new eM(ec,n7),shrinkageEnableGPOS:new eM(ec,n7),shrinkageDisableGPOS:new eM(ec,n7),shrinkageJstfMax:new eM(ec,new rv(n2)),extensionEnableGSUB:new eM(ec,n7),extensionDisableGSUB:new eM(ec,n7),extensionEnableGPOS:new eM(ec,n7),extensionDisableGPOS:new eM(ec,n7),extensionJstfMax:new eM(ec,new rv(n2))}),st=new ev(new eM(ec,se),ec),sr=new eP({tag:new eS(4),jstfLangSys:new eM(ec,st)}),sn=new eP({extenderGlyphs:new eM(ec,new ev(ec,ec)),defaultLangSys:new eM(ec,st),langSysCount:ec,langSysRecords:new ev(sr,"langSysCount")}),ss=new eP({tag:new eS(4),script:new eM(ec,sn,{type:"parent"})});var sa=new eP({version:ef,scriptCount:ec,scriptList:new ev(ss,"scriptCount")});let si=new eP({entry:new // TODO: add this to restructure
class{decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return eA(this._size,null,t)}constructor(e){this._size=e}}(e=>((48&e.parent.entryFormat)>>4)+1),outerIndex:e=>e.entry>>(15&e.parent.entryFormat)+1,innerIndex:e=>e.entry&(1<<(15&e.parent.entryFormat)+1)-1}),so=new eP({entryFormat:ec,mapCount:ec,mapData:new ev(si,"mapCount")});var sl=new eP({majorVersion:ec,minorVersion:ec,itemVariationStore:new eM(ef,rV),advanceWidthMapping:new eM(ef,so),LSBMapping:new eM(ef,so),RSBMapping:new eM(ef,so)});let su=new eP({format:ef,length:ef,offset:ef}),sc=new eP({reserved:new eD(ec,2),cbSignature:ef,signature:new ek("cbSignature")});var sh=new eP({ulVersion:ef,usNumSigs:ec,usFlag:ec,signatures:new ev(su,"usNumSigs"),signatureBlocks:new ev(sc,"usNumSigs")});let sf=new eP({rangeMaxPPEM:ec,rangeGaspBehavior:new eI(ec,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"// only in version 1, for ClearType
])});var sd=new eP({version:ec,numRanges:ec,gaspRanges:new ev(sf,"numRanges")// Sorted by ppem
});let sp=new eP({pixelSize:eu,maximumWidth:eu,widths:new ev(eu,e=>e.parent.parent.maxp.numGlyphs)});var sg=new eP({version:ec,numRecords:ep,sizeDeviceRecord:eg,records:new ev(sp,"numRecords")});let sm=new eP({left:ec,right:ec,value:ep}),sy=new eP({firstGlyph:ec,nGlyphs:ec,offsets:new ev(ec,"nGlyphs"),max:e=>e.offsets.length&&Math.max.apply(Math,e.offsets)}),sb=new eP({off:e=>e._startOffset-e.parent.parent._startOffset,len:e=>((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2),values:new ex(ep,"len")}),sA=new eT("format",{0:{nPairs:ec,searchRange:ec,entrySelector:ec,rangeShift:ec,pairs:new ev(sm,"nPairs")},2:{rowWidth:ec,leftTable:new eM(ec,sy,{type:"parent"}),rightTable:new eM(ec,sy,{type:"parent"}),array:new eM(ec,sb,{type:"parent"})},3:{glyphCount:ec,kernValueCount:eu,leftClassCount:eu,rightClassCount:eu,flags:eu,kernValue:new ev(ep,"kernValueCount"),leftClass:new ev(eu,"glyphCount"),rightClass:new ev(eu,"glyphCount"),kernIndex:new ev(eu,e=>e.leftClassCount*e.rightClassCount)}}),sw=new eT("version",{0:{subVersion:ec,length:ec,format:eu,coverage:new eI(eu,["horizontal","minimum","crossStream","override"// If set to 1 the value in this table replaces the accumulated value
]),subtable:sA,padding:new eD(eu,e=>e.length-e._currentOffset)},1:{length:ef,coverage:new eI(eu,[null,null,null,null,null,"variation","crossStream","vertical"// Set if table has vertical kerning values
]),format:eu,tupleIndex:ec,subtable:sA,padding:new eD(eu,e=>e.length-e._currentOffset)}});var sv=new eT(ec,{0:{nTables:ec,tables:new ev(sw,"nTables")},1:{reserved:new eD(ec),nTables:ef,tables:new ev(sw,"nTables")}}),// despite instructions effecting the advance width
sx=new eP({version:ec,numGlyphs:ec,yPels:new ev(eu,"numGlyphs")}),sC=new eP({version:ec,fontNumber:ef,pitch:ec,xHeight:ec,style:ec,typeFamily:ec,capHeight:ec,symbolSet:ec,typeface:new eS(16),characterComplement:new eS(8),fileName:new eS(6),strokeWeight:new eS(1),widthType:new eS(1),serifStyle:eu,reserved:new eD(eu)});// VDMX tables contain ascender/descender overrides for certain (usually small)
// sizes. This is needed in order to match font metrics on Windows.
let sI=new eP({bCharSet:eu,xRatio:eu,yStartRatio:eu,yEndRatio:eu// Ending y-Ratio value
}),sk=new eP({yPelHeight:ec,yMax:ep,yMin:ep}),sE=new eP({recs:ec,startsz:eu,endsz:eu,entries:new ev(sk,"recs")// The VDMX records
});var sD=new eP({version:ec,numRecs:ec,numRatios:ec,ratioRanges:new ev(sI,"numRatios"),offsets:new ev(ec,"numRatios"),groups:new ev(sE,"numRecs")// The actual VDMX groupings
}),sS=new eP({version:ec,ascent:ep,descent:ep,lineGap:ep,advanceHeightMax:ep,minTopSideBearing:ep,minBottomSideBearing:ep,yMaxExtent:ep,caretSlopeRise:ep,caretSlopeRun:ep,caretOffset:ep,reserved:new eD(ep,4),metricDataFormat:ep,numberOfMetrics:ec});let sB=new eP({advance:ec,bearing:ep});var sP=new eP({metrics:new ex(sB,e=>e.parent.vhea.numberOfMetrics),bearings:new ex(ep,e=>e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics)});let sO=new em(16,"BE",14),sT=new eP({fromCoord:sO,toCoord:sO}),sM=new eP({pairCount:ec,correspondence:new ev(sT,"pairCount")});var sF=new eP({version:eb,axisCount:ef,segment:new ev(sM,"axisCount")});class sL{getItem(e){if(null==this._items[e]){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(e,t,r){this.type=e,this.stream=t,this.parent=r,this.base=this.stream.pos,this._items=[]}}class sU extends ev{decode(e,t){return new sL(this.type,e,t)}constructor(e){super(e,0)}}let sG=function(e=ec){e=new // Helper class that makes internal structures invisible to pointers
class{decode(e,t){return t=t.parent.parent,this.type.decode(e,t)}size(e,t){return t=t.parent.parent,this.type.size(e,t)}encode(e,t,r){return r=r.parent.parent,this.type.encode(e,t,r)}constructor(e){this.type=e}}(e);let t=new eP({unitSize:ec,nUnits:ec,searchRange:ec,entrySelector:ec,rangeShift:ec}),r=new eP({lastGlyph:ec,firstGlyph:ec,value:e}),n=new eP({lastGlyph:ec,firstGlyph:ec,values:new eM(ec,new ev(e,e=>e.lastGlyph-e.firstGlyph+1),{type:"parent"})}),s=new eP({glyph:ec,value:e});return new eT(ec,{0:{values:new sU(e)// length == number of glyphs maybe?
},2:{binarySearchHeader:t,segments:new ev(r,e=>e.binarySearchHeader.nUnits)},4:{binarySearchHeader:t,segments:new ev(n,e=>e.binarySearchHeader.nUnits)},6:{binarySearchHeader:t,segments:new ev(s,e=>e.binarySearchHeader.nUnits)},8:{firstGlyph:ec,count:ec,values:new ev(e,"count")}})};function sR(e={},t=ec){let r=Object.assign({newState:ec,flags:ec},e),n=new eP(r),s=new sU(new ev(ec,e=>e.nClasses));return new eP({nClasses:ef,classTable:new eM(ef,new sG(t)),stateArray:new eM(ef,s),entryTable:new eM(ef,new sU(n))})}let sN=new eT("format",{0:{deltas:new ev(ep,32)},1:{deltas:new ev(ep,32),mappingData:new sG(ec)},2:{standardGlyph:ec,controlPoints:new ev(ec,32)},3:{standardGlyph:ec,controlPoints:new ev(ec,32),mappingData:new sG(ec)}});var sz=new eP({version:eb,format:ec,defaultBaseline:ec,subtable:sN});let sV=new eP({setting:ec,nameIndex:ep,name:e=>e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}),sW=new eP({feature:ec,nSettings:ec,settingTable:new eM(ef,new ev(sV,"nSettings"),{type:"parent"}),featureFlags:new eI(eu,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:eu,nameIndex:ep,name:e=>e.parent.parent.name.records.fontFeatures[e.nameIndex]});var sj=new eP({version:eb,featureNameCount:ec,reserved1:new eD(ec),reserved2:new eD(ef),featureNames:new ev(sW,"featureNameCount")});let sY=new eP({axisTag:new eS(4),minValue:eb,defaultValue:eb,maxValue:eb,flags:ec,nameID:ec,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID]}),sH=new eP({nameID:ec,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID],flags:ec,coord:new ev(eb,e=>e.parent.axisCount),postscriptNameID:new eE(ec,e=>e.parent.instanceSize-e._currentOffset>0)});var sq=new eP({version:eb,offsetToData:ec,countSizePairs:ec,axisCount:ec,axisSize:ec,instanceCount:ec,instanceSize:ec,axis:new ev(sY,"axisCount"),instance:new ev(sH,"instanceCount")});let sX=new em(16,"BE",14),sZ=new eP({version:ec,reserved:new eD(ec),axisCount:ec,globalCoordCount:ec,globalCoords:new eM(ef,new ev(new ev(sX,"axisCount"),"globalCoordCount")),glyphCount:ec,flags:ec,offsetToData:ef,offsets:new ev(new eM(class{static decode(e,t){// In short format, offsets are multiplied by 2.
// This doesn't seem to be documented by Apple, but it
// is implemented this way in Freetype.
return t.flags?e.readUInt32BE():2*e.readUInt16BE()}},"void",{relativeTo:e=>e.offsetToData,allowNull:!1}),e=>e.glyphCount+1)}),sJ=new eP({length:ec,coverage:ec,subFeatureFlags:ef,stateTable:new function(e={},t=ec){let r=new eP({version:()=>8,firstGlyph:ec,values:new ev(eu,ec)}),n=Object.assign({newStateOffset:ec,// convert offset to stateArray index
newState:e=>(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses,flags:ec},e),s=new eP(n),a=new sU(new ev(eu,e=>e.nClasses));return new eP({nClasses:ec,classTable:new eM(ec,r),stateArray:new eM(ec,a),entryTable:new eM(ec,new sU(s))})}}),sK=new eP({justClass:ef,beforeGrowLimit:eb,beforeShrinkLimit:eb,afterGrowLimit:eb,afterShrinkLimit:eb,growFlags:ec,shrinkFlags:ec}),sQ=new ev(sK,ef),s_=new eT("actionType",{0:{lowerLimit:eb,upperLimit:eb,order:ec,glyphs:new ev(ec,ec)},1:{addGlyph:ec},2:{substThreshold:eb,addGlyph:ec,substGlyph:ec},3:{},4:{variationAxis:ef,minimumLimit:eb,noStretchValue:eb,maximumLimit:eb},5:{flags:ec,glyph:ec}}),s$=new eP({actionClass:ec,actionType:ec,actionLength:ef,actionData:s_,padding:new eD(eu,e=>e.actionLength-e._currentOffset)}),s0=new ev(s$,ef),s1=new eP({lookupTable:new sG(new eM(ec,s0))}),s2=new eP({classTable:new eM(ec,sJ,{type:"parent"}),wdcOffset:ec,postCompensationTable:new eM(ec,s1,{type:"parent"}),widthDeltaClusters:new sG(new eM(ec,sQ,{type:"parent",relativeTo:e=>e.wdcOffset}))});var s3=new eP({version:ef,format:ec,horizontal:new eM(ec,s2),vertical:new eM(ec,s2)});let s4=new eP({items:new sU(new eM(ef,new sG))}),s5=new eT("type",{0:{stateTable:new sR},1:{stateTable:new sR({markIndex:ec,currentIndex:ec}),substitutionTable:new eM(ef,s4)},2:{stateTable:new sR({action:ec}),ligatureActions:new eM(ef,new sU(ef)),components:new eM(ef,new sU(ec)),ligatureList:new eM(ef,new sU(ec))},4:{lookupTable:new sG},5:{stateTable:new sR({currentInsertIndex:ec,markedInsertIndex:ec}),insertionActions:new eM(ef,new sU(ec))}}),s6=new eP({length:ef,coverage:eh,type:eu,subFeatureFlags:ef,table:s5,padding:new eD(eu,e=>e.length-e._currentOffset)}),s8=new eP({featureType:ec,featureSetting:ec,enableFlags:ef,disableFlags:ef}),s9=new eP({defaultFlags:ef,chainLength:ef,nFeatureEntries:ef,nSubtables:ef,features:new ev(s8,"nFeatureEntries"),subtables:new ev(s6,"nSubtables")});var s7=new eP({version:ec,unused:new eD(ec),nChains:ef,chains:new ev(s9,"nChains")});let ae=new eP({left:ep,top:ep,right:ep,bottom:ep});var at=new eP({version:eb,format:ec,lookupTable:new sG(ae)});let ar={};ar.cmap=tN,ar.head=tz,ar.hhea=tV,ar.hmtx=tj,ar.maxp=tY,ar.name=t0,ar["OS/2"]=t2,ar.post=t4,ar.fpgm=t6,ar.loca=t8,ar.prep=t9,ar["cvt "]=t5,ar.glyf=t7,ar["CFF "]=nr,ar.CFF2=nr,ar.VORG=ns,ar.EBLC=ng,ar.CBLC=ar.EBLC,ar.sbix=ny,ar.COLR=nw,ar.CPAL=nx,ar.BASE=nM,ar.GDEF=nz,ar.GPOS=n3,ar.GSUB=n9,ar.JSTF=sa,ar.HVAR=sl,ar.DSIG=sh,ar.gasp=sd,ar.hdmx=sg,ar.kern=sv,ar.LTSH=sx,ar.PCLT=sC,ar.VDMX=sD,ar.vhea=sS,ar.vmtx=sP,ar.avar=sF,ar.bsln=sz,ar.feat=sj,ar.fvar=sq,ar.gvar=sZ,ar.just=s3,ar.morx=s7,ar.opbd=at;let an=new eP({tag:new eS(4),checkSum:ef,offset:new eM(ef,"void",{type:"global"}),length:ef}),as=new eP({tag:new eS(4),numTables:ec,searchRange:ec,entrySelector:ec,rangeShift:ec,tables:new ev(an,"numTables")});function aa(e,t){let r=0,n=e.length-1;for(;r<=n;){let s=r+n>>1,a=t(e[s]);if(a<0)n=s-1;else{if(!(a>0))return s;r=s+1}}return -1}function ai(e,t){let r=[];for(;e<t;)r.push(e++);return r}as.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e},as.preEncode=function(){if(!Array.isArray(this.tables)){let e=[];for(let t in this.tables){let r=this.tables[t];r&&e.push({tag:t,checkSum:0,offset:new eF(ar[t],r),length:ar[t].size(r)})}this.tables=e}this.tag="true",this.numTables=this.tables.length;let e=Math.pow(2,Math.floor(Math.log(this.numTables)/Math.LN2));this.searchRange=16*e,this.entrySelector=Math.log(e)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};const ao=new TextDecoder("ascii"),al="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",au=new Uint8Array(256);for(let e=0;e<al.length;e++)au[al.charCodeAt(e)]=e;function ac(e){let t=.75*e.length;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);let r=new Uint8Array(t),n=0;for(let t=0,s=e.length;t<s;t+=4){let s=au[e.charCodeAt(t)],a=au[e.charCodeAt(t+1)],i=au[e.charCodeAt(t+2)],o=au[e.charCodeAt(t+3)];r[n++]=s<<2|a>>4,r[n++]=(15&a)<<4|i>>2,r[n++]=(3&i)<<6|63&o}return r}class ah{findSubtable(e,t){for(let[r,n]of t)for(let t of e.tables)if(t.platformID===r&&t.encodingID===n)return t.table;return null}lookup(e,t){// If there is no Unicode cmap in this font, we need to re-encode
// the codepoint in the encoding that the cmap supports.
if(this.encoding)e=this.encoding.get(e)||e;else if(t){let r=this.getVariationSelector(e,t);if(r)return r}let r=this.cmap;switch(r.version){case 0:return r.codeMap.get(e)||0;case 4:{let t=0,n=r.segCount-1;for(;t<=n;){let s=t+n>>1;if(e<r.startCode.get(s))n=s-1;else if(e>r.endCode.get(s))t=s+1;else{let t,n=r.idRangeOffset.get(s);if(0===n)t=e+r.idDelta.get(s);else{let a=n/2+(e-r.startCode.get(s))-(r.segCount-s);0!==(t=r.glyphIndexArray.get(a)||0)&&(t+=r.idDelta.get(s))}return 65535&t}}return 0}case 8:throw Error("TODO: cmap format 8");case 6:case 10:return r.glyphIndices.get(e-r.firstCode)||0;case 12:case 13:{let t=0,n=r.nGroups-1;for(;t<=n;){let s=t+n>>1,a=r.groups.get(s);if(e<a.startCharCode)n=s-1;else if(e>a.endCharCode)t=s+1;else{if(12===r.version)return a.glyphID+(e-a.startCharCode);return a.glyphID}}return 0}case 14:throw Error("TODO: cmap format 14");default:throw Error(`Unknown cmap format ${r.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let r=this.uvs.varSelectors.toArray(),n=aa(r,e=>t-e.varSelector),s=r[n];return(-1!==n&&s.defaultUVS&&(n=aa(s.defaultUVS,t=>e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0)),-1!==n&&s.nonDefaultUVS&&-1!==(n=aa(s.nonDefaultUVS,t=>e-t.unicodeValue)))?s.nonDefaultUVS[n].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return ai(0,e.codeMap.length);case 4:{let t=[],r=e.endCode.toArray();for(let n=0;n<r.length;n++){let s=r[n]+1,a=e.startCode.get(n);t.push(...ai(a,s))}return t}case 8:throw Error("TODO: cmap format 8");case 6:case 10:return ai(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let r of e.groups.toArray())t.push(...ai(r.startCharCode,r.endCharCode+1));return t}case 14:throw Error("TODO: cmap format 14");default:throw Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let r=[];for(let n=0;n<256;n++)t.codeMap.get(n)===e&&r.push(n);return r}case 4:{let n=[];for(let s=0;s<t.segCount;s++){let a=t.endCode.get(s),i=t.startCode.get(s),o=t.idRangeOffset.get(s),l=t.idDelta.get(s);for(var r=i;r<=a;r++){let a=0;if(0===o)a=r+l;else{let e=o/2+(r-i)-(t.segCount-s);0!==(a=t.glyphIndexArray.get(e)||0)&&(a+=l)}a===e&&n.push(r)}}return n}case 12:{let r=[];for(let n of t.groups.toArray())e>=n.glyphID&&e<=n.glyphID+(n.endCharCode-n.startCharCode)&&r.push(n.startCharCode+(e-n.glyphID));return r}case 13:{let r=[];for(let n of t.groups.toArray())e===n.glyphID&&r.push(...ai(n.startCharCode,n.endCharCode+1));return r}default:throw Error(`Unknown cmap format ${t.version}`)}}constructor(e){// If not unicode cmap was found, take the first table with a supported encoding.
if(// Attempt to find a Unicode cmap first
this.encoding=null,this.cmap=this.findSubtable(e,[// 32-bit subtables
[3,10],[0,6],[0,4],// 16-bit subtables
[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let t of e.tables){let e=function(e){let t=tZ.get(e);if(t)return t;// These encodings aren't supported by TextDecoder.
let r=tX[e];if(r){let t=new Map;for(let e=0;e<r.length;e++)t.set(r.charCodeAt(e),128+e);return tZ.set(e,t),t}// Only single byte encodings can be mapped 1:1.
if(tq.has(e)){// TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.
// Use this to create a mapping of code points.
let t=new TextDecoder(e),r=new Uint8Array(128);for(let e=0;e<128;e++)r[e]=128+e;let n=new Map,s=t.decode(r);for(let e=0;e<128;e++)n.set(s.charCodeAt(e),128+e);return tZ.set(e,n),n}}(tH(t.platformID,t.encodingID,t.table.language-1));e&&(this.cmap=t.table,this.encoding=e)}if(!this.cmap)throw Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}}tv(eU)([tB],ah.prototype,"getCharacterSet",null),tv(eU)([tB],ah.prototype,"codePointsForGlyph",null);class af{process(e,t){for(let r=0;r<e.length-1;r++){let n=e[r].id,s=e[r+1].id;t[r].xAdvance+=this.getKerning(n,s)}}getKerning(e,t){let r=0;for(let n of this.kern.tables){if(n.coverage.crossStream)continue;switch(n.version){case 0:if(!n.coverage.horizontal)continue;break;case 1:if(n.coverage.vertical||n.coverage.variation)continue;break;default:throw Error(`Unsupported kerning table version ${n.version}`)}let s=0,a=n.subtable;switch(n.format){case 0:let i=aa(a.pairs,function(r){return e-r.left||t-r.right});i>=0&&(s=a.pairs[i].value);break;case 2:let o=0,l=0;o=e>=a.leftTable.firstGlyph&&e<a.leftTable.firstGlyph+a.leftTable.nGlyphs?a.leftTable.offsets[e-a.leftTable.firstGlyph]:a.array.off,t>=a.rightTable.firstGlyph&&t<a.rightTable.firstGlyph+a.rightTable.nGlyphs&&(l=a.rightTable.offsets[t-a.rightTable.firstGlyph]);let u=(o+l-a.array.off)/2;s=a.array.values.get(u);break;case 3:if(e>=a.glyphCount||t>=a.glyphCount)return 0;s=a.kernValue[a.kernIndex[a.leftClass[e]*a.rightClassCount+a.rightClass[t]]];break;default:throw Error(`Unsupported kerning sub-table format ${n.format}`)}// Microsoft supports the override flag, which resets the result
// Otherwise, the sum of the results from all subtables is returned
n.coverage.override?r=s:r+=s}return r}constructor(e){this.kern=e.kern}}class ad{positionGlyphs(e,t){// find each base + mark cluster, and position the marks relative to the base
let r=0,n=0;for(let s=0;s<e.length;s++)e[s].isMark?n=s:(r!==n&&this.positionCluster(e,t,r,n),r=n=s);return r!==n&&this.positionCluster(e,t,r,n),t}positionCluster(e,t,r,n){let s=e[r],a=s.cbox.copy();// adjust bounding box for ligature glyphs
s.codePoints.length>1&&(a.minX+=(s.codePoints.length-1)*a.width/s.codePoints.length);let i=-t[r].xAdvance,o=0,l=this.font.unitsPerEm/16;// position each of the mark glyphs relative to the base glyph
for(let s=r+1;s<=n;s++){let r=e[s],n=r.cbox,u=t[s],c=this.getCombiningClass(r.codePoints[0]);if("Not_Reordered"!==c){// x positioning
switch(u.xOffset=u.yOffset=0,c){case"Double_Above":case"Double_Below":// LTR. TODO: RTL support.
u.xOffset+=a.minX-n.width/2-n.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":// left align
u.xOffset+=a.minX-n.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":// right align
u.xOffset+=a.maxX-n.width-n.minX;break;default:// center align
u.xOffset+=a.minX+(a.width-n.width)/2-n.minX}// y positioning
switch(c){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":("Attached_Below_Left"===c||"Attached_Below"===c)&&(a.minY+=l),u.yOffset=-a.minY-n.maxY,a.minY+=n.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":("Attached_Above"===c||"Attached_Above_Right"===c)&&(a.maxY+=l),u.yOffset=a.maxY-n.minY,a.maxY+=n.height}u.xAdvance=u.yAdvance=0,u.xOffset+=i,u.yOffset+=o}else i-=u.xAdvance,o-=u.yAdvance}}getCombiningClass(e){let t=function(e){let t=te.get(e);return /*@__PURE__*/e9(e7).combiningClasses[t>>tl&th]}(e);// Thai / Lao need some per-character work
if((-256&e)==3584){if("Not_Reordered"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===e)return"Below_Right"}switch(t){// Hebrew
case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":case"CCC29":case"CCC32":// Lao
case"CCC118":// Tibetan
case"CCC129":case"CCC132":return"Below";case"CCC23":return"Attached_Above";case"CCC24":case"CCC107":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":// Arabic and Syriac
case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":case"CCC122":case"CCC130":return"Above";case"CCC21":break;// Thai
case"CCC103":return"Below_Right"}return t}constructor(e){this.font=e}}class ap{/**
   * The width of the bounding box
   * @type {number}
   */get width(){return this.maxX-this.minX}/**
   * The height of the bounding box
   * @type {number}
   */get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new ap(this.minX,this.minY,this.maxX,this.maxY)}constructor(e=1/0,t=1/0,r=-1/0,n=-1/0){/**
     * The minimum X position in the bounding box
     * @type {number}
     */this.minX=e,/**
     * The minimum Y position in the bounding box
     * @type {number}
     */this.minY=t,/**
     * The maxmimum X position in the bounding box
     * @type {number}
     */this.maxX=r,/**
     * The maxmimum Y position in the bounding box
     * @type {number}
     */this.maxY=n}}// This maps the Unicode Script property to an OpenType script tag
// Data from http://www.microsoft.com/typography/otspec/scripttags.htm
// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.
const ag={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},am={};for(let e in ag){let t=ag[e];if(Array.isArray(t))for(let r of t)am[r]=e;else am[t]=e}// The scripts in this map are written from right to left
const ay={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,// Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0// Psalter Pahlavi
};function ab(e){return ay[e]?"rtl":"ltr"}class aA{/**
   * The total advance width of the run.
   * @type {number}
   */get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}/**
  * The total advance height of the run.
  * @type {number}
  */get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}/**
  * The bounding box containing all glyphs in the run.
  * @type {BBox}
  */get bbox(){let e=new ap,t=0,r=0;for(let n=0;n<this.glyphs.length;n++){let s=this.glyphs[n],a=this.positions[n],i=s.bbox;e.addPoint(i.minX+t+a.xOffset,i.minY+r+a.yOffset),e.addPoint(i.maxX+t+a.xOffset,i.maxY+r+a.yOffset),t+=a.xAdvance,r+=a.yAdvance}return e}constructor(e,t,r,n,s){// Convert features to an object
if(/**
     * An array of Glyph objects in the run
     * @type {Glyph[]}
     */this.glyphs=e,/**
     * An array of GlyphPosition objects for each glyph in the run
     * @type {GlyphPosition[]}
     */this.positions=null,/**
     * The script that was requested for shaping. This was either passed in or detected automatically.
     * @type {string}
     */this.script=r,/**
     * The language requested for shaping, as passed in. If `null`, the default language for the
     * script was used.
     * @type {string}
     */this.language=n||null,/**
     * The direction requested for shaping, as passed in (either ltr or rtl).
     * If `null`, the default direction of the script is used.
     * @type {string}
     */this.direction=s||ab(r),/**
     * The features requested during shaping. This is a combination of user
     * specified features and features chosen by the shaper.
     * @type {object}
     */this.features={},Array.isArray(t))for(let e of t)this.features[e]=!0;else"object"==typeof t&&(this.features=t)}}class aw{constructor(e=0,t=0,r=0,n=0){/**
     * The amount to move the virtual pen in the X direction after rendering this glyph.
     * @type {number}
     */this.xAdvance=e,/**
     * The amount to move the virtual pen in the Y direction after rendering this glyph.
     * @type {number}
     */this.yAdvance=t,/**
     * The offset from the pen position in the X direction at which to render this glyph.
     * @type {number}
     */this.xOffset=r,/**
     * The offset from the pen position in the Y direction at which to render this glyph.
     * @type {number}
     */this.yOffset=n}}// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html
// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac
const av={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,// logos: 6
rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},// upperAndLowerCase: 0          # deprecated
// allCaps: 1                    # deprecated
// allLowerCase: 2               # deprecated
// smallCaps: 3                  # deprecated
// initialCaps: 4                # deprecated
// initialCapsAndSmallCaps: 5    # deprecated
verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,// lineInitialSwashes: 4
// lineFinalSwashes: 6
nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,// hyphensToEmDash: 0
// hyphenToEnDash: 2
slashedZero:4},// formInterrobang: 6
// smartQuotes: 8
// periodsToEllipsis: 10
mathematicalExtras:{code:15,exclusive:!1,// hyphenToMinus: 0
// asteristoMultiply: 2
// slashToDivide: 4
// inequalityLigatures: 6
// exponents: 8
mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},// user defined options
designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},// hanjaToHangul: 1
// hiraganaToKatakana: 2
// katakanaToHiragana: 3
// kanaToRomanization: 4
// romanizationToHiragana: 5
// romanizationToKatakana: 6
// hanjaToHangulAltOne: 7
// hanjaToHangulAltTwo: 8
// hanjaToHangulAltThree: 9
annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,// noRubyKana: 0     # deprecated - use rubyKanaOff instead
// rubyKana: 1     # deprecated - use rubyKanaOn instead
rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,// noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
// CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},ax=(e,t)=>[av[e].code,av[e][t]],aC={rlig:ax("ligatures","requiredLigatures"),clig:ax("ligatures","contextualLigatures"),dlig:ax("ligatures","rareLigatures"),hlig:ax("ligatures","historicalLigatures"),liga:ax("ligatures","commonLigatures"),hist:ax("ligatures","historicalLigatures"),smcp:ax("lowerCase","lowerCaseSmallCaps"),pcap:ax("lowerCase","lowerCasePetiteCaps"),frac:ax("fractions","diagonalFractions"),dnom:ax("fractions","diagonalFractions"),numr:ax("fractions","diagonalFractions"),afrc:ax("fractions","verticalFractions"),// aalt
// abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
// ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
// unic, vatu, vhal, vjmo, vpal, vrt2
// dist -> trak table?
// kern, vkrn -> kern table
// lfbd + opbd + rtbd -> opbd table?
// mark, mkmk -> acnt table?
// locl -> languageTag + ltag table
case:ax("caseSensitiveLayout","caseSensitiveLayout"),ccmp:ax("unicodeDecomposition","canonicalComposition"),cpct:ax("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:ax("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:ax("contextualAlternates","swashAlternates"),cswh:ax("contextualAlternates","contextualSwashAlternates"),curs:ax("cursiveConnection","cursive"),c2pc:ax("upperCase","upperCasePetiteCaps"),c2sc:ax("upperCase","upperCaseSmallCaps"),init:ax("smartSwash","wordInitialSwashes"),fin2:ax("smartSwash","wordFinalSwashes"),medi:ax("smartSwash","nonFinalSwashes"),med2:ax("smartSwash","nonFinalSwashes"),fin3:ax("smartSwash","wordFinalSwashes"),fina:ax("smartSwash","wordFinalSwashes"),pkna:ax("kanaSpacing","proportionalKana"),half:ax("textSpacing","halfWidthText"),halt:ax("textSpacing","altHalfWidthText"),hkna:ax("alternateKana","alternateHorizKana"),vkna:ax("alternateKana","alternateVertKana"),// hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
ital:ax("italicCJKRoman","CJKItalicRoman"),lnum:ax("numberCase","upperCaseNumbers"),onum:ax("numberCase","lowerCaseNumbers"),mgrk:ax("mathematicalExtras","mathematicalGreek"),// nalt: not enough info. what type of annotation?
// ornm: ditto, which ornament style?
calt:ax("contextualAlternates","contextualAlternates"),vrt2:ax("verticalSubstitution","substituteVerticalForms"),vert:ax("verticalSubstitution","substituteVerticalForms"),tnum:ax("numberSpacing","monospacedNumbers"),pnum:ax("numberSpacing","proportionalNumbers"),sups:ax("verticalPosition","superiors"),subs:ax("verticalPosition","inferiors"),ordn:ax("verticalPosition","ordinals"),pwid:ax("textSpacing","proportionalText"),hwid:ax("textSpacing","halfWidthText"),qwid:ax("textSpacing","quarterWidthText"),twid:ax("textSpacing","thirdWidthText"),fwid:ax("textSpacing","proportionalText"),palt:ax("textSpacing","altProportionalText"),trad:ax("characterShape","traditionalCharacters"),smpl:ax("characterShape","simplifiedCharacters"),jp78:ax("characterShape","JIS1978Characters"),jp83:ax("characterShape","JIS1983Characters"),jp90:ax("characterShape","JIS1990Characters"),jp04:ax("characterShape","JIS2004Characters"),expt:ax("characterShape","expertCharacters"),hojo:ax("characterShape","hojoCharacters"),nlck:ax("characterShape","NLCCharacters"),tnam:ax("characterShape","traditionalNamesCharacters"),ruby:ax("rubyKana","rubyKana"),titl:ax("styleOptions","titlingCaps"),zero:ax("typographicExtras","slashedZero"),ss01:ax("stylisticAlternatives","stylisticAltOne"),ss02:ax("stylisticAlternatives","stylisticAltTwo"),ss03:ax("stylisticAlternatives","stylisticAltThree"),ss04:ax("stylisticAlternatives","stylisticAltFour"),ss05:ax("stylisticAlternatives","stylisticAltFive"),ss06:ax("stylisticAlternatives","stylisticAltSix"),ss07:ax("stylisticAlternatives","stylisticAltSeven"),ss08:ax("stylisticAlternatives","stylisticAltEight"),ss09:ax("stylisticAlternatives","stylisticAltNine"),ss10:ax("stylisticAlternatives","stylisticAltTen"),ss11:ax("stylisticAlternatives","stylisticAltEleven"),ss12:ax("stylisticAlternatives","stylisticAltTwelve"),ss13:ax("stylisticAlternatives","stylisticAltThirteen"),ss14:ax("stylisticAlternatives","stylisticAltFourteen"),ss15:ax("stylisticAlternatives","stylisticAltFifteen"),ss16:ax("stylisticAlternatives","stylisticAltSixteen"),ss17:ax("stylisticAlternatives","stylisticAltSeventeen"),ss18:ax("stylisticAlternatives","stylisticAltEighteen"),ss19:ax("stylisticAlternatives","stylisticAltNineteen"),ss20:ax("stylisticAlternatives","stylisticAltTwenty")};// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose
// Add cv01-cv99 features
for(let e=1;e<=99;e++)aC[`cv${`00${e}`.slice(-2)}`]=[av.characterAlternatives.code,e];// create inverse mapping
let aI={};for(let e in aC){let t=aC[e];null==aI[t[0]]&&(aI[t[0]]={}),aI[t[0]][t[1]]=e}// Maps strings in a [featureType, featureSetting]
// to their equivalent number codes
function ak(e){let[t,r]=e;if(isNaN(t))var n=av[t]&&av[t].code;else var n=t;if(isNaN(r))var s=av[t]&&av[t][r];else var s=r;return[n,s]}class aE{lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let n=0,s=this.table.binarySearchHeader.nUnits-1;for(;n<=s;){var t=n+s>>1,r=this.table.segments[t];// special end of search value
if(65535===r.firstGlyph)break;if(e<r.firstGlyph)s=t-1;else if(e>r.lastGlyph)n=t+1;else{if(2===this.table.version)return r.value;return r.values[e-r.firstGlyph]}}return null}case 6:{let n=0,s=this.table.binarySearchHeader.nUnits-1;for(;n<=s;){var t=n+s>>1,r=this.table.segments[t];// special end of search value
if(65535===r.glyph)break;if(e<r.glyph)s=t-1;else{if(!(e>r.glyph))return r.value;n=t+1}}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let r of this.table.segments)if(2===this.table.version&&r.value===e)t.push(...ai(r.firstGlyph,r.lastGlyph+1));else for(let n=0;n<r.values.length;n++)r.values[n]===e&&t.push(r.firstGlyph+n);break;case 6:for(let r of this.table.segments)r.value===e&&t.push(r.glyph);break;case 8:for(let r=0;r<this.table.values.length;r++)this.table.values[r]===e&&t.push(this.table.firstGlyph+r);break;default:throw Error(`Unknown lookup table format: ${this.table.version}`)}return t}constructor(e){this.table=e}}tv(eU)([tB],aE.prototype,"glyphsForValue",null);class aD{process(e,t,r){let n=0,s=t?e.length-1:0,a=t?-1:1;// START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?
for(;1===a&&s<=e.length||-1===a&&s>=-1;){let t=null,i=1,o=!0;s===e.length||-1===s?i=0:65535===(t=e[s]).id?i=2:null==(i=this.lookupTable.lookup(t.id))&&(i=1);let l=this.stateTable.stateArray.getItem(n)[i],u=this.stateTable.entryTable.getItem(l);0!==i&&2!==i&&(r(t,u,s),o=!(16384&u.flags)),n=u.newState,o&&(s+=a)}return e}/**
   * Performs a depth-first traversal of the glyph strings
   * represented by the state machine.
   */traverse(e,t=0,r=new Set){if(r.has(t))return;r.add(t);let{nClasses:n,stateArray:s,entryTable:a}=this.stateTable,i=s.getItem(t);// Skip predefined classes
for(let t=4;t<n;t++){let n=i[t],s=a.getItem(n);// Try all glyphs in the class
for(let n of this.lookupTable.glyphsForValue(t))e.enter&&e.enter(n,s),0!==s.newState&&this.traverse(e,s.newState,r),e.exit&&e.exit(n,s)}}constructor(e){this.stateTable=e,this.lookupTable=new aE(e.classTable)}}class aS{// Processes an array of glyphs and applies the specified features
// Features should be in the form of {featureType:{featureSetting:boolean}}
process(e,t={}){for(let r of this.morx.chains){let n=r.defaultFlags;// enable/disable the requested features
for(let e of r.features){let r;(r=t[e.featureType])&&(r[e.featureSetting]?(n&=e.disableFlags,n|=e.enableFlags):!1===r[e.featureSetting]&&(n|=~e.disableFlags,n&=~e.enableFlags))}for(let t of r.subtables)t.subFeatureFlags&n&&this.processSubtable(t,e)}// remove deleted glyphs
let r=e.length-1;for(;r>=0;)65535===e[r].id&&e.splice(r,1),r--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,4===this.subtable.type){this.processNoncontextualSubstitutions(this.subtable,this.glyphs);return}this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let r=this.getStateMachine(e),n=this.getProcessor(),s=!!(4194304&this.subtable.coverage);return r.process(this.glyphs,s,n)}getStateMachine(e){return new aD(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(e,t,r){32768&t.flags&&(this.firstGlyph=r),8192&t.flags&&(this.lastGlyph=r),function(e,t,r,n){switch(t){case 0:return;case 1:return aB(e,[r,1],[n,0]);case 2:return aB(e,[r,0],[n,1]);case 3:return aB(e,[r,1],[n,1]);case 4:return aB(e,[r,2],[n,0]);case 5:return aB(e,[r,2],[n,0],!0,!1);case 6:return aB(e,[r,0],[n,2]);case 7:return aB(e,[r,0],[n,2],!1,!0);case 8:return aB(e,[r,1],[n,2]);case 9:return aB(e,[r,1],[n,2],!1,!0);case 10:return aB(e,[r,2],[n,1]);case 11:return aB(e,[r,2],[n,1],!0,!1);case 12:return aB(e,[r,2],[n,2]);case 13:return aB(e,[r,2],[n,2],!0,!1);case 14:return aB(e,[r,2],[n,2],!1,!0);case 15:return aB(e,[r,2],[n,2],!0,!0);default:throw Error(`Unknown verb: ${t}`)}}(this.glyphs,15&t.flags,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,r){let n=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){let r=n.getItem(t.markIndex),a=new aE(r);e=this.glyphs[this.markedGlyph];var s=a.lookup(e.id);s&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(s,e.codePoints))}if(65535!==t.currentIndex){let a=n.getItem(t.currentIndex),i=new aE(a);e=this.glyphs[r];var s=i.lookup(e.id);s&&(this.glyphs[r]=this.font.getGlyph(s,e.codePoints))}32768&t.flags&&(this.markedGlyph=r)}processLigature(e,t,r){if(32768&t.flags&&this.ligatureStack.push(r),8192&t.flags){let e=this.subtable.table.ligatureActions,r=this.subtable.table.components,n=this.subtable.table.ligatureList,s=t.action,a=!1,i=0,o=[],l=[];for(;!a;){let t=this.ligatureStack.pop();o.unshift(...this.glyphs[t].codePoints);let u=e.getItem(s++);a=!!(2147483648&u);let c=!!(1073741824&u),h=(1073741823&u)<<2>>2;if(h+=this.glyphs[t].id,i+=r.getItem(h),a||c){let e=n.getItem(i);this.glyphs[t]=this.font.getGlyph(e,o),l.push(t),i=0,o=[]}else this.glyphs[t]=this.font.getGlyph(65535)}// Put ligature glyph indexes back on the stack
this.ligatureStack.push(...l)}}processNoncontextualSubstitutions(e,t,r){let n=new aE(e.table.lookupTable);for(r=0;r<t.length;r++){let e=t[r];if(65535!==e.id){let s=n.lookup(e.id);s&&(t[r]=this.font.getGlyph(s,e.codePoints))}}}_insertGlyphs(e,t,r,n){let s=[];for(;r--;){let e=this.subtable.table.insertionActions.getItem(t++);s.push(this.font.getGlyph(e))}!n&&e++,this.glyphs.splice(e,0,...s)}processGlyphInsertion(e,t,r){if(32768&t.flags&&(this.markedIndex=r),65535!==t.markedInsertIndex){let e=(31&t.flags)>>>5,r=!!(1024&t.flags);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,e,r)}if(65535!==t.currentInsertIndex){let e=(992&t.flags)>>>5,n=!!(2048&t.flags);this._insertGlyphs(r,t.currentInsertIndex,e,n)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let r of t.features)e.push([r.featureType,r.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){for(let e of(this.inputCache={},this.morx.chains)){let t=e.defaultFlags;for(let r of e.subtables)r.subFeatureFlags&t&&this.generateInputsForSubtable(r)}}generateInputsForSubtable(e){// Currently, only supporting ligature subtables.
if(2!==e.type)return;if(4194304&e.coverage)throw Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let t=this.getStateMachine(e),r=this.getProcessor(),n=[],s=[];this.glyphs=[],t.traverse({enter:(e,t)=>{let a=this.glyphs;s.push({glyphs:a.slice(),ligatureStack:this.ligatureStack.slice()});// Add glyph to input and glyphs to process.
let i=this.font.getGlyph(e);n.push(i),a.push(n[n.length-1]),// Process ligature substitution
r(a[a.length-1],t,a.length-1);// Add input to result if only one matching (non-deleted) glyph remains.
let o=0,l=0;for(let e=0;e<a.length&&o<=1;e++)65535!==a[e].id&&(o++,l=a[e].id);if(1===o){let e=n.map(e=>e.id),t=this.inputCache[l];t?t.push(e):this.inputCache[l]=[e]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=s.pop()),n.pop()}})}constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}}// swaps the glyphs in rangeA with those in rangeB
// reverse the glyphs inside those ranges if specified
// ranges are in [offset, length] format
function aB(e,t,r,n=!1,s=!1){let a=e.splice(r[0]-(r[1]-1),r[1]);s&&a.reverse();let i=e.splice(t[0],t[1],...a);return n&&i.reverse(),e.splice(r[0]-(t[1]-1),0,...i),e}tv(eU)([tB],aS.prototype,"getStateMachine",null);class aP{substitute(e){"rtl"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,function(e){let t={};for(let r in e){let n;(n=aC[r])&&(null==t[n[0]]&&(t[n[0]]={}),t[n[0]][n[1]]=e[r])}return t}(e.features))}getAvailableFeatures(e,t){return function(e){let t={};if(Array.isArray(e))for(let r=0;r<e.length;r++){let n;let s=ak(e[r]);(n=aI[s[0]]&&aI[s[0]][s[1]])&&(t[n]=!0)}else if("object"==typeof e)for(let r in e){let n=e[r];for(let e in n){let s;let a=ak([r,e]);n[e]&&(s=aI[a[0]]&&aI[a[0]][a[1]])&&(t[s]=!0)}}return Object.keys(t)}(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),r=new Set;for(let e of t)this._addStrings(e,0,r,"");return r}_addStrings(e,t,r,n){for(let s of this.font._cmapProcessor.codePointsForGlyph(e[t])){let a=n+String.fromCodePoint(s);t<e.length-1?this._addStrings(e,t+1,r,a):r.add(a)}}constructor(e){this.font=e,this.morxProcessor=new aS(e),this.fallbackPosition=!1}}class aO{/**
   * Adds the given features to the last stage.
   * Ignores features that have already been applied.
   */_addFeatures(e,t){let r=this.stages.length-1,n=this.stages[r];for(let s of e)null==this.allFeatures[s]&&(n.push(s),this.allFeatures[s]=r,t&&(this.globalFeatures[s]=!0))}/**
   * Add features to the last stage
   */add(e,t=!0){if(0===this.stages.length&&this.stages.push([]),"string"==typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else if("object"==typeof e)this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1);else throw Error("Unsupported argument to ShapingPlan#add")}/**
   * Add a new stage
   */addStage(e,t){"function"==typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if("object"==typeof e){for(let t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){let e=this.stages[this.allFeatures[t]];e.splice(e.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}}/**
   * Assigns the global features to the given glyphs
   */assignGlobalFeatures(e){for(let t of e)for(let e in this.globalFeatures)t.features[e]=!0}/**
   * Executes the planned stages using the given OTProcessor
   */process(e,t,r){for(let n of this.stages)"function"==typeof n?r||n(this.font,t,this):n.length>0&&e.applyFeatures(n,t,r)}constructor(e,t,r){this.font=e,this.script=t,this.direction=r,this.stages=[],this.globalFeatures={},this.allFeatures={}}}const aT=["rvrn"],aM=["ccmp","locl","rlig","mark","mkmk"],aF=["frac","numr","dnom"],aL=["calt","clig","liga","rclt","curs","kern"],aU={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class aG{static plan(e,t,r){// Plan the features we want to apply
this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,r),// Assign the global features to all the glyphs
e.assignGlobalFeatures(t),// Assign local features to glyphs
this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...aT,...aU[e.direction]],local:aF})}static planFeatures(e){// Do nothing by default. Let subclasses override this.
}static planPostprocessing(e,t){e.add([...aM,...aL]),e.setFeatureOverrides(t)}static assignFeatures(e,t){// Enable contextual fractions
for(let e=0;e<t.length;e++){let r=t[e];if(8260===r.codePoints[0]){let n=e,s=e+1;// Apply numerator
for(;n>0&&"Nd"===td(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;// Apply denominator
for(;s<t.length&&"Nd"===td(t[s].codePoints[0]);)t[s].features.dnom=!0,t[s].features.frac=!0,s++;// Apply fraction slash
r.features.frac=!0,e=s-1}}}}tv(eL)(aG,"zeroMarkWidths","AFTER_GPOS");const aR=new(tv(eN))(ac("ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=")),aN=["isol","fina","fin2","fin3","medi","med2","init"],az={Non_Joining:0,Transparent:6},aV="isol",aW="fina",aj="fin2",aY="medi",aH="med2",aq="init",aX=[//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
// State 0: prev was U,  not willing to join.
[[null,null,0],[null,aV,2],[null,aV,1],[null,aV,2],[null,aV,1],[null,aV,6]],// State 1: prev was R or ISOL/ALAPH,  not willing to join.
[[null,null,0],[null,aV,2],[null,aV,1],[null,aV,2],[null,aj,5],[null,aV,6]],// State 2: prev was D/L in ISOL form,  willing to join.
[[null,null,0],[null,aV,2],[aq,aW,1],[aq,aW,3],[aq,aW,4],[aq,aW,6]],// State 3: prev was D in FINA form,  willing to join.
[[null,null,0],[null,aV,2],[aY,aW,1],[aY,aW,3],[aY,aW,4],[aY,aW,6]],// State 4: prev was FINA ALAPH,  not willing to join.
[[null,null,0],[null,aV,2],[aH,aV,1],[aH,aV,2],[aH,aj,5],[aH,aV,6]],// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
[[null,null,0],[null,aV,2],[aV,aV,1],[aV,aV,2],[aV,aj,5],[aV,aV,6]],// State 6: prev was DALATH/RISH,  not willing to join.
[[null,null,0],[null,aV,2],[null,aV,1],[null,aV,2],[null,"fin3",5],[null,aV,6]]];class aZ extends aG{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<aN.length;t++){let r=aN[t];e.addStage(r,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let r=-1,n=0,s=[];// Apply the state machine to map glyphs to features
for(let e=0;e<t.length;e++){let i,o;var a=t[e];let l=function(e){let t=aR.get(e);if(t)return t-1;let r=td(e);return"Mn"===r||"Me"===r||"Cf"===r?az.Transparent:az.Non_Joining}(a.codePoints[0]);if(l===az.Transparent){s[e]=null;continue}[o,i,n]=aX[n][l],null!==o&&-1!==r&&(s[r]=o),s[e]=i,r=e}// Apply the chosen features to their respective glyphs
for(let e=0;e<t.length;e++){let r;var a=t[e];(r=s[e])&&(a.features[r]=!0)}}}class aJ{reset(e={},t=0){this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(e=1){let t=this.index,r=this.increment(e);return this.index=t,r}peekIndex(e=1){let t=this.index;this.increment(e);let r=this.index;return this.index=t,r}increment(e=1){let t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}constructor(e,t){this.glyphs=e,this.reset(t)}}const aK=["DFLT","dflt","latn"];class aQ{findScript(e){if(null==this.table.scriptList)return null;for(let t of(Array.isArray(e)||(e=[e]),e))for(let e of this.table.scriptList)if(e.tag===t)return e;return null}selectScript(e,t,r){let n,s=!1;if(!this.script||e!==this.scriptTag){if((n=this.findScript(e))||(n=this.findScript(aK)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,s=!0}if(r&&r===this.direction||(this.direction=r||ab(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){for(let e of(this.language=null,this.script.langSysRecords))if(e.tag===t){this.language=e.langSys,this.languageTag=e.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),s=!0}// Build a feature lookup table
if(s&&(this.features={},this.language))for(let e of this.language.featureIndexes){let t=this.table.featureList[e],r=this.substituteFeatureForVariations(e);this.features[t.tag]=r||t.feature}return this.scriptTag}lookupsForFeatures(e=[],t){let r=[];for(let n of e){let e=this.features[n];if(e)for(let s of e.lookupListIndexes)t&&-1!==t.indexOf(s)||r.push({feature:n,index:s,lookup:this.table.lookupList.get(s)})}return r.sort((e,t)=>e.index-t.index),r}substituteFeatureForVariations(e){if(-1===this.variationsIndex)return null;for(let t of this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions)if(t.featureIndex===e)return t.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return -1;let r=t.featureVariationRecords;for(let t=0;t<r.length;t++){let n=r[t].conditionSet.conditionTable;if(this.variationConditionsMatch(n,e))return t}return -1}variationConditionsMatch(e,t){return e.every(e=>{let r=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=r&&r<=e.filterRangeMaxValue})}applyFeatures(e,t,r){let n=this.lookupsForFeatures(e);this.applyLookups(n,t,r)}applyLookups(e,t,r){for(let{feature:n,lookup:s}of(this.glyphs=t,this.positions=r,this.glyphIterator=new aJ(t),e))for(this.currentFeature=n,this.glyphIterator.reset(s.flags);this.glyphIterator.index<t.length;){if(!(n in this.glyphIterator.cur.features)){this.glyphIterator.next();continue}for(let e of s.subTables)if(this.applyLookup(s.lookupType,e))break;this.glyphIterator.next()}}applyLookup(e,t){throw Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,r=this.glyphIterator.index;for(let n of e){// Reset flags and find glyph index for this lookup record
this.glyphIterator.reset(t,r),this.glyphIterator.increment(n.sequenceIndex);// Get the lookup and setup flags for subtables
let e=this.table.lookupList.get(n.lookupListIndex);// Apply lookup subtables until one matches
for(let t of(this.glyphIterator.reset(e.flags,this.glyphIterator.index),e.subTables))if(this.applyLookup(e.lookupType,t))break}return this.glyphIterator.reset(t,r),!0}coverageIndex(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let r of e.rangeRecords)if(r.start<=t&&t<=r.end)return r.startCoverageIndex+t-r.start}return -1}match(e,t,r,n){let s=this.glyphIterator.index,a=this.glyphIterator.increment(e),i=0;for(;i<t.length&&a&&r(t[i],a);)n&&n.push(this.glyphIterator.index),i++,a=this.glyphIterator.next();return this.glyphIterator.index=s,!(i<t.length)&&(n||!0)}sequenceMatches(e,t){return this.match(e,t,(e,t)=>e===t.id)}sequenceMatchIndices(e,t){return this.match(e,t,(e,t)=>// If the current feature doesn't apply to this glyph,
    this.currentFeature in t.features&&e===t.id,[])}coverageSequenceMatches(e,t){return this.match(e,t,(e,t)=>this.coverageIndex(e,t.id)>=0)}getClassID(e,t){switch(t.version){case 1:let r=e-t.startGlyph;if(r>=0&&r<t.classValueArray.length)return t.classValueArray[r];break;case 2:for(let r of t.classRangeRecord)if(r.start<=e&&e<=r.end)return r.class}return 0}classSequenceMatches(e,t,r){return this.match(e,t,(e,t)=>e===this.getClassID(t.id,r))}applyContext(e){let t;switch(e.version){case 1:if(-1===(t=this.coverageIndex(e.coverage)))break;for(let r of e.ruleSets[t])if(this.sequenceMatches(1,r.input))return this.applyLookupList(r.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage)||-1===(t=this.getClassID(this.glyphIterator.cur.id,e.classDef)))break;for(let r of e.classSet[t])if(this.classSequenceMatches(1,r.classes,e.classDef))return this.applyLookupList(r.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(-1===(t=this.coverageIndex(e.coverage)))break;for(let r of e.chainRuleSets[t])if(this.sequenceMatches(-r.backtrack.length,r.backtrack)&&this.sequenceMatches(1,r.input)&&this.sequenceMatches(1+r.input.length,r.lookahead))return this.applyLookupList(r.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))break;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let r=e.chainClassSet[t];if(!r)break;for(let t of r)if(this.classSequenceMatches(-t.backtrack.length,t.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,t.input,e.inputClassDef)&&this.classSequenceMatches(1+t.input.length,t.lookahead,e.lookaheadClassDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1}constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},// Setup variation substitutions
this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,// initialize to default script + language
this.selectScript(),// current context (set by applyFeatures)
this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}}class a_{get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){// TODO: clean this up
let r=aQ.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===r,this.isLigature=2===r,this.isMark=3===r,this.markAttachmentType=t.markAttachClassDef?aQ.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(tg),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new a_(this._font,this.id,this.codePoints,this.features)}constructor(e,t,r=[],n){if(this._font=e,this.codePoints=r,this.id=t,this.features={},Array.isArray(n))for(let e=0;e<n.length;e++){let t=n[e];this.features[t]=!0}else"object"==typeof n&&Object.assign(this.features,n);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}}class a$ extends aG{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let r=0,n=0;for(;n<t.length;){let s;let a=t[n].codePoints[0],i=a7(a);switch([s,r]=ia[r][i],s){case ie:// Decompose the composed syllable if it is not supported by the font.
e.font.hasGlyphForCodePoint(a)||(n=io(t,n,e.font));break;case it:// Found a decomposed syllable. Try to compose if supported by the font.
n=function(e,t,r){let n,s,a,i,o=e[t],l=a7(e[t].codePoints[0]),u=e[t-1].codePoints[0],c=a7(u);if(4===c&&3===l)// <LV,T>
n=u,i=o;else{2===l?(// <L,V>
s=e[t-1],a=o):(// <L,V,T>
s=e[t-2],a=e[t-1],i=o);let r=s.codePoints[0],u=a.codePoints[0];// Make sure L and V are combining characters
a6(r)&&a8(u)&&(n=44032+((r-4352)*21+(u-4449))*28)}let h=i&&i.codePoints[0]||4519;if(null!=n&&(4519===h||a9(h))){let s=n+(h-4519);// Replace with a composed glyph if supported by the font,
// otherwise apply the proper OpenType features to each component.
if(r.hasGlyphForCodePoint(s)){let n=2===c?3:2;return e.splice(t-n+1,n,ii(r,s,o.features)),t-n+1}}return(s&&(s.features.ljmo=!0),a&&(a.features.vjmo=!0),i&&(i.features.tjmo=!0),4===c)?(// Sequence was originally <L,V>, which got combined earlier.
// Either the T was non-combining, or the LVT glyph wasn't supported.
// Decompose the glyph again and apply OT features.
io(e,t-1,r),t+1):t}(t,n,e.font);break;case ir:// Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.
!function(e,t,r){let n=e[t],s=e[t].codePoints[0];// Move tone mark to the beginning of the previous syllable, unless it is zero width
if(0===r.glyphForCodePoint(s).advanceWidth)return;let a=function(e){switch(a7(e)){case 4:case 5:return 1;case 2:return 2;case 3:return 3}}(e[t-1].codePoints[0]);e.splice(t,1),e.splice(t-a,0,n)}(t,n,e.font);break;case is:// Tone mark has no valid syllable to attach to, so insert a dotted circle
n=function(e,t,r){let n=e[t],s=e[t].codePoints[0];if(r.hasGlyphForCodePoint(9676)){let a=ii(r,9676,n.features),i=0===r.glyphForCodePoint(s).advanceWidth?t:t+1;e.splice(i,0,a),t++}return t}(t,n,e.font)}n++}}}tv(eL)(a$,"zeroMarkWidths","NONE");const a0=e=>4352<=e&&e<=4447||43360<=e&&e<=43388,a1=e=>4448<=e&&e<=4519||55216<=e&&e<=55238,a2=e=>4520<=e&&e<=4607||55243<=e&&e<=55291,a3=e=>12334<=e&&e<=12335,a4=e=>44032<=e&&e<=55204,a5=e=>e-44032<11173&&(e-44032)%28==0,a6=e=>4352<=e&&e<=4370,a8=e=>4449<=e&&e<=4469,a9=e=>1<=e&&e<=4546;// This function classifies a character using the above categories.
function a7(e){return a0(e)?1:a1(e)?2:a2(e)?3:a5(e)?4:a4(e)?5:a3(e)?6:0}const ie=1,it=2,ir=4,is=5,ia=[//       X                 L                 V                T                  LV                LVT               M
// State 0: start state
[[0,0],[0,1],[0,0],[0,0],[ie,2],[ie,3],[is,0]],// State 1: <L>
[[0,0],[0,1],[it,2],[0,0],[ie,2],[ie,3],[is,0]],// State 2: <L,V> or <LV>
[[0,0],[0,1],[0,0],[it,3],[ie,2],[ie,3],[ir,0]],// State 3: <L,V,T> or <LVT>
[[0,0],[0,1],[0,0],[0,0],[ie,2],[ie,3],[ir,0]]];function ii(e,t,r){return new a_(e,e.glyphForCodePoint(t).id,[t],r)}function io(e,t,r){let n=e[t],s=n.codePoints[0]-44032,a=4519+s%28,i=4352+(s=s/28|0)/21|0,o=4449+s%21;// Don't decompose if all of the components are not available
if(!r.hasGlyphForCodePoint(i)||!r.hasGlyphForCodePoint(o)||4519!==a&&!r.hasGlyphForCodePoint(a))return t;// Replace the current glyph with decomposed L, V, and T glyphs,
// and apply the proper OpenType features to each component.
let l=ii(r,i,n.features);l.features.ljmo=!0;let u=ii(r,o,n.features);u.features.vjmo=!0;let c=[l,u];if(a>4519){let e=ii(r,a,n.features);e.features.tjmo=!0,c.push(e)}return e.splice(t,1,...c),t+c.length-1}var il={};il=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var iu={};iu=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');const ic={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072},ih={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},id=ic.C|ic.Ra|ic.CM|ic.V|ic.Placeholder|ic.Dotted_Circle,ip=ic.ZWJ|ic.ZWNJ,ig=ic.H|ic.Coeng,im={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:ih.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:ih.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:ih.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:ih.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:ih.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:ih.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:ih.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:ih.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:ih.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:ih.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},// Handled by UniversalShaper
// Sinhala: {
//   hasOldSpec: false,
//   virama: 0x0DCA,
//   basePos: 'Last_Sinhala',
//   rephPos: POSITIONS.After_Main,
//   rephMode: 'Explicit',
//   blwfMode: 'Pre_And_Post'
// },
Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:ih.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},iy={// Khmer
6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:ib}=/*@__PURE__*/tv(iu),iA=new(tv(eN))(ac("AAARAAAAAACgwgAAAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf")),iw=new(tv(tm))(/*@__PURE__*/tv(il));class iv extends aG{static planFeatures(e){e.addStage(ik),e.addStage(["locl","ccmp"]),e.addStage(iP),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage(iO),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),// Setup the indic config for the selected script
e.unicodeScript=am[e.script],e.indicConfig=im[e.unicodeScript]||im.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&"2"!==e.script[e.script.length-1];// TODO: turn off kern (Khmer) and liga features.
}static assignFeatures(e,t){// Decompose split matras
// TODO: do this in a more general unicode normalizer
for(let r=t.length-1;r>=0;r--){let n=t[r].codePoints[0],s=iy[n]||ib[n];if(s){let n=s.map(n=>{let s=e.font.glyphForCodePoint(n);return new a_(e.font,s.id,[n],t[r].features)});t.splice(r,1,...n)}}}}function ix(e){return iA.get(e.codePoints[0])>>8}function iC(e){return 1<<(255&iA.get(e.codePoints[0]))}tv(eL)(iv,"zeroMarkWidths","NONE");class iI{constructor(e,t,r,n){this.category=e,this.position=t,this.syllableType=r,this.syllable=n}}function ik(e,t){let r=0,n=0;for(let[e,s,a]of iw.match(t.map(ix))){if(e>n){++r;for(let s=n;s<e;s++)t[s].shaperInfo=new iI(ic.X,ih.End,"non_indic_cluster",r)}++r;// Create shaper info
for(let n=e;n<=s;n++)t[n].shaperInfo=new iI(1<<ix(t[n]),iC(t[n]),a[0],r);n=s+1}if(n<t.length){++r;for(let e=n;e<t.length;e++)t[e].shaperInfo=new iI(ic.X,ih.End,"non_indic_cluster",r)}}function iE(e){return e.shaperInfo.category&id}function iD(e){return e.shaperInfo.category&ip}function iS(e){return e.shaperInfo.category&ig}function iB(e,t){for(let r of e)r.features={[t]:!0};return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function iP(e,t,r){let n=r.indicConfig,s=e._layoutEngine.engine.GSUBProcessor.features,a=e.glyphForCodePoint(9676).id,i=e.glyphForCodePoint(n.virama).id;if(i){let r=new a_(e,i,[n.virama]);for(let e=0;e<t.length;e++)t[e].shaperInfo.position===ih.Base_C&&(t[e].shaperInfo.position=function(e,t,r){let n=[r,t,r];return iB(n.slice(0,2),"blwf")||iB(n.slice(1,3),"blwf")?ih.Below_C:iB(n.slice(0,2),"pstf")||iB(n.slice(1,3),"pstf")||iB(n.slice(0,2),"pref")||iB(n.slice(1,3),"pref")?ih.Post_C:ih.Base_C}(0,t[e].copy(),r))}for(let i=0,o=iT(t,0);i<t.length;o=iT(t,i=o)){let{category:l,syllableType:u}=t[i].shaperInfo;if("symbol_cluster"===u||"non_indic_cluster"===u)continue;if("broken_cluster"===u&&a){let r=new a_(e,a,[9676]);r.shaperInfo=new iI(1<<ix(r),iC(r),t[i].shaperInfo.syllableType,t[i].shaperInfo.syllable);// Insert after possible Repha.
let n=i;for(;n<o&&t[n].shaperInfo.category===ic.Repha;)n++;t.splice(n++,0,r),o++}// 1. Find base consonant:
//
// The shaping engine finds the base consonant of the syllable, using the
// following algorithm: starting from the end of the syllable, move backwards
// until a consonant is found that does not have a below-base or post-base
// form (post-base forms have to follow below-base forms), or that is not a
// pre-base reordering Ra, or arrive at the first consonant. The consonant
// stopped at will be the base.
let c=o,h=i,f=!1;// If the syllable starts with Ra + Halant (in a script that has Reph)
// and has more than one consonant, Ra is excluded from candidates for
// base consonants.
if(n.rephPos!==ih.Ra_To_Become_Reph&&s.rphf&&i+3<=o&&("Implicit"===n.rephMode&&!iD(t[i+2])||"Explicit"===n.rephMode&&t[i+2].shaperInfo.category===ic.ZWJ)){// See if it matches the 'rphf' feature.
let e=[t[i].copy(),t[i+1].copy(),t[i+2].copy()];if(iB(e.slice(0,2),"rphf")||"Explicit"===n.rephMode&&iB(e,"rphf")){for(h+=2;h<o&&iD(t[h]);)h++;c=i,f=!0}}else if("Log_Repha"===n.rephMode&&t[i].shaperInfo.category===ic.Repha){for(h++;h<o&&iD(t[h]);)h++;c=i,f=!0}switch(n.basePos){case"Last":{// starting from the end of the syllable, move backwards
let e=o,r=!1;do{let n=t[--e].shaperInfo;// until a consonant is found
if(iE(t[e])){// that does not have a below-base or post-base form
// (post-base forms have to follow below-base forms),
if(n.position!==ih.Below_C&&(n.position!==ih.Post_C||r)){c=e;break}n.position===ih.Below_C&&(r=!0),c=e}else if(i<e&&n.category===ic.ZWJ&&t[e-1].shaperInfo.category===ic.H)break}while(e>h)break}case"First":// The first consonant is always the base.
c=i;// Mark all subsequent consonants as below.
for(let e=c+1;e<o;e++)iE(t[e])&&(t[e].shaperInfo.position=ih.Below_C)}f&&c===i&&h-c<=2&&(f=!1);// 2. Decompose and reorder Matras:
//
// Each matra and any syllable modifier sign in the cluster are moved to the
// appropriate position relative to the consonant(s) in the cluster. The
// shaping engine decomposes two- or three-part matras into their constituent
// parts before any repositioning. Matra characters are classified by which
// consonant in a conjunct they have affinity for and are reordered to the
// following positions:
//
//   o Before first half form in the syllable
//   o After subjoined consonants
//   o After post-form consonant
//   o After main consonant (for above marks)
//
// IMPLEMENTATION NOTES:
//
// The normalize() routine has already decomposed matras for us, so we don't
// need to worry about that.
// 3.  Reorder marks to canonical order:
//
// Adjacent nukta and halant or nukta and vedic sign are always repositioned
// if necessary, so that the nukta is first.
//
// IMPLEMENTATION NOTES:
//
// We don't need to do this: the normalize() routine already did this for us.
// Reorder characters
for(let e=i;e<c;e++){let r=t[e].shaperInfo;r.position=Math.min(ih.Pre_C,r.position)}c<o&&(t[c].shaperInfo.position=ih.Base_C);// Mark final consonants.  A final consonant is one appearing after a matra,
// like in Khmer.
for(let e=c+1;e<o;e++)if(t[e].shaperInfo.category===ic.M){for(let r=e+1;r<o;r++)if(iE(t[r])){t[r].shaperInfo.position=ih.Final_C;break}break}// For old-style Indic script tags, move the first post-base Halant after
// last consonant.
//
// Reports suggest that in some scripts Uniscribe does this only if there
// is *not* a Halant after last consonant already (eg. Kannada), while it
// does it unconditionally in other scripts (eg. Malayalam).  We don't
// currently know about other scripts, so we single out Malayalam for now.
//
// Kannada test case:
// U+0C9A,U+0CCD,U+0C9A,U+0CCD
// With some versions of Lohit Kannada.
// https://bugs.freedesktop.org/show_bug.cgi?id=59118
//
// Malayalam test case:
// U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D
// With lohit-ttf-20121122/Lohit-Malayalam.ttf
if(f&&(t[i].shaperInfo.position=ih.Ra_To_Become_Reph),r.isOldSpec){let e="Malayalam"!==r.unicodeScript;for(let r=c+1;r<o;r++)if(t[r].shaperInfo.category===ic.H){let n;for(n=o-1;n>r&&!iE(t[n])&&(!e||t[n].shaperInfo.category!==ic.H);n--);if(t[n].shaperInfo.category!==ic.H&&n>r){// Move Halant to after last consonant.
let e=t[r];t.splice(r,0,...t.splice(r+1,n-r)),t[n]=e}break}}// Attach misc marks to previous char to move with them.
let d=ih.Start;for(let e=i;e<o;e++){let r=t[e].shaperInfo;if(r.category&(ip|ic.N|ic.RS|ic.CM|ig&r.category)){if(r.position=d,r.category===ic.H&&r.position===ih.Pre_M)// Uniscribe doesn't move the Halant with Left Matra.
// TEST: U+092B,U+093F,U+094DE
// We follow.  This is important for the Sinhala
// U+0DDA split matra since it decomposes to U+0DD9,U+0DCA
// where U+0DD9 is a left matra and U+0DCA is the virama.
// We don't want to move the virama with the left matra.
// TEST: U+0D9A,U+0DDA
{for(let n=e;n>i;n--)if(t[n-1].shaperInfo.position!==ih.Pre_M){r.position=t[n-1].shaperInfo.position;break}}}else r.position!==ih.SMVD&&(d=r.position)}// For post-base consonants let them own anything before them
// since the last consonant or matra.
let p=c;for(let e=c+1;e<o;e++)if(iE(t[e])){for(let r=p+1;r<e;r++)t[r].shaperInfo.position<ih.SMVD&&(t[r].shaperInfo.position=t[e].shaperInfo.position);p=e}else t[e].shaperInfo.category===ic.M&&(p=e);let g=t.slice(i,o);g.sort((e,t)=>e.shaperInfo.position-t.shaperInfo.position),t.splice(i,g.length,...g);// Find base again
for(let e=i;e<o;e++)if(t[e].shaperInfo.position===ih.Base_C){c=e;break}// Setup features now
// Reph
for(let e=i;e<o&&t[e].shaperInfo.position===ih.Ra_To_Become_Reph;e++)t[e].features.rphf=!0;// Pre-base
let m=!r.isOldSpec&&"Pre_And_Post"===n.blwfMode;for(let e=i;e<c;e++)t[e].features.half=!0,m&&(t[e].features.blwf=!0);// Post-base
for(let e=c+1;e<o;e++)t[e].features.abvf=!0,t[e].features.pstf=!0,t[e].features.blwf=!0;if(r.isOldSpec&&"Devanagari"===r.unicodeScript)// Old-spec eye-lash Ra needs special handling.  From the
// spec:
//
// "The feature 'below-base form' is applied to consonants
// having below-base forms and following the base consonant.
// The exception is vattu, which may appear below half forms
// as well as below the base glyph. The feature 'below-base
// form' will be applied to all such occurrences of Ra as well."
//
// Test case: U+0924,U+094D,U+0930,U+094d,U+0915
// with Sanskrit 2003 font.
//
// However, note that Ra,Halant,ZWJ is the correct way to
// request eyelash form of Ra, so we wouldbn't inhibit it
// in that sequence.
//
// Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915
for(let e=i;e+1<c;e++)t[e].shaperInfo.category===ic.Ra&&t[e+1].shaperInfo.category===ic.H&&(e+1===c||t[e+2].shaperInfo.category===ic.ZWJ)&&(t[e].features.blwf=!0,t[e+1].features.blwf=!0);if(s.pref&&c+2<o){for(let e=c+1;e+2-1<o;e++)if(iB([t[e].copy(),t[e+1].copy()],"pref")){for(let r=0;r<2;r++)t[e++].features.pref=!0;// Mark the subsequent stuff with 'cfar'.  Used in Khmer.
// Read the feature spec.
// This allows distinguishing the following cases with MS Khmer fonts:
// U+1784,U+17D2,U+179A,U+17D2,U+1782
// U+1784,U+17D2,U+1782,U+17D2,U+179A
if(s.cfar)for(;e<o;e++)t[e].features.cfar=!0;break}}// Apply ZWJ/ZWNJ effects
for(let e=i+1;e<o;e++)if(iD(t[e])){let r=t[e].shaperInfo.category===ic.ZWNJ,n=e;do n--,r&&delete t[n].features.half;while(n>i&&!iE(t[n]))}}}function iO(e,t,r){let n=r.indicConfig,s=e._layoutEngine.engine.GSUBProcessor.features;for(let e=0,a=iT(t,0);e<t.length;a=iT(t,e=a)){// 4. Final reordering:
//
// After the localized forms and basic shaping forms GSUB features have been
// applied (see below), the shaping engine performs some final glyph
// reordering before applying all the remaining font features to the entire
// cluster.
let i=!!s.pref,o=e;for(;o<a;o++)if(t[o].shaperInfo.position>=ih.Base_C){if(i&&o+1<a){for(let e=o+1;e<a;e++)if(t[e].features.pref){if(!(t[e].substituted&&t[e].isLigated&&!t[e].isMultiplied)){for(// Ok, this was a 'pref' candidate but didn't form any.
// Base is around here...
o=e;o<a&&iS(t[o]);)o++;t[o].shaperInfo.position=ih.BASE_C,i=!1}break}}// For Malayalam, skip over unformed below- (but NOT post-) forms.
if("Malayalam"===r.unicodeScript)for(let e=o+1;e<a;e++){for(;e<a&&iD(t[e]);)e++;if(e===a||!iS(t[e]))break;for(e++;e<a&&iD(t[e]);)e++;e<a&&iE(t[e])&&t[e].shaperInfo.position===ih.Below_C&&(t[o=e].shaperInfo.position=ih.Base_C)}e<o&&t[o].shaperInfo.position>ih.Base_C&&o--;break}if(o===a&&e<o&&t[o-1].shaperInfo.category===ic.ZWJ&&o--,o<a)for(;e<o&&t[o].shaperInfo.category&(ic.N|ig);)o--;// o Reorder matras:
//
// If a pre-base matra character had been reordered before applying basic
// features, the glyph can be moved closer to the main consonant based on
// whether half-forms had been formed. Actual position for the matra is
// defined as “after last standalone halant glyph, after initial matra
// position and before the main consonant”. If ZWJ or ZWNJ follow this
// halant, position is moved after it.
//
if(e+1<a&&e<o){// If we lost track of base, alas, position before last thingy.
let n=o===a?o-2:o-1;// Malayalam / Tamil do not have "half" forms or explicit virama forms.
// The glyphs formed by 'half' are Chillus or ligated explicit viramas.
// We want to position matra after them.
if("Malayalam"!==r.unicodeScript&&"Tamil"!==r.unicodeScript){for(;n>e&&!(t[n].shaperInfo.category&(ic.M|ig));)n--;// If we found no Halant we are done.
// Otherwise only proceed if the Halant does
// not belong to the Matra itself!
iS(t[n])&&t[n].shaperInfo.position!==ih.Pre_M?n+1<a&&iD(t[n+1])&&n++:n=e;// No move.
}if(e<n&&t[n].shaperInfo.position!==ih.Pre_M)// Now go see if there's actually any matras...
{for(let r=n;r>e;r--)if(t[r-1].shaperInfo.position===ih.Pre_M){let e=r-1;e<o&&o<=n&&o--;let s=t[e];t.splice(e,0,...t.splice(e+1,n-e)),t[n]=s,n--}}}// o Reorder reph:
//
// Reph’s original position is always at the beginning of the syllable,
// (i.e. it is not reordered at the character reordering stage). However,
// it will be reordered according to the basic-forms shaping results.
// Possible positions for reph, depending on the script, are; after main,
// before post-base consonant forms, and after post-base consonant forms.
// Two cases:
//
// - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then
//   we should only move it if the sequence ligated to the repha form.
//
// - If repha is encoded separately and in the logical position, we should only
//   move it if it did NOT ligate.  If it ligated, it's probably the font trying
//   to make it work without the reordering.
if(e+1<a&&t[e].shaperInfo.position===ih.Ra_To_Become_Reph&&t[e].shaperInfo.category===ic.Repha!==(t[e].isLigated&&!t[e].isMultiplied)){let r;let s=n.rephPos,i=!1;// 1. If reph should be positioned after post-base consonant forms,
//    proceed to step 5.
if(s!==ih.After_Post){for(//  2. If the reph repositioning class is not after post-base: target
//     position is after the first explicit halant glyph between the
//     first post-reph consonant and last main consonant. If ZWJ or ZWNJ
//     are following this halant, position is moved after it. If such
//     position is found, this is the target position. Otherwise,
//     proceed to the next step.
//
//     Note: in old-implementation fonts, where classifications were
//     fixed in shaping engine, there was no case where reph position
//     will be found on this step.
r=e+1;r<o&&!iS(t[r]);)r++;// 3. If reph should be repositioned after the main consonant: find the
//    first consonant not ligated with main, or find the first
//    consonant that is not a potential pre-base reordering Ra.
if(r<o&&iS(t[r])&&(r+1<o&&iD(t[r+1])&&r++,i=!0),!i&&s===ih.After_Main){for(r=o;r+1<a&&t[r+1].shaperInfo.position<=ih.After_Main;)r++;i=r<a}// 4. If reph should be positioned before post-base consonant, find
//    first post-base classified consonant not ligated with main. If no
//    consonant is found, the target position should be before the
//    first matra, syllable modifier sign or vedic sign.
//
// This is our take on what step 4 is trying to say (and failing, BADLY).
if(!i&&s===ih.After_Sub){for(r=o;r+1<a&&!(t[r+1].shaperInfo.position&(ih.Post_C|ih.After_Post|ih.SMVD));)r++;i=r<a}}//  5. If no consonant is found in steps 3 or 4, move reph to a position
//     immediately before the first post-base matra, syllable modifier
//     sign or vedic sign that has a reordering class after the intended
//     reph position. For example, if the reordering position for reph
//     is post-main, it will skip above-base matras that also have a
//     post-main position.
if(!i){for(// Copied from step 2.
r=e+1;r<o&&!iS(t[r]);)r++;r<o&&iS(t[r])&&(r+1<o&&iD(t[r+1])&&r++,i=!0)}// 6. Otherwise, reorder reph to the end of the syllable.
if(!i){for(r=a-1;r>e&&t[r].shaperInfo.position===ih.SMVD;)r--;// If the Reph is to be ending up after a Matra,Halant sequence,
// position it before that Halant so it can interact with the Matra.
// However, if it's a plain Consonant,Halant we shouldn't do that.
// Uniscribe doesn't do this.
// TEST: U+0930,U+094D,U+0915,U+094B,U+094D
if(iS(t[r]))for(let e=o+1;e<r;e++)t[e].shaperInfo.category===ic.M&&r--}let l=t[e];t.splice(e,0,...t.splice(e+1,r-e)),t[r]=l,e<o&&o<=r&&o--}// o Reorder pre-base reordering consonants:
//
// If a pre-base reordering consonant is found, reorder it according to
// the following rules:
if(i&&o+1<a){for(let n=o+1;n<a;n++)if(t[n].features.pref){// 1. Only reorder a glyph produced by substitution during application
//    of the <pref> feature. (Note that a font may shape a Ra consonant with
//    the feature generally but block it in certain contexts.)
// Note: We just check that something got substituted.  We don't check that
// the <pref> feature actually did it...
//
// Reorder pref only if it ligated.
if(t[n].isLigated&&!t[n].isMultiplied){// 2. Try to find a target position the same way as for pre-base matra.
//    If it is found, reorder pre-base consonant glyph.
//
// 3. If position is not found, reorder immediately before main
//    consonant.
let s=o;// Malayalam / Tamil do not have "half" forms or explicit virama forms.
// The glyphs formed by 'half' are Chillus or ligated explicit viramas.
// We want to position matra after them.
if("Malayalam"!==r.unicodeScript&&"Tamil"!==r.unicodeScript){for(;s>e&&!(t[s-1].shaperInfo.category&(ic.M|ig));)s--;// In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a
// split matra, it should be reordered to *before* the left part of such matra.
if(s>e&&t[s-1].shaperInfo.category===ic.M){let e=n;for(let r=o+1;r<e;r++)if(t[r].shaperInfo.category===ic.M){s--;break}}}s>e&&iS(t[s-1])&&s<a&&iD(t[s])&&s++;let i=n,l=t[i];t.splice(s+1,0,...t.splice(s,i-s)),t[s]=l,s<=o&&o<i&&o++}break}}t[e].shaperInfo.position!==ih.Pre_M||e&&/Cf|Mn/.test(td(t[e-1].codePoints[0]))||(t[e].features.init=!0)}}function iT(e,t){if(t>=e.length)return t;let r=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}const{categories:iM,decompositions:iF}=/*@__PURE__*/tv(iu),iL=new(tv(eN))(ac("AAACAAAAAADQqQAAAVEMrvPtnH+oHUcVx+fd99799W5e8mx+9NkYm7YUI2KtimkVDG3FWgVTFY1Fqa2VJirYB0IaUFLBaKGJViXir6oxKCSBoi0UTKtg2yA26h+milYNtMH+0WK1VQyvtBS/487hnncyMzuzu7N7n7kHPszu7OzMmTNzdmdmfzzfUmpiUqkemAMbwSZwKbjcxM1XEL4VvB28G3zAk+56cLMlfgdYADvBbvBF8GWwH9xl+CFLfwj8BPwU/MKS38/AMfA86v9ro9ucQcdR+CjCP4CT4EnwDPg3eAFMTik1A+bAPNgINoFLwGawZSpLfzXCrWAb+AjYDm4BO8FusAfsA/vBXeAgOALuNfv3g4fAcXACPAaeAE+B58Bp8NJUpnN7WqlZsHY629+A8GLwWvAG8BZwJXinOf5ehB8EN4AdYGE6q7dmF9uugs8hvz0V58nZK/L+Kva/BX4ADoN7prP6HgUPgkfA73L0eQzHnwBPgX+Y80+DF8FUW6lBO4tbjXA9uAi8pj3sS2/E9mawBVwNtoJt5pzrTXgzwk+B7awP7sT+7nY6WxFfQBlfAl8H3wU/Anezcu/D9s/BMRN3HOEJ8EdwMkC/J5HmmXZmq2fBIjgEVEepbieLX4Fw0MnSrzRxmrVsm7MB8ReDV4vjr3ekJy7rZGVPMb196Xm6oug83oRyt4CrwDVgK9gGPtzxn3uTOD6YPDPNJ5Hm0+AznazffJ7Z4KSnXncg3VfAN8EBhx42/z/UGdbrx52sr9yH8AFTrt5+2GzfnWPbKuw7ZszZyNh/xowZM2bMmDFjxsQyZ5lPNs3h9nBNYHuAfr9ic9ffiHnsJzznU91/j3P+2snWYf6G8O/gn+A0eMnEt7vQp5ulX4NwHmwEm7rZ8UsRXg6uMPvXIHwPuK7rLl+nu9FzfMyYMWPGpGVuslmarv+YMWPSkNq/d2D8uNDNngvdivA2y3jy9m72bF9v3ymOf2MExp8fG2TsAcfA2wJYBJetWBq3i+0fwPafwLmzSl0LFmZNPMLHZ4fpnsX2AdjgcXB+T6kPge+AG7D/vXYW/tLsc9r9M+MkVyLNR1m6g9g+ZfYvmMExcHCm+ftP0+T5y/e17Uw/PYLwHnC0m80TH+zG30/3mjSDnPS2/B4pUJ4rX3n+b5H3o92l6UjfvZ7y/oJzToGnu8O66XTPYf8/Jr8XWL6TPXf9bPnHtmVs+89AnxVgDVgPLgKvAg+Y/F6H7c1gC7jKHH8XeJ/x15vAjt4wvwVs7wKfBXvAPvA18G1wsJevj36f5gjS3etIq+ft9+PYQ73h/nFsn2D7f+5l75bo/VPYftpTblFb2/Jo2pdjfL0uXOX/qxfnp8vZVk2Xv9hbmu+LxvYt3A/7/WZsPoptPkr9bdCv1ya+d4TuMO8Tre5n4XkILwSbzP4l/WHazX1//r2O/z7cFHnvSYW8R/Vm02ZXIHxHze1Xdf9bbn7p0z2kDroNr2X9WL+7937sX9fP+v9h9n6jTrfI3jG9EfsfN3G35PR/G4uRfY3eMTwdkFa/C3hrf2kcfy/xYTOmprrfZsLbEe7rDPW/U9Rrv9k/ahmTL0cWWxP/YxRkgtES+zwNhZPs+FQgMj/liEsto2HxsZBQX2pZoLZqWc5riXDaQBLSt1L3hcnE+Vct7aYVKCEhbXk2+b7NZ84mmXAwCiL14Ne85S62MYPcXi5StM/YxlJF2lfabznZsC6/C807xvZV+yFve9d1KY//d3HNO8pKUXuTDh0Gpp7B852q6QFMgdWM2dfbAxOuEPQEfcEsO5fquJLZrMfyCtWP0heZF6oSdiH9u4aQvJRIJ/eL6BBynItLp5D2JRkY5L5u3xAf6lviXHWSZcfaKO/+5zvO/c9Xtq8uRXSObd+8bS0zJrS1rxTyX7k/a0nrk5D+mHeOC90uq1Q216X57lykfqHt62uTGJ2rat+i/kttyq/RSi29PlclZf2Xxq55ZeSV34T96d5X5PqZJ9I3ZX2lnkXt3xL1Kyrav/LutbZ6uGxuS6ss6V3pXOXY4kP7EBfyJT7+4TJQS9uf74f6n+3+6ZIi9bCtieatFfCxUMx4KMYfy/pzrB30vm88q9SZ11K+n9eeNN612UFKWX8uI9TmRca7TbWvKy2JvF6naF+b/0uRupZp35cZikhZvyniY2R/CbdB3vXynIC6hbRBHf4l1xps6w4x/lVEtxRtGZMuRA8uNh/jfYV8kdpsBUszcODrD7E2JT2KrB3V6XMhbdNjcXItxzaOJWkpf976/I5glQn1sbLP86U9FQvz4l0S28/lcWUJbbrE2l+Z/TlHvi4/kvZXLMyrmy1PW7x8hl6UFgvlmNM1Jq3aJ3Se0yJcpdwS6mOp/ZgLX5N1rdFKaIzH9ztquMbqq+/qCFRk+hRoyZvrTHuO8fNd/djmEzZJ3TdisN1bNQNl7y96DV/3mVkTtwasVdk1ai6ybGlDek8nT1fXc4M5tVSPvhqOsWQeXQs8L1n3IradU8OxCeVjK7dr7Dpl0cMHnUvt18TzfVsfb/pZY56fV2GnVPVIYaOi9xcZJ8cmKcu3wcuPsVHV5cdKFfZXNZefp5sWft+wzR1cczKCxh99NRx76HvwOpWNv6YZtAajt6WPyPswtVVs/VOJ7xpYx3VR31er7gMxNuV9Q443CDlW43KuYSXblsybfKYt58trfez7A1X7Tdm+V7TcoudL+LpVGf2khN63U5OyD5Af0NoUv06l7Jc0Rte+so4xL9Ayy3Rz+SufY5Jf267xcm7J4dd3kumIOrmk7Pl549bUY1puI91Gdb8Tpu+9tjmhXFdwtfVsTv5SQvXKW0cK4eXgPBO6iJ07NNVOHH7/tF1jyJdnWbrU/Uau3VNI156QZ2ZaZFu76i6vQXy9YJ2H9QZ97aF3p1xlx1yfuYRcd0Kl7NyaX190+pUOKI0tvus5j7/nSWKLo3FER8R3LHEx8gqwge1POgi1l1yfirV3zHpISHxs3vLeFXOellcG1DFGbGP00PPkeKEOaXIsqhzbruOh9Qk5L08nW2grJ0avsvWocv0zRh/fGCG0TV35hB4v0rds5Vddjm/sFCKx+aXSt2yalPZsolxXW46CDnXp0YQ0rdso9OUYPSYT6+yzuxxzlrVfFfavQ/LKqsP+dbVzE/0qRb8pKin6V9U6Fnn24pqHufLMWy90nV+0DkXmcrb0Uq+6pU7/qcs/67SHTeTaaBk9ipyXQvLqW1U7uPKpux/ESlP9umydR8H3UjzHoXxj0/J1Yr5ubHsPrWOJqxK+hk5r+EVtH3pe1XWIXa+1vQ9YJ/oZre1bGReh3xKWeX7BxfYstwh5errGJi59be8482cSsfUPQT4Xlc9K+XMmatcY0fo2+SxYQs/4XO8M03Ng/TxujYH+FRELSdH+6mtveu8itb1Cy7C9X8GfsVOcfN86RHg56wJ0ob5qOz/E/rIdq7YhF34/0cfoeWKVftJjIbWDbDfXeXR/prBOKWJ/3dd43+sr+32TvgEIEZ6/7Zt5/l7ghMm77u+ey4gcz5xfktA5vE9C5vy2Y3lpXeX40tHcLMX42qZHS/ltZluXiSlDxillt3VdIvufbc0j75wy5aWaOxWRUZmfl5nDSh3LzoWbXJOg8uumKkndp1PnH2IPfe+U33z7vjWhdPQuWMh4raqxWMh9X89RZtSZ7/JpyXs3NWQcETN3CZHU/lmVnstZB1+ZfM5A/1VJ2V9t8wTXN1S+f27mzaulbCxJHePwC1Tz/0K1/VdPvtOsba+vL7ZxM1/jakJ/V9/yfdtNx+i7bhVRRll/rrK+sk3qLt/3T0afH+tzz1HDfxzZ/HlGDduK1y/GL21zvKptQGWFSpVlFm0z+ZxD/vdAt9EqQ971NkRHW7qytog53+cfVfeFGLStfddfYka5x6dl+yi//4z6/559aUn4/+/k2pv8BqfM/0qVCnu+If2OJPRZUcyzJF/5RQm5xtM9ln+LRN+8U9+iMQS1Veg9q2z/TlV3Ett3/rLOIXOookidy/5X3GYD+S8a1z2e0vH695T9vhEqdbY//0dU3jWZ2rYq/cvCRT8r08/NLlT5/zySdSurv1ybLiup5tAp5+NNzfPJ5r61warapajItfTQNeK610/rWEMPyb+uOo/ierRNbGU01Z+rqneIPWNsT9t1rD+OYr8rm0eKvp/Ch1P4Yepyy+hWVD/f+VWXX5X+TZdfZZ+KLb9J+S8=")),iU=new(tv(tm))(/*@__PURE__*/tv(iu));class iG extends aG{static planFeatures(e){e.addStage(iz),// Default glyph pre-processing group
e.addStage(["locl","ccmp","nukt","akhn"]),// Reordering group
e.addStage(iV),e.addStage(["rphf"],!1),e.addStage(iW),e.addStage(iV),e.addStage(["pref"]),e.addStage(ij),// Orthographic unit shaping group
e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage(iY),// Topographical features
// Scripts that need this are handled by the Arabic shaper, not implemented here for now.
// plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);
// Standard topographic presentation and positional feature application
e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){// Decompose split vowels
// TODO: do this in a more general unicode normalizer
for(let r=t.length-1;r>=0;r--){let n=t[r].codePoints[0];if(iF[n]){let s=iF[n].map(n=>{let s=e.font.glyphForCodePoint(n);return new a_(e.font,s.id,[n],t[r].features)});t.splice(r,1,...s)}}}}function iR(e){return iL.get(e.codePoints[0])}tv(eL)(iG,"zeroMarkWidths","BEFORE_GPOS");class iN{constructor(e,t,r){this.category=e,this.syllableType=t,this.syllable=r}}function iz(e,t){let r=0;for(let[e,n,s]of iU.match(t.map(iR))){++r;// Create shaper info
for(let a=e;a<=n;a++)t[a].shaperInfo=new iN(iM[iR(t[a])],s[0],r);// Assign rphf feature
let a="R"===t[e].shaperInfo.category?1:Math.min(3,n-e);for(let r=e;r<e+a;r++)t[r].features.rphf=!0}}function iV(e,t){for(let e of t)e.substituted=!1}function iW(e,t){for(let e of t)e.substituted&&e.features.rphf&&(e.shaperInfo.category="R")}function ij(e,t){for(let e of t)e.substituted&&(e.shaperInfo.category="VPre")}function iY(e,t){let r=e.glyphForCodePoint(9676).id;for(let n=0,s=iH(t,0);n<t.length;s=iH(t,n=s)){let a,i;let o=t[n].shaperInfo,l=o.syllableType;// Only a few syllable types need reordering.
if("virama_terminated_cluster"===l||"standard_cluster"===l||"broken_cluster"===l){// Insert a dotted circle glyph in broken clusters.
if("broken_cluster"===l&&r){let i=new a_(e,r,[9676]);// Insert after possible Repha.
for(i.shaperInfo=o,a=n;a<s&&"R"===t[a].shaperInfo.category;a++);t.splice(++a,0,i),s++}// Move things forward.
if("R"===o.category&&s-n>1){for(a=n+1;a<s;a++)if(iX(o=t[a].shaperInfo)||iq(t[a])){iq(t[a])&&a--,t.splice(n,0,...t.splice(n+1,a-n),t[a]);break}}// Move things back.
for(a=n,i=s;a<s;a++)iX(o=t[a].shaperInfo)||iq(t[a])?i=iq(t[a])?a+1:a:("VPre"===o.category||"VMPre"===o.category)&&i<a&&t.splice(i,1,t[a],...t.splice(i,a-i))}}}function iH(e,t){if(t>=e.length)return t;let r=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}function iq(e){return"H"===e.shaperInfo.category&&!e.isLigated}function iX(e){return"B"===e.category||"GB"===e.category}const iZ={arab:aZ,mong:aZ,syrc:aZ,"nko ":aZ,phag:aZ,mand:aZ,mani:aZ,phlp:aZ,hang:a$,bng2:iv,beng:iv,dev2:iv,deva:iv,gjr2:iv,gujr:iv,guru:iv,gur2:iv,knda:iv,knd2:iv,mlm2:iv,mlym:iv,ory2:iv,orya:iv,taml:iv,tml2:iv,telu:iv,tel2:iv,khmr:iv,bali:iG,batk:iG,brah:iG,bugi:iG,buhd:iG,cakm:iG,cham:iG,dupl:iG,egyp:iG,gran:iG,hano:iG,java:iG,kthi:iG,kali:iG,khar:iG,khoj:iG,sind:iG,lepc:iG,limb:iG,mahj:iG,// mand: UniversalShaper, // Mandaic
// mani: UniversalShaper, // Manichaean
mtei:iG,modi:iG,// mong: UniversalShaper, // Mongolian
// 'nko ': UniversalShaper, // N’Ko
hmng:iG,// phag: UniversalShaper, // Phags-pa
// phlp: UniversalShaper, // Psalter Pahlavi
rjng:iG,saur:iG,shrd:iG,sidd:iG,sinh:iv,sund:iG,sylo:iG,tglg:iG,tagb:iG,tale:iG,lana:iG,tavt:iG,takr:iG,tibt:iG,tfng:iG,tirh:iG,latn:aG,DFLT:aG// Default
};class iJ extends aQ{applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;let r=this.glyphIterator.cur;switch(t.version){case 1:r.id=r.id+t.deltaGlyphID&65535;break;case 2:r.id=t.substitute.get(e)}return!0}case 2:{let e=this.coverageIndex(t.coverage);if(-1!==e){let r=t.sequences.get(e);if(0===r.length)return(// If the sequence length is zero, delete the glyph.
// The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.
this.glyphs.splice(this.glyphIterator.index,1),!0);this.glyphIterator.cur.id=r[0],this.glyphIterator.cur.ligatureComponent=0;let n=this.glyphIterator.cur.features,s=this.glyphIterator.cur,a=r.slice(1).map((e,t)=>{let r=new a_(this.font,e,void 0,n);return r.shaperInfo=s.shaperInfo,r.isLigated=s.isLigated,r.ligatureComponent=t+1,r.substituted=!0,r.isMultiplied=!0,r});return this.glyphs.splice(this.glyphIterator.index+1,0,...a),!0}return!1}case 3:{let e=this.coverageIndex(t.coverage);if(-1!==e)return this.glyphIterator.cur.id=t.alternateSet.get(e)[0],!0;return!1}case 4:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(let n of t.ligatureSets.get(e)){let e=this.sequenceMatchIndices(1,n.components);if(!e)continue;let t=this.glyphIterator.cur,s=t.codePoints.slice();for(let t of e)s.push(...this.glyphs[t].codePoints);// Create the replacement ligature glyph
let a=new a_(this.font,n.glyph,s,t.features);a.shaperInfo=t.shaperInfo,a.isLigated=!0,a.substituted=!0;// From Harfbuzz:
// - If it *is* a mark ligature, we don't allocate a new ligature id, and leave
//   the ligature to keep its old ligature id.  This will allow it to attach to
//   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,
//   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a
//   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature
//   later, we don't want them to lose their ligature id/component, otherwise
//   GPOS will fail to correctly position the mark ligature on top of the
//   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343
//
// - If a ligature is formed of components that some of which are also ligatures
//   themselves, and those ligature components had marks attached to *their*
//   components, we have to attach the marks to the new ligature component
//   positions!  Now *that*'s tricky!  And these marks may be following the
//   last component of the whole sequence, so we should loop forward looking
//   for them and update them.
//
//   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a
//   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature
//   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature
//   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to
//   the new ligature with a component value of 2.
//
//   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633
let i=t.isMark;for(let t=0;t<e.length&&i;t++)i=this.glyphs[e[t]].isMark;a.ligatureID=i?null:this.ligatureID++;let o=t.ligatureID,l=t.codePoints.length,u=l,c=this.glyphIterator.index+1;// Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.
// This allows GPOS to attach marks to the correct ligature components.
for(let t of e){// Don't assign new ligature components for mark ligatures (see above)
if(i)c=t;else for(;c<t;){var r=u-l+Math.min(this.glyphs[c].ligatureComponent||1,l);this.glyphs[c].ligatureID=a.ligatureID,this.glyphs[c].ligatureComponent=r,c++}o=this.glyphs[c].ligatureID,u+=l=this.glyphs[c].codePoints.length,c++}// Adjust ligature components for any marks following
if(o&&!i)for(let e=c;e<this.glyphs.length&&this.glyphs[e].ligatureID===o;e++){var r=u-l+Math.min(this.glyphs[e].ligatureComponent||1,l);this.glyphs[e].ligatureComponent=r}// Delete the matched glyphs, and replace the current glyph with the ligature glyph
for(let t=e.length-1;t>=0;t--)this.glyphs.splice(e[t],1);return this.glyphs[this.glyphIterator.index]=a,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw Error(`GSUB lookupType ${e} is not supported`)}}}class iK extends aQ{applyPositionValue(e,t){let r=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(r.xAdvance+=t.xAdvance),null!=t.yAdvance&&(r.yAdvance+=t.yAdvance),null!=t.xPlacement&&(r.xOffset+=t.xPlacement),null!=t.yPlacement&&(r.yOffset+=t.yPlacement);// Adjustments for font variations
let n=this.font._variationProcessor,s=this.font.GDEF&&this.font.GDEF.itemVariationStore;n&&s&&(t.xPlaDevice&&(r.xOffset+=n.getDelta(s,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(r.yOffset+=n.getDelta(s,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(r.xAdvance+=n.getDelta(s,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(r.yAdvance+=n.getDelta(s,t.yAdvDevice.a,t.yAdvDevice.b)));// TODO: device tables
}applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(e))}return!0}case 2:{let e=this.glyphIterator.peek();if(!e)return!1;let n=this.coverageIndex(t.coverage);if(-1===n)return!1;switch(t.version){case 1:for(let r of t.pairSets.get(n))if(r.secondGlyph===e.id)return this.applyPositionValue(0,r.value1),this.applyPositionValue(1,r.value2),!0;return!1;case 2:let s=this.getClassID(this.glyphIterator.cur.id,t.classDef1),a=this.getClassID(e.id,t.classDef2);if(-1===s||-1===a)return!1;var r=t.classRecords.get(s).get(a);return this.applyPositionValue(0,r.value1),this.applyPositionValue(1,r.value2),!0}}case 3:{let e,r=this.glyphIterator.peekIndex(),n=this.glyphs[r];if(!n)return!1;let s=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!s||!s.exitAnchor)return!1;let a=t.entryExitRecords[this.coverageIndex(t.coverage,n.id)];if(!a||!a.entryAnchor)return!1;let i=this.getAnchor(a.entryAnchor),o=this.getAnchor(s.exitAnchor),l=this.positions[this.glyphIterator.index],u=this.positions[r];switch(this.direction){case"ltr":l.xAdvance=o.x+l.xOffset,e=i.x+u.xOffset,u.xAdvance-=e,u.xOffset-=e;break;case"rtl":e=o.x+l.xOffset,l.xAdvance-=e,l.xOffset-=e,u.xAdvance=i.x+u.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=r,l.yOffset=i.y-o.y):(n.cursiveAttachment=this.glyphIterator.index,l.yOffset=o.y-i.y),!0}case 4:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;// search backward for a base glyph
let r=this.glyphIterator.index;for(;--r>=0&&(this.glyphs[r].isMark||this.glyphs[r].ligatureComponent>0););if(r<0)return!1;let n=this.coverageIndex(t.baseCoverage,this.glyphs[r].id);if(-1===n)return!1;let s=t.markArray[e],a=t.baseArray[n][s.class];return this.applyAnchor(s,a,r),!0}case 5:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;// search backward for a base glyph
let r=this.glyphIterator.index;for(;--r>=0&&this.glyphs[r].isMark;);if(r<0)return!1;let n=this.coverageIndex(t.ligatureCoverage,this.glyphs[r].id);if(-1===n)return!1;let s=t.ligatureArray[n],a=this.glyphIterator.cur,i=this.glyphs[r],o=i.ligatureID&&i.ligatureID===a.ligatureID&&a.ligatureComponent>0?Math.min(a.ligatureComponent,i.codePoints.length)-1:i.codePoints.length-1,l=t.markArray[e],u=s[o][l.class];return this.applyAnchor(l,u,r),!0}case 6:{let e=this.coverageIndex(t.mark1Coverage);if(-1===e)return!1;// get the previous mark to attach to
let r=this.glyphIterator.peekIndex(-1),n=this.glyphs[r];if(!n||!n.isMark)return!1;let s=this.glyphIterator.cur,a=!1;if(s.ligatureID===n.ligatureID?s.ligatureID?s.ligatureComponent===n.ligatureComponent&&(a=!0):a=!0:(s.ligatureID&&!s.ligatureComponent||n.ligatureID&&!n.ligatureComponent)&&(a=!0),!a)return!1;let i=this.coverageIndex(t.mark2Coverage,n.id);if(-1===i)return!1;let o=t.mark1Array[e],l=t.mark2Array[i][o.class];return this.applyAnchor(o,l,r),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw Error(`Unsupported GPOS table: ${e}`)}}applyAnchor(e,t,r){let n=this.getAnchor(t),s=this.getAnchor(e.markAnchor);this.positions[r];let a=this.positions[this.glyphIterator.index];a.xOffset=n.x-s.x,a.yOffset=n.y-s.y,this.glyphIterator.cur.markAttachment=r}getAnchor(e){// TODO: contour point, device tables
let t=e.xCoordinate,r=e.yCoordinate,n=this.font._variationProcessor,s=this.font.GDEF&&this.font.GDEF.itemVariationStore;return n&&s&&(e.xDeviceTable&&(t+=n.getDelta(s,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(r+=n.getDelta(s,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:r}}applyFeatures(e,t,r){super.applyFeatures(e,t,r);for(var n=0;n<this.glyphs.length;n++)this.fixCursiveAttachment(n);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(null!=t.cursiveAttachment){let r=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(r),this.positions[e].yOffset+=this.positions[r].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(null!=t.markAttachment){let r=t.markAttachment;if(this.positions[e].xOffset+=this.positions[r].xOffset,this.positions[e].yOffset+=this.positions[r].yOffset,"ltr"===this.direction)for(let t=r;t<e;t++)this.positions[e].xOffset-=this.positions[t].xAdvance,this.positions[e].yOffset-=this.positions[t].yAdvance;else for(let t=r+1;t<e+1;t++)this.positions[e].xOffset+=this.positions[t].xAdvance,this.positions[e].yOffset+=this.positions[t].yAdvance}}}}class iQ{setup(e){// Map glyphs to GlyphInfo objects so data can be passed between
// GSUB and GPOS without mutating the real (shared) Glyph objects.
this.glyphInfos=e.glyphs.map(e=>new a_(this.font,e.id,[...e.codePoints]));// Select a script based on what is available in GSUB/GPOS.
let t=null;// Assign chosen features to output glyph run
for(let r in this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),// Choose a shaper based on the script, and setup a shaping plan.
// This determines which features to apply to which glyphs.
this.shaper=function(e){for(let t of(Array.isArray(e)||(e=[e]),e)){let e=iZ[t];if(e)return e}return aG}(t),this.plan=new aO(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features),this.plan.allFeatures)e.features[r]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),// Map glyph infos back to normal Glyph objects
e.glyphs=this.glyphInfos.map(e=>this.font.getGlyph(e.id,e.codePoints)))}position(e){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),"rtl"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let r=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),r.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),r.push(...Object.keys(this.GPOSProcessor.features))),r}constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new iJ(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new iK(e,e.GPOS))}}class i_{layout(e,t,r,n,s){// Map string to glyphs if needed
if("string"==typeof t&&(s=n,n=r,r=t,t=[]),"string"==typeof e){// Attempt to detect the script from the string if not provided.
null==r&&(r=function(e){let t=e.length,r=0;for(;r<t;){let n=e.charCodeAt(r++);// Check if this is a high surrogate
if(55296<=n&&n<=56319&&r<t){let t=e.charCodeAt(r);// Check if this is a low surrogate
56320<=t&&t<=57343&&(r++,n=((1023&n)<<10)+(1023&t)+65536)}let s=tp(n);if("Common"!==s&&"Inherited"!==s&&"Unknown"!==s)return ag[s]}return ag.Unknown}(e));var a=this.font.glyphsForString(e)}else{// Attempt to detect the script from the glyph code points if not provided.
if(null==r){let t=[];for(let r of e)t.push(...r.codePoints);r=function(e){for(let t=0;t<e.length;t++){let r=tp(e[t]);if("Common"!==r&&"Inherited"!==r&&"Unknown"!==r)return ag[r]}return ag.Unknown}(t)}var a=e}let i=new aA(a,t,r,n,s);return 0===a.length?i.positions=[]:(this.engine&&this.engine.setup&&this.engine.setup(i),// Substitute and position the glyphs
this.substitute(i),this.position(i),this.hideDefaultIgnorables(i.glyphs,i.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup()),i}substitute(e){// Call the advanced layout engine to make substitutions
this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){// Get initial glyph positions
e.positions=e.glyphs.map(e=>new aw(e.advanceWidth));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new ad(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new af(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let r=this.font.glyphForCodePoint(32);for(let n=0;n<e.length;n++)this.isDefaultIgnorable(e[n].codePoints[0])&&(e[n]=r,t[n].xAdvance=0,t[n].yAdvance=0)}isDefaultIgnorable(e){// From DerivedCoreProperties.txt in the Unicode database,
// minus U+115F, U+1160, U+3164 and U+FFA0, which is what
// Harfbuzz and Uniscribe do.
let t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let r=[];return this.engine&&r.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===r.indexOf("kern")&&r.push("kern"),r}stringsForGlyph(e){let t=new Set;for(let r of this.font._cmapProcessor.codePointsForGlyph(e))t.add(String.fromCodePoint(r));if(this.engine&&this.engine.stringsForGlyph)for(let r of this.engine.stringsForGlyph(e))t.add(r);return Array.from(t)}constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new aP(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new iQ(this.font))}}const i$={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class i0{/**
   * Compiles the path to a JavaScript function that can be applied with
   * a graphics context in order to render the path.
   * @return {string}
   */toFunction(){return e=>{this.commands.forEach(t=>e[t.command].apply(e,t.args))}}/**
   * Converts the path to an SVG path data string
   * @return {string}
   */toSVG(){return this.commands.map(e=>`${i$[e.command]}${e.args.map(e=>Math.round(100*e)/100).join(" ")}`).join("")}/**
   * Gets the "control box" of a path.
   * This is like the bounding box, but it includes all points including
   * control points of bezier segments and is much faster to compute than
   * the real bounding box.
   * @type {BBox}
   */get cbox(){if(!this._cbox){let e=new ap;for(let t of this.commands)for(let r=0;r<t.args.length;r+=2)e.addPoint(t.args[r],t.args[r+1]);this._cbox=Object.freeze(e)}return this._cbox}/**
   * Gets the exact bounding box of the path by evaluating curve segments.
   * Slower to compute than the control box, but more accurate.
   * @type {BBox}
   */get bbox(){if(this._bbox)return this._bbox;let e=new ap,t=0,r=0,n=e=>Math.pow(1-e,3)*f[m]+3*Math.pow(1-e,2)*e*d[m]+3*(1-e)*Math.pow(e,2)*p[m]+Math.pow(e,3)*g[m];for(let y of this.commands)switch(y.command){case"moveTo":case"lineTo":let[b,A]=y.args;e.addPoint(b,A),t=b,r=A;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===y.command)// http://fontforge.org/bezier.html
var[s,a,i,o]=y.args,l=t+2/3*(s-t),u=r+2/3*(a-r),c=i+2/3*(s-i),h=o+2/3*(a-o);else var[l,u,c,h,i,o]=y.args;// http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html
e.addPoint(i,o);for(var f=[t,r],d=[l,u],p=[c,h],g=[i,o],m=0;m<=1;m++){let t=6*f[m]-12*d[m]+6*p[m],r=-3*f[m]+9*d[m]-9*p[m]+3*g[m];if(y=3*d[m]-3*f[m],0===r){if(0===t)continue;let r=-y/t;0<r&&r<1&&(0===m?e.addPoint(n(r),e.maxY):1===m&&e.addPoint(e.maxX,n(r)));continue}let s=Math.pow(t,2)-4*y*r;if(s<0)continue;let a=(-t+Math.sqrt(s))/(2*r);0<a&&a<1&&(0===m?e.addPoint(n(a),e.maxY):1===m&&e.addPoint(e.maxX,n(a)));let i=(-t-Math.sqrt(s))/(2*r);0<i&&i<1&&(0===m?e.addPoint(n(i),e.maxY):1===m&&e.addPoint(e.maxX,n(i)))}t=i,r=o}return this._bbox=Object.freeze(e)}/**
   * Applies a mapping function to each point in the path.
   * @param {function} fn
   * @return {Path}
   */mapPoints(e){let t=new i0;for(let r of this.commands){let n=[];for(let t=0;t<r.args.length;t+=2){let[s,a]=e(r.args[t],r.args[t+1]);n.push(s,a)}t[r.command](...n)}return t}/**
   * Transforms the path by the given matrix.
   */transform(e,t,r,n,s,a){return this.mapPoints((i,o)=>[e*i+r*o+s,t*i+n*o+a])}/**
   * Translates the path by the given offset.
   */translate(e,t){return this.transform(1,0,0,1,e,t)}/**
   * Rotates the path by the given angle (in radians).
   */rotate(e){let t=Math.cos(e),r=Math.sin(e);return this.transform(t,r,-r,t,0,0)}/**
   * Scales the path.
   */scale(e,t=e){return this.transform(e,0,0,t,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}}for(let e of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])i0.prototype[e]=function(...t){return this._bbox=this._cbox=null,this.commands.push({command:e,args:t}),this};var i1=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];class i2{_getPath(){return new i0}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:r}=this._getTableMetrics(this._font.hmtx);// For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea
if(this._font.vmtx)var{advance:n,bearing:s}=this._getTableMetrics(this._font.vmtx);else{let t;if(null==e&&({cbox:e}=this),(t=this._font["OS/2"])&&t.version>0)var n=Math.abs(t.typoAscender-t.typoDescender),s=t.typoAscender-e.maxY;else{let{hhea:t}=this._font;var n=Math.abs(t.ascent-t.descent),s=t.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:n,leftBearing:r,topBearing:s}}/**
   * The glyph’s control box.
   * This is often the same as the bounding box, but is faster to compute.
   * Because of the way bezier curves are defined, some of the control points
   * can be outside of the bounding box. Where `bbox` takes this into account,
   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.
   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)
   * for a more detailed description.
   *
   * @type {BBox}
   */get cbox(){return this._getCBox()}/**
   * The glyph’s bounding box, i.e. the rectangle that encloses the
   * glyph outline as tightly as possible.
   * @type {BBox}
   */get bbox(){return this._getBBox()}/**
   * A vector Path object representing the glyph outline.
   * @type {Path}
   */get path(){// Cache the path so we only decode it once
// Decoding is actually performed by subclasses
return this._getPath()}/**
   * Returns a path scaled to the given font size.
   * @param {number} size
   * @return {Path}
   */getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}/**
   * The glyph's advance width.
   * @type {number}
   */get advanceWidth(){return this._getMetrics().advanceWidth}/**
   * The glyph's advance height.
   * @type {number}
   */get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return i1[this.id];case 2:let t=e.glyphNameIndex[this.id];if(t<i1.length)return i1[t];return e.names[t-i1.length];case 2.5:return i1[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}/**
   * The glyph's name
   * @type {string}
   */get name(){return this._getName()}/**
   * Renders the glyph to the given graphics context, at the specified font size.
   * @param {CanvasRenderingContext2d} ctx
   * @param {number} size
   */render(e,t){e.save();let r=1/this._font.head.unitsPerEm*t;e.scale(r,r),this.path.toFunction()(e),e.fill(),e.restore()}constructor(e,t,r){/**
     * The glyph id in the font
     * @type {number}
     */this.id=e,/**
     * An array of unicode code points that are represented by this glyph.
     * There can be multiple code points in the case of ligatures and other glyphs
     * that represent multiple visual characters.
     * @type {number[]}
     */this.codePoints=t,this._font=r,// TODO: get this info from GDEF if available
this.isMark=this.codePoints.length>0&&this.codePoints.every(tg),this.isLigature=this.codePoints.length>1}}tv(eU)([tB],i2.prototype,"cbox",null),tv(eU)([tB],i2.prototype,"bbox",null),tv(eU)([tB],i2.prototype,"path",null),tv(eU)([tB],i2.prototype,"advanceWidth",null),tv(eU)([tB],i2.prototype,"advanceHeight",null),tv(eU)([tB],i2.prototype,"name",null);// The header for both simple and composite glyphs
let i3=new eP({numberOfContours:ep,xMin:ep,yMin:ep,xMax:ep,yMax:ep});class i4{copy(){return new i4(this.onCurve,this.endContour,this.x,this.y)}constructor(e,t,r=0,n=0){this.onCurve=e,this.endContour=t,this.x=r,this.y=n}}// Represents a component in a composite glyph
class i5{constructor(e,t,r){this.glyphID=e,this.dx=t,this.dy=r,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class i6 extends i2{// Parses just the glyph header and returns the bounding box
_getCBox(e){// We need to decode the glyph if variation processing is requested,
// so it's easier just to recompute the path's cbox after decoding.
if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let r=i3.decode(t);return Object.freeze(new ap(r.xMin,r.yMin,r.xMax,r.yMax))}// Parses a single glyph coordinate
_parseGlyphCoord(e,t,r,n){if(r){var s=e.readUInt8();n||(s=-s),s+=t}else if(n)var s=t;else var s=t+e.readInt16BE();return s}// Decodes the glyph data into points for simple glyphs,
// or components for composite glyphs
_decode(){let e=this._font.loca.offsets[this.id];// Nothing to do if there is no data for this glyph
if(e===this._font.loca.offsets[this.id+1])return null;let t=this._font._getTableStream("glyf");t.pos+=e;let r=t.pos,n=i3.decode(t);return n.numberOfContours>0?this._decodeSimple(n,t):n.numberOfContours<0&&this._decodeComposite(n,t,r),n}_decodeSimple(e,t){// this is a simple glyph
e.points=[];let r=new ev(ec,e.numberOfContours).decode(t);e.instructions=new ev(eu,ec).decode(t);let n=[],s=r[r.length-1]+1;for(;n.length<s;){var a=t.readUInt8();// check for repeat flag
if(n.push(a),8&a){let e=t.readUInt8();for(let t=0;t<e;t++)n.push(a)}}for(var i=0;i<n.length;i++){var a=n[i];let t=new i4(!!(1&a),r.indexOf(i)>=0,0,0);e.points.push(t)}let o=0;for(var i=0;i<n.length;i++){var a=n[i];e.points[i].x=o=this._parseGlyphCoord(t,o,2&a,16&a)}let l=0;for(var i=0;i<n.length;i++){var a=n[i];e.points[i].y=l=this._parseGlyphCoord(t,l,4&a,32&a)}if(this._font._variationProcessor){let t=e.points.slice();t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.slice(-4)}}_decodeComposite(e,t,r=0){// this is a composite glyph
e.components=[];let n=!1,s=32;for(;32&s;){s=t.readUInt16BE();let l=t.pos-r,u=t.readUInt16BE();if(n||(n=(256&s)!=0),1&s)var a=t.readInt16BE(),i=t.readInt16BE();else var a=t.readInt8(),i=t.readInt8();var o=new i5(u,a,i);o.pos=l,8&s?o.scaleX=o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:64&s?(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):128&s&&(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(o)}if(this._font._variationProcessor){let t=[];for(let r=0;r<e.components.length;r++){var o=e.components[r];t.push(new i4(!0,!0,o.dx,o.dy))}t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.splice(-4,4);for(let r=0;r<t.length;r++){let n=t[r];e.components[r].dx=n.x,e.components[r].dy=n.y}}return n}_getPhantomPoints(e){let t=this._getCBox(!0);null==this._metrics&&(this._metrics=i2.prototype._getMetrics.call(this,t));let{advanceWidth:r,advanceHeight:n,leftBearing:s,topBearing:a}=this._metrics;return[new i4(!1,!0,e.xMin-s,0),new i4(!1,!0,e.xMin-s+r,0),new i4(!1,!0,0,e.yMax+a),new i4(!1,!0,0,e.yMax+a+n)]}// Decodes font data, resolves composite glyphs, and returns an array of contours
_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let r of e.components){let e=this._font.getGlyph(r.glyphID)._getContours();for(let n=0;n<e.length;n++){let s=e[n];for(let e=0;e<s.length;e++){let n=s[e],a=n.x*r.scaleX+n.y*r.scale01+r.dx,i=n.y*r.scaleY+n.x*r.scale10+r.dy;t.push(new i4(n.onCurve,n.endContour,a,i))}}}else t=e.points||[];// Recompute and cache metrics if we performed variation processing, and don't have an HVAR table
e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let r=[],n=[];for(let e=0;e<t.length;e++){var s=t[e];n.push(s),s.endContour&&(r.push(n),n=[])}return r}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}// Converts contours to a Path object that can be rendered
_getPath(){let e=this._getContours(),t=new i0;for(let n=0;n<e.length;n++){let s=e[n],a=s[0],i=s[s.length-1],o=0;if(a.onCurve){// The first point will be consumed by the moveTo command, so skip in the loop
var r=null;o=1}else var r=a=i.onCurve?i:new i4(!1,!1,(a.x+i.x)/2,(a.y+i.y)/2);t.moveTo(a.x,a.y);for(let e=o;e<s.length;e++){let n=s[e],i=0===e?a:s[e-1];if(i.onCurve&&n.onCurve)t.lineTo(n.x,n.y);else if(i.onCurve&&!n.onCurve)var r=n;else if(i.onCurve||n.onCurve){if(!i.onCurve&&n.onCurve){t.quadraticCurveTo(r.x,r.y,n.x,n.y);var r=null}else throw Error("Unknown TTF path state")}else{let e=(i.x+n.x)/2,s=(i.y+n.y)/2;t.quadraticCurveTo(i.x,i.y,e,s);var r=n}}r&&t.quadraticCurveTo(r.x,r.y,a.x,a.y),t.closePath()}return t}constructor(...e){super(...e),tv(eL)(this,"type","TTF")}}class i8 extends i2{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e,t,r=this._font.CFF2||this._font["CFF "],{stream:n}=r,s=r.topDict.CharStrings[this.id],a=s.offset+s.length;n.pos=s.offset;let i=new i0,o=[],l=[],u=null,c=0,h=0,f=0,d=!1;this._usedGsubrs=e={},this._usedSubrs=t={};let p=r.globalSubrIndex||[],g=this.bias(p),m=r.privateDictForGlyph(this.id)||{},y=m.Subrs||[],b=this.bias(y),A=r.topDict.vstore&&r.topDict.vstore.itemVariationStore,w=m.vsindex,v=this._font._variationProcessor;function x(){null==u&&(u=o.shift()+m.nominalWidthX)}function C(){return o.length%2!=0&&x(),c+=o.length>>1,o.length=0}function I(e,t){d&&i.closePath(),i.moveTo(e,t),d=!0}let k=function(){for(;n.pos<a;){let O=n.readUInt8();if(O<32){let P,T,M;switch(O){case 1:case 3:case 18:case 23:C();break;case 4:o.length>1&&x(),f+=o.shift(),I(h,f);break;case 5:for(;o.length>=2;)h+=o.shift(),f+=o.shift(),i.lineTo(h,f);break;case 6:case 7:for(M=6===O;o.length>=1;)M?h+=o.shift():f+=o.shift(),i.lineTo(h,f),M=!M;break;case 8:for(;o.length>0;){var s=h+o.shift(),u=f+o.shift(),m=s+o.shift(),E=u+o.shift();h=m+o.shift(),f=E+o.shift(),i.bezierCurveTo(s,u,m,E,h,f)}break;case 10:if(T=y[P=o.pop()+b]){t[P]=!0;var D=n.pos,S=a;n.pos=T.offset,a=T.offset+T.length,k(),n.pos=D,a=S}break;case 11:if(r.version>=2)break;return;case 14:if(r.version>=2)break;o.length>0&&x(),d&&(i.closePath(),d=!1);break;case 15:if(r.version<2)throw Error("vsindex operator not supported in CFF v1");w=o.pop();break;case 16:{if(r.version<2)throw Error("blend operator not supported in CFF v1");if(!v)throw Error("blend operator in non-variation font");let e=v.getBlendVector(A,w),t=o.pop(),n=t*e.length,s=o.length-n,a=s-t;for(let r=0;r<t;r++){let t=o[a+r];for(let r=0;r<e.length;r++)t+=e[r]*o[s++];o[a+r]=t}for(;n--;)o.pop();break}case 19:case 20:C(),n.pos+=c+7>>3;break;case 21:o.length>2&&x(),h+=o.shift(),f+=o.shift(),I(h,f);break;case 22:o.length>1&&x(),I(h+=o.shift(),f);break;case 24:for(;o.length>=8;){var s=h+o.shift(),u=f+o.shift(),m=s+o.shift(),E=u+o.shift();h=m+o.shift(),f=E+o.shift(),i.bezierCurveTo(s,u,m,E,h,f)}h+=o.shift(),f+=o.shift(),i.lineTo(h,f);break;case 25:for(;o.length>=8;)h+=o.shift(),f+=o.shift(),i.lineTo(h,f);var s=h+o.shift(),u=f+o.shift(),m=s+o.shift(),E=u+o.shift();h=m+o.shift(),f=E+o.shift(),i.bezierCurveTo(s,u,m,E,h,f);break;case 26:for(o.length%2&&(h+=o.shift());o.length>=4;)s=h,u=f+o.shift(),m=s+o.shift(),E=u+o.shift(),h=m,f=E+o.shift(),i.bezierCurveTo(s,u,m,E,h,f);break;case 27:for(o.length%2&&(f+=o.shift());o.length>=4;)s=h+o.shift(),u=f,m=s+o.shift(),E=u+o.shift(),h=m+o.shift(),f=E,i.bezierCurveTo(s,u,m,E,h,f);break;case 28:o.push(n.readInt16BE());break;case 29:if(T=p[P=o.pop()+g]){e[P]=!0;var D=n.pos,S=a;n.pos=T.offset,a=T.offset+T.length,k(),n.pos=D,a=S}break;case 30:case 31:for(M=31===O;o.length>=4;)M?(s=h+o.shift(),u=f,m=s+o.shift(),f=(E=u+o.shift())+o.shift(),h=m+(1===o.length?o.shift():0)):(s=h,u=f+o.shift(),m=s+o.shift(),E=u+o.shift(),h=m+o.shift(),f=E+(1===o.length?o.shift():0)),i.bezierCurveTo(s,u,m,E,h,f),M=!M;break;case 12:switch(O=n.readUInt8()){case 3:let F=o.pop(),L=o.pop();o.push(F&&L?1:0);break;case 4:F=o.pop(),L=o.pop(),o.push(F||L?1:0);break;case 5:F=o.pop(),o.push(F?0:1);break;case 9:F=o.pop(),o.push(Math.abs(F));break;case 10:F=o.pop(),L=o.pop(),o.push(F+L);break;case 11:F=o.pop(),L=o.pop(),o.push(F-L);break;case 12:F=o.pop(),L=o.pop(),o.push(F/L);break;case 14:F=o.pop(),o.push(-F);break;case 15:F=o.pop(),L=o.pop(),o.push(F===L?1:0);break;case 18:o.pop();break;case 20:let U=o.pop(),G=o.pop();l[G]=U;break;case 21:G=o.pop(),o.push(l[G]||0);break;case 22:let R=o.pop(),N=o.pop(),z=o.pop(),V=o.pop();o.push(z<=V?R:N);break;case 23:o.push(Math.random());break;case 24:F=o.pop(),L=o.pop(),o.push(F*L);break;case 26:F=o.pop(),o.push(Math.sqrt(F));break;case 27:F=o.pop(),o.push(F,F);break;case 28:F=o.pop(),L=o.pop(),o.push(L,F);break;case 29:(G=o.pop())<0?G=0:G>o.length-1&&(G=o.length-1),o.push(o[G]);break;case 30:let W=o.pop(),j=o.pop();if(j>=0)for(;j>0;){var B=o[W-1];for(let e=W-2;e>=0;e--)o[e+1]=o[e];o[0]=B,j--}else for(;j<0;){var B=o[0];for(let e=0;e<=W;e++)o[e]=o[e+1];o[W-1]=B,j++}break;case 34:s=h+o.shift(),u=f,m=s+o.shift(),E=u+o.shift();let Y=m+o.shift(),H=E,q=Y+o.shift(),X=H,Z=q+o.shift(),J=X,K=Z+o.shift(),Q=J;h=K,f=Q,i.bezierCurveTo(s,u,m,E,Y,H),i.bezierCurveTo(q,X,Z,J,K,Q);break;case 35:let _=[];for(let e=0;e<=5;e++)h+=o.shift(),f+=o.shift(),_.push(h,f);i.bezierCurveTo(..._.slice(0,6)),i.bezierCurveTo(..._.slice(6)),o.shift();break;case 36:s=h+o.shift(),u=f+o.shift(),m=s+o.shift(),E=u+o.shift(),Y=m+o.shift(),H=E,q=Y+o.shift(),X=H,Z=q+o.shift(),J=X+o.shift(),K=Z+o.shift(),Q=J,h=K,f=Q,i.bezierCurveTo(s,u,m,E,Y,H),i.bezierCurveTo(q,X,Z,J,K,Q);break;case 37:let $=h,ee=f;_=[];for(let e=0;e<=4;e++)h+=o.shift(),f+=o.shift(),_.push(h,f);Math.abs(h-$)>Math.abs(f-ee)?(h+=o.shift(),f=ee):(h=$,f+=o.shift()),_.push(h,f),i.bezierCurveTo(..._.slice(0,6)),i.bezierCurveTo(..._.slice(6));break;default:throw Error(`Unknown op: 12 ${O}`)}break;default:throw Error(`Unknown op: ${O}`)}}else if(O<247)o.push(O-139);else if(O<251){var P=n.readUInt8();o.push((O-247)*256+P+108)}else if(O<255){var P=n.readUInt8();o.push(-(256*(O-251))-P-108)}else o.push(n.readInt32BE()/65536)}};return k(),d&&i.closePath(),i}constructor(...e){super(...e),tv(eL)(this,"type","CFF")}}let i9=new eP({originX:ec,originY:ec,type:new eS(4),data:new ek(e=>e.parent.buflen-e._currentOffset)});class i7 extends i6{/**
   * Returns an object representing a glyph image at the given point size.
   * The object has a data property with a Buffer containing the actual image data,
   * along with the image type, and origin.
   *
   * @param {number} size
   * @return {object}
   */getImageForSize(e){for(let r=0;r<this._font.sbix.imageTables.length;r++){var t=this._font.sbix.imageTables[r];if(t.ppem>=e)break}let r=t.imageOffsets,n=r[this.id],s=r[this.id+1];return n===s?null:(this._font.stream.pos=n,i9.decode(this._font.stream,{buflen:s-n}))}render(e,t){let r=this.getImageForSize(t);if(null!=r){let n=t/this._font.unitsPerEm;e.image(r.data,{height:t,x:r.originX,y:(this.bbox.minY-r.originY)*n})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}constructor(...e){super(...e),tv(eL)(this,"type","SBIX")}}class oe{constructor(e,t){this.glyph=e,this.color=t}}class ot extends i2{_getBBox(){let e=new ap;for(let t=0;t<this.layers.length;t++){let r=this.layers[t].glyph.bbox;e.addPoint(r.minX,r.minY),e.addPoint(r.maxX,r.maxY)}return e}/**
   * Returns an array of objects containing the glyph and color for
   * each layer in the composite color glyph.
   * @type {object[]}
   */get layers(){let e=this._font.CPAL,t=this._font.COLR,r=0,n=t.baseGlyphRecord.length-1;for(;r<=n;){let e=r+n>>1;var s=t.baseGlyphRecord[e];if(this.id<s.gid)n=e-1;else if(this.id>s.gid)r=e+1;else{var a=s;break}}// if base glyph not found in COLR table,
// default to normal glyph from glyf or CFF
if(null==a){var i=this._font._getBaseGlyph(this.id),o={red:0,green:0,blue:0,alpha:255};return[new oe(i,o)]}// otherwise, return an array of all the layers
let l=[];for(let r=a.firstLayerIndex;r<a.firstLayerIndex+a.numLayers;r++){var s=t.layerRecords[r],o=e.colorRecords[s.paletteIndex],i=this._font._getBaseGlyph(s.gid);l.push(new oe(i,o))}return l}render(e,t){for(let{glyph:r,color:n}of this.layers)e.fillColor([n.red,n.green,n.blue],n.alpha/255*100),r.render(e,t)}constructor(...e){super(...e),tv(eL)(this,"type","COLR")}}class or{normalizeCoords(e){// the default mapping is linear along each axis, in two segments:
// from the minValue to defaultValue, and from defaultValue to maxValue.
let t=[];for(var r=0;r<this.font.fvar.axis.length;r++){let n=this.font.fvar.axis[r];e[r]<n.defaultValue?t.push((e[r]-n.defaultValue+Number.EPSILON)/(n.defaultValue-n.minValue+Number.EPSILON)):t.push((e[r]-n.defaultValue+Number.EPSILON)/(n.maxValue-n.defaultValue+Number.EPSILON))}// if there is an avar table, the normalized value is calculated
// by interpolating between the two nearest mapped values.
if(this.font.avar)for(var r=0;r<this.font.avar.segment.length;r++){let e=this.font.avar.segment[r];for(let n=0;n<e.correspondence.length;n++){let s=e.correspondence[n];if(n>=1&&t[r]<s.fromCoord){let a=e.correspondence[n-1];t[r]=((t[r]-a.fromCoord)*(s.toCoord-a.toCoord)+Number.EPSILON)/(s.fromCoord-a.fromCoord+Number.EPSILON)+a.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:r}=this.font;if(e>=r.glyphCount)return;let n=r.offsets[e];if(n===r.offsets[e+1])return;// Read the gvar data for this glyph
let{stream:s}=this.font;if(s.pos=n,s.pos>=s.length)return;let a=s.readUInt16BE(),i=n+s.readUInt16BE();if(32768&a){var o=s.pos;s.pos=i;var l=this.decodePoints();i=s.pos,s.pos=o}let u=t.map(e=>e.copy());a&=4095;for(let e=0;e<a;e++){let e=s.readUInt16BE(),n=s.readUInt16BE();if(32768&n){var c=[];for(let e=0;e<r.axisCount;e++)c.push(s.readInt16BE()/16384)}else{if((4095&n)>=r.globalCoordCount)throw Error("Invalid gvar table");var c=r.globalCoords[4095&n]}if(16384&n){var h=[];for(let e=0;e<r.axisCount;e++)h.push(s.readInt16BE()/16384);var f=[];for(let e=0;e<r.axisCount;e++)f.push(s.readInt16BE()/16384)}// Get the factor at which to apply this tuple
let a=this.tupleFactor(n,c,h,f);if(0===a){i+=e;continue}var o=s.pos;if(s.pos=i,8192&n)var d=this.decodePoints();else var d=l;// points.length = 0 means there are deltas for all points
let g=0===d.length?t.length:d.length,m=this.decodeDeltas(g),y=this.decodeDeltas(g);if(0===d.length)for(let e=0;e<t.length;e++){var p=t[e];p.x+=Math.round(m[e]*a),p.y+=Math.round(y[e]*a)}else{let e=u.map(e=>e.copy()),r=t.map(()=>!1);for(let n=0;n<d.length;n++){let s=d[n];if(s<t.length){let t=e[s];r[s]=!0,t.x+=Math.round(m[n]*a),t.y+=Math.round(y[n]*a)}}this.interpolateMissingDeltas(e,u,r);for(let r=0;r<t.length;r++){let n=e[r].x-u[r].x,s=e[r].y-u[r].y;t[r].x+=n,t[r].y+=s}}i+=e,s.pos=o}}decodePoints(){let e=this.font.stream,t=e.readUInt8();128&t&&(t=(127&t)<<8|e.readUInt8());let r=new Uint16Array(t),n=0,s=0;for(;n<t;){let a=e.readUInt8(),i=(127&a)+1,o=128&a?e.readUInt16:e.readUInt8;for(let a=0;a<i&&n<t;a++)s+=o.call(e),r[n++]=s}return r}decodeDeltas(e){let t=this.font.stream,r=0,n=new Int16Array(e);for(;r<e;){let s=t.readUInt8(),a=(63&s)+1;if(128&s)r+=a;else{let i=64&s?t.readInt16BE:t.readInt8;for(let s=0;s<a&&r<e;s++)n[r++]=i.call(t)}}return n}tupleFactor(e,t,r,n){let s=this.normalizedCoords,{gvar:a}=this.font,i=1;for(let o=0;o<a.axisCount;o++)if(0!==t[o]){if(0===s[o])return 0;if((16384&e)==0){if(s[o]<Math.min(0,t[o])||s[o]>Math.max(0,t[o]))return 0;i=(i*s[o]+Number.EPSILON)/(t[o]+Number.EPSILON)}else{if(s[o]<r[o]||s[o]>n[o])return 0;i=s[o]<t[o]?i*(s[o]-r[o]+Number.EPSILON)/(t[o]-r[o]+Number.EPSILON):i*(n[o]-s[o]+Number.EPSILON)/(n[o]-t[o]+Number.EPSILON)}}return i}// Interpolates points without delta values.
// Needed for the Ø and Q glyphs in Skia.
// Algorithm from Freetype.
interpolateMissingDeltas(e,t,r){if(0===e.length)return;let n=0;for(;n<e.length;){let s=n,a=n,i=e[a];for(;!i.endContour;)i=e[++a];// find the first point that has a delta
for(;n<=a&&!r[n];)n++;if(n>a)continue;let o=n,l=n;for(n++;n<=a;)r[n]&&(this.deltaInterpolate(l+1,n-1,l,n,t,e),l=n),n++;l===o?this.deltaShift(s,a,l,t,e):(// otherwise, handle the remaining points at the end and beginning of the contour
this.deltaInterpolate(l+1,a,l,o,t,e),o>0&&this.deltaInterpolate(s,o-1,l,o,t,e)),n=a+1}}deltaInterpolate(e,t,r,n,s,a){if(e>t)return;let i=["x","y"];for(let l=0;l<i.length;l++){let u=i[l];if(s[r][u]>s[n][u]){var o=r;r=n,n=o}let c=s[r][u],h=s[n][u],f=a[r][u],d=a[n][u];// If the reference points have the same coordinate but different
// delta, inferred delta is zero.  Otherwise interpolate.
if(c!==h||f===d){let r=c===h?0:(d-f)/(h-c);for(let n=e;n<=t;n++){let e=s[n][u];e<=c?e+=f-c:e>=h?e+=d-h:e=f+(e-c)*r,a[n][u]=e}}}}deltaShift(e,t,r,n,s){let a=s[r].x-n[r].x,i=s[r].y-n[r].y;if(0!==a||0!==i)for(let n=e;n<=t;n++)n!==r&&(s[n].x+=a,s[n].y+=i)}getAdvanceAdjustment(e,t){let r,n;if(t.advanceWidthMapping){let s=e;s>=t.advanceWidthMapping.mapCount&&(s=t.advanceWidthMapping.mapCount-1),t.advanceWidthMapping.entryFormat,{outerIndex:r,innerIndex:n}=t.advanceWidthMapping.mapData[s]}else r=0,n=e;return this.getDelta(t.itemVariationStore,r,n)}// See pseudo code from `Font Variations Overview'
// in the OpenType specification.
getDelta(e,t,r){if(t>=e.itemVariationData.length)return 0;let n=e.itemVariationData[t];if(r>=n.deltaSets.length)return 0;let s=n.deltaSets[r],a=this.getBlendVector(e,t),i=0;for(let e=0;e<n.regionIndexCount;e++)i+=s.deltas[e]*a[e];return i}getBlendVector(e,t){let r=e.itemVariationData[t];if(this.blendVectors.has(r))return this.blendVectors.get(r);let n=this.normalizedCoords,s=[];// outer loop steps through master designs to be blended
for(let t=0;t<r.regionIndexCount;t++){let a=1,i=r.regionIndexes[t],o=e.variationRegionList.variationRegions[i];// inner loop steps through axes in this region
for(let e=0;e<o.length;e++){let t=o[e];// take product of all the axis scalars
a*=t.startCoord>t.peakCoord||t.peakCoord>t.endCoord?1:t.startCoord<0&&t.endCoord>0&&0!==t.peakCoord?1:0===t.peakCoord?1:n[e]<t.startCoord||n[e]>t.endCoord?0:n[e]===t.peakCoord?1:n[e]<t.peakCoord?(n[e]-t.startCoord+Number.EPSILON)/(t.peakCoord-t.startCoord+Number.EPSILON):(t.endCoord-n[e]+Number.EPSILON)/(t.endCoord-t.peakCoord+Number.EPSILON)}s[t]=a}return this.blendVectors.set(r,s),s}constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}}Promise.resolve();class on{includeGlyph(e){return"object"==typeof e&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}constructor(e){this.font=e,this.glyphs=[],this.mapping={},// always include the missing glyph
this.includeGlyph(0)}}class os{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}}let oa=new eP({numberOfContours:ep,xMin:ep,yMin:ep,xMax:ep,yMax:ep,endPtsOfContours:new ev(ec,"numberOfContours"),instructions:new ev(eu,ec),flags:new ev(eu,0),xPoints:new ev(os,0),yPoints:new ev(os,0)});class oi{encodeSimple(e,t=[]){let r=[],n=[],s=[],a=[],i=0,o=0,l=0,u=0,c=0;for(let t=0;t<e.commands.length;t++){let h=e.commands[t];for(let r=0;r<h.args.length;r+=2){let f=h.args[r],d=h.args[r+1],p=0;// If the ending point of a quadratic curve is the midpoint
// between the control point and the control point of the next
// quadratic curve, we can omit the ending point.
if("quadraticCurveTo"===h.command&&2===r){let r=e.commands[t+1];if(r&&"quadraticCurveTo"===r.command){let e=(o+r.args[0])/2,t=(l+r.args[1])/2;if(f===e&&d===t)continue}}"quadraticCurveTo"===h.command&&0===r||(p|=1),p=this._encodePoint(f,o,n,p,2,16),(p=this._encodePoint(d,l,s,p,4,32))===u&&i<255?(a[a.length-1]|=8,i++):(i>0&&(a.push(i),i=0),a.push(p),u=p),o=f,l=d,c++}"closePath"===h.command&&r.push(c-1)}e.commands.length>1&&"closePath"!==e.commands[e.commands.length-1].command&&r.push(c-1);let h=e.bbox,f={numberOfContours:r.length,xMin:h.minX,yMin:h.minY,xMax:h.maxX,yMax:h.maxY,endPtsOfContours:r,instructions:t,flags:a,xPoints:n,yPoints:s},d=oa.size(f),p=4-d%4,g=new ea(d+p);return oa.encode(g,f),0!==p&&g.fill(0,p),g.buffer}_encodePoint(e,t,r,n,s,a){let i=e-t;return e===t?n|=a:(-255<=i&&i<=255&&(n|=s,i<0?i=-i:n|=a),r.push(i)),n}}class oo extends on{_addGlyph(e){let t=this.font.getGlyph(e),r=t._decode(),n=this.font.loca.offsets[e],s=this.font.loca.offsets[e+1],a=this.font._getTableStream("glyf");a.pos+=n;let i=a.readBuffer(s-n);// if it is a compound glyph, include its components
if(r&&r.numberOfContours<0){i=new Uint8Array(i);let t=new DataView(i.buffer);for(let n of r.components)e=this.includeGlyph(n.glyphID),t.setUint16(n.pos,e)}else r&&this.font._variationProcessor&&(i=this.glyphEncoder.encodeSimple(t.path,r.instructions));return this.glyf.push(i),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=i.length,this.glyf.length-1}encode(){// tables required by PDF spec:
//   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm
//
// additional tables required for standalone fonts:
//   name, cmap, OS/2, post
this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};// include all the glyphs
// not using a for loop because we need to support adding more
// glyphs to the array as we go, and CoffeeScript caches the length.
let e=0;for(;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);let t=tv(ty)(this.font.maxp);t.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let r=tv(ty)(this.font.head);r.indexToLocFormat=this.loca.version;let n=tv(ty)(this.font.hhea);// map = []
// for index in [0...256]
//     if index < @numGlyphs
//         map[index] = index
//     else
//         map[index] = 0
//
// cmapTable =
//     version: 0
//     length: 262
//     language: 0
//     codeMap: map
//
// cmap =
//     version: 0
//     numSubtables: 1
//     tables: [
//         platformID: 1
//         encodingID: 0
//         table: cmapTable
//     ]
// TODO: subset prep, cvt, fpgm?
return n.numberOfMetrics=this.hmtx.metrics.length,as.toBuffer({tables:{head:r,hhea:n,loca:this.loca,maxp:t,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(e){super(e),this.glyphEncoder=new oi}}class ol extends on{subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let r=this.font.getGlyph(t);for(let t in r.path,r._usedGsubrs)e[t]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let r=[];for(let n=0;n<e.length;n++){let s=e[n];t[n]?(this.cff.stream.pos=s.offset,r.push(this.cff.stream.readBuffer(s.length))):r.push(new Uint8Array([11]));// return
}return r}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},r=[],n={};for(let s of this.glyphs){let a=this.cff.fdForGlyph(s);if(null==a)continue;t[a]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[a])),r.push({}),n[a]=e.FDArray.length-1),t[a]=!0,e.FDSelect.fds.push(n[a]);let i=this.font.getGlyph(s);for(let e in i.path,i._usedSubrs)r[n[a]][e]=!0}for(let t=0;t<e.FDArray.length;t++){let n=e.FDArray[t];delete n.FontName,n.Private&&n.Private.Subrs&&(n.Private=Object.assign({},n.Private),n.Private.Subrs=this.subsetSubrs(n.Private.Subrs,r[t]))}}createCIDFontdict(e){let t={};for(let e of this.glyphs){let r=this.font.getGlyph(e);for(let e in r.path,r._usedSubrs)t[e]=!0}let r=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(r.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:r}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),rl.length+this.strings.length-1):null}encode(){this.subsetCharstrings();let e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},t=Object.assign({},this.cff.topDict);for(let r of(t.Private=null,t.charset=e,t.Encoding=null,t.CharStrings=this.charstrings,["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"]))t[r]=this.addString(this.cff.string(t[r]));t.ROS=[this.addString("Adobe"),this.addString("Identity"),0],t.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(t):this.createCIDFontdict(t);let r={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[t],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return nt.toBuffer(r)}constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw Error("Not a CFF Font")}}class ou{static probe(e){let t=ao.decode(e.slice(0,4));return"true"===t||"OTTO"===t||t===String.fromCharCode(0,1,0,0)}setDefaultLanguage(e=null){this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(t){tC&&(console.error(`Error decoding table ${e.tag}`),console.error(t.stack))}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=as.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,r=this._getTableStream(e.tag),n=ar[e.tag].decode(r,this,e.length);return this.stream.pos=t,n}/**
   * Gets a string from the font's `name` table
   * `lang` is a BCP-47 language code.
   * @return {string}
   */getName(e,t=this.defaultLanguage||tD){let r=this.name&&this.name.records[e];return r&&(r[t]||r[this.defaultLanguage]||r[tD]||r.en||r[Object.keys(r)[0]]// Seriously, ANY language would be fine
)||null}/**
   * The unique PostScript name for this font, e.g. "Helvetica-Bold"
   * @type {string}
   */get postscriptName(){return this.getName("postscriptName")}/**
   * The font's full name, e.g. "Helvetica Bold"
   * @type {string}
   */get fullName(){return this.getName("fullName")}/**
   * The font's family name, e.g. "Helvetica"
   * @type {string}
   */get familyName(){return this.getName("fontFamily")}/**
   * The font's sub-family, e.g. "Bold".
   * @type {string}
   */get subfamilyName(){return this.getName("fontSubfamily")}/**
   * The font's copyright information
   * @type {string}
   */get copyright(){return this.getName("copyright")}/**
   * The font's version number
   * @type {string}
   */get version(){return this.getName("version")}/**
   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
   * @type {number}
   */get ascent(){return this.hhea.ascent}/**
   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)
   * @type {number}
   */get descent(){return this.hhea.descent}/**
   * The amount of space that should be included between lines
   * @type {number}
   */get lineGap(){return this.hhea.lineGap}/**
   * The offset from the normal underline position that should be used
   * @type {number}
   */get underlinePosition(){return this.post.underlinePosition}/**
   * The weight of the underline that should be used
   * @type {number}
   */get underlineThickness(){return this.post.underlineThickness}/**
   * If this is an italic font, the angle the cursor should be drawn at to match the font design
   * @type {number}
   */get italicAngle(){return this.post.italicAngle}/**
   * The height of capital letters above the baseline.
   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
   * @type {number}
   */get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}/**
   * The height of lower case letters in the font.
   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
   * @type {number}
   */get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}/**
   * The number of glyphs in the font.
   * @type {number}
   */get numGlyphs(){return this.maxp.numGlyphs}/**
   * The size of the font’s internal coordinate grid
   * @type {number}
   */get unitsPerEm(){return this.head.unitsPerEm}/**
   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.
   * @type {BBox}
   */get bbox(){return Object.freeze(new ap(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new ah(this.cmap)}/**
   * An array of all of the unicode code points supported by the font.
   * @type {number[]}
   */get characterSet(){return this._cmapProcessor.getCharacterSet()}/**
   * Returns whether there is glyph in the font for the given unicode code point.
   *
   * @param {number} codePoint
   * @return {boolean}
   */hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}/**
   * Maps a single unicode code point to a Glyph object.
   * Does not perform any advanced substitutions (there is no context to do so).
   *
   * @param {number} codePoint
   * @return {Glyph}
   */glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}/**
   * Returns an array of Glyph objects for the given string.
   * This is only a one-to-one mapping from characters to glyphs.
   * For most uses, you should use font.layout (described below), which
   * provides a much more advanced mapping supporting AAT and OpenType shaping.
   *
   * @param {string} string
   * @return {Glyph[]}
   */glyphsForString(e){let t=[],r=e.length,n=0,s=-1,a=-1;for(;n<=r;){let i=0,o=0;if(n<r){if(55296<=// Decode the next codepoint from UTF 16
(i=e.charCodeAt(n++))&&i<=56319&&n<r){let t=e.charCodeAt(n);56320<=t&&t<=57343&&(n++,i=((1023&i)<<10)+(1023&t)+65536)}// Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.
o=65024<=i&&i<=65039||917760<=i&&i<=917999?1:0}else n++;0===a&&1===o?t.push(this.getGlyph(this._cmapProcessor.lookup(s,i),[s,i])):0===a&&0===o&&t.push(this.glyphForCodePoint(s)),s=i,a=o}return t}get _layoutEngine(){return new i_(this)}/**
   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.
   *
   * @param {string} string
   * @param {string[]} [userFeatures]
   * @param {string} [script]
   * @param {string} [language]
   * @param {string} [direction]
   * @return {GlyphRun}
   */layout(e,t,r,n,s){return this._layoutEngine.layout(e,t,r,n,s)}/**
   * Returns an array of strings that map to the given glyph id.
   * @param {number} gid - glyph id
   */stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}/**
   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)
   * (or mapped AAT tags) supported by the font.
   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.
   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.
   *
   * @type {string[]}
   */get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e,t=[]){return!this._glyphs[e]&&(this.directory.tables.glyf?this._glyphs[e]=new i6(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new i8(e,t,this))),this._glyphs[e]||null}/**
   * Returns a glyph object for the given glyph id.
   * You can pass the array of code points this glyph represents for
   * your use later, and it will be stored in the glyph object.
   *
   * @param {number} glyph
   * @param {number[]} characters
   * @return {Glyph}
   */getGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new i7(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new ot(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}/**
   * Returns a Subset for this font.
   * @return {Subset}
   */createSubset(){return this.directory.tables["CFF "]?new ol(this):new oo(this)}/**
   * Returns an object describing the available variation axes
   * that this font supports. Keys are setting tags, and values
   * contain the axis name, range, and default value.
   *
   * @type {object}
   */get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}/**
   * Returns an object describing the named variation instances
   * that the font designer has specified. Keys are variation names
   * and values are the variation settings for this instance.
   *
   * @type {object}
   */get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let r={};for(let e=0;e<this.fvar.axis.length;e++)r[this.fvar.axis[e].axisTag.trim()]=t.coord[e];e[t.name.en]=r}return e}/**
   * Returns a new font with the given variation settings applied.
   * Settings can either be an instance name, or an object containing
   * variation tags as specified by the `variationAxes` property.
   *
   * @param {object} settings
   * @return {TTFFont}
   */getVariation(e){if(!(this.directory.tables.fvar&&(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2)))throw Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"==typeof e&&(e=this.namedVariations[e]),"object"!=typeof e)throw Error("Variation settings must be either a variation name or settings object.");// normalize the coordinates
let t=this.fvar.axis.map((t,r)=>{let n=t.axisTag.trim();return n in e?Math.max(t.minValue,Math.min(t.maxValue,e[n])):t.defaultValue}),r=new er(this.stream.buffer);r.pos=this._directoryPos;let n=new ou(r,t);return n._tables=this._tables,n}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return(// Ignore if no variation coords and not CFF2
e||this.CFF2?(e||(e=this.fvar.axis.map(e=>e.defaultValue)),new or(this,e)):null)}// Standardized format plugin API
getFont(e){return this.getVariation(e)}constructor(e,t=null){// define properties for each table to lazily parse
for(let r in tv(eL)(this,"type","TTF"),this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory(),this.directory.tables){let e=this.directory.tables[r];ar[r]&&e.length>0&&Object.defineProperty(this,r,{get:this._getTable.bind(this,e)})}}}tv(eU)([tB],ou.prototype,"bbox",null),tv(eU)([tB],ou.prototype,"_cmapProcessor",null),tv(eU)([tB],ou.prototype,"characterSet",null),tv(eU)([tB],ou.prototype,"_layoutEngine",null),tv(eU)([tB],ou.prototype,"variationAxes",null),tv(eU)([tB],ou.prototype,"namedVariations",null),tv(eU)([tB],ou.prototype,"_variationProcessor",null);let oc=new eP({tag:new eS(4),offset:new eM(ef,"void",{type:"global"}),compLength:ef,length:ef,origChecksum:ef}),oh=new eP({tag:new eS(4),flavor:ef,length:ef,numTables:ec,reserved:new eD(ec),totalSfntSize:ef,majorVersion:ec,minorVersion:ec,metaOffset:ef,metaLength:ef,metaOrigLength:ef,privOffset:ef,privLength:ef,tables:new ev(oc,"numTables")});oh.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e};class of extends i6{_decode(){// We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.
return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(...e){super(...e),tv(eL)(this,"type","WOFF2")}}const od={decode(e){let t=0,r=[0,1,2,3,4];for(let n=0;n<r.length;n++){r[n];let s=e.readUInt8();// If any of the top seven bits are set then we're about to overflow.
if(3758096384&t)throw Error("Overflow");if(t=t<<7|127&s,(128&s)==0)return t}throw Error("Bad base 128 number")}};let op=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],og=new eP({flags:eu,customTag:new eE(new eS(4),e=>(63&e.flags)==63),tag:e=>e.customTag||op[63&e.flags],length:od,transformVersion:e=>e.flags>>>6&3,transformed:e=>"glyf"===e.tag||"loca"===e.tag?0===e.transformVersion:0!==e.transformVersion,transformLength:new eE(od,e=>e.transformed)}),om=new eP({tag:new eS(4),flavor:ef,length:ef,numTables:ec,reserved:new eD(ec),totalSfntSize:ef,totalCompressedSize:ef,majorVersion:ec,minorVersion:ec,metaOffset:ef,metaLength:ef,metaOrigLength:ef,privOffset:ef,privLength:ef,tables:new ev(og,"numTables")});om.process=function(){let e={};for(let t=0;t<this.tables.length;t++){let r=this.tables[t];e[r.tag]=r}return this.tables=e};// Special class that accepts a length and returns a sub-stream for that data
class oy{decode(e,t){return new er(this._buf.decode(e,t))}constructor(e){this.length=e,this._buf=new ek(e)}}// This struct represents the entire glyf table
let ob=new eP({version:ef,numGlyphs:ec,indexFormat:ec,nContourStreamSize:ef,nPointsStreamSize:ef,flagStreamSize:ef,glyphStreamSize:ef,compositeStreamSize:ef,bboxStreamSize:ef,instructionStreamSize:ef,nContours:new oy("nContourStreamSize"),nPoints:new oy("nPointsStreamSize"),flags:new oy("flagStreamSize"),glyphs:new oy("glyphStreamSize"),composites:new oy("compositeStreamSize"),bboxes:new oy("bboxStreamSize"),instructions:new oy("instructionStreamSize")});function oA(e){let t=e.readUInt8();return 253===t?e.readUInt16BE():255===t?e.readUInt8()+253:254===t?e.readUInt8()+506:t}function ow(e,t){return 1&e?t:-t}let ov=new eT(ef,{65536:{numFonts:ef,offsets:new ev(ef,"numFonts")},131072:{numFonts:ef,offsets:new ev(ef,"numFonts"),dsigTag:ef,dsigLength:ef,dsigOffset:ef}}),ox=new eS(eu);new eP({len:ef,buf:new ek("len")});let oC=new eP({id:ec,nameOffset:ep,attr:eu,dataOffset:eh,handle:ef}),oI=new eP({name:new eS(4),maxTypeIndex:ec,refList:new eM(ec,new ev(oC,e=>e.maxTypeIndex+1),{type:"parent"})}),ok=new eP({length:ec,types:new ev(oI,e=>e.length+1)}),oE=new eP({reserved:new eD(eu,24),typeList:new eM(ec,ok),nameListOffset:new eM(ec,"void")}),oD=new eP({dataOffset:ef,map:new eM(ef,oE),dataLength:ef,mapLength:ef});tk(ou),tk(class extends ou{static probe(e){return"wOFF"===ao.decode(e.slice(0,4))}_decodeDirectory(){this.directory=oh.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t){if(this.stream.pos=t.offset,!(t.compLength<t.length))return this.stream;{this.stream.pos+=2;// skip deflate header
let e=new Uint8Array(t.length),r=tv(ez)(this.stream.readBuffer(t.compLength-2),e);return new er(r)}}return null}constructor(...e){super(...e),tv(eL)(this,"type","WOFF")}}),tk(class extends ou{static probe(e){return"wOF2"===ao.decode(e.slice(0,4))}_decodeDirectory(){this.directory=om.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){// decompress data and setup table offsets if we haven't already
if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let e in this.directory.tables){let r=this.directory.tables[e];r.offset=t,t+=null!=r.transformLength?r.transformLength:r.length}let r=tv(tA)(e,t);if(!r)throw Error("Error decoding compressed data in WOFF2");this.stream=new er(r),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}// Override this method to get a glyph and return our
// custom subclass if there is a glyf table.
_getBaseGlyph(e,t=[]){if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new of(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=ob.decode(this.stream),t=[];for(let r=0;r<e.numGlyphs;r++){let r={},n=e.nContours.readInt16BE();if(r.numberOfContours=n,n>0){let t=[],s=0;for(let r=0;r<n;r++)s+=oA(e.nPoints),t.push(s);r.points=function(e,t,r){let n;let s=n=0,a=[];for(let l=0;l<r;l++){let r=0,l=0,u=e.readUInt8(),c=!(u>>7);if((u&=127)<10)r=0,l=ow(u,((14&u)<<7)+t.readUInt8());else if(u<20)r=ow(u,((u-10&14)<<7)+t.readUInt8()),l=0;else if(u<84){var i=u-20,o=t.readUInt8();r=ow(u,1+(48&i)+(o>>4)),l=ow(u>>1,1+((12&i)<<2)+(15&o))}else if(u<120){var i=u-84;r=ow(u,1+(i/12<<8)+t.readUInt8()),l=ow(u>>1,1+(i%12>>2<<8)+t.readUInt8())}else if(u<124){var o=t.readUInt8();let e=t.readUInt8();r=ow(u,(o<<4)+(e>>4)),l=ow(u>>1,((15&e)<<8)+t.readUInt8())}else r=ow(u,t.readUInt16BE()),l=ow(u>>1,t.readUInt16BE());s+=r,n+=l,a.push(new i4(c,!1,s,n))}return a}(e.flags,e.glyphs,s);for(let e=0;e<n;e++)r.points[t[e]-1].endContour=!0;oA(e.glyphs)}else n<0&&i6.prototype._decodeComposite.call({_font:this},r,e.composites)&&oA(e.glyphs);t.push(r)}this._transformedGlyphs=t}constructor(...e){super(...e),tv(eL)(this,"type","WOFF2")}}),tk(class{static probe(e){return"ttcf"===ao.decode(e.slice(0,4))}getFont(e){for(let t of this.header.offsets){let r=new er(this.stream.buffer);r.pos=t;let n=new ou(r);if(n.postscriptName===e||n.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&n.postscriptName.every((t,r)=>e[r]===t))return n}return null}get fonts(){let e=[];for(let t of this.header.offsets){let r=new er(this.stream.buffer);r.pos=t,e.push(new ou(r))}return e}constructor(e){if(tv(eL)(this,"type","TTC"),this.stream=e,"ttcf"!==e.readString(4))throw Error("Not a TrueType collection");this.header=ov.decode(e)}}),tk(class{static probe(e){let t=new er(e);try{var r=oD.decode(t)}catch(e){return!1}for(let e of r.map.typeList.types)if("sfnt"===e.name)return!0;return!1}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,n=new er(this.stream.buffer.slice(r)),s=new ou(n);if(s.postscriptName===e||s.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&s.postscriptName.every((t,r)=>e[r]===t))return s}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,n=new er(this.stream.buffer.slice(r));e.push(new ou(n))}return e}constructor(e){for(let t of(tv(eL)(this,"type","DFont"),this.stream=e,this.header=oD.decode(this.stream),this.header.map.typeList.types)){for(let e of t.refList)e.nameOffset>=0?(this.stream.pos=e.nameOffset+this.header.map.nameListOffset,e.name=ox.decode(this.stream)):e.name=null;"sfnt"===t.name&&(this.sfnt=t)}}}),Object.keys(tx).forEach(function(e){"default"===e||"__esModule"===e||ee.hasOwnProperty(e)||Object.defineProperty(ee,e,{enumerable:!0,get:function(){return tx[e]}})});var oS=[],oB=[],oP=[],oO="",oT=window.location.href,oM="twemoji";// For example, converter rgba(67, 255, 100, 255) to #43ff64
function oF(e){return"#"+e.slice(0,3).map(e=>e.toString(16)).map(e=>1==e.length?"0"+e:e)// Padding zero to two digits
.join("")}function oL(e){var t=[];let r=[...e];return r.forEach((e,r)=>{if(1===e.length)t.push(e.charCodeAt(0).toString("16").toUpperCase());else if(2===e.length){let r=(e.charCodeAt(0)-55296)*1024+(e.charCodeAt(1)-56320)+65536;t.push(r.toString("16").toUpperCase())}}),`U+${t.join("+")}`}function oU(e){try{var t=[];let n=e.replace("U+","").split("+");n.forEach((e,r)=>{let n=parseInt(e,16),s=String.fromCodePoint(n);console.log(s),t.push(s)});var r=t.join("");if(/^(\p{Extended_Pictographic}|\p{Emoji_Component}|\p{Emoji})+$/u.test(r))return r;throw err}catch(e){throw e}}// Check if two RGBA colors are equal
function oG(e,t){return e.every((e,r)=>e===t[r])}// Update the CSS palette
function oR(e){"noto"===oM?document.getElementById("palette-overrides-style").innerHTML=`
		@font-palette-values --palette {
			font-family: "Noto Color Emoji";
			base-palette: 0;
			override-colors: ${e};
		}
		`:"twemoji"===oM&&(document.getElementById("palette-overrides-style").innerHTML=`
    @font-palette-values --palette {
        font-family: "Twemoji";
        base-palette: 0;
        override-colors: ${e};
    }
    `)}// Update a palette from input entry
function oN(){let e=// Format Example:
// override-colors:
// 0 rgba(184, 126, 50, 255),
// 1 rgba(120, 8, 150, 255),
// ...
// If customize colors are different from default colors, record them into overrides 
"noto"===oM?oB.map((e,t)=>`${t} rgba(${e.join(", ")})`).filter((e,t)=>!oG(oB[t],oS[t])).join(", "):"twemoji"===oM?oB.map((e,t)=>`${oP[t]} rgba(${e.join(", ")})`).filter((e,t)=>!oG(oB[t],oS[t])).join(", "):void 0,t=document.getElementById("customized-emoji").innerHTML;oR(e),window.location.hash=`${"noto"===oM?"n":"t"}-${oL(t)}-${encodeURIComponent(e.replaceAll(" ","").replaceAll(",255)",")").replaceAll("rgba","").replaceAll(",","*"))}`,oT=window.location.href}async function oz(e,t){if("noto"===oM){document.getElementById("customized-emoji").style.fontFamily="Noto Color Emoji";// Fetch Google Font Noto Sans Emoji CSS
let t=await fetch("https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&text="+encodeURIComponent(e));n=await t.text();let r=n.split("\n").filter(e=>-1!=e.indexOf("src:"))[0].match(/src:\s+url\(([^)]+)\)/)[1],s=await (await fetch(r)).arrayBuffer(),a=new w.from(s),i=ee.create(a);oS=i.CPAL.colorRecords.slice(i.CPAL.colorRecordIndices[0],i.CPAL.colorRecordIndices[0]+i.CPAL.numPaletteEntries).map(e=>[e.red,e.green,e.blue,e.alpha])}else"twemoji"===oM&&(document.getElementById("customized-emoji").style.fontFamily="Twemoji",n=`
        @font-face {
            font-family: "Twemoji";
        `,// fontURL = "https://cdn.jsdelivr.net/npm/twemoji-colr-font@14.1.3/twemoji.woff2"
oP=[],o.layout(e).glyphs[0].layers.forEach((e,t)=>{let r=e.color;oP.push(o.CPAL.colorRecords.indexOf(r))}),oS=(oP=[...new Set(oP)]).map(e=>o.CPAL.colorRecords[e]).map(e=>[e.red,e.green,e.blue,e.alpha]));// Reset CSS style
document.getElementById("emoji-style").innerHTML=n,document.getElementById("customized-emoji").innerHTML=e,t||(document.getElementById("palette-overrides-style").innerHTML=""),// Copy default palette to customized palette
oB=oS.map(e=>[...e]);// Reset color color-pickers
let r=document.getElementById("color-pickers");for(;r.firstChild;)r.removeChild(r.firstChild);// Check if color picker should be override
var n,s={};0!==oO.length&&oO.split("), ").forEach((e,t)=>{let r=e.match(/\d+/g).map(e=>parseInt(e));"noto"==oM?s[r[0]]=[r[1],r[2],r[3],r[4]]:"twemoji"==oM&&(s[oP.indexOf(r[0])]=[r[1],r[2],r[3],r[4]])}),// Add each color picker under color-picker DOM
oB.forEach((e,n)=>{let a=document.createElement("input");a.setAttribute("class","color-block"),a.setAttribute("id",`color-block-${n}`),a.type="color",n in s&&t?a.value=oF(s[n]):a.value=oF(e),r.appendChild(a),a.addEventListener("input",e=>{var t;t=e.target.value.substring(1),[0,1,2].forEach(e=>{oB[n][e]=parseInt(t.substring(2*e,2*e+2),16)}),oN()})});let a=Array.from(document.fonts.values()).map(e=>e.load());await Promise.all(a),t||(window.location.hash=`${"noto"===oM?"n":"t"}-${oL(e)}`),oV("reference-canvas",e)}function oV(e,t){console.log(`→ ${t}`);let r=document.getElementById(e),n=r.getContext("2d");"result-canvas"==e&&(r.width=10*document.getElementById("customized-emoji").clientWidth,r.height=10*document.getElementById("customized-emoji").clientHeight,n.scale(10,10)),n.clearRect(0,0,r.width,r.height);// Get font size from px to em
let s=parseFloat(window.getComputedStyle(document.getElementById("customized-emoji")).getPropertyValue("font-size")),a=parseFloat(window.getComputedStyle(document.getElementById("customized-emoji").parentElement).getPropertyValue("font-size")),i=s/a;"noto"===oM?n.font=`${i}em "Noto Color Emoji"`:"twemoji"===oM&&(n.font=`${i}em "Twemoji"`),n.textBaseline="middle",n.textAlign="center","result-canvas"==e?n.fillText(t,r.width/20,r.height/20):n.fillText(t,r.width/2,r.height/2)}function oW(e){let t=document.getElementById("emoji-picker-mobile");"none"===t.style.display?t.style.display="block":t.style.display="none",oz(e,!1)}// See https://github.com/missive/emoji-mart for more info and settings
function oj(){var e;"twemoji"===oM?e={onEmojiSelect:(e,t)=>oW(e.native),set:"twitter",emojiSize:36,perLine:8,theme:"light",maxFrequentRows:1,exceptEmojis:["one","two","three","four","five","six","seven","eight","nine","zero","keycap_star","hash"]}:"noto"===oM&&(e={onEmojiSelect:(e,t)=>oW(e.native),set:"google",emojiSize:36,perLine:8,theme:"light",maxFrequentRows:1,exceptEmojis:["one","two","three","four","five","six","seven","eight","nine","zero","keycap_star","hash"]});let t=document.getElementById("emoji-picker-desktop"),r=document.getElementById("emoji-picker-mobile");for(;t.firstChild;)t.removeChild(t.firstChild);for(;r.firstChild;)r.removeChild(r.firstChild);// Desktop Size
let n=new EmojiMart.Picker(e);t.appendChild(n);// Mobile size
let s=new EmojiMart.Picker(e);r.appendChild(s)}function oY(){Array.from(document.getElementsByClassName("download-button")).forEach(function(e){for(;e.firstChild;)e.removeChild(e.firstChild);e.insertAdjacentHTML("afterbegin",`
        <svg style="color: white" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z" />
        </svg>
`)})}// Default Emoji List
function oH(){let e=["\uD83D\uDE00","\uD83D\uDE19","\uD83D\uDE0E","\uD83D\uDE2A","\uD83E\uDD24","\uD83D\uDE34","\uD83D\uDE30","\uD83E\uDEC1","\uD83E\uDDB7","\uD83E\uDDB4","\uD83D\uDC40","\uD83D\uDE80","\uD83D\uDC4D","\uD83E\uDD1F","\uD83E\uDD18","\uD83E\uDD19","\uD83E\uDDDA‍♀️","\uD83E\uDDDA","\uD83E\uDDDA‍♂️","\uD83E\uDDD1‍⚕️","\uD83D\uDC68‍⚕️","\uD83D\uDC69‍⚕️","\uD83E\uDDD1‍\uD83C\uDF93","\uD83D\uDC68‍\uD83C\uDF93","\uD83D\uDC69‍\uD83C\uDF93","\uD83E\uDDD1‍\uD83C\uDFEB","\uD83D\uDC68‍\uD83C\uDFEB","\uD83D\uDC69‍\uD83C\uDFEB","\uD83E\uDDD1‍⚖️","\uD83D\uDC68‍⚖️","\uD83D\uDC69‍⚖️","\uD83C\uDF1F","\uD83E\uDDE4","\uD83C\uDF63","\uD83C\uDF64","\uD83C\uDF65","\uD83E\uDD6E","\uD83C\uDF61","\uD83E\uDD5F","\uD83C\uDF54","\uD83D\uDC08","\uD83D\uDC08‍⬛","\uD83D\uDC1F","\uD83C\uDF55","\uD83C\uDF89","\uD83D\uDC13","\uD83D\uDC31","\uD83C\uDF3A","\uD83C\uDF4E","\uD83C\uDFDB","\uD83D\uDC2D","\uD83D\uDC2E","\uD83D\uDC2F","\uD83D\uDC30","\uD83D\uDC32","\uD83D\uDC0D","\uD83D\uDC34","\uD83D\uDC0F","\uD83D\uDC35","\uD83D\uDC14","\uD83D\uDC36","\uD83D\uDC37","\uD83D\uDC15","\uD83D\uDC11","\uD83D\uDC24","\uD83E\uDD95","\uD83E\uDD96","\uD83D\uDC33","\uD83D\uDC0B","\uD83D\uDC2C","\uD83E\uDD8B","\uD83C\uDF40","\uD83C\uDF52","\uD83C\uDF2D","\uD83C\uDF69","\uD83C\uDFC5","\uD83D\uDE82","\uD83D\uDE97","\uD83E\uDD7B","\uD83E\uDDE5","\uD83D\uDC5C","\uD83D\uDC62","\uD83D\uDCF1","\uD83E\uDDEE","\uD83E\uDE74","\uD83C\uDFAE","\uD83C\uDFA0","\uD83D\uDEDD","\uD83C\uDFA1","\uD83C\uDFA2","\uD83D\uDC88","\uD83C\uDFAA","\uD83C\uDF6D","\uD83E\uDD84","\uD83C\uDFA8"],t=Math.floor(Math.random()*e.length);return e[t]}async function oq(){a=await (await fetch("https://cdn.jsdelivr.net/npm/twemoji-colr-font@14.1.3/twemoji.woff2")).arrayBuffer(),i=new w.from(a),o=ee.create(i);// Set canvas dimensions based on customized-emoji size
let e=document.getElementById("reference-canvas");e.width=document.getElementById("customized-emoji").clientWidth,e.height=document.getElementById("customized-emoji").clientHeight;var t="";if(window.location.hash)try{let e=window.location.hash.substring(1),r=e.split("-");"n"==r[0]?(oM="noto",document.getElementById("noto-emoji-share-notice").classList.add("d-block"),document.getElementById("emojiStyleSwitch").checked=!0):"t"==r[0]&&(oM="twemoji",document.getElementById("noto-emoji-share-notice").classList.add("d-none")),r.length>2&&(oO=decodeURIComponent(r[2].replaceAll(")","*255)").replaceAll(")*",")* ").replaceAll("("," rgba(").replaceAll("*",",")),oR(oO)),t=oU(r[1]),document.getElementById("customized-emoji").innerHTML=t,oz(t,!0),console.log(`→ Url Info: ${t} with ${oM} 🔗`)}catch(e){console.log("→ Get invalid url ❓",e),document.getElementById("noto-emoji-share-notice").classList.add("d-none"),console.log("→ Random select an emoji \uD83C\uDFB0"),oz(t=oH(),!0),window.location.hash=`${"noto"===oM?"n":"t"}-${oL(t)}`}else console.log("→ Get home url \uD83C\uDFDA"),document.getElementById("noto-emoji-share-notice").classList.add("d-none"),console.log("→ Random select an emoji \uD83C\uDFB0"),oz(t=oH(),!0),window.location.hash=`${"noto"===oM?"n":"t"}-${oL(t)}`;oj(),oV("reference-canvas",t)}[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function(e){return new bootstrap.Tooltip(e)}),document.addEventListener("DOMContentLoaded",function(){let e=document.getElementById("emoji-picker-button"),t=document.getElementById("emoji-picker-mobile");e.addEventListener("click",function(){"none"===t.style.display?t.style.display="block":t.style.display="none"})}),Array.from(document.getElementsByClassName("random-emoji-button")).forEach(function(e){e.addEventListener("click",function(){console.log("→ Random Select an Emoji \uD83C\uDFB2"),oz(oH(),!1),oY()})}),Array.from(document.getElementsByClassName("random-color-button")).forEach(function(e){e.addEventListener("click",function(){console.log("→ Random Set Colors \uD83C\uDFA8"),function(){function e(){return Math.floor(256*Math.random())+0}// const numPicker = document.querySelectorAll(".color-block").length;
oB.forEach((t,r)=>{oB[r]=[e(),e(),e(),255],document.getElementById(`color-block-${r}`).value=oF(oB[r])}),oN()}(),oY()})}),Array.from(document.getElementsByClassName("reset-button")).forEach(function(e){e.addEventListener("click",function(){console.log("→ Reset Palette \uD83E\uDE84");let e=document.getElementById("customized-emoji").innerHTML;oz(e,!1),oY()})}),Array.from(document.getElementsByClassName("download-button")).forEach(function(e){e.addEventListener("click",function(){let t=document.getElementById("result-canvas");oV("result-canvas",document.getElementById("customized-emoji").innerHTML);let r=t.toDataURL("image/png"),n=document.createElement("a");// change icon
for(console.log(`→ Downloading Your ${document.getElementById("customized-emoji").innerHTML} 💾`),n.href=r,n.download=`${oL(document.getElementById("customized-emoji").innerHTML)}-EmojiSalon.png`,n.click();e.firstChild;)e.removeChild(e.firstChild);e.insertAdjacentHTML("afterbegin",`
                <svg style="color: white" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                <path d="M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0zM9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1zm1.354 4.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708.708z"/>
                </svg>
                `)})}),Array.from(document.getElementsByClassName("share-button")).forEach(function(e){e.addEventListener("click",function(){oV("result-canvas",document.getElementById("customized-emoji").innerHTML),document.getElementById("result-image").src=document.getElementById("result-canvas").toDataURL("image/png"),oY(),Array.from(document.getElementsByClassName("copy-link")).forEach(function(e){for(;e.firstChild;)e.removeChild(e.firstChild);e.insertAdjacentHTML("afterbegin",`
                <svg style="color: white" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                <path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" />
                <path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" />
                </svg>
        `)}),function(){let e=document.getElementById("shareBoard"),t=e.querySelector(".close");e.style.display="block",t.onclick=function(){e.style.display="none"},window.onclick=function(t){t.target===e&&(e.style.display="none")}}()})}),Array.from(document.getElementsByClassName("share-facebook")).forEach(function(e){e.addEventListener("click",function(){let e=`https://www.facebook.com/sharer.php?u=${encodeURIComponent(oT)}`;window.open(e,"_blank")})}),Array.from(document.getElementsByClassName("share-twitter")).forEach(function(e){e.addEventListener("click",function(){let e=`#EmojiSalon ${oT}`,t=`https://twitter.com/intent/tweet?text=${encodeURIComponent(e)}`;window.open(t,"_blank")})}),Array.from(document.getElementsByClassName("share-line")).forEach(function(e){e.addEventListener("click",function(){let e=`https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(oT)}`;window.open(e,"_blank")})}),Array.from(document.getElementsByClassName("share-linkedin")).forEach(function(e){e.addEventListener("click",function(){let e=`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(oT)}`;window.open(e,"_blank")})}),Array.from(document.getElementsByClassName("copy-link")).forEach(function(e){e.addEventListener("click",function(){var t=document.createElement("input");// change icon
for(document.body.appendChild(t),t.value=window.location.href,t.select(),document.execCommand("copy"),document.body.removeChild(t);e.firstChild;)e.removeChild(e.firstChild);e.insertAdjacentHTML("afterbegin",`
            <svg style="color: white" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
            <path d="M6.5 0A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3Zm3 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3Z"/>
            <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1A2.5 2.5 0 0 1 9.5 5h-3A2.5 2.5 0 0 1 4 2.5v-1Zm6.854 7.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708Z"/>
            </svg>
    `)})}),document.addEventListener("DOMContentLoaded",function(){let e=document.getElementById("emojiStyleSwitch");e.addEventListener("change",function(){e.checked?(oM="noto",console.log("→ Emoji Style Change to Noto Color Emoji \uD83D\uDC40"),document.getElementById("noto-emoji-share-notice").classList.remove("d-none"),document.getElementById("noto-emoji-share-notice").classList.add("d-block")):(oM="twemoji",console.log("→ Emoji Style Change to Twemoji \uD83D\uDC40"),document.getElementById("noto-emoji-share-notice").classList.remove("d-block"),document.getElementById("noto-emoji-share-notice").classList.add("d-none")),oj()})}),// Listen opentype color font format support detector
// Reference: https://github.com/RoelN/ChromaCheck
function(){console.log("→ Checking compatibility about color font of your browser \uD83D\uDD75️");var e,t=document.getElementById("opentype-support-detector"),r="chromacheck-",n=20;// Stick SVG on canvas and check control glyph to see if font rendered
function s(){// Check Control glyph.
if(o.drawImage(l,0,0),0===o.getImageData(10,110,1,1).data[1])return clearInterval(e),// Canvas has been drawn, check for which color glyphs we see
function(){var e={};// Add class to HTML tag for each supported color format
for(var n in e.cbdt=100===o.getImageData(10,10,1,1).data[0],e.colr=200===o.getImageData(10,30,1,1).data[0],e.sbix=150===o.getImageData(10,50,1,1).data[0],e.svg=50===o.getImageData(10,70,1,1).data[0],e.colrv1=250===o.getImageData(10,90,1,1).data[0],e)e.hasOwnProperty(n)&&(e[n]?t.className+=" "+r+n// success
:t.className+=" "+r+n+"-failed"//failed   
)}(),!0;--n<=0&&(clearInterval(e),a())}// Font, SVG, or canvas failed
function a(){t.className+=" "+r+"failed"}// Draw color glyphs to a canvas through SVG
try{var i=document.createElement("canvas"),o=i.getContext("2d"),l=new Image;i.width=20,i.height=120,l.onload=function(){s()||(e=window.setInterval(s,1))},l.src="data:image/svg+xml;charset=utf-8,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="120" style="background:#fff;fill:#000;"><style type="text/css">@font-face{font-family:"chromacheck-cbdt";src:url(data:application/x-font-woff;base64,d09GRgABAAAAAALkAAwAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQkRUAAACVAAAAGAAAABlKWauy0NCTEMAAAK0AAAALQAAAFDwVcDTT1MvMgAAAYAAAAA6AAAAYBf0J01jbWFwAAABxAAAACcAAAAsAAzpNmdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLx0hoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C3AsWcG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAA4bSjsh/j+W2+MkizMIDApQVMAiD6Wm2DNYhmYQCLczAwgSgAAJIHngB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXzS2YWMB9IogMFBgYAAI4IegAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvm//8hpNg/sDwDAFyDBygAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAPIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsp0YXBhCAHWIBft4AWNgZsALAAB9AAR4AWNgYmAICAAhBoaIzgA/d14uKS4gm9fTwyUISAeAMCMzkNxyP+EdkGIO8AlxTWFgeLEkTg3IFfB0cQypYExeIC3BujhBBChfwMB4Z+L7yQxA4Onq57LOKaEJAK3VFft4AWNgYgABRiC2AGIJKJshAAhhAMEGyzIGBCgASbA6DiApCKRZoLKJAGrOAtkAAAA=) format("woff");}@font-face{font-family:"chromacheck-colr";src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAKAAAwAAAAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACVAAAABYAAAAYAAIAJUNQQUwAAAJsAAAAEgAAABLJAAAQT1MvMgAAAYAAAAA6AAAAYBfxJ0pjbWFwAAABxAAAACcAAAAsAAzpM2dseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLumdoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C5wsecG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAAYQ5+qdB4fpuvDNIsDCBwaQGTAIi+VlscBaJZGMDiHAxMIAoAtjIF/QB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXDSwYWEBdIYgAFBgYA/8sIdAAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kuG//8hpDgjWJ4BAFVMBiYAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAEtxgUNgAAAAMHHIQTShTlOAty9/4bf7AARCwlBNhBw4L/43qXjYGUmf19TMuLcj/BJL3XfBg54AWNgZsALAAB9AAR4AWNgYGAEYj4gFgGygGwICQACOwAoAAAAAAABAAEAAQAAAA4AAAAAyP8AAA==) format("woff");}@font-face{font-family:"chromacheck-sbix";src:url(data:application/x-font-woff;base64,d09GRgABAAAAAALkAAsAAAAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABbAAAADoAAABgFxIli2NtYXAAAAGwAAAAJwAAACwADOk0Z2x5ZgAAAeAAAAAWAAAAFjdEBkBoZWFkAAABCAAAADAAAAA2C6KlkGhoZWEAAAE4AAAAFgAAACQGQQMiaG10eAAAAagAAAAGAAAABgMgAABsb2NhAAAB2AAAAAYAAAAGAAsAAG1heHAAAAFQAAAAGgAAACACDwAbbmFtZQAAAfgAAABDAAAATgSgDQdwb3N0AAACPAAAAAwAAAAgAAMAAHNiaXgAAAJIAAAAnAAAAQQlRrDFeAFjYGRgAGHhBIvaeH6brwzSzAoMQHBpAZMAiL62JcEZRDMrgMU5GJhAPADavQcJeAFjYGRgYFZgYECQQBFUwAgACqMAbQAAeAFjYGRgYGACQxBgBJNcDCCuBIgJAAHcAC0AAHgBY2BhVmCcwMDKwMA0k+kMAwNDP4RmfM1gzMjJgAoYBZA4CkDAcOAl40tGZgUQH0iiA6AIABEmCNMAAAMgAAAAAAAAeAFjYGBgZGAGYgYGHgYWBgUgzQKEQP5Lxv//IaQ4SA0QAABVYQYnAAAAAAAACwAAAAIAAAAAAyADIAAAAAEAADEBAyADIAAAeAEtxlUBgwAAQME3Q0IgEYiAFCAC7u7t0X3dAW9UPry+Mi8M+P993yVnI6bCoibAJyRjQsc5HWip8e/HhJQHAIYJsAB4AWNgZsALAAB9AAR4AWNgBEIGMOZh1GHwANICUPyDAQgK8tIVOgP83Hm5pLiAXF5PD5cgoHIdEOZgBor4La5zB1KSJa4RJcH5aSXliUWpDI4p+UmpCp65iempQamJKZWFJ1NtgIrYAnxCXKcxgEBehM9EkPGeLo4hFbfeHGQEuaBJ4f/6PA8HIJMW4EMeEw9DwmkGRotpVSIgAU9XP5d1TglNADtgJsU=) format("woff");}@font-face{font-family:"chromacheck-svg";src:url(data:application/x-font-woff;base64,d09GRgABAAAAAALoAAsAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABcAAAADoAAABgF/MnTlNWRyAAAAJQAAAAlwAAAKrSQDCHY21hcAAAAbQAAAAtAAAANOkY6T1nbHlmAAAB7AAAAB4AAAA0KkgqRmhlYWQAAAEIAAAALwAAADYMS9SPaGhlYQAAATgAAAAVAAAAJAgBBAJobXR4AAABrAAAAAgAAAAIBAAAAGxvY2EAAAHkAAAACAAAAAgADQAabWF4cAAAAVAAAAAdAAAAIAIPAB1uYW1lAAACDAAAADcAAAA8ApwLJXBvc3QAAAJEAAAADAAAACAAAwAAeAFjYGRgAGFZjs2Z8fw2XxmkWRhA4NICJgEQfa22twlEszCAxTkYmEAUANtlBvoAeAFjYGRgYGEAAjgJFEEFjAABkQAQAAAAeAFjYGRgYGBmYAHTDFCSi4GBiYFBAsQEAAISAC8AAAB4AWNgYWFgnMDAysDANJPpDAMDQz+EZnzNYMzIyYAKGAWQOApAwHDgJdNLoAkgACTRgQIDAwAAjAh6AAAEAAAAAAAAAHgBJcU5AYBADACw3NeJuRrw76oi+MkSNEPDZtoRpqZXr3ld/OeVpwbcs+wKIQAAAAAAAAAADQAaeAFjYGQAAhYgZGBmYBBUFFRkYfjDAMK4ZQBZhAThAAB4AWNgYGBikGNgZmBk4WRgBLIYoGwmMNuZIYOhiCGfIZchEcxOZUhmyGZQYAhmCGNwBwBp2QXKAHgBY2BmwAsAAH0ABHgBHUw1dsRQDHTK4Bn+U1qzHdwP1WaDVaA2M7N9jFzYNGJpRtyGiz2f7cZxN2v8YzakCercqg7zjIAiyoDczM6dMPMJ/P68CI/AKK47H63ErCYQNE3xLEl934u9JuaVL6myLEsrA1DoEPCTsQgUoLgwmwB5YZIQuNU2zvp6vX/JgiKrerClP/lV7vZxAoni7QldAG/3K6oA) format("woff");}@font-face{font-family:"chromacheck-colrv1";src:url(data:application/x-font-woff;base64,d09GRgABAAAAAAKMAAwAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACWAAAAB8AAAA3CmUCEUNQQUwAAAJ4AAAAEgAAABL7AAAQT1MvMgAAAYAAAAA6AAAAYBf2J09jbWFwAAABxAAAACcAAAAsAAzpOGdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANhOUtHxoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAPAAAAEIDGAuccG9zdAAAAkwAAAAMAAAAIAADAAB4AWNgZGAA4QZvhS/x/DZfGaRZGEDg0gImARB991huPohmYQCLczAwgSgA+bkHtQB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXrS1YWMB9IogMFBgYAAQYIfgAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvW//8hpNgfsDwDAFytByoAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAfIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsv0ZfBiCGMoYDAGREga9eAFjYGbACwAAfQAEeAFjYGRABUoMmIARrIqLi4GBjYGRiYHBgQEAB0EAgwAAAAABAAEAAQAAAA4AAAAA+v8AAA==) format("woff");}</style><text x="0" y="0" font-size="20"><tspan font-family="chromacheck-cbdt" x="0" dy="20">&#xe903;</tspan><tspan font-family="chromacheck-colr" x="0" dy="20">&#xe900;</tspan><tspan font-family="chromacheck-sbix" x="0" dy="20">&#xe901;</tspan><tspan font-family="chromacheck-svg" x="0" dy="20">&#xe902;</tspan><tspan font-family="chromacheck-colrv1" x="0" dy="20">&#xe905;</tspan><tspan font-family="chromacheck-svg" x="0" dy="20">&#xe904;</tspan></text></svg>')}catch(e){a()}}();const oX=document.getElementById("opentype-support-detector"),oZ=new MutationObserver(e=>{for(let t of e)if("attributes"===t.type&&"class"===t.attributeName&&oX.classList.contains("chromacheck-colrv1-failed")&&(// hide the Twemoji and Noto Color Emoji selector
document.getElementById("emojiStyleSwitchArea").classList.remove("d-flex"),document.getElementById("emojiStyleSwitchArea").classList.add("d-none"),"n"==window.location.hash.substring(1).split("-")[0])){oM="twemoji";let e=document.getElementById("emojiStyleSwitch");e.checked=!1,function(){let e=document.getElementById("supportIssue"),t=e.querySelector(".close");e.style.display="block",t.onclick=function(){e.style.display="none"},window.onclick=function(t){t.target===e&&(e.style.display="none")}}(),oj(),console.log("→ Oops, your browser seems to not support OpenType COLR/CPAL v1 font, you can only use Twemoji.\n → If you want to use Noto Color Emoji, please change another browser such as Desktop Chrome or FireFox."),document.getElementById("noto-emoji-share-notice").classList.add("d-none");try{oz(window.location.hash.substring(1).split("-")[1],!0),window.location.hash=`${"noto"===oM?"n":"t"}-${oL(oU(window.location.hash.substring(1).split("-")[1]))}`;// document.getElementById("customized-emoji").innerHTML = emojiToUnicode(unicodeToEmoji(window.location.hash.substring(1).split("-")[1]))
}catch(t){console.log("→ Random select an emoji \uD83C\uDFB0");let e=oH();// document.getElementById("customized-emoji").innerHTML = rndEmoji
oz(e,!0),window.location.hash=`${"noto"===oM?"n":"t"}-${oL(e)}`}let t=document.getElementById("customized-emoji").innerHTML;oV("reference-canvas",t),oZ.disconnect()}});oZ.observe(oX,{attributes:!0}),oq();//# sourceMappingURL=index.35b0b6a5.js.map

//# sourceMappingURL=index.35b0b6a5.js.map
