{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IiBIA,ECHA,EAiCA,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,EjBxBA,SAAS,EAAgB,CAAG,CAAE,CAAG,CAAE,CAAK,EAWpC,OAVI,KAAO,EACP,OAAO,cAAA,CAAe,EAAK,EAAK,CAC5B,MAAO,EACP,WAAY,CAAA,EACZ,aAAc,CAAA,EACd,SAAU,CAAA,CACd,GAEA,CAAG,CAAC,EAAI,CAAG,EAER,CACX,CArBA,OAAO,cAAA,CAAe,EAAA,OAAA,CAAS,aAAc,CACzC,MAAO,CAAA,CACX,GACA,OAAO,cAAA,CAAe,EAAA,OAAA,CAAS,UAAW,CACtC,WAAY,CAAA,EACZ,IAAK,WACD,OAAO,CACX,CACJ,E,G,E,Q,C,Q,S,C,C,C,ECRA,OAAO,cAAA,CAAe,EAAA,OAAA,CAAS,aAAc,CACzC,MAAO,CAAA,CACX,GACA,OAAO,cAAA,CAAe,EAAA,OAAA,CAAS,UAAW,CACtC,WAAY,CAAA,EACZ,IAAK,WACD,OAAO,EAAP,UAAA,AACJ,CACJ,G,I,E,E,Q,G,E,Q,C,Q,S,C,C,C,EC6CO,SAAS,EAAW,CAAU,CAAE,CAAM,CAAE,CAAG,CAAE,CAAI,EACpD,IAA2H,EAAvH,EAAI,UAAU,MAAA,CAAQ,EAAI,EAAI,EAAI,EAAS,AAAS,OAAT,EAAgB,EAAO,OAAO,wBAAA,CAAyB,EAAQ,GAAO,EACrH,GAAI,AAAmB,UAAnB,OAAO,SAAwB,AAA4B,YAA5B,OAAO,QAAQ,QAAA,CAAyB,EAAI,QAAQ,QAAA,CAAS,EAAY,EAAQ,EAAK,QACpH,IAAK,IAAI,EAAI,EAA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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,4BAA4B,EAC3B,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,4BAA4B,EAC3B,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,uCAAuC,EACvC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,E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Mx2Ba,GNy2Bb,oBMz2Ba,GN02Bb,oBM12Ba,GN22Bb,eM32Ba,GN42Bb,mBM52Ba,GN62Bb,aM72Ba,GN82Bb,OAAQ,IAAI,GAAyB,GAA0B,IAC/D,YAAa,IAAI,GMn3BH,GNm3BuD,GACrE,SAAU,IAAI,GAA0B,GACxC,YAAa,IAAI,GM33BH,GN23B0D,CACpE,SACA,aACA,WACA,WACA,YACA,OACA,UACA,iBACA,MACA,UACH,EACD,iBMv4Bc,GNw4Bd,gBMx4Bc,ENy4BlB,EACA,mFAAmF;AACnF,EAAG,CAAC,EACJ,EAAG,CACC,aMn4Ba,GNo4Bb,cMp4Ba,GNq4Bb,YMr4Ba,GNs4Bb,UMh5Bc,GNi5Bd,WMj5Bc,GNk5Bd,cAAe,IAAI,GM54BL,GN44ByD,EAC3E,EACA,EAAG,CAEC,AADA,gDAAgD;AAChD,aM54Ba,GN64Bb,cM74Ba,GN84Bb,YM94Ba,GN+4Bb,UMz5Bc,GN05Bd,WM15Bc,GN25Bd,cAAe,IAAI,GMr5BL,GNq5ByD,GACvE,QMl5Ba,GNm5Bb,UMn5Ba,GNo5Bb,YM95Bc,GN+5Bd,UM/5Bc,GNg6Bd,WMh6Bc,ENi6BlB,EACA,EAAG,CACC,aMz5Ba,GN05Bb,cM15Ba,GN25Bb,YM35Ba,GN45Bb,UMt6Bc,GNu6Bd,WMv6Bc,GNw6Bd,cAAe,IAAI,GMl6BL,GNk6ByD,GACvE,QM/5Ba,GNg6Bb,UMh6Ba,GNi6Bb,YM36Bc,GN46Bd,UM56Bc,GN66Bd,WM76Bc,GN86Bd,wBM96Bc,GN+6Bd,wBM/6Bc,ENg7BlB,CACJ,GACA,IAAI,GAAiC,GAA0B,QAA/D,AACA,CAAA,EAA8B,CAAC,EAAE,CAAG,EAA8B,CAAC,EAAE,CAAG,EAA8B,CAAC,EAAE,CAKzG,IACA,GAA2C,IAAI,GM74BxB,GN64BuF,CAC1G,OAAQ,CACJ,YM/4Be,GNg5Bf,kBMl7Ba,GNm7Bb,mBMn7Ba,GNo7Bb,aMx7Bc,GNy7Bd,aMz7Bc,GN07Bd,aM17Bc,GN27Bd,YM37Bc,GN47Bd,YM57Bc,EN67BlB,EACA,EAAG,CAAC,EACJ,EAAG,CACC,eMt8Bc,GNu8Bd,eAAgB,IAAI,GMv8BN,GNu8B0D,kBACxE,MA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GACH,CACD,YACA,QACA,KACH,CACD,CACI,CACI,GACA,GACH,CACD,YACA,QACA,KACH,CACD,CACI,CACI,GACA,GACH,CACD,YACA,UACA,CAAA,EACH,CACD,CACI,CACI,GACA,GACH,CACD,gBACA,SACA,EACH,CACD,CACI,CACI,GACA,GACH,CACD,kBACA,SACA,IACH,CACD,CACI,CACI,GACA,GACH,CACD,oBACA,SACA,EACH,CACD,CACI,GACA,gBACA,SACA,EACH,CACD,CACI,GACA,gBACA,SACA,EACH,CACD,CACI,GACA,UACA,SACA,EACH,CACD,CACI,GACA,QAnJR,MACI,OAAO,OAAO,CAAM,CAAE,CAAM,CAAE,CAAQ,CAAE,CACpC,IAAI,EAAY,EAAS,GAAzB,GACA,wDAAwD;AACxD,+CAA+C;AAC/C,KAAM,EAAS,MAAA,CAAS,GAAU,EAAS,GAA3C,EACJ,CACJ,EA8IQ,KACH,CACD,CACI,GACA,QACA,IAAQ,GAA0C,IAAQ,GAA2C,CACjG,KAAM,OACV,GACA,KACH,CACJ,EAKD,GAA2C,CACvC,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,WACH,CAGD,IAAI,GAA4C,CAC5C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,aACH,CAoQG,GAA4C,CAC5C,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA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AAO,IAAI,GAAyB,GAA0B,SAClE,EACA,EAAG,CACC,QAAS,GACT,OAAQ,IAAI,GAAyB,GAA8B,UACvE,CACJ,GACI,GAAoC,IAAI,GAAmC,CACvE,GAniCwC,CAC5C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACH,CAqyBA,CAAE,IAAQ,GAA0C,GAAyC,CAC1F,KAAM,CAAA,CACV,GACA,8CAA6C;AAC7C,0CAA0C;AAC1C,MAAM,WAAyC,GAC3C,OAAO,CAAM,CAAE,CAAM,CAAE,CACnB,IAAI,EAAU,AAAG,GAAkC,IAAI,CAAC,MAAA,CAAQ,EAAQ,GACpE,EAAQ,EACR,EAAM,EAAE,CACZ,KAAM,EAAQ,GAAO,CACjB,IAAI,EAAQ,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,EAAQ,EACrC,CAAA,EAAM,MAAA,CAAS,EACf,GAAS,EAAM,KAAA,CAAQ,EACvB,EAAI,IAAA,CAAK,EACb,CACA,OAAO,CACX,CACJ,CACA,IAAI,GAAyC,IAAI,GAAmC,GAA0B,CAC1G,EAAG,CACC,OAAQ,IAAI,GMluGE,GNkuGkD,AAAC,GAAI,EAAE,MAAA,CAAO,WAAA,CAAY,MAAA,CAAS,EACvG,EACA,EAAG,CACC,OAAQ,IAAI,GAAiC,GAA8B,AAAC,GAAI,EAAE,MAAA,CAAO,WAAA,CAAY,MAAA,CAAS,EAClH,EACA,EAAG,CACC,OAAQ,IAAI,GAAiC,GAA8B,AAAC,GAAI,EAAE,MAAA,CAAO,WAAA,CAAY,MAAA,CAAS,EAClH,CACJ,GACI,GAAmC,IAAI,GAAmC,CACtE,GA1lBwC,CAC5C,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACH,CAC+C,CAC5C,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACH,CA6VA,CAAE,IAAQ,GAA0C,GAAwC,CACzF,KAAM,CAAA,CACV,IACI,GAAiC,IAAI,GAA0B,CAC/D,MMnvGkB,GNovGlB,GAAI,EACR,GACI,GAAiC,IAAI,GAA0B,CAC/D,MMjvGkB,GNkvGlB,GMxvGkB,ENyvGtB,GACI,GAAiC,IAAI,GAAmC,GAA0B,CAClG,EAAG,CACC,IAAK,IAAI,GAAyB,GAA0B,AAAC,GAAI,EAAE,MAAA,CAAO,WAAA,CAAY,MAAtF,CACJ,EACA,EAAG,CACC,QM/vGc,GNgwGd,OAAQ,IAAI,GAAyB,GAAgC,WACrE,SMjwGc,ENkwGlB,EACA,EAAG,CACC,QM9vGc,GN+vGd,OAAQ,IAAI,GAAyB,GAAgC,WACrE,SMhwGc,ENiwGlB,CACJ,GACI,GAA4B,IAAQ,GAA8C,GACtF,OAAM,GACF,OAAO,CAAM,CAAE,CAAM,CAAE,CAAQ,CAAE,CAE7B,OADA,EAAO,MAAA,CAAS,CAAQ,CAAC,EAAE,CACpB,GAA0B,MAAA,CAAO,EAAQ,EAAQ,CACpD,CAAQ,CAAC,EAAE,CACd,CACL,CACA,KAAK,CAAI,CAAE,CAAG,CAAE,CACZ,MAAO,CACC,GAA0C,IAAA,CAAK,EAAM,EAAK,CAAA,GAC9D,GAA0B,IAAA,CAAK,EAAM,EAAI,CAAC,EAAE,CAC/C,AACL,CACA,OAAO,CAAM,CAAE,CAAI,CAAE,CAAG,CAAE,CACtB,MAAO,CACC,GAA0C,IAAA,CAAK,EAAM,EAAK,CAAA,GAC9D,GAA0B,MAAA,CAAO,EAAQ,EAAM,EAAI,CAAC,EAAE,CACzD,AACL,CACJ,CACA,IAAI,GAAiC,IAAQ,GAA0C,CACnF,mFAAmF;AACnF,CACI,GACA,UACA,IAAI,GACJ,KACH,CACD,CACI,CACI,GACA,GACH,CACD,WACA,MACA,KACH,CACD,CACI,CACI,GACA,EACH,CACD,aACA,QACA,CACI,KACA,EACA,EACA,KACA,EACA,EACH,CACJ,CACD,CACI,CACI,GACA,EACH,CACD,YACA,SACA,EACH,CACJ,EACG,GAAmC,IAAQ,GAA0C,CACrF,mFAAmF;AACnF,CACI,CACI,GACA,GACH,CACD,MACA,CACI,MACA,MACA,SACH,CACD,KACH,CACD,CACI,EACA,UACA,MACA,KACH,CACD,CACI,EACA,SACA,MACA,KACH,CACD,CACI,CACI,GACA,EACH,CACD,YACA,MACA,KACH,CACD,CACI,EACA,WACA,MACA,KACH,CACD,CACI,EACA,aACA,MACA,KACH,CACD,CACI,EACA,SACA,MACA,KACH,CACD,CACI,CACI,GACA,EACH,CACD,eACA,UACA,CAAA,EACH,CACD,CACI,CACI,GACA,EACH,CACD,cACA,SACA,EACH,CACD,CACI,CACI,GACA,EACH,CACD,oBACA,SACA,KACH,CACD,CACI,CACI,GACA,EACH,CACD,qBACA,SACA,GACH,CACD,CACI,CACI,GACA,EACH,CACD,YACA,SACA,EACH,CACD,CACI,CACI,GACA,EACH,CACD,iBACA,SACA,EACH,CACD,CACI,CACI,GACA,EACH,CACD,aACA,QACA,CACI,KACA,EACA,EACA,KACA,EACA,EACH,CACJ,CACD,CACI,GACA,WACA,SACA,KACH,CACD,CACI,EACA,WACA,QACA,CACI,EACA,EACA,EACA,EACH,CACJ,CACD,CACI,CACI,GACA,EACH,CACD,cACA,SACA,EACH,CACD,CACI,GACA,OACA,QACA,KACH,CACD,CACI,GACA,UACA,GACI,GACP,CACD,CACI,GACA,WACA,GACI,GACP,CACD,CACI,GACA,cACA,IAAQ,GAA0C,IAAQ,IAC1D,KACH,CACD,CACI,GACA,UACA,IAAI,GACJ,KACH,CACD,CACI,CACI,GACA,GACH,CACD,gBACA,SACA,KACH,CACD,CACI,CACI,GACA,GACH,CACD,aACA,MACA,KACH,CACD,CACI,CACI,GACA,GACH,CACD,eACA,MACA,KACH,CACD,CACI,CACI,GACA,GACH,CACD,gBACA,QACA,KACH,CACD,oBAAoB;AACpB,CACI,CACI,GACA,GACH,CACD,iBACA,SACA,EACH,CACD,CACI,CACI,GACA,GACH,CACD,kBACA,SACA,EACH,CACD,CACI,CACI,GACA,GACH,CACD,cACA,SACA,EACH,CACD,CACI,CACI,GACA,GACH,CACD,WACA,SACA,KACH,CACD,CACI,CACI,GACA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ACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,QACA,WACA,cACA,cACA,gBACA,UACA,aACA,gBACA,QACA,SACA,SACA,aACA,WACA,WACA,SACA,SACA,SACA,SACA,SACH,AAGD,OAAM,GACF,UAAW,CACP,OAAO,IAAQ,EACnB,CACA,UAAW,CACP,OAAO,IAAI,CAAC,IAAA,CAAK,IAAjB,AACJ,CACA,UAAW,CACP,OAAO,IAAI,CAAC,IAAA,CAAK,IAAjB,AACJ,CACA,iBAAiB,CAAK,CAAE,CACpB,GAAI,IAAI,CAAC,EAAA,CAAK,EAAM,OAAA,CAAQ,MAAA,CAAQ,OAAO,EAAM,OAAA,CAAQ,GAAA,CAAI,IAAI,CAAC,EAAlE,EACA,IAAI,EAAS,EAAM,OAAA,CAAQ,GAAA,CAAI,EAAM,OAAA,CAAQ,MAAA,CAAS,GAKtD,MAJU,CACN,QAAS,EAAS,EAAO,OAAA,CAAU,EACnC,QAAS,EAAM,QAAA,CAAS,GAAA,CAAI,IAAI,CAAC,EAAA,CAAK,EAAM,OAAA,CAAQ,MAAA,GAAW,CACnE,CAEJ,CACA,YAAY,CAAI,CAAE,CACd,GAAI,IAAI,CAAC,QAAA,CAAU,OAAO,IAAI,CAAC,QAA/B,CACA,GAAI,CAAE,QAAS,CAAY,CAAG,QAAS,CAAW,CAAG,CAAG,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,KAAA,CAAM,IAAzF,CACA,8FAA6F;AAC7F,GAAI,IAAI,CAAC,KAAA,CAAM,IAAA,CAAM,GAAI,CAAE,QAAS,CAAa,CAAG,QAAS,CAAU,CAAG,CAAG,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,KAAA,CAAM,IAA9G,MACK,CACD,IAAI,EAEJ,SADW,GAAwC,CAAA,CAAE,KAAM,CAAI,CAAG,CAAG,IAAI,AAAJ,EACjE,AAAC,CAAA,EAAM,IAAI,CAAC,KAAK,CAAC,OAAO,AAAP,GAAY,EAAI,OAAA,CAAU,EAC5C,IAAI,EAAgB,KAAK,GAAA,CAAI,EAAI,YAAA,CAAe,EAAI,aAApD,EACI,EAAa,EAAI,YAAA,CAAe,EAAK,IAAzC,KACG,CACH,GAAI,CAAE,KAAM,CAAI,CAAG,CAAG,IAAI,CAAC,KAA3B,CACA,IAAI,EAAgB,KAAK,GAAA,CAAI,EAAK,MAAA,CAAS,EAAK,OAAhD,EACI,EAAa,EAAK,MAAA,CAAS,EAAK,IAApC,AACJ,CACJ,CAEA,OADI,IAAI,CAAC,KAAA,CAAM,mBAAA,EAAuB,IAAI,CAAC,KAAA,CAAM,IAAA,EAAM,CAAA,GAAgB,IAAI,CAAC,KAAA,CAAM,mBAAA,CAAoB,oBAAA,CAAqB,IAAI,CAAC,EAAA,CAAI,IAAI,CAAC,KAAA,CAAM,IAA/I,CAAA,EACO,IAAI,CAAC,QAAA,CAAW,CACnB,aAAc,EACd,cAAe,EACf,YAAa,EACb,WAAY,CAChB,CACJ,CACA;;;;;;;;;;GAUD,EAAG,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,QAAZ,EACJ,CACA;;;;GAID,EAAG,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,QAAZ,EACJ,CACA;;;GAGD,EAAG,IAAI,MAAO,CACT,2CAA2C;AAC3C,+CAA+C;AAC/C,OAAO,IAAI,CAAC,QAAZ,EACJ,CACA;;;;GAID,EAAG,cAAc,CAAI,CAAE,CAClB,IAAI,EAAQ,EAAI,IAAI,CAAC,KAAA,CAAM,UAAA,CAAa,EACxC,OAAO,IAAI,CAAC,IAAA,CAAK,KAAA,CAAM,EAC3B,CACA;;;GAGD,EAAG,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,WAAA,GAAc,YAA1B,AACJ,CACA;;;GAGD,EAAG,IAAI,eAAgB,CAClB,OAAO,IAAI,CAAC,WAAA,GAAc,aAA1B,AACJ,CACA,IAAI,wBAAyB,CAAC,CAC9B,UAAW,CACP,GAAI,CAAE,KAAM,CAAI,CAAG,CAAG,IAAI,CAAC,KAA3B,CACA,GAAI,CAAC,EAAM,OAAO,KAClB,OAAO,EAAK,OAAZ,EACI,KAAK,EACD,OAAW,EAAyC,CAAC,IAAI,CAAC,EAAA,CAAG,AACjE,MAAK,EACD,IAAI,EAAK,EAAK,cAAc,CAAC,IAAI,CAAC,EAAA,CAAG,CACrC,GAAI,EAAK,GAA8C,MAAA,CAAQ,OAAW,EAAyC,CAAC,EAAG,CACvH,OAAO,EAAK,KAAK,CAAC,EAAS,GAA0C,MAAA,CAAO,AAChF,MAAK,IACD,OAAO,EAA6C,CAAC,IAAI,CAAC,EAAA,CAAK,EAAK,OAAO,CAAC,IAAI,CAAC,EAAA,CAAG,CAAC,AACzF,MAAK,EACD,OAAO,OAAO,YAAA,CAAa,EAAK,GAAG,CAAC,IAAI,CAAC,EAAA,CAAG,CACpD,CACJ,CACA;;;GAGD,EAAG,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,QAAZ,EACJ,CACA;;;;GAID,EAAG,OAAO,CAAG,CAAE,CAAI,CAAE,CAChB,EAAI,IAAJ,GACA,IAAI,EAAQ,EAAI,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,UAAA,CAAa,EAC7C,EAAI,KAAA,CAAM,EAAO,GAEjB,AADS,IAAI,CAAC,IAAA,CAAK,UAAnB,GACG,GACH,EAAI,IAAJ,GACA,EAAI,OAAJ,EACJ,CACA,YAAY,CAAE,CAAE,CAAU,CAAE,CAAI,CAAC,CAC7B;;;KAGH,EAAG,IAAI,CAAC,EAAA,CAAK,EACV;;;;;KAKH,EAAG,IAAI,CAAC,UAAA,CAAa,EAClB,IAAI,CAAC,KAAA,CAAQ,EACb,6CAA6C;AAC7C,IAAI,CAAC,MAAA,CAAS,IAAI,CAAC,UAAA,CAAW,MAAA,CAAS,GAAK,IAAI,CAAC,UAAA,CAAW,KAAA,CAAU,IACtE,IAAI,CAAC,UAAA,CAAa,IAAI,CAAC,UAAA,CAAW,MAAA,CAAS,CAC/C,CACJ,CACK,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,OAAQ,MAC1D,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,OAAQ,MAC1D,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,OAAQ,MAC1D,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,eAAgB,MAClE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,gBAAiB,MACnE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,OAAQ,KAM/D,mDAAkD;AAClD,IAAI,GAAmC,IAAI,GAA0B,CACjE,iBMniViB,GNoiVjB,KMpiViB,GNqiVjB,KMriViB,GNsiVjB,KMtiViB,GNuiVjB,KMviViB,ENwiVrB,EAqBA,OAAM,GACF,MAAO,CACH,OAAO,IAAI,GAA0C,IAAI,CAAC,OAAA,CAAS,IAAI,CAAC,UAAA,CAAY,IAAI,CAAC,CAAA,CAAG,IAAI,CAAC,CAAjG,CACJ,CACA,YAAY,CAAO,CAAE,CAAU,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,CAAC,CAC1C,IAAI,CAAC,OAAA,CAAU,EACf,IAAI,CAAC,UAAA,CAAa,EAClB,IAAI,CAAC,CAAA,CAAI,EACT,IAAI,CAAC,CAAA,CAAI,CACb,CACJ,CACA,8CAA8C;AAC9C,MAAM,GACF,YAAY,CAAO,CAAE,CAAE,CAAE,CAAE,CAAC,CACxB,IAAI,CAAC,OAAA,CAAU,EACf,IAAI,CAAC,EAAA,CAAK,EACV,IAAI,CAAC,EAAA,CAAK,EACV,IAAI,CAAC,GAAA,CAAM,EACX,IAAI,CAAC,MAAA,CAAS,IAAI,CAAC,MAAA,CAAS,EAC5B,IAAI,CAAC,OAAA,CAAU,IAAI,CAAC,OAAA,CAAU,CAClC,CACJ,CACA,MAAM,WAAqD,GACvD,4DAA4D;AAC5D,SAAS,CAAQ,CAAE,CACf,oEAAoE;AACpE,mEAAmE;AACnE,GAAI,IAAI,CAAC,KAAA,CAAM,mBAAA,EAAuB,CAAC,EAAU,OAAO,IAAI,CAAC,IAAA,CAAK,IAAlE,CACA,IAAI,EAAS,IAAI,CAAC,KAAA,CAAM,eAAA,CAAgB,OACxC,CAAA,EAAO,GAAA,EAAO,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,OAAO,CAAC,IAAI,CAAC,EAAA,CAAG,CAC9C,IAAI,EAAQ,GAAiC,MAAA,CAAO,GAEpD,OAAO,OAAO,MAAA,CADH,IAAQ,GAA0C,EAAM,IAAA,CAAM,EAAM,IAAA,CAAM,EAAM,IAAA,CAAM,EAAM,IAAvG,EAEJ,CACA,mCAAmC;AACnC,iBAAiB,CAAM,CAAE,CAAI,CAAE,CAAK,CAAE,CAAI,CAAE,CACxC,GAAI,EAAO,CACP,IAAI,EAAM,EAAO,SAAjB,GACK,GAAM,CAAA,EAAM,CAAC,CAAlB,EACA,GAAO,CACX,MAAO,GAAI,EAAM,IAAI,EAAM,OACtB,IAAI,EAAM,EAAO,EAAO,WAAxB,GACL,OAAO,CACX,CACA,wDAAwD;AACxD,qCAAqC;AACrC,SAAU,CACN,IAAI,EAAU,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,OAAO,CAAC,IAAI,CAAC,EAAA,CAAG,AAE9C,oDAAmD;AACnD,GAAI,IAFU,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,OAAO,CAAC,IAAI,CAAC,EAAA,CAAK,EAAE,CAEzB,OAAO,KAChC,IAAI,EAAS,IAAI,CAAC,KAAA,CAAM,eAAA,CAAgB,OACxC,CAAA,EAAO,GAAA,EAAO,EACd,IAAI,EAAW,EAAO,GAAtB,CACI,EAAQ,GAAiC,MAAA,CAAO,GAGpD,OAFI,EAAM,gBAAA,CAAmB,EAAG,IAAI,CAAC,aAAA,CAAc,EAAO,GACjD,EAAM,gBAAA,CAAmB,GAAG,IAAI,CAAC,gBAAA,CAAiB,EAAO,EAAQ,GACnE,CACX,CACA,cAAc,CAAK,CAAE,CAAM,CAAE,CACzB,yBAAyB;AACzB,EAAM,MAAA,CAAS,EAAE,CACjB,IAAI,EAAmB,IAAI,GMroVb,GNqoViE,EAAM,gBAAA,EAAkB,MAAA,CAAO,EAC9G,CAAA,EAAM,YAAA,CAAe,IAAI,GAAyB,GMtoVpC,INsoVyF,MAAA,CAAO,GAC9G,IAAI,EAAQ,EAAE,CACV,EAAY,CAAgB,CAAC,EAAiB,MAAA,CAAS,EAAE,CAAG,EAChE,KAAM,EAAM,MAAA,CAAS,GAAU,CAC3B,IAAI,EAAO,EAAO,SAAlB,EAEA,yBAAwB;AACxB,GAFA,EAAM,IAAA,CAAK,GAEP,AAtFqB,EAsFrB,EAAqC,CACrC,IAAI,EAAQ,EAAO,SAAnB,GACA,IAAI,IAAI,EAAI,EAAG,EAAI,EAAO,IAAI,EAAM,IAAA,CAAK,EAC7C,CACJ,CACA,IAAI,IAAI,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,IAAI,CACjC,IAAI,EAAO,CAAK,CAAC,EAAE,CACnB,IAAI,EAAQ,IAAI,GAA0C,CAAC,CAAE,CAAA,AAhGlC,EAgGkC,CAAO,EAAiC,EAAiB,OAAA,CAAQ,IAAM,EAAG,EAAG,GAC1I,EAAM,MAAA,CAAO,IAAA,CAAK,EACtB,CACA,IAAI,EAAK,EACT,IAAI,IAAI,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,IAAI,CACjC,IAAI,EAAO,CAAK,CAAC,EAAE,AACnB,CAAA,EAAM,MAAM,CAAC,EAAE,CAAC,CAAA,CAAI,EAAK,IAAI,CAAC,gBAAA,CAAiB,EAAQ,EAAI,AArG1B,EAqG0B,EAA6C,AAlG/E,GAkG+E,EAC5G,CACA,IAAI,EAAK,EACT,IAAI,IAAI,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,IAAI,CACjC,IAAI,EAAO,CAAK,CAAC,EAAE,AACnB,CAAA,EAAM,MAAM,CAAC,EAAE,CAAC,CAAA,CAAI,EAAK,IAAI,CAAC,gBAAA,CAAiB,EAAQ,EAAI,AAzG1B,EAyG0B,EAA6C,AAtG/E,GAsG+E,EAC5G,CACA,GAAI,IAAI,CAAC,KAAA,CAAM,mBAAA,CAAqB,CAChC,IAAI,EAAS,EAAM,MAAA,CAAO,KAA1B,GACA,EAAO,IAAA,IAAQ,IAAI,CAAC,iBAAA,CAAkB,IACtC,IAAI,CAAC,KAAA,CAAM,mBAAA,CAAoB,eAAA,CAAgB,IAAI,CAAC,EAAA,CAAI,GACxD,EAAM,aAAA,CAAgB,EAAO,KAAA,CAAM,GACvC,CAEJ,CACA,iBAAiB,CAAK,CAAE,CAAM,CAAE,EAAS,CAAC,CAAE,CACxC,4BAA4B;AAC5B,EAAM,UAAA,CAAa,EAAE,CACrB,IAAI,EAAmB,CAAA,EACnB,EA9GkC,GA+GtC,KAAM,AA/GgC,GA+GhC,GAA8C,CAChD,EAAQ,EAAO,YAAf,GACA,IAAI,EAAO,EAAO,GAAA,CAAM,EACpB,EAAU,EAAO,YAArB,GAEA,GADK,GAAkB,CAAA,EAAoB,AAAA,CAAA,AAhHJ,IAgHI,CAAQ,GAAgD,CAAA,EAC/F,AAxHoC,EAwHpC,EACA,IAAI,EAAK,EAAO,WAAhB,GACI,EAAK,EAAO,WAAhB,QAEA,IAAI,EAAK,EAAO,QAAhB,GACI,EAAK,EAAO,QAAhB,GAEJ,IAAI,EAAY,IAAI,GAAgC,EAAS,EAAI,EACjE,CAAA,EAAU,GAAA,CAAM,EACZ,AA9H8B,EA8H9B,EACJ,EAAU,MAAA,CAAS,EAAU,MAAA,CAAU,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,WACrF,AA9HkC,GA8HlC,GACL,EAAU,MAAA,CAAU,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,WAC3E,EAAU,MAAA,CAAU,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,YA/HxC,IAgI5B,IACP,EAAU,MAAA,CAAU,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,WAC3E,EAAU,OAAA,CAAW,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,WAC5E,EAAU,OAAA,CAAW,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,WAC5E,EAAU,MAAA,CAAU,AAAA,CAAA,EAAO,SAAA,IAAe,GAAK,EAAO,SAAA,IAAe,EAAA,EAAM,YAE/E,EAAM,UAAA,CAAW,IAAA,CAAK,EAC1B,CACA,GAAI,IAAI,CAAC,KAAA,CAAM,mBAAA,CAAqB,CAChC,IAAI,EAAS,EAAE,CACf,IAAI,IAAI,EAAI,EAAG,EAAI,EAAM,UAAA,CAAW,MAAA,CAAQ,IAAI,CAC5C,IAAI,EAAY,EAAM,UAAU,CAAC,EAAE,CACnC,EAAO,IAAA,CAAK,IAAI,GAA0C,CAAA,EAAM,CAAA,EAAM,EAAU,EAAA,CAAI,EAAU,EAA9F,EACJ,CACA,EAAO,IAAA,IAAQ,IAAI,CAAC,iBAAA,CAAkB,IACtC,IAAI,CAAC,KAAA,CAAM,mBAAA,CAAoB,eAAA,CAAgB,IAAI,CAAC,EAAA,CAAI,GACxD,EAAM,aAAA,CAAgB,EAAO,MAAA,CAAO,GAAI,GACxC,IAAI,IAAI,EAAI,EAAG,EAAI,EAAO,MAAA,CAAQ,IAAI,CAClC,IAAI,EAAQ,CAAM,CAAC,EAAE,AACrB,CAAA,EAAM,UAAU,CAAC,EAAE,CAAC,EAAA,CAAK,EAAM,CAA/B,CACA,EAAM,UAAU,CAAC,EAAE,CAAC,EAAA,CAAK,EAAM,CAA/B,AACJ,CACJ,CACA,OAAO,CACX,CACA,kBAAkB,CAAK,CAAE,CACrB,IAAI,EAAO,IAAI,CAAC,QAAA,CAAS,CAAA,EACJ,OAAjB,IAAI,CAAC,QAAA,EAAkB,CAAA,IAAI,CAAC,QAAA,CAAW,GAA8C,SAAA,CAAU,WAAA,CAAY,IAAA,CAAK,IAAI,CAAE,EAA1H,EACA,GAAI,CAAE,aAAc,CAAY,CAAG,cAAe,CAAa,CAAG,YAAa,CAAW,CAAG,WAAY,CAAU,CAAG,CAAG,IAAI,CAAC,QAA9H,CACA,MAAO,CACH,IAAI,GAA0C,CAAA,EAAO,CAAA,EAAM,EAAM,IAAA,CAAO,EAAa,GACrF,IAAI,GAA0C,CAAA,EAAO,CAAA,EAAM,EAAM,IAAA,CAAO,EAAc,EAAc,GACpG,IAAI,GAA0C,CAAA,EAAO,CAAA,EAAM,EAAG,EAAM,IAAA,CAAO,GAC3E,IAAI,GAA0C,CAAA,EAAO,CAAA,EAAM,EAAG,EAAM,IAAA,CAAO,EAAa,GAC3F,AACL,CACA,iFAAiF;AACjF,cAAe,CACX,IAAI,EAAQ,IAAI,CAAC,OAAjB,GACA,GAAI,CAAC,EAAO,MAAO,EAAE,CACrB,IAAI,EAAS,EAAE,CACf,GAAI,EAAM,gBAAA,CAAmB,EAC7B,IAAK,IAAI,KAAa,EAAM,UAAA,CAAW,CACnC,IAAI,EAAW,IAAI,CAAC,KAAA,CAAM,QAAA,CAAS,EAAU,OAAA,EAAS,YAAtD,GACA,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,MAAA,CAAQ,IAAI,CACpC,IAAI,EAAU,CAAQ,CAAC,EAAE,CACzB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAQ,MAAA,CAAQ,IAAI,CACnC,IAAI,EAAQ,CAAO,CAAC,EAAE,CAClB,EAAI,EAAM,CAAA,CAAI,EAAU,MAAA,CAAS,EAAM,CAAA,CAAI,EAAU,OAAA,CAAU,EAAU,EAA7E,CACI,EAAI,EAAM,CAAA,CAAI,EAAU,MAAA,CAAS,EAAM,CAAA,CAAI,EAAU,OAAA,CAAU,EAAU,EAA7E,CACA,EAAO,IAAA,CAAK,IAAI,GAA0C,EAAM,OAAA,CAAS,EAAM,UAAA,CAAY,EAAG,GAClG,CACJ,CACJ,MACK,EAAS,EAAM,MAAA,EAAU,EAAE,AAChC,kGAAiG;AAC7F,EAAM,aAAA,EAAiB,CAAC,IAAI,CAAC,KAAA,CAAM,SAAA,CAAU,MAAA,CAAO,IAAA,GACpD,IAAI,CAAC,QAAA,CAAS,YAAA,CAAe,EAAM,aAAa,CAAC,EAAE,CAAC,CAAA,CAAI,EAAM,aAAa,CAAC,EAAE,CAAC,CAA/E,CACA,IAAI,CAAC,QAAA,CAAS,aAAA,CAAgB,EAAM,aAAa,CAAC,EAAE,CAAC,CAAA,CAAI,EAAM,aAAa,CAAC,EAAE,CAAC,CAAhF,CACA,IAAI,CAAC,QAAA,CAAS,WAAA,CAAc,EAAM,IAAA,CAAO,EAAM,aAAa,CAAC,EAAE,CAAC,CAAhE,CACA,IAAI,CAAC,QAAA,CAAS,UAAA,CAAa,EAAM,aAAa,CAAC,EAAE,CAAC,CAAA,CAAI,EAAM,IAA5D,EAEJ,IAAI,EAAW,EAAE,CACb,EAAM,EAAE,CACZ,IAAI,IAAI,EAAI,EAAG,EAAI,EAAO,MAAA,CAAQ,IAAI,CAClC,IAAI,EAAQ,CAAM,CAAC,EAAE,CACrB,EAAI,IAAA,CAAK,GACL,EAAM,UAAA,GACN,EAAS,IAAA,CAAK,GACd,EAAM,EAAE,CAEhB,CACA,OAAO,CACX,CACA,aAAc,CACV,GAAI,IAAI,CAAC,QAAA,CAAU,OAAO,IAAI,CAAC,QAA/B,CACA,IAAI,EAAO,IAAI,CAAC,QAAA,CAAS,CAAA,GAIzB,OAHA,KAAK,CAAC,YAAY,GACd,IAAI,CAAC,KAAA,CAAM,mBAAA,EAAuB,CAAC,IAAI,CAAC,KAAA,CAAM,IAAA,EAClD,IAAI,CAAC,IADL,CAEO,IAAI,CAAC,QAAZ,AACJ,CACA,0DAA0D;AAC1D,UAAW,CACP,IAAI,EAAW,IAAI,CAAC,YAApB,GACI,EAAO,IAAQ,GACnB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,MAAA,CAAQ,IAAI,CACpC,IAAI,EAAU,CAAQ,CAAC,EAAE,CACrB,EAAU,CAAO,CAAC,EAAE,CACpB,EAAS,CAAO,CAAC,EAAQ,MAAA,CAAS,EAAE,CACpC,EAAQ,EACZ,GAAI,EAAQ,OAAA,CAAS,CACjB,8EAA8E;AAC9E,IAAI,EAAU,KACd,EAAQ,CACZ,MAKI,IAAI,EAHJ,EADI,EAAO,OAAA,CACD,EAEA,IAAI,GAA0C,CAAA,EAAO,CAAA,EAAO,AAAC,CAAA,EAAQ,CAAA,CAAI,EAAO,CAAA,AAAA,EAAK,EAAG,AAAC,CAAA,EAAQ,CAAA,CAAI,EAAO,CAAA,AAAA,EAAK,GAG/H,EAAK,MAAA,CAAO,EAAQ,CAAA,CAAG,EAAQ,CAA/B,EACA,IAAI,IAAI,EAAI,EAAO,EAAI,EAAQ,MAAA,CAAQ,IAAI,CACvC,IAAI,EAAK,CAAO,CAAC,EAAE,CACf,EAAS,AAAM,IAAN,EAAU,EAAU,CAAO,CAAC,EAAI,EAAE,CAC/C,GAAI,EAAO,OAAA,EAAW,EAAG,OAAA,CAAS,EAAK,MAAA,CAAO,EAAG,CAAA,CAAG,EAAG,CAAvD,OACK,GAAI,EAAO,OAAA,EAAW,CAAC,EAAG,OAAA,CAAS,IAAI,EAAU,OACjD,GAAI,AAAC,EAAO,OAAA,EAAY,EAAG,OAAA,EAKzB,GAAI,CAAC,EAAO,OAAA,EAAW,EAAG,OAAA,CAAS,CACtC,EAAK,gBAAA,CAAiB,EAAQ,CAAA,CAAG,EAAQ,CAAA,CAAG,EAAG,CAAA,CAAG,EAAG,CAArD,EACA,IAAI,EAAU,IAClB,MAAO,MAAM,AAAI,MAAM,8BARkB,CACrC,IAAI,EAAO,AAAC,CAAA,EAAO,CAAA,CAAI,EAAG,CAAA,AAAA,EAAK,EAC3B,EAAO,AAAC,CAAA,EAAO,CAAA,CAAI,EAAG,CAAA,AAAA,EAAK,EAC/B,EAAK,gBAAA,CAAiB,EAAO,CAAA,CAAG,EAAO,CAAA,CAAG,EAAM,GAChD,IAAI,EAAU,CAClB,CAIJ,CAEI,GAAS,EAAK,gBAAA,CAAiB,EAAQ,CAAA,CAAG,EAAQ,CAAA,CAAG,EAAQ,CAAA,CAAG,EAAQ,CAA5E,EACA,EAAK,SAAL,EACJ,CACA,OAAO,CACX,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,MACxF,CACJ,CAMA,MAAM,WAAqD,GACvD,UAAW,QACP,AAAI,IAAI,CAAC,KAAA,CAAM,IAAA,CAAa,KAAK,CAAC,WAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAA,CAAa,IAAI,CAAC,EAA5C,CACJ,CACA,KAAK,CAAC,CAAE,QACJ,AAAI,EAAE,MAAA,CAAS,KAAa,IACnB,EAAE,MAAA,CAAS,MAAc,KACtB,KAChB,CACA,UAAW,CACP,IAWI,EACA,EAZA,EAAM,IAAI,CAAC,KAAA,CAAM,IAAA,EAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAC3C,CAAE,OAAQ,CAAM,CAAG,CAAG,EACtB,EAAM,EAAI,OAAA,CAAQ,WAAW,CAAC,IAAI,CAAC,EAAA,CAAG,CACtC,EAAM,EAAI,MAAA,CAAS,EAAI,MAA3B,AACA,CAAA,EAAO,GAAA,CAAM,EAAI,MAAjB,CACA,IAAI,EAAO,IAAQ,GACf,EAAQ,EAAE,CACV,EAAQ,EAAE,CACV,EAAQ,KACR,EAAS,EACT,EAAK,EAAG,EAAK,EAGb,EAAO,CAAA,CACX,CAAA,IAAI,CAAC,WAAA,CAAc,EAAa,CAAC,EACjC,IAAI,CAAC,UAAA,CAAa,EAAY,CAAC,EAC/B,IAAI,EAAS,EAAI,eAAA,EAAmB,EAAE,CAClC,EAAa,IAAI,CAAC,IAAA,CAAK,GACvB,EAAc,EAAI,mBAAA,CAAoB,IAAI,CAAC,EAAA,GAAO,CAAC,EACnD,EAAQ,EAAY,KAAA,EAAS,EAAE,CAC/B,EAAY,IAAI,CAAC,IAAA,CAAK,GACtB,EAAS,EAAI,OAAA,CAAQ,MAAA,EAAU,EAAI,OAAA,CAAQ,MAAA,CAAO,kBAAtD,CACI,EAAU,EAAY,OAA1B,CACI,EAAqB,IAAI,CAAC,KAAA,CAAM,mBAApC,CACA,SAAS,IACQ,MAAT,GAAe,CAAA,EAAQ,EAAM,KAAA,GAAU,EAAY,aAAvD,AAAA,CACJ,CACA,SAAS,IAGL,OAFI,EAAM,MAAA,CAAS,GAAM,GAAG,IAC5B,GAAU,EAAM,MAAA,EAAU,EACnB,EAAM,MAAA,CAAS,CAC1B,CACA,SAAS,EAAO,CAAC,CAAE,CAAC,EACZ,GAAM,EAAK,SAAf,GACA,EAAK,MAAA,CAAO,EAAG,GACf,EAAO,CAAA,CACX,CACA,IAAI,EAAQ,WACR,KAAM,EAAO,GAAA,CAAM,GAAI,CACnB,IAAI,EAAK,EAAO,SAAhB,GACA,GAAI,EAAK,GAAI,CACT,IAAI,EAAO,EAAM,EACjB,OAAO,GACH,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,GACD,IACA,KACJ,MAAK,EACG,EAAM,MAAA,CAAS,GAAG,IACtB,GAAM,EAAM,KAAZ,GACA,EAAO,EAAI,GACX,KACJ,MAAK,EACD,KAAM,EAAM,MAAA,EAAU,GAClB,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAK,MAAA,CAAO,EAAI,GAEpB,KACJ,MAAK,EACL,KAAK,EAED,IADA,EAAQ,AAAO,IAAP,EACF,EAAM,MAAA,EAAU,GACd,EAAO,GAAM,EAAM,KAAvB,GACK,GAAM,EAAM,KAAZ,GACL,EAAK,MAAA,CAAO,EAAI,GAChB,EAAQ,CAAC,EAEb,KACJ,MAAK,EACD,KAAM,EAAM,MAAA,CAAS,GAAE,CACnB,IAAI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EAAM,EAAM,KAAtB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,EAC/C,CACA,KACJ,MAAK,GAGD,GADA,EAAO,CAAK,CADZ,EAAQ,EAAM,GAAA,GAAQ,EACH,CACT,CACN,CAAS,CAAC,EAAM,CAAG,CAAA,EACnB,IAAI,EAAI,EAAO,GAAf,CACI,EAAI,CACR,CAAA,EAAO,GAAA,CAAM,EAAK,MAAlB,CACA,EAAM,EAAK,MAAA,CAAS,EAAK,MAAzB,CACA,IACA,EAAO,GAAA,CAAM,EACb,EAAM,CACV,CACA,KACJ,MAAK,GACD,GAAI,EAAI,OAAA,EAAW,EAAG,MACtB,MACJ,MAAK,GACD,GAAI,EAAI,OAAA,EAAW,EAAG,KAClB,CAAA,EAAM,MAAA,CAAS,GAAG,IAClB,IACA,EAAK,SAAL,GACA,EAAO,CAAA,GAEX,KACJ,MAAK,GACD,GAAI,EAAI,OAAA,CAAU,EAAG,MAAM,AAAI,MAAM,4CACrC,EAAU,EAAM,GAAhB,GACA,KACJ,MAAK,GACD,CACI,GAAI,EAAI,OAAA,CAAU,EAAG,MAAM,AAAI,MAAM,0CACrC,GAAI,CAAC,EAAoB,MAAM,AAAI,MAAM,wCACzC,IAAI,EAAc,EAAmB,cAAA,CAAe,EAAQ,GACxD,EAAY,EAAM,GAAtB,GACI,EAAc,EAAY,EAAY,MAA1C,CACI,EAAQ,EAAM,MAAA,CAAS,EACvB,EAAO,EAAQ,EACnB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAW,IAAI,CAC9B,IAAI,EAAM,CAAK,CAAC,EAAO,EAAE,CACzB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAY,MAAA,CAAQ,IAAI,GAAO,CAAW,CAAC,EAAE,CAAG,CAAK,CAAC,IAAQ,AACjF,CAAA,CAAK,CAAC,EAAO,EAAE,CAAG,CACtB,CACA,KAAM,KAAc,EAAM,GAA1B,GACA,KACJ,CACJ,KAAK,GACL,KAAK,GACD,IACA,EAAO,GAAA,EAAO,EAAS,GAAK,EAC5B,KACJ,MAAK,GACG,EAAM,MAAA,CAAS,GAAG,IACtB,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAO,EAAI,GACX,KACJ,MAAK,GACG,EAAM,MAAA,CAAS,GAAG,IAEtB,EADA,GAAM,EAAM,KAAZ,GACW,GACX,KACJ,MAAK,GACD,KAAM,EAAM,MAAA,EAAU,GAAE,CACpB,IAAI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EAAM,EAAM,KAAtB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,EAC/C,CACA,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAK,MAAA,CAAO,EAAI,GAChB,KACJ,MAAK,GACD,KAAM,EAAM,MAAA,EAAU,GAClB,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAK,MAAA,CAAO,EAAI,GAEpB,IAAI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAK,EAAM,KAArB,GACI,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EAAM,EAAM,KAAtB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,GAC3C,KACJ,MAAK,GAED,IADI,EAAM,MAAA,CAAS,GAAG,CAAA,GAAM,EAAM,KAAlC,EAAA,EACM,EAAM,MAAA,EAAU,GAClB,EAAM,EACN,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAK,EACL,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,GAE/C,KACJ,MAAK,GAED,IADI,EAAM,MAAA,CAAS,GAAG,CAAA,GAAM,EAAM,KAAlC,EAAA,EACM,EAAM,MAAA,EAAU,GAClB,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EACN,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,EACL,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,GAE/C,KACJ,MAAK,GACD,EAAM,IAAA,CAAK,EAAO,WAAlB,IACA,KACJ,MAAK,GAGD,GADA,EAAO,CAAM,CADb,EAAQ,EAAM,GAAA,GAAQ,EACF,CACV,CACN,CAAU,CAAC,EAAM,CAAG,CAAA,EACpB,IAAI,EAAI,EAAO,GAAf,CACI,EAAI,CACR,CAAA,EAAO,GAAA,CAAM,EAAK,MAAlB,CACA,EAAM,EAAK,MAAA,CAAS,EAAK,MAAzB,CACA,IACA,EAAO,GAAA,CAAM,EACb,EAAM,CACV,CACA,KACJ,MAAK,GACL,KAAK,GAED,IADA,EAAQ,AAAO,KAAP,EACF,EAAM,MAAA,EAAU,GACd,GACA,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EACN,EAAM,EAAM,EAAM,KAAlB,GAEA,EAAK,AADL,CAAA,EAAM,EAAM,EAAM,KAAlB,EAAA,EACW,EAAM,KAAjB,GACA,EAAK,EAAO,CAAA,AAAiB,IAAjB,EAAM,MAAA,CAAe,EAAM,KAAA,GAAU,CAAA,IAEjD,EAAM,EACN,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAK,EAAM,EAAM,KAAjB,GACA,EAAK,EAAO,CAAA,AAAiB,IAAjB,EAAM,MAAA,CAAe,EAAM,KAAA,GAAU,CAAA,GAErD,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAI,GAC3C,EAAQ,CAAC,EAEb,KACJ,MAAK,GAED,OADA,EAAK,EAAO,SAAZ,IAEI,KAAK,EACD,IAAI,EAAI,EAAM,GAAd,GACI,EAAI,EAAM,GAAd,GACA,EAAM,IAAA,CAAK,GAAK,EAAI,EAAI,GACxB,KACJ,MAAK,EACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,GAAK,EAAI,EAAI,GACxB,KACJ,MAAK,EACD,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAI,EAAI,GACnB,KACJ,MAAK,EACD,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,KAAK,GAAA,CAAI,IACpB,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAI,GACf,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAI,GACf,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAI,GACf,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,CAAC,GACZ,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,IAAM,EAAI,EAAI,GACzB,KACJ,MAAK,GACD,EAAM,GAAN,GACA,KACJ,MAAK,GACD,IAAI,EAAM,EAAM,GAAhB,GACI,EAAM,EAAM,GAAhB,EACA,CAAA,CAAK,CAAC,EAAI,CAAG,EACb,KACJ,MAAK,GACD,EAAM,EAAM,GAAZ,GACA,EAAM,IAAA,CAAK,CAAK,CAAC,EAAI,EAAI,GACzB,KACJ,MAAK,GACD,IAAI,EAAK,EAAM,GAAf,GACI,EAAK,EAAM,GAAf,GACI,EAAK,EAAM,GAAf,GACI,EAAK,EAAM,GAAf,GACA,EAAM,IAAA,CAAK,GAAM,EAAK,EAAK,GAC3B,KACJ,MAAK,GACD,EAAM,IAAA,CAAK,KAAK,MAAhB,IACA,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAI,GACf,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,KAAK,IAAA,CAAK,IACrB,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAG,GACd,KACJ,MAAK,GACD,EAAI,EAAM,GAAV,GACA,EAAI,EAAM,GAAV,GACA,EAAM,IAAA,CAAK,EAAG,GACd,KACJ,MAAK,GAEG,AADJ,CAAA,EAAM,EAAM,GAAZ,EAAA,EACU,EAAG,EAAM,EACV,EAAM,EAAM,MAAA,CAAS,GAAG,CAAA,EAAM,EAAM,MAAA,CAAS,CAAA,EACtD,EAAM,IAAA,CAAK,CAAK,CAAC,EAAI,EACrB,KACJ,MAAK,GACD,IAAI,EAAI,EAAM,GAAd,GACI,EAAI,EAAM,GAAd,GACA,GAAI,GAAK,EAAG,KAAM,EAAI,GAAE,CACpB,IAAI,EAAI,CAAK,CAAC,EAAI,EAAE,CACpB,IAAI,IAAI,EAAI,EAAI,EAAG,GAAK,EAAG,IAAI,CAAK,CAAC,EAAI,EAAE,CAAG,CAAK,CAAC,EAAE,AACtD,CAAA,CAAK,CAAC,EAAE,CAAG,EACX,GACJ,MACK,KAAM,EAAI,GAAE,CACb,IAAI,EAAI,CAAK,CAAC,EAAE,CAChB,IAAI,IAAI,EAAI,EAAG,GAAK,EAAG,IAAI,CAAK,CAAC,EAAE,CAAG,CAAK,CAAC,EAAI,EAAE,AAClD,CAAA,CAAK,CAAC,EAAI,EAAE,CAAG,EACf,GACJ,CACA,KACJ,MAAK,GACD,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EACN,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,IAAI,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EACN,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EACN,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EACN,EAAM,EAAM,EAAM,KAAtB,GACI,EAAM,EACV,EAAK,EACL,EAAK,EACL,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAK,GAC5C,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAK,GAC5C,KACJ,MAAK,GACD,IAAI,EAAM,EAAE,CACZ,IAAI,IAAI,EAAI,EAAG,GAAK,EAAG,IACnB,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAI,IAAA,CAAK,EAAI,GAEjB,EAAK,aAAA,IAAiB,EAAI,KAAA,CAAM,EAAG,IACnC,EAAK,aAAA,IAAiB,EAAI,KAAA,CAAM,IAChC,EAAM,KAAA,GACN,KACJ,MAAK,GACD,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EAAK,EAAM,KAAjB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EACN,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EACN,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EAAM,EAAM,KAAlB,GACA,EAAM,EACN,EAAK,EACL,EAAK,EACL,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAK,GAC5C,EAAK,aAAA,CAAc,EAAK,EAAK,EAAK,EAAK,EAAK,GAC5C,KACJ,MAAK,GACD,IAAI,EAAS,EACT,GAAS,EACb,EAAM,EAAE,CACR,IAAI,IAAI,EAAK,EAAG,GAAM,EAAG,IACrB,GAAM,EAAM,KAAZ,GACA,GAAM,EAAM,KAAZ,GACA,EAAI,IAAA,CAAK,EAAI,EAEb,CAAA,KAAK,GAAA,CAAI,EAAK,GAAU,KAAK,GAAA,CAAI,EAAK,KACtC,GAAM,EAAM,KAAZ,GACA,EAAK,KAEL,EAAK,EACL,GAAM,EAAM,KAAZ,IAEJ,EAAI,IAAA,CAAK,EAAI,GACb,EAAK,aAAA,IAAiB,EAAI,KAAA,CAAM,EAAG,IACnC,EAAK,aAAA,IAAiB,EAAI,KAAA,CAAM,IAChC,KACJ,SACI,MAAM,AAAI,MAAM,CAAC,eAAe,EAAE,EAAG,CAAC,CAC9C,CACA,KACJ,SACI,MAAM,AAAI,MAAM,CAAC,YAAY,EAAE,EAAG,CAAC,CAC3C,CACJ,MAAO,GAAI,EAAK,IAAK,EAAM,IAAA,CAAK,EAAK,UAChC,GAAI,EAAK,IAAK,CACf,IAAI,EAAK,EAAO,SAAhB,GACA,EAAM,IAAA,CAAK,AAAC,CAAA,EAAK,GAAA,EAAO,IAAM,EAAK,IACvC,MAAO,GAAI,EAAK,IAAK,CACjB,IAAI,EAAK,EAAO,SAAhB,GACA,EAAM,IAAA,CAAK,CAAA,CAAA,AAAc,IAAZ,CAAA,EAAK,GAAA,CAAO,EAAM,EAAK,IACxC,MAAO,EAAM,IAAA,CAAK,EAAO,WAAA,GAAgB,MAC7C,CACJ,EAGA,OAFA,IACI,GAAM,EAAK,SAAf,GACO,CACX,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,MACxF,CACJ,CAMA,IAAI,GAAkC,IAAI,GAA0B,CAChE,QM5wWkB,GN6wWlB,QM7wWkB,GN8wWlB,KAAM,IAAI,GAA0B,GACpC,KAAM,IAAI,GAA0B,AAAC,GAAI,EAAE,MAAA,CAAO,MAAA,CAAS,EAAE,cAA7D,CACJ,EACA,OAAM,WAAqD,GACvD;;;;;;;GAOD,EAAG,gBAAgB,CAAI,CAAE,CACpB,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,WAAA,CAAY,MAAA,CAAQ,IAAI,CACvD,IAAI,EAAQ,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,WAAW,CAAC,EAAE,CAC1C,GAAI,EAAM,IAAA,EAAQ,EAAM,KAC5B,CACA,IAAI,EAAU,EAAM,YAApB,CACI,EAAQ,CAAO,CAAC,IAAI,CAAC,EAAA,CAAG,CACxB,EAAM,CAAO,CAAC,IAAI,CAAC,EAAA,CAAK,EAAE,QAC9B,AAAI,IAAU,EAAY,MAC1B,IAAI,CAAC,KAAA,CAAM,MAAA,CAAO,GAAA,CAAM,EACjB,GAAgC,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,MAAA,CAAQ,CAC7D,OAAQ,EAAM,CAClB,GACJ,CACA,OAAO,CAAG,CAAE,CAAI,CAAE,CACd,IAAI,EAAM,IAAI,CAAC,eAAA,CAAgB,GAC/B,GAAI,AAAO,MAAP,EAAa,CACb,IAAI,EAAQ,EAAO,IAAI,CAAC,KAAA,CAAM,UAA9B,CACA,EAAI,KAAA,CAAM,EAAI,IAAA,CAAM,CAChB,OAAQ,EACR,EAAG,EAAI,OAAP,CACA,EAAI,AAAA,CAAA,IAAI,CAAC,IAAA,CAAK,IAAA,CAAO,EAAI,OAAM,AAAN,EAAW,CACxC,EACJ,CACI,IAAI,CAAC,KAAA,CAAM,IAAA,CAAK,KAAA,CAAM,cAAA,EAAgB,KAAK,CAAC,OAAO,EAAK,EAChE,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,OACxF,CACJ,CAMA,MAAM,GACF,YAAY,CAAK,CAAE,CAAK,CAAC,CACrB,IAAI,CAAC,KAAA,CAAQ,EACb,IAAI,CAAC,KAAA,CAAQ,CACjB,CACJ,CACA,MAAM,WAAqD,GACvD,UAAW,CACP,IAAI,EAAO,IAAQ,GACnB,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,MAAA,CAAO,MAAA,CAAQ,IAAI,CAEvC,IAAI,EAAI,AADI,IAAI,CAAC,MAAM,CAAC,EAAE,CACZ,KAAA,CAAM,IAApB,CACA,EAAK,QAAA,CAAS,EAAE,IAAA,CAAM,EAAE,IAAxB,EACA,EAAK,QAAA,CAAS,EAAE,IAAA,CAAM,EAAE,IAAxB,CACJ,CACA,OAAO,CACX,CACA;;;;GAID,EAAG,IAAI,QAAS,CACX,IAAI,EAAO,IAAI,CAAC,KAAA,CAAM,IAAtB,CACI,EAAO,IAAI,CAAC,KAAA,CAAM,IAAtB,CACI,EAAM,EACN,EAAO,EAAK,eAAA,CAAgB,MAAA,CAAS,EACzC,KAAM,GAAO,GAAK,CACd,IAAI,EAAM,EAAM,GAAQ,EACxB,IAAI,EAAM,EAAK,eAAe,CAAC,EAAI,CACnC,GAAI,IAAI,CAAC,EAAA,CAAK,EAAI,GAAA,CAAK,EAAO,EAAM,OAC/B,GAAI,IAAI,CAAC,EAAA,CAAK,EAAI,GAAA,CAAK,EAAM,EAAM,MACnC,CACD,IAAI,EAAY,EAChB,KACJ,CACJ,CACA,yCAAyC;AACzC,2CAA2C;AAC3C,GAAI,AAAa,MAAb,EAAmB,CACnB,IAAI,EAAI,IAAI,CAAC,KAAA,CAAM,aAAA,CAAc,IAAI,CAAC,EAAtC,EACI,EAAQ,CACR,IAAK,EACL,MAAO,EACP,KAAM,EACN,MAAO,GACX,EACA,MAAO,CACH,IAAI,GAAgC,EAAG,GAC1C,AACL,CACA,+CAA+C;AAC/C,IAAI,EAAS,EAAE,CACf,IAAI,IAAI,EAAI,EAAU,eAAA,CAAiB,EAAI,EAAU,eAAA,CAAkB,EAAU,SAAA,CAAW,IAAI,CAC5F,IAAI,EAAM,EAAK,YAAY,CAAC,EAAE,CAC1B,EAAQ,EAAK,YAAY,CAAC,EAAI,YAAA,CAAa,CAC3C,EAAI,IAAI,CAAC,KAAA,CAAM,aAAA,CAAc,EAAI,GAArC,EACA,EAAO,IAAA,CAAK,IAAI,GAAgC,EAAG,GACvD,CACA,OAAO,CACX,CACA,OAAO,CAAG,CAAE,CAAI,CAAE,CACd,IAAK,GAAI,CAAE,MAAO,CAAK,CAAG,MAAO,CAAK,CAAG,GAAI,IAAI,CAAC,MAAA,CAC9C,EAAI,SAAA,CAAU,CACV,EAAM,GAAN,CACA,EAAM,KAAN,CACA,EAAM,IAAN,CACH,CAAE,EAAM,KAAA,CAAQ,IAAM,KACvB,EAAM,MAAA,CAAO,EAAK,EAG1B,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,OACxF,CACJ,CAcA,MAAM,GACF,gBAAgB,CAAM,CAAE,CACpB,kEAAkE;AAClE,wEAAwE;AACxE,IAAI,EAAa,EAAE,CACnB,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,MAAA,CAAQ,IAAI,CAC/C,IAAI,EAAO,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,IAAI,CAAC,EAAE,AAC7B,CAAA,CAAM,CAAC,EAAE,CAAG,EAAK,YAAA,CAAc,EAAW,IAAA,CAAK,AAAC,CAAA,CAAM,CAAC,EAAE,CAAG,EAAK,YAAA,CAAe,OAAO,OAAM,AAAN,EAAY,CAAA,EAAK,YAAA,CAAe,EAAK,QAAA,CAAW,OAAO,OAAM,AAAN,GAC7I,EAAW,IAAA,CAAK,AAAC,CAAA,CAAM,CAAC,EAAE,CAAG,EAAK,YAAA,CAAe,OAAO,OAAM,AAAN,EAAY,CAAA,EAAK,QAAA,CAAW,EAAK,YAAA,CAAe,OAAO,OAAM,AAAN,EACxH,CACA,gEAAgE;AAChE,0DAA0D;AAC1D,GAAI,IAAI,CAAC,IAAA,CAAK,IAAA,CAAM,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAQ,IAAI,CACtE,IAAI,EAAU,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,OAAO,CAAC,EAAE,CACvC,IAAI,IAAI,EAAI,EAAG,EAAI,EAAQ,cAAA,CAAe,MAAA,CAAQ,IAAI,CAClD,IAAI,EAAO,EAAQ,cAAc,CAAC,EAAE,CACpC,GAAI,GAAK,GAAK,CAAU,CAAC,EAAE,CAAG,EAAK,SAAA,CAAW,CAC1C,IAAI,EAAO,EAAQ,cAAc,CAAC,EAAI,EAAE,AACxC,CAAA,CAAU,CAAC,EAAE,CAAG,AAAC,CAAA,AAAC,CAAA,CAAU,CAAC,EAAE,CAAG,EAAK,SAAQ,AAAR,EAAc,CAAA,EAAK,OAAA,CAAU,EAAK,OAAM,AAAN,EAAW,OAAO,OAAM,AAAN,EAAY,CAAA,EAAK,SAAA,CAAY,EAAK,SAAA,CAAY,OAAO,OAAM,AAAN,EAAW,EAAK,OAAhK,CACA,KACJ,CACJ,CACJ,CACA,OAAO,CACX,CACA,gBAAgB,CAAG,CAAE,CAAW,CAAE,CAC9B,GAAI,CAAC,IAAI,CAAC,IAAA,CAAK,IAAA,EAAQ,CAAC,IAAI,CAAC,IAAA,CAAK,IAAA,CAAM,OACxC,GAAI,CAAE,KAAM,CAAI,CAAG,CAAG,IAAI,CAAC,IAA3B,CACA,GAAI,GAAO,EAAK,UAAA,CAAY,OAC5B,IAAI,EAAS,EAAK,OAAO,CAAC,EAAI,CAC9B,GAAI,IAAW,EAAK,OAAO,CAAC,EAAM,EAAE,CAAE,MACtC,qCAAoC;AACpC,GAAI,CAAE,OAAQ,CAAM,CAAG,CAAG,IAAI,CAAC,IAA/B,CAEA,GADA,EAAO,GAAA,CAAM,EACT,EAAO,GAAA,EAAO,EAAO,MAAA,CAAQ,OACjC,IAAI,EAAa,EAAO,YAAxB,GACI,EAAe,EAAS,EAAO,YAAnC,GACA,GAAI,AAhD6C,MAgD7C,EAA+D,CAC/D,IAAI,EAAO,EAAO,GAAlB,AACA,CAAA,EAAO,GAAA,CAAM,EACb,IAAI,EAAe,IAAI,CAAC,YAAxB,GACA,EAAe,EAAO,GAAtB,CACA,EAAO,GAAA,CAAM,CACjB,CACA,IAAI,EAAa,EAAY,GAAA,CAAI,AAAC,GAAK,EAAG,IAA1C,IACA,GAvDuC,KAwDvC,IAAI,IAAI,EAAI,EAAG,EAAI,EAAY,IAAI,CAC/B,IAAI,EAAgB,EAAO,YAA3B,GACI,EAAa,EAAO,YAAxB,GACA,GAAI,AA1DmC,MA0DnC,EAAyD,CACzD,IAAI,EAAc,EAAE,CACpB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,SAAA,CAAW,IAAI,EAAY,IAAA,CAAK,EAAO,WAAA,GAAgB,MACnF,KAAO,CACH,GAAI,AAAC,CAAA,AA3D0B,KA2D1B,CAAa,GAA2C,EAAK,gBAAA,CAAkB,MAAM,AAAI,MAAM,sBACpG,IAAI,EAAc,EAAK,YAAY,CAAC,AA5DL,KA4DK,EAAoD,AAC5F,CACA,GAAI,AAhEiC,MAgEjC,EAAuD,CACvD,IAAI,EAAc,EAAE,CACpB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,SAAA,CAAW,IAAI,EAAY,IAAA,CAAK,EAAO,WAAA,GAAgB,OAC/E,IAAI,EAAY,EAAE,CAClB,IAAI,IAAI,EAAK,EAAG,EAAK,EAAK,SAAA,CAAW,IAAK,EAAU,IAAA,CAAK,EAAO,WAAA,GAAgB,MACpF,CACA,8CAA8C;AAC9C,IAAI,EAAS,IAAI,CAAC,WAAA,CAAY,EAAY,EAAa,EAAa,GACpE,GAAI,AAAW,IAAX,EAAc,CACd,GAAgB,EAChB,QACJ,CACA,IAAI,EAAO,EAAO,GAAlB,CAEA,GADA,EAAO,GAAA,CAAM,EACT,AA7EoC,KA6EpC,EAA0D,IAAI,EAAS,IAAI,CAAC,YAAhF,QACK,IAAI,EAAS,CAClB,2DAA0D;AAC1D,IAAI,EAAU,AAAkB,IAAlB,EAAO,MAAA,CAAe,EAAY,MAAA,CAAS,EAAO,MAAhE,CACI,EAAU,IAAI,CAAC,YAAA,CAAa,GAC5B,EAAU,IAAI,CAAC,YAAA,CAAa,GAChC,GAAI,AAAkB,IAAlB,EAAO,MAAA,CAAc,IAAI,IAAI,EAAI,EAAG,EAAI,EAAY,MAAA,CAAQ,IAAI,CAChE,IAAI,EAAQ,CAAW,CAAC,EAAE,AAC1B,CAAA,EAAM,CAAA,EAAK,KAAK,KAAA,CAAM,CAAO,CAAC,EAAE,CAAG,GACnC,EAAM,CAAA,EAAK,KAAK,KAAA,CAAM,CAAO,CAAC,EAAE,CAAG,EACvC,KACK,CACD,IAAI,EAAY,EAAW,GAAA,CAAI,AAAC,GAAK,EAAG,IAAxC,IACI,EAAW,EAAY,GAAA,CAAI,IAAI,CAAA,GACnC,IAAI,IAAI,EAAI,EAAG,EAAI,EAAO,MAAA,CAAQ,IAAI,CAClC,IAAI,EAAM,CAAM,CAAC,EAAE,CACnB,GAAI,EAAM,EAAY,MAAA,CAAQ,CAC1B,IAAI,EAAQ,CAAS,CAAC,EAAI,AAC1B,CAAA,CAAQ,CAAC,EAAI,CAAG,CAAA,EAChB,EAAM,CAAA,EAAK,KAAK,KAAA,CAAM,CAAO,CAAC,EAAE,CAAG,GACnC,EAAM,CAAA,EAAK,KAAK,KAAA,CAAM,CAAO,CAAC,EAAE,CAAG,EACvC,CACJ,CACA,IAAI,CAAC,wBAAA,CAAyB,EAAW,EAAY,GACrD,IAAI,IAAI,EAAK,EAAG,EAAK,EAAY,MAAA,CAAQ,IAAK,CAC1C,IAAI,EAAS,CAAS,CAAC,EAAG,CAAC,CAAA,CAAI,CAAU,CAAC,EAAG,CAAC,CAA9C,CACI,EAAS,CAAS,CAAC,EAAG,CAAC,CAAA,CAAI,CAAU,CAAC,EAAG,CAAC,CAA9C,AACA,CAAA,CAAW,CAAC,EAAG,CAAC,CAAA,EAAK,EACrB,CAAW,CAAC,EAAG,CAAC,CAAA,EAAK,CACzB,CACJ,CACA,GAAgB,EAChB,EAAO,GAAA,CAAM,CACjB,CACJ,CACA,cAAe,CACX,IAAI,EAAS,IAAI,CAAC,IAAA,CAAK,MAAvB,CACI,EAAQ,EAAO,SAAnB,EAhHuC,CAAA,IAiHnC,GAAgD,CAAA,EAAS,AAAA,CAAA,AAhHlB,IAgHkB,CAAQ,GAA+C,EAAI,EAAO,SAA/H,EAAA,EACA,IAAI,EAAS,IAAI,YAAY,GACzB,EAAI,EACJ,EAAQ,EACZ,KAAM,EAAI,GAAM,CACZ,IAAI,EAAM,EAAO,SAAjB,GACI,EAAW,AAAC,CAAA,AAtHuB,IAsHvB,CAAM,EAA8C,EAChE,EAAK,AAxH0B,IAwH1B,EAA+C,EAAO,UAAA,CAAa,EAAO,SAAnF,CACA,IAAI,IAAI,EAAI,EAAG,EAAI,GAAY,EAAI,EAAO,IACtC,GAAS,EAAG,IAAA,CAAK,GACjB,CAAM,CAAC,IAAI,CAAG,CAEtB,CACA,OAAO,CACX,CACA,aAAa,CAAK,CAAE,CAChB,IAAI,EAAS,IAAI,CAAC,IAAA,CAAK,MAAvB,CACI,EAAI,EACJ,EAAS,IAAI,WAAW,GAC5B,KAAM,EAAI,GAAM,CACZ,IAAI,EAAM,EAAO,SAAjB,GACI,EAAW,AAAC,CAAA,AAlIuB,GAkIvB,CAAM,EAA8C,EACpE,GAAI,AArI8B,IAqI9B,EAA6C,GAAK,MACjD,CACD,IAAI,EAAK,AAtIsB,GAsItB,EAA+C,EAAO,WAAA,CAAc,EAAO,QAApF,CACA,IAAI,IAAI,EAAI,EAAG,EAAI,GAAY,EAAI,EAAO,IAAI,CAAM,CAAC,IAAI,CAAG,EAAG,IAAA,CAAK,EACxE,CACJ,CACA,OAAO,CACX,CACA,YAAY,CAAU,CAAE,CAAW,CAAE,CAAW,CAAE,CAAS,CAAE,CACzD,IAAI,EAAa,IAAI,CAAC,gBAAtB,CACI,CAAE,KAAM,CAAI,CAAG,CAAG,IAAI,CAAC,IAA3B,CACI,EAAS,EACb,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,SAAA,CAAW,IAC/B,GAAI,AAAmB,IAAnB,CAAW,CAAC,EAAE,EAClB,GAAI,AAAkB,IAAlB,CAAU,CAAC,EAAE,CAAQ,OAAO,EAChC,GAAK,AAAA,CAAA,AAzJgC,MAyJhC,CAAa,GAA8C,EAAG,CAC/D,GAAI,CAAU,CAAC,EAAE,CAAG,KAAK,GAAA,CAAI,EAAG,CAAW,CAAC,EAAE,GAAK,CAAU,CAAC,EAAE,CAAG,KAAK,GAAA,CAAI,EAAG,CAAW,CAAC,EAAE,EAAG,OAAO,EACvG,EAAU,AAAA,CAAA,EAAS,CAAU,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,EAAY,CAAA,CAAW,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,CAClF,KAAO,CACH,GAAI,CAAU,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,EAAI,CAAU,CAAC,EAAE,CAAG,CAAS,CAAC,EAAE,CAAE,OAAO,EAClC,EAAhC,CAAU,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAW,EAAU,CAAA,CAAU,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,EAAY,CAAA,CAAW,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,EAC3I,EAAU,CAAA,CAAS,CAAC,EAAE,CAAG,CAAU,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,EAAY,CAAA,CAAS,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,CACrH,EAEJ,OAAO,CACX,CACA,4CAA4C;AAC5C,yCAAyC;AACzC,2BAA2B;AAC3B,yBAAyB,CAAM,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACjD,GAAI,AAAkB,IAAlB,EAAO,MAAA,CAAc,OACzB,IAAI,EAAQ,EACZ,KAAM,EAAQ,EAAO,MAAA,EAAO,CACxB,IAAI,EAAa,EAEb,EAAW,EACX,EAAK,CAAM,CAAC,EAAS,CACzB,KAAM,CAAC,EAAG,UAAA,EAAW,EAAK,CAAM,CAAC,EAAE,EAAS,CAC5C,wCAAwC;AACxC,KAAM,GAAS,GAAY,CAAC,CAAQ,CAAC,EAAM,EAAC,IAC5C,GAAI,EAAQ,EAAU,SACtB,IAAI,EAAa,EACb,EAAW,EAEf,IADA,IACM,GAAS,GAEP,CAAQ,CAAC,EAAM,GACf,IAAI,CAAC,gBAAA,CAAiB,EAAW,EAAG,EAAQ,EAAG,EAAU,EAAO,EAAU,GAC1E,EAAW,GAEf,GAGA,CAAA,IAAa,EAAY,IAAI,CAAC,UAAA,CAAW,EAAY,EAAU,EAAU,EAAU,IAEnF,iFAAiF;AACjF,IAAI,CAAC,gBAAA,CAAiB,EAAW,EAAG,EAAU,EAAU,EAAY,EAAU,GAC1E,EAAa,GAAG,IAAI,CAAC,gBAAA,CAAiB,EAAY,EAAa,EAAG,EAAU,EAAY,EAAU,IAE1G,EAAQ,EAAW,CACvB,CACJ,CACA,iBAAiB,CAAE,CAAE,CAAE,CAAE,CAAI,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAS,CAAE,CACtD,GAAI,EAAK,EAAI,OACb,IAAI,EAAW,CACX,IACA,IACH,CACD,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,MAAA,CAAQ,IAAI,CACpC,IAAI,EAAI,CAAQ,CAAC,EAAE,CACnB,GAAI,CAAQ,CAAC,EAAK,CAAC,EAAE,CAAG,CAAQ,CAAC,EAAK,CAAC,EAAE,CAAE,CACvC,IAAI,EAAI,EACR,EAAO,EACP,EAAO,CACX,CACA,IAAI,EAAM,CAAQ,CAAC,EAAK,CAAC,EAAE,CACvB,EAAM,CAAQ,CAAC,EAAK,CAAC,EAAE,CACvB,EAAO,CAAS,CAAC,EAAK,CAAC,EAAE,CACzB,EAAO,CAAS,CAAC,EAAK,CAAC,EAAE,AAC7B,kEAAiE;AACjE,yDAAyD;AACzD,GAAI,IAAQ,GAAO,IAAS,EAAM,CAC9B,IAAI,EAAQ,IAAQ,EAAM,EAAI,AAAC,CAAA,EAAO,CAAA,EAAS,CAAA,EAAM,CAAA,EACrD,IAAI,IAAI,EAAI,EAAI,GAAK,EAAI,IAAI,CACzB,IAAI,EAAM,CAAQ,CAAC,EAAE,CAAC,EAAE,AACpB,CAAA,GAAO,EAAK,GAAO,EAAO,EACrB,GAAO,EAAK,GAAO,EAAO,EAC9B,EAAM,EAAO,AAAC,CAAA,EAAM,CAAA,EAAO,EAChC,CAAS,CAAC,EAAE,CAAC,EAAE,CAAG,CACtB,CACJ,CACJ,CACJ,CACA,WAAW,CAAE,CAAE,CAAE,CAAE,CAAG,CAAE,CAAQ,CAAE,CAAS,CAAE,CACzC,IAAI,EAAS,CAAS,CAAC,EAAI,CAAC,CAAA,CAAI,CAAQ,CAAC,EAAI,CAAC,CAA9C,CACI,EAAS,CAAS,CAAC,EAAI,CAAC,CAAA,CAAI,CAAQ,CAAC,EAAI,CAAC,CAA9C,CACA,GAAI,AAAW,IAAX,GAAgB,AAAW,IAAX,EACpB,IAAI,IAAI,EAAI,EAAI,GAAK,EAAI,IAAQ,IAAM,IACnC,CAAS,CAAC,EAAE,CAAC,CAAA,EAAK,EAClB,CAAS,CAAC,EAAE,CAAC,CAAA,EAAK,EAE1B,CACA,qBAAqB,CAAG,CAAE,CAAK,CAAE,CAC7B,IAAI,EAAY,EAChB,GAAI,EAAM,mBAAA,CAAqB,CAC3B,IAAI,EAAM,EACN,GAAO,EAAM,mBAAA,CAAoB,QAAA,EAAU,CAAA,EAAM,EAAM,mBAAA,CAAoB,QAAA,CAAW,CAAA,EACxE,EAAM,mBAAA,CAAoB,WAA5C,CACC,CAAE,WAAY,CAAU,CAAG,WAAY,CAAU,CAAG,CAAG,EAAM,mBAAA,CAAoB,OAAO,CAAC,EAAI,AAClG,MACI,EAAa,EACb,EAAa,EAEjB,OAAO,IAAI,CAAC,QAAA,CAAS,EAAM,kBAAA,CAAoB,EAAY,EAC/D,CACA,kDAAkD;AAClD,iCAAiC;AACjC,SAAS,CAAS,CAAE,CAAU,CAAE,CAAU,CAAE,CACxC,GAAI,GAAc,EAAU,iBAAA,CAAkB,MAAA,CAAQ,OAAO,EAC7D,IAAI,EAAU,EAAU,iBAAiB,CAAC,EAAW,CACrD,GAAI,GAAc,EAAQ,SAAA,CAAU,MAAA,CAAQ,OAAO,EACnD,IAAI,EAAW,EAAQ,SAAS,CAAC,EAAW,CACxC,EAAc,IAAI,CAAC,cAAA,CAAe,EAAW,GAC7C,EAAgB,EACpB,IAAI,IAAI,EAAS,EAAG,EAAS,EAAQ,gBAAA,CAAkB,IAAS,GAAiB,EAAS,MAAM,CAAC,EAAO,CAAG,CAAW,CAAC,EAAO,CAC9H,OAAO,CACX,CACA,eAAe,CAAS,CAAE,CAAU,CAAE,CAClC,IAAI,EAAU,EAAU,iBAAiB,CAAC,EAAW,CACrD,GAAI,IAAI,CAAC,YAAA,CAAa,GAAA,CAAI,GAAU,OAAO,IAAI,CAAC,YAAA,CAAa,GAAA,CAAI,GACjE,IAAI,EAAmB,IAAI,CAAC,gBAA5B,CACI,EAAc,EAAE,CACpB,wDAAwD;AACxD,IAAI,IAAI,EAAS,EAAG,EAAS,EAAQ,gBAAA,CAAkB,IAAS,CAC5D,IAAI,EAAS,EACT,EAAc,EAAQ,aAAa,CAAC,EAAO,CAC3C,EAAO,EAAU,mBAAA,CAAoB,gBAAgB,CAAC,EAAY,CACtE,+CAA+C;AAC/C,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,MAAA,CAAQ,IAAI,CAChC,IAAI,EAAO,CAAI,CAAC,EAAE,AAalB,wCAAuC;AACvC,GAVI,EAAK,UAAA,CAAa,EAAK,SAAA,EAAa,EAAK,SAAA,CAAY,EAAK,QAAA,CAAuB,EAC5E,EAAK,UAAA,CAAa,GAAK,EAAK,QAAA,CAAW,GAAK,AAAmB,IAAnB,EAAK,SAAA,CAA8B,EAC/E,AAAmB,IAAnB,EAAK,SAAA,CAA8B,EACnC,CAAgB,CAAC,EAAE,CAAG,EAAK,UAAA,EAAc,CAAgB,CAAC,EAAE,CAAG,EAAK,QAAA,CAAuB,EAE5F,CAAgB,CAAC,EAAE,GAAK,EAAK,SAAA,CAAwB,EAChD,CAAgB,CAAC,EAAE,CAAG,EAAK,SAAA,CAAwB,AAAC,CAAA,CAAgB,CAAC,EAAE,CAAG,EAAK,UAAA,CAAa,OAAO,OAAM,AAAN,EAAY,CAAA,EAAK,SAAA,CAAY,EAAK,UAAA,CAAa,OAAO,OAAM,AAAN,EAC/I,AAAA,CAAA,EAAK,QAAA,CAAW,CAAgB,CAAC,EAAE,CAAG,OAAO,OAAM,AAAN,EAAY,CAAA,EAAK,QAAA,CAAW,EAAK,SAAA,CAAY,OAAO,OAAM,AAAN,CAI5H,CACA,CAAW,CAAC,EAAO,CAAG,CAC1B,CAEA,OADA,IAAI,CAAC,YAAA,CAAa,GAAA,CAAI,EAAS,GACxB,CACX,CACA,YAAY,CAAI,CAAE,CAAM,CAAC,CACrB,IAAI,CAAC,IAAA,CAAO,EACZ,IAAI,CAAC,gBAAA,CAAmB,IAAI,CAAC,eAAA,CAAgB,GAC7C,IAAI,CAAC,YAAA,CAAe,IAAI,GAC5B,CACJ,CAKuC,QAAQ,OAA/C,EACA,OAAM,GACF,aAAa,CAAK,CAAE,CAMhB,MALqB,UAAjB,OAAO,GAAoB,CAAA,EAAQ,EAAM,EAA7C,AAAA,EAC2B,MAAvB,IAAI,CAAC,OAAO,CAAC,EAAM,GACnB,IAAI,CAAC,MAAA,CAAO,IAAA,CAAK,GACjB,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAI,CAAC,MAAA,CAAO,MAAA,CAAS,GAExC,IAAI,CAAC,OAAO,CAAC,EAAM,AAC9B,CACA,YAAY,CAAI,CAAC,CACb,IAAI,CAAC,IAAA,CAAO,EACZ,IAAI,CAAC,MAAA,CAAS,EAAE,CAChB,IAAI,CAAC,OAAA,CAAU,CAAC,EAChB,mCAAmC;AACnC,IAAI,CAAC,YAAA,CAAa,EACtB,CACJ,CAaA,MAAM,GACF,OAAO,KAAK,CAAG,CAAE,CACb,OAAO,GAAO,GAAK,GAAO,IAAM,EAAI,CACxC,CACA,OAAO,OAAO,CAAM,CAAE,CAAK,CAAE,CACrB,GAAS,GAAK,GAAS,IAAK,EAAO,UAAA,CAAW,GAC7C,EAAO,YAAA,CAAa,EAC7B,CACJ,CACA,IAAI,GAA6B,IAAI,GAA0B,CAC3D,iBMhuXiB,GNiuXjB,KMjuXiB,GNkuXjB,KMluXiB,GNmuXjB,KMnuXiB,GNouXjB,KMpuXiB,GNquXjB,iBAAkB,IAAI,GM/uXJ,GN+uXwD,oBAC1E,aAAc,IAAI,GAAyB,GMhvXzB,INivXlB,MAAO,IAAI,GAAyB,GAA0B,GAC9D,QAAS,IAAI,GAAyB,GAA6B,GACnE,QAAS,IAAI,GAAyB,GAA6B,EACvE,EACA,OAAM,GACF,aAAa,CAAI,CAAE,EAAe,EAAE,CAAE,CAClC,IAAI,EAAmB,EAAE,CACrB,EAAU,EAAE,CACZ,EAAU,EAAE,CACZ,EAAQ,EAAE,CACV,EAAO,EACP,EAAQ,EAAG,EAAQ,EAAG,EAAW,EACjC,EAAa,EACjB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,QAAA,CAAS,MAAA,CAAQ,IAAI,CACzC,IAAI,EAAI,EAAK,QAAQ,CAAC,EAAE,CACxB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAE,IAAA,CAAK,MAAA,CAAQ,GAAK,EAAE,CACrC,IAAI,EAAI,EAAE,IAAI,CAAC,EAAE,CACb,EAAI,EAAE,IAAI,CAAC,EAAI,EAAE,CACjB,EAAO,CACX,4DAA2D;AAC3D,8DAA8D;AAC9D,iDAAiD;AACjD,GAAI,AAAc,qBAAd,EAAE,OAAA,EAAkC,AAAM,IAAN,EAAS,CAC7C,IAAI,EAAO,EAAK,QAAQ,CAAC,EAAI,EAAE,CAC/B,GAAI,GAAQ,AAAiB,qBAAjB,EAAK,OAAA,CAAgC,CAC7C,IAAI,EAAQ,AAAA,CAAA,EAAQ,EAAK,IAAI,CAAC,EAAE,AAAF,EAAM,EAChC,EAAQ,AAAA,CAAA,EAAQ,EAAK,IAAI,CAAC,EAAE,AAAF,EAAM,EACpC,GAAI,IAAM,GAAQ,IAAM,EAAM,QAClC,CACJ,CAEoB,qBAAd,EAAE,OAAA,EAAkC,AAAM,IAAN,GAAU,CAAA,GAtD7B,CAsDvB,EACA,EAAO,IAAI,CAAC,YAAA,CAAa,EAAG,EAAO,EAAS,EAtDf,EAGR,IAqDjB,AADJ,CAAA,EAAO,IAAI,CAAC,YAAA,CAAa,EAAG,EAAO,EAAS,EAtDf,EAGR,GAmDrB,IACa,GAAY,EAAO,KAC5B,CAAK,CAAC,EAAM,MAAA,CAAS,EAAE,EAvDN,EAwDjB,MAEI,EAAO,IACP,EAAM,IAAA,CAAK,GACX,EAAO,GAEX,EAAM,IAAA,CAAK,GACX,EAAW,GAEf,EAAQ,EACR,EAAQ,EACR,GACJ,CACkB,cAAd,EAAE,OAAA,EAAyB,EAAiB,IAAA,CAAK,EAAa,EACtE,CAEI,EAAK,QAAA,CAAS,MAAA,CAAS,GAAK,AAAoD,cAApD,EAAK,QAAQ,CAAC,EAAK,QAAA,CAAS,MAAA,CAAS,EAAE,CAAC,OAAA,EAAyB,EAAiB,IAAA,CAAK,EAAa,GACpI,IAAI,EAAO,EAAK,IAAhB,CACI,EAAO,CACP,iBAAkB,EAAiB,MAAnC,CACA,KAAM,EAAK,IAAX,CACA,KAAM,EAAK,IAAX,CACA,KAAM,EAAK,IAAX,CACA,KAAM,EAAK,IAAX,CACA,iBAAkB,EAClB,aAAc,EACd,MAAO,EACP,QAAS,EACT,QAAS,CACb,EACI,EAAO,GAA2B,IAAA,CAAK,GACvC,EAAO,EAAI,EAAO,EAClB,EAAS,IAAI,GAAgC,EAAO,GAIxD,OAHA,GAA2B,MAAA,CAAO,EAAQ,GAE7B,IAAT,GAAY,EAAO,IAAA,CAAK,EAAG,GACxB,EAAO,MAAd,AACJ,CACA,aAAa,CAAK,CAAE,CAAI,CAAE,CAAM,CAAE,CAAI,CAAE,CAAS,CAAE,CAAQ,CAAE,CACzD,IAAI,EAAO,EAAQ,EAUnB,OATI,IAAU,EAAM,GAAQ,GAEpB,MAAQ,GAAQ,GAAQ,MACxB,GAAQ,EACJ,EAAO,EAAG,EAAO,CAAC,EACjB,GAAQ,GAEjB,EAAO,IAAA,CAAK,IAET,CACX,CACJ,CAGA,MAAM,WAAqD,GACvD,UAAU,CAAG,CAAE,CACX,IAAI,EAAQ,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,GAC3B,EAAO,EAAM,OAAjB,GAEI,EAAY,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,OAAO,CAAC,EAAI,CACvC,EAAa,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,OAAO,CAAC,EAAM,EAAE,CAC5C,EAAS,IAAI,CAAC,IAAA,CAAK,eAAA,CAAgB,OACvC,CAAA,EAAO,GAAA,EAAO,EACd,IAAI,EAAS,EAAO,UAAA,CAAW,EAAa,EAC5C,qDAAoD;AACpD,GAAI,GAAQ,EAAK,gBAAA,CAAmB,EAAG,CACnC,EAAS,IAAI,WAAW,GACxB,IAAI,EAAO,IAAI,SAAS,EAAO,MAA/B,EACA,IAAK,IAAI,KAAa,EAAK,UAAA,CACvB,EAAM,IAAI,CAAC,YAAA,CAAa,EAAU,OAAlC,EACA,EAAK,SAAA,CAAU,EAAU,GAAA,CAAK,EAEtC,MAAW,GAAQ,IAAI,CAAC,IAAA,CAAK,mBAAA,EAC7B,CAAA,EAAS,IAAI,CAAC,YAAA,CAAa,YAAA,CAAa,EAAM,IAAA,CAAM,EAAK,YADzD,CAAA,EASA,OAPA,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,GACf,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAC,MAA5B,EACA,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,CACnB,QAAS,EAAM,YAAf,CACA,QAAS,EAAM,WAAA,GAAc,WAA7B,AACJ,GACA,IAAI,CAAC,MAAA,EAAU,EAAO,MAAtB,CACO,IAAI,CAAC,IAAA,CAAK,MAAA,CAAS,CAC9B,CACA,QAAS,CACL,+BAA+B;AAC/B,yDAAyD;AACzD,EAAE;AACF,mDAAmD;AACnD,2BAA2B;AAC3B,IAAI,CAAC,IAAA,CAAO,EAAE,CACd,IAAI,CAAC,MAAA,CAAS,EACd,IAAI,CAAC,IAAA,CAAO,CACR,QAAS,EAAE,CACX,QAAS,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,OAAxB,AACJ,EACA,IAAI,CAAC,IAAA,CAAO,CACR,QAAS,EAAE,CACX,SAAU,EAAE,AAChB,CACA,0BAAyB;AACzB,8DAA8D;AAC9D,oEAAoE;AACpE,IAAI,EAAI,EACR,KAAM,EAAI,IAAI,CAAC,MAAA,CAAO,MAAA,EAAO,IAAI,CAAC,SAAA,CAAU,IAAI,CAAC,MAAM,CAAC,IAAI,EAC5D,IAAI,EAAO,GAA4B,IAAgB,IAAI,CAAC,IAAA,CAAK,IAAjE,CACA,CAAA,EAAK,SAAA,CAAY,IAAI,CAAC,IAAA,CAAK,MAA3B,CACA,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAC,MAA5B,EACA,IAAI,EAAO,GAA4B,IAAgB,IAAI,CAAC,IAAA,CAAK,IAAjE,CACA,CAAA,EAAK,gBAAA,CAAmB,IAAI,CAAC,IAAA,CAAK,OAAlC,CACA,IAAI,EAAO,GAA4B,IAAgB,IAAI,CAAC,IAAA,CAAK,IAAjE,EAEA,WAAW;AACX,yBAAyB;AACzB,4BAA4B;AAC5B,6BAA6B;AAC7B,WAAW;AACX,yBAAyB;AACzB,EAAE;AACF,cAAc;AACd,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;AACnB,EAAE;AACF,SAAS;AACT,iBAAiB;AACjB,sBAAsB;AACtB,gBAAgB;AAChB,wBAAwB;AACxB,wBAAwB;AACxB,2BAA2B;AAC3B,QAAQ;AACR,gCAAgC;AAChC,OAvBA,EAAK,eAAA,CAAkB,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,MAAzC,CAuBW,AA/rN4B,GA+rNc,QAAA,CAAS,CAC1D,OAAQ,CACJ,KAAM,EACN,KAAM,EACN,KAAM,IAAI,CAAC,IAAX,CACA,KAAM,EACN,OAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CACzB,KAAM,IAAI,CAAC,IAAA,CAAK,IAAhB,CACA,KAAM,IAAI,CAAC,IAAX,CACA,KAAM,IAAI,CAAC,IAAX,CACA,KAAM,IAAI,CAAC,IAAA,CAAK,IAAhB,AACJ,CACJ,EACJ,CACA,YAAY,CAAI,CAAC,CACb,KAAK,CAAC,GACN,IAAI,CAAC,YAAA,CAAe,IAAQ,EAChC,CACJ,CAOA,MAAM,WAAqD,GACvD,mBAAoB,CAChB,IAAI,CAAC,WAAA,CAAc,EAAE,CACrB,IAAI,EAAS,CAAC,EACd,IAAK,IAAI,KAAO,IAAI,CAAC,MAAA,CAAO,CACxB,IAAI,CAAC,WAAA,CAAY,IAAA,CAAK,IAAI,CAAC,GAAA,CAAI,aAAA,CAAc,IAC7C,IAAI,EAAQ,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,GAE/B,IAAI,IAAI,KADG,EAAM,IAAA,CACD,EAAM,WAAA,CAAY,CAAM,CAAC,EAAK,CAAG,CAAA,CACrD,CACA,IAAI,CAAC,MAAA,CAAS,IAAI,CAAC,WAAA,CAAY,IAAI,CAAC,GAAA,CAAI,eAAA,CAAiB,EAC7D,CACA,YAAY,CAAK,CAAE,CAAI,CAAE,CACrB,IAAI,EAAM,EAAE,CACZ,IAAI,IAAI,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,IAAI,CACjC,IAAI,EAAO,CAAK,CAAC,EAAE,AACf,CAAA,CAAI,CAAC,EAAE,EACP,IAAI,CAAC,GAAA,CAAI,MAAA,CAAO,GAAA,CAAM,EAAK,MAA3B,CACA,EAAI,IAAA,CAAK,IAAI,CAAC,GAAA,CAAI,MAAA,CAAO,UAAA,CAAW,EAAK,MAAzC,IACG,EAAI,IAAA,CAAK,IAAI,WAAW,CAC3B,GACH,EAAI,UAAS;AAClB,CACA,OAAO,CACX,CACA,eAAe,CAAO,CAAE,CACpB,EAAQ,OAAA,CAAU,EAAE,CACpB,EAAQ,QAAA,CAAW,CACf,QAAS,EACT,IAAK,EAAE,AACX,EACA,IAAI,EAAW,CAAC,EACZ,EAAa,EAAE,CACf,EAAY,CAAC,EACjB,IAAK,IAAI,KAAO,IAAI,CAAC,MAAA,CAAO,CACxB,IAAI,EAAK,IAAI,CAAC,GAAA,CAAI,UAAA,CAAW,GAC7B,GAAI,AAAM,MAAN,EAAY,QACX,CAAA,CAAQ,CAAC,EAAG,GACb,EAAQ,OAAA,CAAQ,IAAA,CAAK,OAAO,MAAA,CAAO,CAAC,EAAG,IAAI,CAAC,GAAA,CAAI,OAAA,CAAQ,OAAO,CAAC,EAAG,GACnE,EAAW,IAAA,CAAK,CAAC,GACjB,CAAS,CAAC,EAAG,CAAG,EAAQ,OAAA,CAAQ,MAAA,CAAS,GAE7C,CAAQ,CAAC,EAAG,CAAG,CAAA,EACf,EAAQ,QAAA,CAAS,GAAA,CAAI,IAAA,CAAK,CAAS,CAAC,EAAG,EACvC,IAAI,EAAQ,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,GAE/B,IAAI,IAAI,KADG,EAAM,IAAA,CACD,EAAM,UAAA,CAAW,CAAU,CAAC,CAAS,CAAC,EAAG,CAAC,CAAC,EAAK,CAAG,CAAA,CACvE,CACA,IAAI,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAA,CAAQ,MAAA,CAAQ,IAAI,CAC3C,IAAI,EAAO,EAAQ,OAAO,CAAC,EAAE,AAC7B,QAAO,EAAK,QAAZ,CACI,EAAK,OAAA,EAAW,EAAK,OAAA,CAAQ,KAAA,GAC7B,EAAK,OAAA,CAAU,OAAO,MAAA,CAAO,CAAC,EAAG,EAAK,OAAtC,EACA,EAAK,OAAA,CAAQ,KAAA,CAAQ,IAAI,CAAC,WAAA,CAAY,EAAK,OAAA,CAAQ,KAAA,CAAO,CAAU,CAAC,EAAE,EAE/E,CAEJ,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,EAAa,CAAC,EAClB,IAAK,IAAI,KAAO,IAAI,CAAC,MAAA,CAAO,CACxB,IAAI,EAAQ,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,GAE/B,IAAI,IAAI,KADG,EAAM,IAAA,CACD,EAAM,UAAA,CAAW,CAAU,CAAC,EAAK,CAAG,CAAA,CACxD,CACA,IAAI,EAAc,OAAO,MAAA,CAAO,CAAC,EAAG,IAAI,CAAC,GAAA,CAAI,OAAA,CAAQ,OAArD,EAOA,OANI,IAAI,CAAC,GAAA,CAAI,OAAA,CAAQ,OAAA,EAAW,IAAI,CAAC,GAAA,CAAI,OAAA,CAAQ,OAAA,CAAQ,KAAA,EAAO,CAAA,EAAY,KAAA,CAAQ,IAAI,CAAC,WAAA,CAAY,IAAI,CAAC,GAAA,CAAI,OAAA,CAAQ,OAAA,CAAQ,KAAA,CAAO,EAArI,EACA,EAAQ,OAAA,CAAU,CACd,CACI,QAAS,CACb,EACH,CACM,EAAQ,QAAA,CAAW,CACtB,QAAS,EACT,QAAS,EACT,OAAQ,CACJ,CACI,MAAO,EACP,GAAI,CACR,EACH,CACD,SAAU,IAAI,CAAC,WAAA,CAAY,MAA3B,AACJ,CACJ,CACA,UAAU,CAAM,CAAE,QACd,AAAK,GACA,IAAI,CAAC,OAAA,EAAS,CAAA,IAAI,CAAC,OAAA,CAAU,EAAE,AAAF,EAClC,IAAI,CAAC,OAAA,CAAQ,IAAA,CAAK,GACP,GAA0C,MAAA,CAAS,IAAI,CAAC,OAAA,CAAQ,MAAA,CAAS,GAHhE,IAIxB,CACA,QAAS,CACL,IAAI,CAAC,iBAAL,GACA,IAAI,EAAU,CACV,QAAS,IAAI,CAAC,WAAA,CAAY,MAAA,CAAS,IAAM,EAAI,EAC7C,OAAQ,CACJ,CACI,MAAO,EACP,MAAO,IAAI,CAAC,WAAA,CAAY,MAAA,CAAS,CACrC,EACH,AACL,EACI,EAAU,OAAO,MAAA,CAAO,CAAC,EAAG,IAAI,CAAC,GAAA,CAAI,OAAzC,EAKA,IAAK,IAAI,KAJT,EAAQ,OAAA,CAAU,KAClB,EAAQ,OAAA,CAAU,EAClB,EAAQ,QAAA,CAAW,KACnB,EAAQ,WAAA,CAAc,IAAI,CAAC,WAA3B,CACgB,CACZ,UACA,SACA,YACA,WACA,aACA,SACA,aACA,eACA,WACH,EAAC,CAAO,CAAC,EAAI,CAAG,IAAI,CAAC,SAAA,CAAU,IAAI,CAAC,GAAA,CAAI,MAAA,CAAO,CAAO,CAAC,EAAI,EAC5D,CAAA,EAAQ,GAAA,CAAM,CACV,IAAI,CAAC,SAAA,CAAU,SACf,IAAI,CAAC,SAAA,CAAU,YACf,EACH,CACD,EAAQ,QAAA,CAAW,IAAI,CAAC,WAAA,CAAY,MAApC,CACI,IAAI,CAAC,GAAA,CAAI,SAAA,CAAW,IAAI,CAAC,cAAA,CAAe,GACvC,IAAI,CAAC,iBAAA,CAAkB,GAC5B,IAAI,EAAM,CACN,QAAS,EACT,QAAS,IAAI,CAAC,GAAA,CAAI,OAAlB,CACA,QAAS,EACT,OAAQ,IAAI,CAAC,GAAA,CAAI,MAAjB,CACA,UAAW,CACP,IAAI,CAAC,GAAA,CAAI,cAAT,CACH,CACD,aAAc,CACV,EACH,CACD,YAAa,IAAI,CAAC,OAAlB,CACA,gBAAiB,IAAI,CAAC,MAAtB,AACJ,EACA,OAAW,AAz4Q4B,GAy4Qc,QAAA,CAAS,EAClE,CACA,YAAY,CAAI,CAAC,CAGb,GAFA,KAAK,CAAC,GACN,IAAI,CAAC,GAAA,CAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CACxB,CAAC,IAAI,CAAC,GAAA,CAAK,MAAM,AAAI,MAAM,iBACnC,CACJ,CAKA,MAAM,GACF,OAAO,MAAM,CAAM,CAAE,CACjB,IAAI,EAAS,GAA+C,MAAA,CAAO,EAAO,KAAA,CAAM,EAAG,IACnF,MAAO,AAAW,SAAX,GAAqB,AAAW,SAAX,GAAqB,IAAW,OAAO,YAAA,CAAa,EAAG,EAAG,EAAG,EAC7F,CACA,mBAAmB,EAAO,IAAI,CAAE,CAC5B,IAAI,CAAC,eAAA,CAAkB,CAC3B,CACA,UAAU,CAAK,CAAE,CACb,GAAI,CAAE,CAAA,EAAM,GAAA,IAAO,IAAI,CAAC,OAAM,AAAN,EAAU,GAAI,CAClC,IAAI,CAAC,OAAO,CAAC,EAAM,GAAA,CAAI,CAAG,IAAI,CAAC,YAAA,CAAa,EAChD,CAAE,MAAO,EAAG,CACJ,KACA,QAAQ,KAAA,CAAM,CAAC,qBAAqB,EAAE,EAAM,GAAA,CAAI,CAAC,EACjD,QAAQ,KAAA,CAAM,EAAE,KAAhB,EAER,CACA,OAAO,IAAI,CAAC,OAAO,CAAC,EAAM,GAAA,CAAI,AAClC,CACA,gBAAgB,CAAG,CAAE,CACjB,IAAI,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,EAAI,QACtC,AAAI,GACA,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,EAAM,MAAxB,CACO,IAAI,CAAC,MAAZ,EAEG,IACX,CACA,kBAAmB,CACf,OAAO,IAAI,CAAC,SAAA,CAAgB,AA34NW,GA24N+B,MAAA,CAAO,IAAI,CAAC,MAAA,CAAQ,CACtF,aAAc,CAClB,EACJ,CACA,aAAa,CAAK,CAAE,CAChB,IAAI,EAAM,IAAI,CAAC,MAAA,CAAO,GAAtB,CACI,EAAS,IAAI,CAAC,eAAA,CAAgB,EAAM,GAAxC,EACI,EAAa,AA5+NsB,EA4+NmB,CAAC,EAAM,GAAA,CAAI,CAAC,MAAA,CAAO,EAAQ,IAAI,CAAE,EAAM,MAAjG,EAEA,OADA,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,EACX,CACX,CACA;;;;GAID,EAAG,QAAQ,CAAG,CAAE,EAAO,IAAI,CAAC,eAAA,EAAmB,EAAyC,CAAE,CACrF,IAAI,EAAS,IAAI,CAAC,IAAA,EAAQ,IAAI,CAAC,IAAA,CAAK,OAAO,CAAC,EAAI,QAChD,AAAI,GACG,CAAA,CAAM,CAAC,EAAK,EAAI,CAAM,CAAC,IAAI,CAAC,eAAA,CAAgB,EAAI,CAAM,CAAC,GAA0C,EAAI,EAAO,EAAK,EAAI,CAAM,CAAC,OAAO,IAAA,CAAK,EAAO,CAAC,EAAE,CAAC,AAAC,wCAAwC;AAA1C,GACrJ,IAER,CACA;;;GAGD,EAAG,IAAI,gBAAiB,CACnB,OAAO,IAAI,CAAC,OAAA,CAAQ,iBACxB,CACA;;;GAGD,EAAG,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,OAAA,CAAQ,WACxB,CACA;;;GAGD,EAAG,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,OAAA,CAAQ,aACxB,CACA;;;GAGD,EAAG,IAAI,eAAgB,CAClB,OAAO,IAAI,CAAC,OAAA,CAAQ,gBACxB,CACA;;;GAGD,EAAG,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,OAAA,CAAQ,YACxB,CACA;;;GAGD,EAAG,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,OAAA,CAAQ,UACxB,CACA;;;GAGD,EAAG,IAAI,QAAS,CACX,OAAO,IAAI,CAAC,IAAA,CAAK,MAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,IAAA,CAAK,OAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,IAAA,CAAK,OAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,mBAAoB,CACtB,OAAO,IAAI,CAAC,IAAA,CAAK,iBAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,oBAAqB,CACvB,OAAO,IAAI,CAAC,IAAA,CAAK,kBAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,aAAc,CAChB,OAAO,IAAI,CAAC,IAAA,CAAK,WAAjB,AACJ,CACA;;;;GAID,EAAG,IAAI,WAAY,CACd,IAAI,EAAM,IAAI,CAAC,OAAO,CACtB,OAAO,EAAM,EAAI,SAAA,CAAY,IAAI,CAAC,MAAlC,AACJ,CACA;;;;GAID,EAAG,IAAI,SAAU,CACZ,IAAI,EAAM,IAAI,CAAC,OAAO,CACtB,OAAO,EAAM,EAAI,OAAA,CAAU,CAC/B,CACA;;;GAGD,EAAG,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,IAAA,CAAK,SAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,IAAA,CAAK,UAAjB,AACJ,CACA;;;GAGD,EAAG,IAAI,MAAO,CACT,OAAO,OAAO,MAAA,CAAO,IAAQ,GAA0C,IAAI,CAAC,IAAA,CAAK,IAAA,CAAM,IAAI,CAAC,IAAA,CAAK,IAAA,CAAM,IAAI,CAAC,IAAA,CAAK,IAAA,CAAM,IAAI,CAAC,IAAA,CAAK,IAAjI,EACJ,CACA,IAAI,gBAAiB,CACjB,OAAO,IAAQ,GAA0C,IAAI,CAAC,IAA9D,CACJ,CACA;;;GAGD,EAAG,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,cAAA,CAAe,eAA3B,EACJ,CACA;;;;;GAKD,EAAG,qBAAqB,CAAS,CAAE,CAC9B,MAAO,CAAC,CAAC,IAAI,CAAC,cAAA,CAAe,MAAA,CAAO,EACxC,CACA;;;;;;GAMD,EAAG,kBAAkB,CAAS,CAAE,CAC3B,OAAO,IAAI,CAAC,QAAA,CAAS,IAAI,CAAC,cAAA,CAAe,MAAA,CAAO,GAAY,CACxD,EACH,CACL,CACA;;;;;;;;GAQD,EAAG,gBAAgB,CAAM,CAAE,CACtB,IAAI,EAAS,EAAE,CACX,EAAM,EAAO,MAAjB,CACI,EAAM,EACN,EAAO,GACP,EAAQ,GACZ,KAAM,GAAO,GAAI,CACb,IAAI,EAAO,EACP,EAAY,EAChB,GAAI,EAAM,EAAK,CAGX,GAAI,OAFJ,wCAAwC;AACxC,CAAA,EAAO,EAAO,UAAA,CAAW,IAAzB,GACsB,GAAQ,OAAU,EAAM,EAAK,CAC/C,IAAI,EAAO,EAAO,UAAA,CAAW,EACzB,CAAA,OAAU,GAAQ,GAAQ,QAC1B,IACA,EAAO,AAAC,CAAA,AAAC,CAAA,AAAO,KAAP,CAAO,GAAU,EAAA,EAAO,CAAA,AAAO,KAAP,CAAO,EAAS,MAEzD,CACA,wFAAwF;AACxF,EAAY,OAAU,GAAQ,GAAQ,OAAU,QAAW,GAAQ,GAAQ,OAAU,EAAI,CAC7F,MAAO,GACH,AAAU,CAAA,IAAV,GAAe,AAAc,IAAd,EACnB,EAAO,IAAA,CAAK,IAAI,CAAC,QAAA,CAAS,IAAI,CAAC,cAAA,CAAe,MAAA,CAAO,EAAM,GAAO,CAC9D,EACA,EACH,GACkB,IAAV,GAAe,AAAc,IAAd,GACxB,EAAO,IAAA,CAAK,IAAI,CAAC,iBAAA,CAAkB,IACnC,EAAO,EACP,EAAQ,CACZ,CACA,OAAO,CACX,CACA,IAAI,eAAgB,CAChB,OAAO,IAAQ,GAA0C,IAAI,CACjE,CACA;;;;;;;;;GASD,EAAG,OAAO,CAAM,CAAE,CAAY,CAAE,CAAM,CAAE,CAAQ,CAAE,CAAS,CAAE,CACxD,OAAO,IAAI,CAAC,aAAA,CAAc,MAAA,CAAO,EAAQ,EAAc,EAAQ,EAAU,EAC7E,CACA;;;GAGD,EAAG,gBAAgB,CAAG,CAAE,CACnB,OAAO,IAAI,CAAC,aAAA,CAAc,eAAA,CAAgB,EAC9C,CACA;;;;;;;GAOD,EAAG,IAAI,mBAAoB,CACtB,OAAO,IAAI,CAAC,aAAA,CAAc,oBAA1B,EACJ,CACA,qBAAqB,CAAM,CAAE,CAAQ,CAAE,CACnC,OAAO,IAAI,CAAC,aAAA,CAAc,oBAAA,CAAqB,EAAQ,EAC3D,CACA,cAAc,CAAK,CAAE,EAAa,EAAE,CAAE,CAKlC,MAJI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAM,GAChB,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,CAAM,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAQ,GAA0C,EAAO,EAAY,IAAI,EACtH,CAAA,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,OAAO,EAAI,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,AAAA,GAAM,CAAA,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAQ,GAA0C,EAAO,EAAY,IAAI,CAAA,GAElK,IAAI,CAAC,OAAO,CAAC,EAAM,EAAI,IAClC,CACA;;;;;;;;GAQD,EAAG,SAAS,CAAK,CAAE,EAAa,EAAE,CAAE,CAM/B,OALK,IAAI,CAAC,OAAO,CAAC,EAAM,GAChB,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,CAAM,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAQ,GAA0C,EAAO,EAAY,IAAI,EACtH,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,CAAM,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAQ,GAA0C,EAAO,EAAY,IAAI,EAC7J,IAAI,CAAC,aAAA,CAAc,EAAO,IAE5B,IAAI,CAAC,OAAO,CAAC,EAAM,EAAI,IAClC,CACA;;;GAGD,EAAG,cAAe,QACb,AAAI,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,OAAO,CAAS,IAAQ,GAA0C,IAAI,EACzF,IAAQ,GAA0C,IAAI,CACjE,CACA;;;;;;GAMD,EAAG,IAAI,eAAgB,CAClB,IAAI,EAAM,CAAC,EACX,GAAI,CAAC,IAAI,CAAC,IAAA,CAAM,OAAO,EACvB,IAAK,IAAI,KAAQ,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,CAAG,CAAC,EAAK,OAAA,CAAQ,IAAA,GAAO,CAAG,CACvD,KAAM,EAAK,IAAA,CAAK,EAAhB,CACA,IAAK,EAAK,QAAV,CACA,QAAS,EAAK,YAAd,CACA,IAAK,EAAK,QAAV,AACJ,EACA,OAAO,CACX,CACA;;;;;;GAMD,EAAG,IAAI,iBAAkB,CACpB,IAAI,EAAM,CAAC,EACX,GAAI,CAAC,IAAI,CAAC,IAAA,CAAM,OAAO,EACvB,IAAK,IAAI,KAAY,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,CACpC,IAAI,EAAW,CAAC,EAChB,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,MAAA,CAAQ,IAEtC,CAAQ,CAAC,AADE,IAAI,CAAC,IAAA,CAAK,IAAI,CAAC,EAAE,CACd,OAAA,CAAQ,IAAA,GAAO,CAAG,EAAS,KAAK,CAAC,EAAE,AAErD,CAAA,CAAG,CAAC,EAAS,IAAA,CAAK,EAAA,CAAG,CAAG,CAC5B,CACA,OAAO,CACX,CACA;;;;;;;GAOD,EAAG,aAAa,CAAQ,CAAE,CACrB,GAAI,CAAE,CAAA,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,EAAS,CAAA,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAG,AAAH,CAAG,EAAK,MAAM,AAAI,MAAM,2EAE/I,GADwB,UAApB,OAAO,GAAuB,CAAA,EAAW,IAAI,CAAC,eAAe,CAAC,EAAS,AAAT,EAC9D,AAAoB,UAApB,OAAO,EAAuB,MAAM,AAAI,MAAM,yEAClD,6BAA4B;AAC5B,IAAI,EAAS,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,GAAA,CAAI,CAAC,EAAM,KACnC,IAAI,EAAU,EAAK,OAAA,CAAQ,IAA3B,UACA,AAAI,KAAW,EAAiB,KAAK,GAAA,CAAI,EAAK,QAAA,CAAU,KAAK,GAAA,CAAI,EAAK,QAAA,CAAU,CAAQ,CAAC,EAAQ,GACrF,EAAK,YAAZ,AACT,GACI,EAAS,IAAI,EAAgC,IAAI,CAAC,MAAA,CAAO,MAA7D,CACA,CAAA,EAAO,GAAA,CAAM,IAAI,CAAC,aAAlB,CACA,IAAI,EAAO,IAAI,GAAyC,EAAQ,GAEhE,OADA,EAAK,OAAA,CAAU,IAAI,CAAC,OAApB,CACO,CACX,CACA,IAAI,qBAAsB,CACtB,GAAI,CAAC,IAAI,CAAC,IAAA,CAAM,OAAO,KACvB,IAAI,EAAkB,IAAI,CAAC,eAA3B,QACA,6CAA6C;AACxC,GAAoB,IAAI,CAAC,IAAA,EACzB,GAAiB,CAAA,EAAkB,IAAI,CAAC,IAAA,CAAK,IAAA,CAAK,GAAA,CAAI,AAAC,GAAO,EAAK,YAAxE,CAAA,EACO,IAAQ,GAA0C,IAAI,CAAE,IAFpB,KAG/C,CACA,iCAAiC;AACjC,QAAQ,CAAI,CAAE,CACV,OAAO,IAAI,CAAC,YAAA,CAAa,EAC7B,CACA,YAAY,CAAM,CAAE,EAAkB,IAAI,CAAC,CASvC,mDAAmD;AACnD,IAAI,IAAI,KATH,GAAuB,IAA0C,IAAI,CAAE,OAAQ,OACpF,IAAI,CAAC,eAAA,CAAkB,KACvB,IAAI,CAAC,MAAA,CAAS,EACd,IAAI,CAAC,eAAA,CAAkB,EACvB,IAAI,CAAC,aAAA,CAAgB,IAAI,CAAC,MAAA,CAAO,GAAjC,CACA,IAAI,CAAC,OAAA,CAAU,CAAC,EAChB,IAAI,CAAC,OAAA,CAAU,CAAC,EAChB,IAAI,CAAC,gBAAL,GAEe,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,CACjC,IAAI,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,EAAI,AAClC,CA9zO+B,EA8zOc,CAAC,EAAI,EAAI,EAAM,MAAA,CAAS,GAAG,OAAO,cAAA,CAAe,IAAI,CAAE,EAAK,CACzG,IAAK,IAAI,CAAC,SAAA,CAAU,IAAA,CAAK,IAAI,CAAE,EACnC,EACJ,CACJ,CACJ,CACK,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,OAAQ,MAC1D,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,iBAAkB,MACpE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,eAAgB,MAClE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,gBAAiB,MACnE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,gBAAiB,MACnE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,kBAAmB,MACrE,GAAuB,IAAsC,CAC1D,GACP,CAAE,GAAyC,SAAA,CAAW,sBAAuB,MAO9E,IAAI,GAA2C,IAAI,GAA0B,CACzE,IAAK,IAAI,GAA0B,GACnC,OAAQ,IAAI,GM59YM,GN49YgD,OAAQ,CACtE,KAAM,QACV,GACA,WM/9YkB,GNg+YlB,OMh+YkB,GNi+YlB,aMj+YkB,ENk+YtB,GACI,GAAsC,IAAI,GAA0B,CACpE,IAAK,IAAI,GAA0B,GACnC,OMr+YkB,GNs+YlB,OMt+YkB,GNu+YlB,UM7+YkB,GN8+YlB,SAAU,IAAI,GM9+YI,IN++YlB,cMz+YkB,GN0+YlB,aMh/YkB,GNi/YlB,aMj/YkB,GNk/YlB,WM5+YkB,GN6+YlB,WM7+YkB,GN8+YlB,eM9+YkB,GN++YlB,WM/+YkB,GNg/YlB,WMh/YkB,GNi/YlB,OAAQ,IAAI,GAAyB,GAA0C,YACnF,EACA,CAAA,GAAoC,OAAA,CAAU,WAC1C,IAAI,EAAU,CAAC,EACf,IAAK,IAAI,KAAS,IAAI,CAAC,MAAA,CAAO,CAAO,CAAC,EAAM,GAAA,CAAI,CAAG,CACnD,CAAA,IAAI,CAAC,MAAA,CAAS,CAClB,CA4CA,OAAM,WAAqD,GACvD,SAAU,CACN,oFAAoF;AACpF,OAAO,IAAI,CAAC,KAAA,CAAM,kBAAkB,CAAC,IAAI,CAAC,EAAA,CAAG,AACjD,CACA,UAAW,CACP,OAAO,IAAI,CAAC,IAAA,CAAK,IAAjB,AACJ,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,QACxF,CACJ,CAIA,MAAM,GAAgC,CAClC,OAAQ,CAAM,EACV,IAAI,EAAS,EACT,EAAW,CACX,EACA,EACA,EACA,EACA,EACH,CACD,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,MAAA,CAAQ,IAAI,CAC5B,CAAQ,CAAC,EAAE,CACnB,IAAI,EAAO,EAAO,SAAlB,EACA,sEAAqE;AACrE,GAAI,AAAS,WAAT,EAAqB,MAAM,AAAI,MAAM,YAEzC,GADA,EAAS,GAAU,EAAI,AAAO,IAAP,EAClB,AAAA,CAAA,AAAO,IAAP,CAAO,GAAU,EAAG,OAAO,CACpC,CACA,MAAM,AAAI,MAAM,sBACpB,CACJ,EACA,IAAI,GAAkC,CAClC,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACH,CACG,GAA4C,IAAI,GAA0B,CAC1E,MAAO,GACP,UAAW,IAAI,GAA4B,IAAI,GAA0B,GAAI,AAAC,GAAK,AAAA,CAAA,AAAU,GAAV,EAAE,KAAA,AAAQ,GAAU,IACvG,IAAK,AAAC,GAAI,EAAE,SAAA,EAAa,EAA+B,CAAC,AAAU,GAAV,EAAE,KAAA,CAAa,CACxE,OAAQ,GACR,iBAAkB,AAAC,GAAI,EAAE,KAAA,GAAU,EAAI,EACvC,YAAa,AAAC,GAAI,AAAU,SAAV,EAAE,GAAA,EAAkB,AAAU,SAAV,EAAE,GAAA,CAAiB,AAAuB,IAAvB,EAAE,gBAAA,CAAyB,AAAuB,IAAvB,EAAE,gBAAA,CACtF,gBAAiB,IAAI,GAA4B,GAA+B,AAAC,GAAI,EAAE,WAAvF,CACJ,GACI,GAAuC,IAAI,GAA0B,CACrE,IAAK,IAAI,GAA0B,GACnC,OMppZkB,GNqpZlB,OMrpZkB,GNspZlB,UM5pZkB,GN6pZlB,SAAU,IAAI,GM7pZI,IN8pZlB,cMxpZkB,GNypZlB,oBMzpZkB,GN0pZlB,aMhqZkB,GNiqZlB,aMjqZkB,GNkqZlB,WM5pZkB,GN6pZlB,WM7pZkB,GN8pZlB,eM9pZkB,GN+pZlB,WM/pZkB,GNgqZlB,WMhqZkB,GNiqZlB,OAAQ,IAAI,GAAyB,GAA2C,YACpF,EACA,CAAA,GAAqC,OAAA,CAAU,WAC3C,IAAI,EAAS,CAAC,EACd,IAAI,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,MAAA,CAAO,MAAA,CAAQ,IAAI,CACvC,IAAI,EAAQ,IAAI,CAAC,MAAM,CAAC,EAAE,AAC1B,CAAA,CAAM,CAAC,EAAM,GAAA,CAAI,CAAG,CACxB,CACA,OAAO,IAAI,CAAC,MAAA,CAAS,CACzB,CA+EA,8EAA6E;AAC7E,MAAM,GACF,OAAO,CAAM,CAAE,CAAM,CAAE,CACnB,OAAO,IAAI,EAAgC,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,EAAQ,GACxE,CACA,YAAY,CAAM,CAAC,CACf,IAAI,CAAC,MAAA,CAAS,EACd,IAAI,CAAC,IAAA,CAAO,IAAI,GAA0B,EAC9C,CACJ,CACA,+CAA+C;AAC/C,IAAI,GAAkC,IAAI,GAA0B,CAChE,QMrwZkB,GNswZlB,UM5wZkB,GN6wZlB,YM7wZkB,GN8wZlB,mBMxwZkB,GNywZlB,kBMzwZkB,GN0wZlB,eM1wZkB,GN2wZlB,gBM3wZkB,GN4wZlB,oBM5wZkB,GN6wZlB,eM7wZkB,GN8wZlB,sBM9wZkB,GN+wZlB,UAAW,IAAI,GAAgC,sBAC/C,QAAS,IAAI,GAAgC,qBAC7C,MAAO,IAAI,GAAgC,kBAC3C,OAAQ,IAAI,GAAgC,mBAC5C,WAAY,IAAI,GAAgC,uBAChD,OAAQ,IAAI,GAAgC,kBAC5C,aAAc,IAAI,GAAgC,wBACtD,GAKA,SAAS,GAAoC,CAAM,EAC/C,IAAI,EAAO,EAAO,SAAlB,UACA,AAAI,AANgC,MAMhC,EAAiD,EAAO,YAA5D,GACI,AAL0C,MAK1C,EAA2D,EAAO,SAAA,GAJ9B,IAKpC,AAP0C,MAO1C,EAA2D,EAAO,SAAA,GAAc,IAC7E,CACX,CACA,SAAS,GAA+B,CAAI,CAAE,CAAO,EACjD,OAAO,AAAO,EAAP,EAAW,EAAU,CAAC,CACjC,CAgDA,IAAI,GAAkC,IAAI,GMp1ZpB,GNo1ZkF,CACpG,MAAY,CACR,SMt1Zc,GNu1Zd,QAAS,IAAI,GMv1ZC,GNu1ZmD,WACrE,EACA,OAAY,CACR,SM11Zc,GN21Zd,QAAS,IAAI,GM31ZC,GN21ZmD,YACjE,QM51Zc,GN61Zd,WM71Zc,GN81Zd,WM91Zc,EN+1ZlB,CACJ,GAmCI,GAAkC,IAAI,GAA0B,IAC9B,IAAI,GAA0B,CAChE,IMr4ZkB,GNs4ZlB,IAAK,IAAI,GAA0B,MACvC,GACA,IAAI,GAA4B,IAAI,GAA0B,CAC1D,GM/4ZkB,GNg5ZlB,WMt4ZiB,GNu4ZjB,KAAM,GACN,WM/4ZkB,GNg5ZlB,OM74ZkB,EN84ZtB,GACI,GAA6B,IAAI,GAA0B,CAC3D,KAAM,IAAI,GAA0B,GACpC,aMv5ZkB,GNw5ZlB,QAAS,IAAI,GMx5ZK,GNw5ZiD,IAAI,GAAyB,GAA2B,AAAC,GAAI,EAAE,YAAA,CAAe,GAAI,CACjJ,KAAM,QACV,EACJ,GACI,GAAiC,IAAI,GAA0B,CAC/D,OM75ZkB,GN85ZlB,MAAO,IAAI,GAAyB,GAA4B,AAAC,GAAI,EAAE,MAAA,CAAS,EACpF,GACI,GAAiC,IAAI,GAA0B,CAC/D,SAAU,IAAI,GAA4B,GAA0B,IACpE,SAAU,IAAI,GMl6ZI,GNk6ZkD,IACpE,eAAgB,IAAI,GMn6ZF,GNm6ZwD,OAC9E,GACI,GAAoC,IAAI,GAA0B,CAClE,WMh6ZkB,GNi6ZlB,IAAK,IAAI,GMj6ZS,GNi6Z6C,IAC/D,WMl6ZkB,GNm6ZlB,UMn6ZkB,ENo6ZtB,GAkDI,GAA8C,IAC9C,GAxdJ,cAA2D,GACvD,OAAO,MAAM,CAAM,CAAE,CACjB,MAAW,AAA0E,SAA1E,GAA2C,MAAA,CAAO,EAAO,KAAA,CAAM,EAAG,GACjF,CACA,kBAAmB,CACf,IAAI,CAAC,SAAA,CAAgB,AAZkB,GAYwB,MAAA,CAAO,IAAI,CAAC,MAAA,CAAQ,CAC/E,aAAc,CAClB,EACJ,CACA,gBAAgB,CAAG,CAAE,CACjB,IAAI,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,EAAI,CACtC,GAAI,EAAO,CAEP,GADA,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,EAAM,MAAxB,EACI,CAAA,EAAM,UAAA,CAAa,EAAM,MAAA,AAAA,EAKtB,OAAO,IAAI,CAAC,MAAnB,AALqC,EACjC,IAAI,CAAC,MAAA,CAAO,GAAA,EAAO,CAAG,uBAAsB;AAC5C,IAAI,EAAY,IAAI,WAAW,EAAM,MAArC,EACI,EAAW,GAAuB,IAAsB,IAAI,CAAC,MAAA,CAAO,UAAA,CAAW,EAAM,UAAA,CAAa,GAAI,GAC1G,OAAO,IAAI,EAAgC,EAC/C,CACJ,CACA,OAAO,IACX,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,OACxF,CACJ,GA+bI,GAzSJ,cAA2D,GACvD,OAAO,MAAM,CAAM,CAAE,CACjB,MAAW,AAA0E,SAA1E,GAA2C,MAAA,CAAO,EAAO,KAAA,CAAM,EAAG,GACjF,CACA,kBAAmB,CACf,IAAI,CAAC,SAAA,CAAgB,AATkB,GASwB,MAAA,CAAO,IAAI,CAAC,MAA3E,EACA,IAAI,CAAC,QAAA,CAAW,IAAI,CAAC,MAAA,CAAO,GAA5B,AACJ,CACA,aAAc,CACV,gEAAgE;AAChE,GAAI,CAAC,IAAI,CAAC,aAAA,CAAe,CACrB,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,IAAI,CAAC,QAAvB,CACA,IAAI,EAAS,IAAI,CAAC,MAAA,CAAO,UAAA,CAAW,IAAI,CAAC,SAAA,CAAU,mBAAnD,EACI,EAAmB,EACvB,IAAI,IAAI,KAAO,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,CACjC,IAAI,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAM,CAAC,EAAI,AACtC,CAAA,EAAM,MAAA,CAAS,EACf,GAAoB,AAAyB,MAAzB,EAAM,eAAA,CAA0B,EAAM,eAAA,CAAkB,EAAM,MAAlF,AACJ,CACA,IAAI,EAAoB,GAAuB,IAA6B,EAAQ,GACpF,GAAI,CAAC,EAAc,MAAM,AAAI,MAAM,0CACnC,CAAA,IAAI,CAAC,MAAA,CAAS,IAAI,EAAgC,GAClD,IAAI,CAAC,aAAA,CAAgB,CAAA,CACzB,CACJ,CACA,aAAa,CAAK,CAAE,CAEhB,OADA,IAAI,CAAC,WAAL,GACO,KAAK,CAAC,aAAa,EAC9B,CACA,qDAAqD;AACrD,4CAA4C;AAC5C,cAAc,CAAK,CAAE,EAAa,EAAE,CAAE,CAClC,GAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAM,QACpB,AAAI,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,EAAQ,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,CAAK,WAAA,EACpD,IAAI,CAAC,kBAAA,EAAoB,IAAI,CAAC,mBAAnC,GACO,IAAI,CAAC,OAAO,CAAC,EAAM,CAAG,IAAQ,GAA0C,EAAO,EAAY,IAAI,GAC5F,KAAK,CAAC,cAAc,EAAO,EAEjD,CACA,qBAAsB,CAClB,IAAI,CAAC,WAAL,GACA,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAA,CAAK,MAA7C,CACA,IAAI,EAAQ,GAAgC,MAAA,CAAO,IAAI,CAAC,MAAxD,EACI,EAAS,EAAE,CACf,IAAI,IAAI,EAAQ,EAAG,EAAQ,EAAM,SAAA,CAAW,IAAQ,CAChD,IAAI,EAAQ,CAAC,EACT,EAAY,EAAM,SAAA,CAAU,WAAhC,GAEA,GADA,EAAM,gBAAA,CAAmB,EACrB,EAAY,EAAG,CACf,IAAI,EAAU,EAAE,CACZ,EAAc,EAClB,IAAI,IAAI,EAAI,EAAG,EAAI,EAAW,IAE1B,GADS,GAAoC,EAAM,OAAnD,EAEA,EAAQ,IAAA,CAAK,EAEjB,CAAA,EAAM,MAAA,CAAS,AA8D/B,SAA6C,CAAK,CAAE,CAAM,CAAE,CAAO,MAC3D,EACJ,IAAI,EAAI,EAAI,EACR,EAAM,EAAE,CACZ,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,IAAI,CAC5B,IAAI,EAAK,EAAG,EAAK,EACb,EAAO,EAAM,SAAjB,GACI,EAAU,CAAE,CAAA,GAAQ,CAAA,EAExB,GAAI,AADJ,CAAA,GAAQ,GAAR,EACW,GACP,EAAK,EACL,EAAK,GAA+B,EAAM,AAAC,CAAA,AAAC,CAAA,AAAO,GAAP,CAAO,GAAO,CAAA,EAAK,EAAO,SAAtE,SACG,GAAI,EAAO,GACd,EAAK,GAA+B,EAAM,AAAC,CAAA,AAAC,CAAA,EAAO,GAAK,EAAA,GAAO,CAAA,EAAK,EAAO,SAA3E,IACA,EAAK,OACF,GAAI,EAAO,GAAI,CAClB,IAAI,EAAK,EAAO,GACZ,EAAK,EAAO,SAAhB,GACA,EAAK,GAA+B,EAAM,EAAK,CAAA,AAAK,GAAL,CAAK,EAAS,CAAA,GAAM,CAAA,GACnE,EAAK,GAA+B,GAAQ,EAAG,EAAK,CAAA,AAAC,CAAA,AAAK,GAAL,CAAK,GAAS,CAAA,EAAM,CAAA,AAAK,GAAL,CAAK,EAClF,MAAO,GAAI,EAAO,IAAK,CACnB,IAAI,EAAK,EAAO,GAChB,EAAK,GAA+B,EAAM,EAAK,CAAA,EAAK,IAAM,CAAA,EAAK,EAAO,SAAtE,IACA,EAAK,GAA+B,GAAQ,EAAG,EAAK,CAAA,EAAK,IAAM,GAAK,CAAA,EAAK,EAAO,SAAhF,GACJ,MAAO,GAAI,EAAO,IAAK,CACnB,IAAI,EAAK,EAAO,SAAhB,GACA,IAAI,EAAK,EAAO,SAAhB,GACA,EAAK,GAA+B,EAAM,AAAC,CAAA,GAAM,CAAA,EAAM,CAAA,GAAM,CAAA,GAC7D,EAAK,GAA+B,GAAQ,EAAI,AAAC,CAAA,AAAA,CAAA,AAAK,GAAL,CAAK,GAAS,CAAA,EAAK,EAAO,SAA3E,GACJ,MACI,EAAK,GAA+B,EAAM,EAAO,YAAjD,IACA,EAAK,GAA+B,GAAQ,EAAG,EAAO,YAAtD,IAEJ,GAAK,EACL,GAAK,EACL,EAAI,IAAA,CAAK,IAAQ,GAA2C,EAAS,CAAA,EAAO,EAAG,GACnF,CACA,OAAO,CACX,EApGmE,EAAM,KAAA,CAAO,EAAM,MAAA,CAAQ,GAC9E,IAAI,IAAI,EAAK,EAAG,EAAK,EAAW,IAAK,EAAM,MAAM,CAAC,CAAO,CAAC,EAAG,CAAG,EAAE,CAAC,UAAA,CAAa,CAAA,EAC1D,GAAoC,EAAM,MAAhE,CACJ,MAAW,EAAY,GACI,GAA8C,SAAA,CAAU,gBAAA,CAAiB,IAAA,CAAK,CACjG,MAAO,IAAI,AACf,EAAG,EAAO,EAAM,UAAhB,GAC4C,GAAoC,EAAM,MAAtF,EAEJ,EAAO,IAAA,CAAK,EAChB,CACA,IAAI,CAAC,kBAAA,CAAqB,CAC9B,CACA,YAAY,GAAG,CAAI,CAAC,CAChB,KAAK,IAAI,GACJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,QACxF,CACJ,GAiOI,GAxHJ,MACI,OAAO,MAAM,CAAM,CAAE,CACjB,MAAW,AAA0E,SAA1E,GAA2C,MAAA,CAAO,EAAO,KAAA,CAAM,EAAG,GACjF,CACA,QAAQ,CAAI,CAAE,CACV,IAAK,IAAI,KAAU,IAAI,CAAC,MAAA,CAAO,OAAA,CAAQ,CACnC,IAAI,EAAS,IAAI,EAAgC,IAAI,CAAC,MAAA,CAAO,MAA7D,CACA,CAAA,EAAO,GAAA,CAAM,EACb,IAAI,EAAO,IAAQ,GAA0C,GAC7D,GAAI,EAAK,cAAA,GAAmB,GAAQ,EAAK,cAAA,YAA0B,YAAc,aAAgB,YAAc,EAAK,cAAA,CAAe,KAAA,CAAM,CAAC,EAAG,IAAI,CAAI,CAAC,EAAE,GAAK,GAAI,OAAO,CAC5K,CACA,OAAO,IACX,CACA,IAAI,OAAQ,CACR,IAAI,EAAQ,EAAE,CACd,IAAK,IAAI,KAAU,IAAI,CAAC,MAAA,CAAO,OAAA,CAAQ,CACnC,IAAI,EAAS,IAAI,EAAgC,IAAI,CAAC,MAAA,CAAO,MAA7D,CACA,CAAA,EAAO,GAAA,CAAM,EACb,EAAM,IAAA,CAAK,IAAQ,GAA0C,GACjE,CACA,OAAO,CACX,CACA,YAAY,CAAM,CAAC,CAGf,GAFK,GAAuB,IAA0C,IAAI,CAAE,OAAQ,OACpF,IAAI,CAAC,MAAA,CAAS,EACV,AAAyB,SAAzB,EAAO,UAAA,CAAW,GAAe,MAAM,AAAI,MAAM,4BACrD,CAAA,IAAI,CAAC,MAAA,CAAS,GAAgC,MAAA,CAAO,EACzD,CACJ,GA6FI,GArDJ,MACI,OAAO,MAAM,CAAM,CAAE,CACjB,IAAI,EAAS,IAAI,EAAgC,GACjD,GAAI,CACA,IAAI,EAAS,GAAkC,MAAA,CAAO,EAC1D,CAAE,MAAO,EAAG,CACR,MAAO,CAAA,CACX,CACA,IAAK,IAAI,KAAQ,EAAO,GAAA,CAAI,QAAA,CAAS,KAAA,CACjC,GAAI,AAAc,SAAd,EAAK,IAAA,CAAiB,MAAO,CAAA,EAErC,MAAO,CAAA,CACX,CACA,QAAQ,CAAI,CAAE,CACV,GAAI,CAAC,IAAI,CAAC,IAAA,CAAM,OAAO,KACvB,IAAK,IAAI,KAAO,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,CAC9B,IAAI,EAAM,IAAI,CAAC,MAAA,CAAO,UAAA,CAAa,EAAI,UAAA,CAAa,EAChD,EAAS,IAAI,EAAgC,IAAI,CAAC,MAAA,CAAO,MAAA,CAAO,KAAA,CAAM,IACtE,EAAO,IAAQ,GAA0C,GAC7D,GAAI,EAAK,cAAA,GAAmB,GAAQ,EAAK,cAAA,YAA0B,YAAc,aAAgB,YAAc,EAAK,cAAA,CAAe,KAAA,CAAM,CAAC,EAAG,IAAI,CAAI,CAAC,EAAE,GAAK,GAAI,OAAO,CAC5K,CACA,OAAO,IACX,CACA,IAAI,OAAQ,CACR,IAAI,EAAQ,EAAE,CACd,IAAK,IAAI,KAAO,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,CAC9B,IAAI,EAAM,IAAI,CAAC,MAAA,CAAO,UAAA,CAAa,EAAI,UAAA,CAAa,EAChD,EAAS,IAAI,EAAgC,IAAI,CAAC,MAAA,CAAO,MAAA,CAAO,KAAA,CAAM,IAC1E,EAAM,IAAA,CAAK,IAAQ,GAA0C,GACjE,CACA,OAAO,CACX,CACA,YAAY,CAAM,CAAC,CAIf,IAAK,IAAI,KAHJ,GAAuB,IAA0C,IAAI,CAAE,OAAQ,SACpF,IAAI,CAAC,MAAA,CAAS,EACd,IAAI,CAAC,MAAA,CAAS,GAAkC,MAAA,CAAO,IAAI,CAAC,MAA5D,EACiB,IAAI,CAAC,MAAA,CAAO,GAAA,CAAI,QAAA,CAAS,KAAA,EAAM,CAC5C,IAAK,IAAI,KAAO,EAAK,OAAA,CAAY,EAAI,UAAA,EAAc,GAC/C,IAAI,CAAC,MAAA,CAAO,GAAA,CAAM,EAAI,UAAA,CAAa,IAAI,CAAC,MAAA,CAAO,GAAA,CAAI,cAAnD,CACA,EAAI,IAAA,CAAO,GAAgC,MAAA,CAAO,IAAI,CAAC,MAAvD,GACG,EAAI,IAAA,CAAO,IACA,CAAA,SAAd,EAAK,IAAA,EAAiB,CAAA,IAAI,CAAC,IAAA,CAAO,CAAtC,CACJ,CACJ,CACJ,GA1+ZE,OAAO,IAAA,CAo/Z8B,IAp/ZjB,OAAA,CAAQ,SAAS,CAAG,EAC1B,YAAR,GAAqB,AAAQ,eAAR,GAAwB,AAm/Z9B,EAn/ZmC,cAAA,CAAe,IAIrE,OAAO,cAAA,CA++ZY,EA/+ZS,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,AA4+ZwB,EA5+ZlB,CAAC,EAAI,AACpB,CACF,EACF,GJtBF,IAAI,GAAkB,EAAE,CACpB,GAAoB,EAAE,CACtB,GAAc,GACd,GAAW,OAAO,QAAA,CAAS,IAA/B,AAYA,6DAA4D;AAC5D,SAAS,GAAe,CAAc,EAClC,MAAO,IAAM,EAAe,KAAA,CAAM,EAAG,GAChC,GAAA,CAAI,AAAA,GAAO,EAAI,QAAA,CAAS,KACxB,GAAA,CAAI,AAAA,GAAO,AAAc,GAAd,EAAI,MAAA,CAAc,IAAM,EAAM,EAAK,6BAA6B;CAC3E,IAAA,CAAK,GACd,CAGA,SAAS,GAAe,CAAK,EACzB,IAAI,EAWJ,OAVqB,IAAjB,EAAM,MAAA,EACN,CAAA,EAAO,EAAM,UAAA,CAAW,EAD5B,EAGA,CAAA,EACK,AAAA,CAAA,EAAM,UAAA,CAAW,GAAK,KAAA,EAAU,KAChC,CAAA,EAAM,UAAA,CAAW,GAAK,KAAA,EAAU,KAFrC,EAIW,GACP,CAAA,EAAO,EAAM,UAAA,CAAW,EAD5B,EAGO,CAAC,EAAE,EAAE,EAAK,QAAA,CAAS,MAAM,WAAA,GAAc,CAAC,AACnD,CAGA,SAAS,GAAe,CAAO,EAC3B,IAAM,EAAY,EAAQ,OAAA,CAAQ,KAAM,IAClC,EAAe,SAAS,EAAW,IACnC,EAAY,OAAO,aAAA,CAAc,GACvC,OAAO,CACX,CAmCA,yBAAyB;AACzB,SAAS,GAAwB,CAAc,EAC3C,SAAS,cAAA,CAAe,2BAA2B,SAAA,CAAY,CAAC;;;;oBAIhD,EAAE,EAAe;;EAEnC,CAAC,AACH,CAUA,oCAAoC;AACpC,SAAS,KACL,IAAM,EA9BC,GACF,GAAA,CAAI,CAAC,EAAgB,IAAQ,CAAC,EAAE,EAAI,MAAM,EAAE,EAAe,IAAA,CAAK,MAAM,CAAC,CAAC,CACzE,qFAAqF;CACpF,MAAA,CAAO,CAAC,EAAG,SAzBI,EAAO,SAAP,EAyBoB,EAAiB,CAAC,EAAI,CAzBnC,EAyBqC,EAAe,CAAC,EAAI,EAxB7E,EAAM,KAAA,CAAM,CAAC,EAAW,IAAU,IAAc,CAAK,CAAC,EAAM,IAyB9D,IAAA,CAAK,MA2BJ,EAAY,SAAS,cAAA,CAAe,oBAAoB,SAA9D,CACA,GAAwB,GACxB,OAAO,QAAA,CAAS,IAAA,CAAO,CAAC,EAAE,GAAe,GAAW,CAAC,EAAE,mBAjD/C,AAiD4E,EAjDxE,UAAA,CAAW,IAAK,IAAI,UAAA,CAAW,OAAQ,IAAI,UAAA,CAAW,IAAK,MAiD8B,CAAC,CACtG,GAAW,OAAO,QAAA,CAAS,IAA3B,AACJ,CAIA,eAAe,GAAY,CAAS,CAAE,CAAW,EAC7C,wCAAwC;AACxC,IAAM,EAAe,MAAM,MAAM,kEAAoE,mBAAmB,IAClH,EAAY,MAAM,EAAa,IAArC,EAEA,mBAAkB;AAClB,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,EACnD,SAAS,cAAA,CAAe,oBAAoB,SAAA,CAAY,EACnD,GACD,CAAA,SAAS,cAAA,CAAe,2BAA2B,SAAA,CAAY,EADnE,CAIA,uDAAsD;AACtD,IAAM,EAAU,EAAU,KAAA,CAAM,MAAM,MAAA,CAAO,AAAA,GAAO,AAAuB,IAAvB,EAAI,OAAA,CAAQ,QAAc,CAAC,EAAE,CAAC,KAAA,CAAM,wBAAwB,CAAC,EAAE,CAC7G,EAAa,MAAO,AAAA,CAAA,MAAM,MAAM,EAAA,EAAU,WAAhD,GACM,EAAa,IAAI,AC7GV,ED6GiB,IAAA,CAAK,GAC7B,EAAW,EAAA,MAAA,CAAe,GAOhC,GAAoB,AALpB,6CAA6C;AAC7C,CAAA,GAAkB,EAAS,IAAA,CAAK,YAAA,CAAa,KAAA,CACzC,EAAS,IAAA,CAAK,kBAAkB,CAAC,EAAE,CACnC,EAAS,IAAA,CAAK,kBAAkB,CAAC,EAAE,CAAG,EAAS,IAAA,CAAK,iBAAA,EACtD,GAAA,CAAI,AAAA,GAAO,CAAC,EAAI,GAAJ,CAAS,EAAI,KAAJ,CAAW,EAAI,IAAJ,CAAU,EAAI,KAAJ,CAAU,CAAA,EAClB,GAAA,CAAI,AAAA,GAAkB,IAAI,EAAe,CAE7E,6BAA4B;AAC5B,IAAM,EAAe,SAAS,cAAA,CAAe,iBAC7C,KAAO,EAAa,UAAA,EAChB,EAAa,WAAA,CAAY,EAAa,UAD1C,CAIA,4CAA2C;AAC3C,IAAI,EAAuB,CAAC,CACD,CAAA,IAAvB,GAAY,MAAA,EACZ,GAAY,KAAA,CAAM,OAAO,OAAA,CAAQ,CAAC,EAAU,KACxC,IAAM,EAAQ,EAAS,KAAA,CAAM,QAAQ,GAAA,CAAI,AAAC,GAAQ,SAAS,GAC3D,CAAA,CAAoB,CAAC,CAAK,CAAC,EAAE,CAAC,CAAG,CAAC,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,AAC7E,GAGJ,+CAA+C;AAC/C,GAAkB,OAAA,CAAQ,CAAC,EAAgB,KACvC,IAAM,EAAS,SAAS,aAAA,CAAc,SACtC,EAAO,YAAA,CAAa,QAAS,eAC7B,EAAO,YAAA,CAAa,KAAM,CAAC,YAAY,EAAE,EAAI,CAAC,EAC9C,EAAO,IAAA,CAAO,QAEV,KAAO,GAAwB,EAC/B,EAAO,KAAA,CAAQ,GAAe,CAAoB,CAAC,EAAI,EAEvD,EAAO,KAAA,CAAQ,GAAe,GAGlC,EAAa,WAAA,CAAY,GACzB,EAAO,gBAAA,CAAiB,QAAS,AAAC,QAxED,EAAA,EAyEN,EAAM,MAAA,CAAO,KAAA,CAAM,SAAA,CAAU,GAxE5D,CAAC,EAAG,EAAG,EAAE,CAAC,OAAA,CAAQ,AAAA,IACd,EAAiB,CAuEK,EAvES,CAAC,EAAI,CAAG,SAAS,EAAS,SAAA,CAAU,AAAM,EAAN,EAAS,AAAM,EAAN,EAAU,GAAI,GAC9F,GAuEQ,IACJ,EACJ,GAEA,IAAM,EAAe,MAAM,IAAA,CAAK,SAAS,KAAA,CAAM,MAAA,IAAU,GAAA,CAAI,AAAA,GAAY,EAAS,IAAlF,GACA,OAAM,QAAQ,GAAA,CAAI,GAEb,GACD,CAAA,OAAO,QAAA,CAAS,IAAA,CAAO,GAAe,EAD1C,EAGA,GAAa,mBAAoB,EACrC,CAGA,SAAS,GAAa,CAAS,CAAE,CAAS,EACtC,IAAM,EAAS,SAAS,cAAA,CAAe,GACjC,EAAM,EAAO,UAAA,CAAW,KAEb,CAAA,iBAAb,IACA,EAAO,KAAA,CAAQ,AAFD,GAEC,SAAS,cAAA,CAAe,oBAAoB,WAAA,CAC3D,EAAO,MAAA,CAAS,AAHF,GAGE,SAAS,cAAA,CAAe,oBAAoB,YAAA,CAC5D,EAAI,KAAA,CAJU,GAAA,KAMlB,EAAI,SAAA,CAAU,EAAG,EAAG,EAAO,KAAA,CAAO,EAAO,MAAzC,CAEA,+BAA8B;AAC9B,IAAM,EAAkB,WAAW,OAAO,gBAAA,CAAiB,SAAS,cAAA,CAAe,qBAAqB,gBAAA,CAAiB,cACnH,EAAmB,WAAW,OAAO,gBAAA,CAAiB,SAAS,cAAA,CAAe,oBAAoB,aAAA,EAAe,gBAAA,CAAiB,aAGxI,cAAa;AACb,EAAI,IAAA,CAAO,CAAC,EAHW,EAAkB,EAGZ,qBAAqB,CAAC,CACnD,EAAI,YAAA,CAAe,SACnB,EAAI,SAAA,CAAY,SACZ,AAAa,iBAAb,EACA,EAAI,QAAA,CAAS,EAAW,EAAO,KAAA,CAAS,GAAgB,EAAO,MAAA,CAAU,IAEzE,EAAI,QAAA,CAAS,EAAW,EAAO,KAAA,CAAQ,EAAG,EAAO,MAAA,CAAS,EAElE,CAsBA,SAAS,GAAmB,CAAS,EACjC,IAAM,EAAuB,SAAS,cAAA,CAAe,yBACjD,AAAuC,CAAA,SAAvC,EAAqB,KAAA,CAAM,OAAA,CAC3B,EAAqB,KAAA,CAAM,OAAA,CAAU,QAErC,EAAqB,KAAA,CAAM,OAAA,CAAU,OAEzC,GAAY,EAAW,CAAA,EAC3B,CA4HA,qBAAqB;AACrB,SAAS,KACL,IAAM,EAAgB,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,kBAAS,eAAM,kBAAS,kBAAS,kBAAS,kBAAS,4BAAS,4BAAS,4BAAS,4BAAS,4BAAS,4BAAS,kBAAS,kBAAS,kBAAS,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAAQ,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,gBAAO,KAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,gBAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAK,CACtoB,EAAc,KAAK,KAAA,CAAM,KAAK,MAAA,GAAW,EAAc,MAA7D,EACA,OAAO,CAAa,CAAC,EAAY,AACrC,CApWkB,AADO,EAAE,CAAC,KAAA,CAAM,IAAA,CAAK,SAAS,gBAAA,CAAiB,+BAC5B,GAAA,CAAI,SAAS,CAAgB,EAC9D,OAAO,IAAI,UAAU,OAAA,CAAQ,EACjC,GAoOA,uEAAuE;AACvE,SAAS,gBAAA,CAAiB,mBAAoB,WAO1C,IAAM,EAAqB,IAAI,UAAU,MAAA,CANP,CAC9B,cAAe,CAAC,EAAK,IAAM,GAAmB,EAAI,MAAS,EAC3D,IAAK,SACL,UAAW,GACX,QAAS,CACb,GAEA,SAAS,cAAA,CAAe,gBAAgB,WAAA,CAAY,EAEpD,eAAc;AACd,IAAM,EAAoB,SAAS,cAAA,CAAe,uBAC5C,EAAuB,SAAS,cAAA,CAAe,0BAO/C,EAAoB,IAAI,UAAU,MAAA,CANP,CAC7B,cAAe,CAAC,EAAK,IAAM,GAAmB,EAAI,MAAS,EAC3D,IAAK,SACL,UAAW,GACX,QAAS,CACb,GAEA,EAAqB,WAAA,CAAY,GAEjC,EAAkB,gBAAA,CAAiB,QAAS,WACpC,AAAuC,SAAvC,EAAqB,KAAA,CAAM,OAAA,CAC3B,EAAqB,KAAA,CAAM,OAAA,CAAU,QAErC,EAAqB,KAAA,CAAM,OAAA,CAAU,MAE7C,EACJ,GAGA,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,wBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,QAAQ,GAAA,CAAI,0DACZ,GAAY,KAAkB,CAAA,EAClC,EACJ,GAEJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,wBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,QAAQ,GAAA,CAAI,qDACZ,AAzEZ,WAEI,SAAS,IAGL,OAAO,KAAK,KAAA,CAAM,AAAiB,IAAjB,KAAK,MAAA,IAFR,CAGnB,CAEA,UAAY,SAAS,gBAAA,CAAiB,gBAAgB,MAAtD,CACA,GAAkB,OAAA,CAAQ,CAAC,EAAG,KAC1B,EAAiB,CAAC,EAAI,CAAG,CAAC,IAAkB,IAAkB,IAAkB,IAAI,CACpF,SAAS,cAAA,CAAe,CAAC,YAAY,EAAE,EAAI,CAAC,EAAE,KAAA,CAAQ,GAAe,EAAiB,CAAC,EAAI,CAC/F,GACA,IACJ,GA4DQ,EACJ,GAEJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,iBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,QAAQ,GAAA,CAAI,mDACZ,IAAM,EAAY,SAAS,cAAA,CAAe,oBAAoB,SAA9D,CACA,GAAY,EAAW,CAAA,EAC3B,EACJ,GAEJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,oBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,IAAM,EAAe,SAAS,cAAA,CAAe,iBAC7C,GAAa,gBAAiB,SAAS,cAAA,CAAe,oBAAoB,SAA1E,EACA,IAAM,EAAU,EAAa,SAAA,CAAU,aAGjC,EAAe,SAAS,aAAA,CAAc,KAC5C,QAAQ,GAAA,CAAI,CAAC,2BAA2B,EAAE,SAAS,cAAA,CAAe,oBAAoB,SAAA,CAAU,OAAO,CAAC,EACxG,EAAa,IAAA,CAAO,EACpB,EAAa,QAAA,CAAW,CAAC,EAAE,GAAe,SAAS,cAAA,CAAe,oBAAoB,SAAA,EAAW,eAAe,CAAC,CACjH,EAAa,KAAb,EACJ,EACJ,GAGJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,mBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,IAAM,EAAmB,CAAC,6CAA6C,EAAE,mBAAmB,IAAU,CAAC,CACvG,OAAO,IAAA,CAAK,EAAkB,SAClC,EACJ,GAEJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,kBACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,IAAM,EAAU,CAAC,YAAY,EAAE,GAAS,CAAC,CACnC,EAAkB,CAAC,sCAAsC,EAAE,mBAAmB,GAAS,CAAC,CAC9F,OAAO,IAAA,CAAK,EAAiB,SACjC,EACJ,GAGJ,MAAM,IAAA,CAAK,SAAS,sBAAA,CAAuB,eACtC,OAAA,CAAQ,SAAS,CAAO,EACrB,EAAQ,gBAAA,CAAiB,QAAS,WAC9B,IAAM,EAAe,CAAC,gDAAgD,EAAE,mBAAmB,IAAU,CAAC,CACtG,OAAO,IAAA,CAAK,EAAc,SAC9B,EACJ,GAqKJ,AA1CA,kBACI,qDAAqD;AA9FzD,kDAAkD;AAClD,WACI,QAAQ,GAAA,CAAI,6EACZ,IAGI,EAHA,EAAO,SAAS,cAAA,CAAe,6BAC/B,EAAM,eACN,EAAO,EAGX,uEAAsE;AACtE,SAAS,IAGL,uBAAuB;AACvB,GAHA,EAAQ,SAAA,CAAU,EAAK,EAAG,GAGtB,AAAgD,IAAhD,EAAQ,YAAA,CAAa,GAAI,IAAK,EAAG,GAAG,IAAI,CAAC,EAAE,CAG3C,OAFA,cAAc,GACd,AAQR,6DAA6D;AAC7D,WACI,IAAI,EAAM,CAAC,EAOX,wDAAwD;AACxD,IAAK,IAAI,KAPT,EAAI,IAAA,CAAO,AAA+C,MAA/C,EAAQ,YAAA,CAAa,GAAI,GAAI,EAAG,GAAG,IAAI,CAAC,EAAE,CACrD,EAAI,IAAA,CAAO,AAA+C,MAA/C,EAAQ,YAAA,CAAa,GAAI,GAAI,EAAG,GAAG,IAAI,CAAC,EAAE,CACrD,EAAI,IAAA,CAAO,AAA+C,MAA/C,EAAQ,YAAA,CAAa,GAAI,GAAI,EAAG,GAAG,IAAI,CAAC,EAAE,CACrD,EAAI,GAAA,CAAM,AAA+C,KAA/C,EAAQ,YAAA,CAAa,GAAI,GAAI,EAAG,GAAG,IAAI,CAAC,EAAE,CACpD,EAAI,MAAA,CAAS,AAA+C,MAA/C,EAAQ,YAAA,CAAa,GAAI,GAAI,EAAG,GAAG,IAAI,CAAC,EAAE,CAGvC,EACR,EAAI,cAAA,CAAe,KACf,CAAG,CAAC,EAAI,CACR,EAAK,SAAA,EAAa,IAAM,EAAM,CAAI,UAAU;CAE5C,EAAK,SAAA,EAAa,IAAM,EAAM,EAAM,SAAU,WAAW;CAIzE,IA1Be,CAAA,CACA,GAAE,GAAQ,IACjB,cAAc,GACd,IAER,CAuBA,8BAA8B;AAC9B,SAAS,IACL,EAAK,SAAA,EAAa,IAAM,EAAM,QAClC,CAEA,4CAA4C;AAC5C,GAAI,CACA,IAAI,EAAS,SAAS,aAAA,CAAc,UAChC,EAAU,EAAO,UAAA,CAAW,MAC5B,EAAM,IAAI,KAuBd,CAAA,EAAO,KAAA,CAAQ,GACf,EAAO,MAAA,CAAS,IAEhB,EAAI,MAAA,CAAS,WACJ,KAED,CAAA,EAAO,OAAO,WAAA,CAAY,EAAe,EAAzC,CAER,EAEA,EAAI,GAAA,CAAM,oCAAsC,mBA3BtC,4qLA4Bd,CAAE,MAAO,EAAI,CACT,GACJ,CACJ,IAMI,IAAM,EAAgB,SAAS,cAAA,CAAe,6BACxC,EAAW,IAAI,iBAAiB,AAAC,IACnC,IAAK,IAAM,KAAY,EACG,eAAlB,EAAS,IAAA,EAAyB,AAA2B,UAA3B,EAAS,aAAA,EACvC,EAAc,SAAA,CAAU,QAAA,CAAS,+BACjC,AAhIpB,WACI,IAAM,EAAQ,SAAS,cAAA,CAAe,gBAChC,EAAc,EAAM,aAAA,CAAc,SAExC,CAAA,EAAM,KAAA,CAAM,OAAA,CAAU,QAEtB,EAAY,OAAA,CAAU,WAClB,EAAM,KAAA,CAAM,OAAA,CAAU,MAC1B,EAEA,OAAO,OAAA,CAAU,SAAS,CAAK,EACvB,EAAM,MAAA,GAAW,GACjB,CAAA,EAAM,KAAA,CAAM,OAAA,CAAU,MAD1B,CAGJ,CACJ,IAkHoB,QAAQ,GAAA,CAAI,uIACZ,EAAS,UAAT,GAIhB,GACA,EAAS,OAAA,CAAQ,EAAe,CAC5B,WAAY,CAAA,CAChB,EAEA,wDAAuD;AACvD,IAAM,EAAiB,SAAS,cAAA,CAAe,oBAK/C,GAJA,EAAe,KAAA,CAAQ,SAAS,cAAA,CAAe,oBAAoB,WAAnE,CACA,EAAe,MAAA,CAAS,SAAS,cAAA,CAAe,oBAAoB,YAApE,CAGI,OAAO,QAAA,CAAS,IAAA,CAAM,CACtB,YAAc,OAAO,QAAA,CAAS,IAAA,CAAK,SAAA,CAAU,GAC7C,IAAM,EAAQ,YAAY,KAAA,CAAM,IAKhC,mCAAkC;AAJlC,gCAAgC;AAChC,SAAS,cAAA,CAAe,oBAAoB,SAAA,CAAY,GAAe,CAAK,CAAC,EAAE,EAC/E,GAAY,GAAe,CAAK,CAAC,EAAE,EAAG,CAAA,GAGlC,EAAM,MAAA,CAAS,GAEf,GADA,GAAc,mBAlbd,AAkb2C,CAAK,CAAC,EAAE,CAlb/C,UAAA,CAAW,IAAK,MAAM,UAAA,CAAW,IAAK,WAqblD,MACI,GAAY,KAAkB,CAAA,EAEtC,G,4D","sources":["<anon>","node_modules/legacy-swc-helpers/lib/_define_property.js","node_modules/legacy-swc-helpers/lib/_ts_decorate.js","node_modules/tslib/tslib.es6.js","node_modules/brotli/dec/decode.js","node_modules/brotli/dec/streams.js","node_modules/brotli/dec/bit_reader.js","node_modules/brotli/dec/dictionary.js","node_modules/brotli/dec/dictionary-browser.js","node_modules/base64-js/index.js","node_modules/brotli/dec/dictionary.bin.js","node_modules/brotli/dec/huffman.js","node_modules/brotli/dec/context.js","node_modules/brotli/dec/prefix.js","node_modules/brotli/dec/transform.js","src/js/app.js","../../../node_modules/buffer/index.js","../../../node_modules/base64-js/index.js","../../../node_modules/ieee754/index.js","node_modules/fontkit/dist/browser.cjs","node_modules/restructure/index.js","node_modules/restructure/src/EncodeStream.js","node_modules/restructure/src/DecodeStream.js","node_modules/restructure/src/Array.js","node_modules/restructure/src/Base.js","node_modules/restructure/src/Number.js","node_modules/restructure/src/utils.js","node_modules/restructure/src/LazyArray.js","node_modules/restructure/src/Bitfield.js","node_modules/restructure/src/Boolean.js","node_modules/restructure/src/Buffer.js","node_modules/restructure/src/Enum.js","node_modules/restructure/src/Optional.js","node_modules/restructure/src/Reserved.js","node_modules/restructure/src/String.js","node_modules/restructure/src/Struct.js","node_modules/restructure/src/VersionedStruct.js","node_modules/restructure/src/Pointer.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_ts_decorate.js","node_modules/fast-deep-equal/index.js","node_modules/unicode-properties/dist/module.mjs","node_modules/unicode-properties/dist/index.js","node_modules/unicode-properties/dist/data.json","node_modules/unicode-trie/index.js","node_modules/tiny-inflate/index.js","node_modules/unicode-trie/swap.js","node_modules/dfa/index.js","node_modules/dfa/src/StateMachine.js","node_modules/clone/clone.js","node_modules/brotli/decompress.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire50bd\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire50bd\"] = parcelRequire;\n}\nparcelRequire.register(\"eQMeO\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(module.exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return $acfb5712519b8b56$var$_defineProperty;\n    }\n});\nfunction $acfb5712519b8b56$var$_defineProperty(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n});\n\nparcelRequire.register(\"hieg9\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(module.exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return $7WQrb.__decorate;\n    }\n});\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\n});\nparcelRequire.register(\"7WQrb\", function(module, exports) {\n\n$parcel$export(module.exports, \"__decorate\", () => $5c96a02c592fcff1$export$29e00dfd3077644b);\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var $5c96a02c592fcff1$var$extendStatics = function(d, b) {\n    $5c96a02c592fcff1$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return $5c96a02c592fcff1$var$extendStatics(d, b);\n};\nfunction $5c96a02c592fcff1$export$a8ba968b8961cb8a(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    $5c96a02c592fcff1$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar $5c96a02c592fcff1$export$18ce0697a983be9b = function() {\n    $5c96a02c592fcff1$export$18ce0697a983be9b = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $5c96a02c592fcff1$export$18ce0697a983be9b.apply(this, arguments);\n};\nfunction $5c96a02c592fcff1$export$3c9a16f847548506(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction $5c96a02c592fcff1$export$29e00dfd3077644b(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction $5c96a02c592fcff1$export$d5ad3fd78186038f(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction $5c96a02c592fcff1$export$3a84e1ae4e97e9b0(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\nfunction $5c96a02c592fcff1$export$d831c04e792af3d(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n}\nfunction $5c96a02c592fcff1$export$6a2a36740a146cb8(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\nfunction $5c96a02c592fcff1$export$d1a06452d3489bc7(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\nfunction $5c96a02c592fcff1$export$f1db080c865becb9(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction $5c96a02c592fcff1$export$1050f835b63b671e(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction $5c96a02c592fcff1$export$67ebef60e6f28a6(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar $5c96a02c592fcff1$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction $5c96a02c592fcff1$export$f33643c0debef087(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) $5c96a02c592fcff1$export$45d3717a4c69092e(o, m, p);\n}\nfunction $5c96a02c592fcff1$export$19a8beecd37a4c45(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction $5c96a02c592fcff1$export$8d051b38c9118094(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$afc72e2116322959() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($5c96a02c592fcff1$export$8d051b38c9118094(arguments[i]));\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$6388937ca91ccae8() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction $5c96a02c592fcff1$export$1216008129fb82ed(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction $5c96a02c592fcff1$export$10c90e4f7922046c(v) {\n    return this instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? (this.v = v, this) : new $5c96a02c592fcff1$export$10c90e4f7922046c(v);\n}\nfunction $5c96a02c592fcff1$export$e427f37a30a4de9b(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction $5c96a02c592fcff1$export$bbd80228419bb833(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $5c96a02c592fcff1$export$10c90e4f7922046c(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction $5c96a02c592fcff1$export$e3b29a3d6162315f(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof $5c96a02c592fcff1$export$19a8beecd37a4c45 === \"function\" ? $5c96a02c592fcff1$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction $5c96a02c592fcff1$export$4fb47efe1390b86f(cooked, raw) {\n    if (Object.defineProperty) Object.defineProperty(cooked, \"raw\", {\n        value: raw\n    });\n    else cooked.raw = raw;\n    return cooked;\n}\nvar $5c96a02c592fcff1$var$__setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction $5c96a02c592fcff1$export$c21735bcef00d192(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $5c96a02c592fcff1$export$45d3717a4c69092e(result, mod, k);\n    }\n    $5c96a02c592fcff1$var$__setModuleDefault(result, mod);\n    return result;\n}\nfunction $5c96a02c592fcff1$export$da59b14a69baef04(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction $5c96a02c592fcff1$export$d5dcaf168c640c35(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction $5c96a02c592fcff1$export$d40a35129aaff81f(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction $5c96a02c592fcff1$export$81fdc39f203e4e04(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction $5c96a02c592fcff1$export$88ac25d8e944e405(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) env.stack.push({\n        async: true\n    });\n    return value;\n}\nvar $5c96a02c592fcff1$var$_SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction $5c96a02c592fcff1$export$8f076105dc360e92(env) {\n    function fail(e) {\n        env.error = env.hasError ? new $5c96a02c592fcff1$var$_SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\nvar $5c96a02c592fcff1$export$2e2bcd8739ae039 = {\n    __extends: $5c96a02c592fcff1$export$a8ba968b8961cb8a,\n    __assign: $5c96a02c592fcff1$export$18ce0697a983be9b,\n    __rest: $5c96a02c592fcff1$export$3c9a16f847548506,\n    __decorate: $5c96a02c592fcff1$export$29e00dfd3077644b,\n    __param: $5c96a02c592fcff1$export$d5ad3fd78186038f,\n    __metadata: $5c96a02c592fcff1$export$f1db080c865becb9,\n    __awaiter: $5c96a02c592fcff1$export$1050f835b63b671e,\n    __generator: $5c96a02c592fcff1$export$67ebef60e6f28a6,\n    __createBinding: $5c96a02c592fcff1$export$45d3717a4c69092e,\n    __exportStar: $5c96a02c592fcff1$export$f33643c0debef087,\n    __values: $5c96a02c592fcff1$export$19a8beecd37a4c45,\n    __read: $5c96a02c592fcff1$export$8d051b38c9118094,\n    __spread: $5c96a02c592fcff1$export$afc72e2116322959,\n    __spreadArrays: $5c96a02c592fcff1$export$6388937ca91ccae8,\n    __spreadArray: $5c96a02c592fcff1$export$1216008129fb82ed,\n    __await: $5c96a02c592fcff1$export$10c90e4f7922046c,\n    __asyncGenerator: $5c96a02c592fcff1$export$e427f37a30a4de9b,\n    __asyncDelegator: $5c96a02c592fcff1$export$bbd80228419bb833,\n    __asyncValues: $5c96a02c592fcff1$export$e3b29a3d6162315f,\n    __makeTemplateObject: $5c96a02c592fcff1$export$4fb47efe1390b86f,\n    __importStar: $5c96a02c592fcff1$export$c21735bcef00d192,\n    __importDefault: $5c96a02c592fcff1$export$da59b14a69baef04,\n    __classPrivateFieldGet: $5c96a02c592fcff1$export$d5dcaf168c640c35,\n    __classPrivateFieldSet: $5c96a02c592fcff1$export$d40a35129aaff81f,\n    __classPrivateFieldIn: $5c96a02c592fcff1$export$81fdc39f203e4e04,\n    __addDisposableResource: $5c96a02c592fcff1$export$88ac25d8e944e405,\n    __disposeResources: $5c96a02c592fcff1$export$8f076105dc360e92\n};\n\n});\n\n\nparcelRequire.register(\"ktvS8\", function(module, exports) {\n\n$parcel$export(module.exports, \"BrotliDecompressBuffer\", () => $ee7f3d40128f729f$export$9840689580eff2f0, (v) => $ee7f3d40128f729f$export$9840689580eff2f0 = v);\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/ var $ee7f3d40128f729f$export$fa64f32e2d0558a1;\nvar $ee7f3d40128f729f$export$9840689580eff2f0;\nvar $ee7f3d40128f729f$export$59cbf0b8eef2df1e;\n\nvar $j5sEj = parcelRequire(\"j5sEj\");\nvar $ee7f3d40128f729f$require$BrotliInput = $j5sEj.BrotliInput;\n\nvar $j5sEj = parcelRequire(\"j5sEj\");\nvar $ee7f3d40128f729f$require$BrotliOutput = $j5sEj.BrotliOutput;\n\nvar $8JSYM = parcelRequire(\"8JSYM\");\n\nvar $fo1rr = parcelRequire(\"fo1rr\");\n\nvar $kls9x = parcelRequire(\"kls9x\");\nvar $ee7f3d40128f729f$require$HuffmanCode = $kls9x.HuffmanCode;\n\nvar $kls9x = parcelRequire(\"kls9x\");\nvar $ee7f3d40128f729f$require$BrotliBuildHuffmanTable = $kls9x.BrotliBuildHuffmanTable;\n\nvar $hX8C6 = parcelRequire(\"hX8C6\");\n\nvar $7aaiK = parcelRequire(\"7aaiK\");\n\nvar $4zIc9 = parcelRequire(\"4zIc9\");\nvar $ee7f3d40128f729f$var$kDefaultCodeLength = 8;\nvar $ee7f3d40128f729f$var$kCodeLengthRepeatCode = 16;\nvar $ee7f3d40128f729f$var$kNumLiteralCodes = 256;\nvar $ee7f3d40128f729f$var$kNumInsertAndCopyCodes = 704;\nvar $ee7f3d40128f729f$var$kNumBlockLengthCodes = 26;\nvar $ee7f3d40128f729f$var$kLiteralContextBits = 6;\nvar $ee7f3d40128f729f$var$kDistanceContextBits = 2;\nvar $ee7f3d40128f729f$var$HUFFMAN_TABLE_BITS = 8;\nvar $ee7f3d40128f729f$var$HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */ var $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE = 1080;\nvar $ee7f3d40128f729f$var$CODE_LENGTH_CODES = 18;\nvar $ee7f3d40128f729f$var$kCodeLengthCodeOrder = new Uint8Array([\n    1,\n    2,\n    3,\n    4,\n    0,\n    5,\n    17,\n    6,\n    16,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15\n]);\nvar $ee7f3d40128f729f$var$NUM_DISTANCE_SHORT_CODES = 16;\nvar $ee7f3d40128f729f$var$kDistanceShortCodeIndexOffset = new Uint8Array([\n    3,\n    2,\n    1,\n    0,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2\n]);\nvar $ee7f3d40128f729f$var$kDistanceShortCodeValueOffset = new Int8Array([\n    0,\n    0,\n    0,\n    0,\n    -1,\n    1,\n    -2,\n    2,\n    -3,\n    3,\n    -1,\n    1,\n    -2,\n    2,\n    -3,\n    3\n]);\nvar $ee7f3d40128f729f$var$kMaxHuffmanTableSize = new Uint16Array([\n    256,\n    402,\n    436,\n    468,\n    500,\n    534,\n    566,\n    598,\n    630,\n    662,\n    694,\n    726,\n    758,\n    790,\n    822,\n    854,\n    886,\n    920,\n    952,\n    984,\n    1016,\n    1048,\n    1080\n]);\nfunction $ee7f3d40128f729f$var$DecodeWindowBits(br) {\n    var n;\n    if (br.readBits(1) === 0) return 16;\n    n = br.readBits(3);\n    if (n > 0) return 17 + n;\n    n = br.readBits(3);\n    if (n > 0) return 8 + n;\n    return 17;\n}\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */ function $ee7f3d40128f729f$var$DecodeVarLenUint8(br) {\n    if (br.readBits(1)) {\n        var nbits = br.readBits(3);\n        if (nbits === 0) return 1;\n        else return br.readBits(nbits) + (1 << nbits);\n    }\n    return 0;\n}\nfunction $ee7f3d40128f729f$var$MetaBlockLength() {\n    this.meta_block_length = 0;\n    this.input_end = 0;\n    this.is_uncompressed = 0;\n    this.is_metadata = false;\n}\nfunction $ee7f3d40128f729f$var$DecodeMetaBlockLength(br) {\n    var out = new $ee7f3d40128f729f$var$MetaBlockLength;\n    var size_nibbles;\n    var size_bytes;\n    var i;\n    out.input_end = br.readBits(1);\n    if (out.input_end && br.readBits(1)) return out;\n    size_nibbles = br.readBits(2) + 4;\n    if (size_nibbles === 7) {\n        out.is_metadata = true;\n        if (br.readBits(1) !== 0) throw new Error(\"Invalid reserved bit\");\n        size_bytes = br.readBits(2);\n        if (size_bytes === 0) return out;\n        for(i = 0; i < size_bytes; i++){\n            var next_byte = br.readBits(8);\n            if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0) throw new Error(\"Invalid size byte\");\n            out.meta_block_length |= next_byte << i * 8;\n        }\n    } else for(i = 0; i < size_nibbles; ++i){\n        var next_nibble = br.readBits(4);\n        if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0) throw new Error(\"Invalid size nibble\");\n        out.meta_block_length |= next_nibble << i * 4;\n    }\n    ++out.meta_block_length;\n    if (!out.input_end && !out.is_metadata) out.is_uncompressed = br.readBits(1);\n    return out;\n}\n/* Decodes the next Huffman code from bit-stream. */ function $ee7f3d40128f729f$var$ReadSymbol(table, index, br) {\n    var start_index = index;\n    var nbits;\n    br.fillBitWindow();\n    index += br.val_ >>> br.bit_pos_ & $ee7f3d40128f729f$var$HUFFMAN_TABLE_MASK;\n    nbits = table[index].bits - $ee7f3d40128f729f$var$HUFFMAN_TABLE_BITS;\n    if (nbits > 0) {\n        br.bit_pos_ += $ee7f3d40128f729f$var$HUFFMAN_TABLE_BITS;\n        index += table[index].value;\n        index += br.val_ >>> br.bit_pos_ & (1 << nbits) - 1;\n    }\n    br.bit_pos_ += table[index].bits;\n    return table[index].value;\n}\nfunction $ee7f3d40128f729f$var$ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n    var symbol = 0;\n    var prev_code_len = $ee7f3d40128f729f$var$kDefaultCodeLength;\n    var repeat = 0;\n    var repeat_code_len = 0;\n    var space = 32768;\n    var table = [];\n    for(var i = 0; i < 32; i++)table.push(new $ee7f3d40128f729f$require$HuffmanCode(0, 0));\n    $ee7f3d40128f729f$require$BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, $ee7f3d40128f729f$var$CODE_LENGTH_CODES);\n    while(symbol < num_symbols && space > 0){\n        var p = 0;\n        var code_len;\n        br.readMoreInput();\n        br.fillBitWindow();\n        p += br.val_ >>> br.bit_pos_ & 31;\n        br.bit_pos_ += table[p].bits;\n        code_len = table[p].value & 0xff;\n        if (code_len < $ee7f3d40128f729f$var$kCodeLengthRepeatCode) {\n            repeat = 0;\n            code_lengths[symbol++] = code_len;\n            if (code_len !== 0) {\n                prev_code_len = code_len;\n                space -= 32768 >> code_len;\n            }\n        } else {\n            var extra_bits = code_len - 14;\n            var old_repeat;\n            var repeat_delta;\n            var new_len = 0;\n            if (code_len === $ee7f3d40128f729f$var$kCodeLengthRepeatCode) new_len = prev_code_len;\n            if (repeat_code_len !== new_len) {\n                repeat = 0;\n                repeat_code_len = new_len;\n            }\n            old_repeat = repeat;\n            if (repeat > 0) {\n                repeat -= 2;\n                repeat <<= extra_bits;\n            }\n            repeat += br.readBits(extra_bits) + 3;\n            repeat_delta = repeat - old_repeat;\n            if (symbol + repeat_delta > num_symbols) throw new Error(\"[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols\");\n            for(var x = 0; x < repeat_delta; x++)code_lengths[symbol + x] = repeat_code_len;\n            symbol += repeat_delta;\n            if (repeat_code_len !== 0) space -= repeat_delta << 15 - repeat_code_len;\n        }\n    }\n    if (space !== 0) throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n    for(; symbol < num_symbols; symbol++)code_lengths[symbol] = 0;\n}\nfunction $ee7f3d40128f729f$var$ReadHuffmanCode(alphabet_size, tables, table, br) {\n    var table_size = 0;\n    var simple_code_or_skip;\n    var code_lengths = new Uint8Array(alphabet_size);\n    br.readMoreInput();\n    /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */ simple_code_or_skip = br.readBits(2);\n    if (simple_code_or_skip === 1) {\n        /* Read symbols, codes & code lengths directly. */ var i;\n        var max_bits_counter = alphabet_size - 1;\n        var max_bits = 0;\n        var symbols = new Int32Array(4);\n        var num_symbols = br.readBits(2) + 1;\n        while(max_bits_counter){\n            max_bits_counter >>= 1;\n            ++max_bits;\n        }\n        for(i = 0; i < num_symbols; ++i){\n            symbols[i] = br.readBits(max_bits) % alphabet_size;\n            code_lengths[symbols[i]] = 2;\n        }\n        code_lengths[symbols[0]] = 1;\n        switch(num_symbols){\n            case 1:\n                break;\n            case 3:\n                if (symbols[0] === symbols[1] || symbols[0] === symbols[2] || symbols[1] === symbols[2]) throw new Error(\"[ReadHuffmanCode] invalid symbols\");\n                break;\n            case 2:\n                if (symbols[0] === symbols[1]) throw new Error(\"[ReadHuffmanCode] invalid symbols\");\n                code_lengths[symbols[1]] = 1;\n                break;\n            case 4:\n                if (symbols[0] === symbols[1] || symbols[0] === symbols[2] || symbols[0] === symbols[3] || symbols[1] === symbols[2] || symbols[1] === symbols[3] || symbols[2] === symbols[3]) throw new Error(\"[ReadHuffmanCode] invalid symbols\");\n                if (br.readBits(1)) {\n                    code_lengths[symbols[2]] = 3;\n                    code_lengths[symbols[3]] = 3;\n                } else code_lengths[symbols[0]] = 2;\n                break;\n        }\n    } else {\n        var i;\n        var code_length_code_lengths = new Uint8Array($ee7f3d40128f729f$var$CODE_LENGTH_CODES);\n        var space = 32;\n        var num_codes = 0;\n        /* Static Huffman code for the code length code lengths */ var huff = [\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 0),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 4),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 3),\n            new $ee7f3d40128f729f$require$HuffmanCode(3, 2),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 0),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 4),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 3),\n            new $ee7f3d40128f729f$require$HuffmanCode(4, 1),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 0),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 4),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 3),\n            new $ee7f3d40128f729f$require$HuffmanCode(3, 2),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 0),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 4),\n            new $ee7f3d40128f729f$require$HuffmanCode(2, 3),\n            new $ee7f3d40128f729f$require$HuffmanCode(4, 5)\n        ];\n        for(i = simple_code_or_skip; i < $ee7f3d40128f729f$var$CODE_LENGTH_CODES && space > 0; ++i){\n            var code_len_idx = $ee7f3d40128f729f$var$kCodeLengthCodeOrder[i];\n            var p = 0;\n            var v;\n            br.fillBitWindow();\n            p += br.val_ >>> br.bit_pos_ & 15;\n            br.bit_pos_ += huff[p].bits;\n            v = huff[p].value;\n            code_length_code_lengths[code_len_idx] = v;\n            if (v !== 0) {\n                space -= 32 >> v;\n                ++num_codes;\n            }\n        }\n        if (!(num_codes === 1 || space === 0)) throw new Error(\"[ReadHuffmanCode] invalid num_codes or space\");\n        $ee7f3d40128f729f$var$ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n    }\n    table_size = $ee7f3d40128f729f$require$BrotliBuildHuffmanTable(tables, table, $ee7f3d40128f729f$var$HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n    if (table_size === 0) throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n    return table_size;\n}\nfunction $ee7f3d40128f729f$var$ReadBlockLength(table, index, br) {\n    var code;\n    var nbits;\n    code = $ee7f3d40128f729f$var$ReadSymbol(table, index, br);\n    nbits = $7aaiK.kBlockLengthPrefixCode[code].nbits;\n    return $7aaiK.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\nfunction $ee7f3d40128f729f$var$TranslateShortCodes(code, ringbuffer, index) {\n    var val;\n    if (code < $ee7f3d40128f729f$var$NUM_DISTANCE_SHORT_CODES) {\n        index += $ee7f3d40128f729f$var$kDistanceShortCodeIndexOffset[code];\n        index &= 3;\n        val = ringbuffer[index] + $ee7f3d40128f729f$var$kDistanceShortCodeValueOffset[code];\n    } else val = code - $ee7f3d40128f729f$var$NUM_DISTANCE_SHORT_CODES + 1;\n    return val;\n}\nfunction $ee7f3d40128f729f$var$MoveToFront(v, index) {\n    var value = v[index];\n    var i = index;\n    for(; i; --i)v[i] = v[i - 1];\n    v[0] = value;\n}\nfunction $ee7f3d40128f729f$var$InverseMoveToFrontTransform(v, v_len) {\n    var mtf = new Uint8Array(256);\n    var i;\n    for(i = 0; i < 256; ++i)mtf[i] = i;\n    for(i = 0; i < v_len; ++i){\n        var index = v[i];\n        v[i] = mtf[index];\n        if (index) $ee7f3d40128f729f$var$MoveToFront(mtf, index);\n    }\n}\n/* Contains a collection of huffman trees with the same alphabet size. */ function $ee7f3d40128f729f$var$HuffmanTreeGroup(alphabet_size, num_htrees) {\n    this.alphabet_size = alphabet_size;\n    this.num_htrees = num_htrees;\n    this.codes = new Array(num_htrees + num_htrees * $ee7f3d40128f729f$var$kMaxHuffmanTableSize[alphabet_size + 31 >>> 5]);\n    this.htrees = new Uint32Array(num_htrees);\n}\n$ee7f3d40128f729f$var$HuffmanTreeGroup.prototype.decode = function(br) {\n    var i;\n    var table_size;\n    var next = 0;\n    for(i = 0; i < this.num_htrees; ++i){\n        this.htrees[i] = next;\n        table_size = $ee7f3d40128f729f$var$ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n        next += table_size;\n    }\n};\nfunction $ee7f3d40128f729f$var$DecodeContextMap(context_map_size, br) {\n    var out = {\n        num_htrees: null,\n        context_map: null\n    };\n    var use_rle_for_zeros;\n    var max_run_length_prefix = 0;\n    var table;\n    var i;\n    br.readMoreInput();\n    var num_htrees = out.num_htrees = $ee7f3d40128f729f$var$DecodeVarLenUint8(br) + 1;\n    var context_map = out.context_map = new Uint8Array(context_map_size);\n    if (num_htrees <= 1) return out;\n    use_rle_for_zeros = br.readBits(1);\n    if (use_rle_for_zeros) max_run_length_prefix = br.readBits(4) + 1;\n    table = [];\n    for(i = 0; i < $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE; i++)table[i] = new $ee7f3d40128f729f$require$HuffmanCode(0, 0);\n    $ee7f3d40128f729f$var$ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n    for(i = 0; i < context_map_size;){\n        var code;\n        br.readMoreInput();\n        code = $ee7f3d40128f729f$var$ReadSymbol(table, 0, br);\n        if (code === 0) {\n            context_map[i] = 0;\n            ++i;\n        } else if (code <= max_run_length_prefix) {\n            var reps = 1 + (1 << code) + br.readBits(code);\n            while(--reps){\n                if (i >= context_map_size) throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n                context_map[i] = 0;\n                ++i;\n            }\n        } else {\n            context_map[i] = code - max_run_length_prefix;\n            ++i;\n        }\n    }\n    if (br.readBits(1)) $ee7f3d40128f729f$var$InverseMoveToFrontTransform(context_map, context_map_size);\n    return out;\n}\nfunction $ee7f3d40128f729f$var$DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n    var ringbuffer = tree_type * 2;\n    var index = tree_type;\n    var type_code = $ee7f3d40128f729f$var$ReadSymbol(trees, tree_type * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n    var block_type;\n    if (type_code === 0) block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n    else if (type_code === 1) block_type = ringbuffers[ringbuffer + (indexes[index] - 1 & 1)] + 1;\n    else block_type = type_code - 2;\n    if (block_type >= max_block_type) block_type -= max_block_type;\n    block_types[tree_type] = block_type;\n    ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n    ++indexes[index];\n}\nfunction $ee7f3d40128f729f$var$CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n    var rb_size = ringbuffer_mask + 1;\n    var rb_pos = pos & ringbuffer_mask;\n    var br_pos = br.pos_ & $8JSYM.IBUF_MASK;\n    var nbytes;\n    /* For short lengths copy byte-by-byte */ if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n        while(len-- > 0){\n            br.readMoreInput();\n            ringbuffer[rb_pos++] = br.readBits(8);\n            if (rb_pos === rb_size) {\n                output.write(ringbuffer, rb_size);\n                rb_pos = 0;\n            }\n        }\n        return;\n    }\n    if (br.bit_end_pos_ < 32) throw new Error(\"[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32\");\n    /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */ while(br.bit_pos_ < 32){\n        ringbuffer[rb_pos] = br.val_ >>> br.bit_pos_;\n        br.bit_pos_ += 8;\n        ++rb_pos;\n        --len;\n    }\n    /* Copy remaining bytes from br.buf_ to ringbuffer. */ nbytes = br.bit_end_pos_ - br.bit_pos_ >> 3;\n    if (br_pos + nbytes > $8JSYM.IBUF_MASK) {\n        var tail = $8JSYM.IBUF_MASK + 1 - br_pos;\n        for(var x = 0; x < tail; x++)ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n        nbytes -= tail;\n        rb_pos += tail;\n        len -= tail;\n        br_pos = 0;\n    }\n    for(var x = 0; x < nbytes; x++)ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    rb_pos += nbytes;\n    len -= nbytes;\n    /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */ if (rb_pos >= rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos -= rb_size;\n        for(var x = 0; x < rb_pos; x++)ringbuffer[x] = ringbuffer[rb_size + x];\n    }\n    /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */ while(rb_pos + len >= rb_size){\n        nbytes = rb_size - rb_pos;\n        if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) throw new Error(\"[CopyUncompressedBlockToOutput] not enough bytes\");\n        output.write(ringbuffer, rb_size);\n        len -= nbytes;\n        rb_pos = 0;\n    }\n    /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */ if (br.input_.read(ringbuffer, rb_pos, len) < len) throw new Error(\"[CopyUncompressedBlockToOutput] not enough bytes\");\n    /* Restore the state of the bit reader. */ br.reset();\n}\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */ function $ee7f3d40128f729f$var$JumpToByteBoundary(br) {\n    var new_bit_pos = br.bit_pos_ + 7 & -8;\n    var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n    return pad_bits == 0;\n}\nfunction $ee7f3d40128f729f$var$BrotliDecompressedSize(buffer) {\n    var input = new $ee7f3d40128f729f$require$BrotliInput(buffer);\n    var br = new $8JSYM(input);\n    $ee7f3d40128f729f$var$DecodeWindowBits(br);\n    var out = $ee7f3d40128f729f$var$DecodeMetaBlockLength(br);\n    return out.meta_block_length;\n}\n$ee7f3d40128f729f$export$fa64f32e2d0558a1 = $ee7f3d40128f729f$var$BrotliDecompressedSize;\nfunction $ee7f3d40128f729f$var$BrotliDecompressBuffer(buffer, output_size) {\n    var input = new $ee7f3d40128f729f$require$BrotliInput(buffer);\n    if (output_size == null) output_size = $ee7f3d40128f729f$var$BrotliDecompressedSize(buffer);\n    var output_buffer = new Uint8Array(output_size);\n    var output = new $ee7f3d40128f729f$require$BrotliOutput(output_buffer);\n    $ee7f3d40128f729f$var$BrotliDecompress(input, output);\n    if (output.pos < output.buffer.length) output.buffer = output.buffer.subarray(0, output.pos);\n    return output.buffer;\n}\n$ee7f3d40128f729f$export$9840689580eff2f0 = $ee7f3d40128f729f$var$BrotliDecompressBuffer;\nfunction $ee7f3d40128f729f$var$BrotliDecompress(input, output) {\n    var i;\n    var pos = 0;\n    var input_end = 0;\n    var window_bits = 0;\n    var max_backward_distance;\n    var max_distance = 0;\n    var ringbuffer_size;\n    var ringbuffer_mask;\n    var ringbuffer;\n    var ringbuffer_end;\n    /* This ring buffer holds a few past copy distances that will be used by */ /* some special distance codes. */ var dist_rb = [\n        16,\n        15,\n        11,\n        4\n    ];\n    var dist_rb_idx = 0;\n    /* The previous 2 bytes used for context. */ var prev_byte1 = 0;\n    var prev_byte2 = 0;\n    var hgroup = [\n        new $ee7f3d40128f729f$var$HuffmanTreeGroup(0, 0),\n        new $ee7f3d40128f729f$var$HuffmanTreeGroup(0, 0),\n        new $ee7f3d40128f729f$var$HuffmanTreeGroup(0, 0)\n    ];\n    var block_type_trees;\n    var block_len_trees;\n    var br;\n    /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */ var kRingBufferWriteAheadSlack = 128 + $8JSYM.READ_SIZE;\n    br = new $8JSYM(input);\n    /* Decode window size. */ window_bits = $ee7f3d40128f729f$var$DecodeWindowBits(br);\n    max_backward_distance = (1 << window_bits) - 16;\n    ringbuffer_size = 1 << window_bits;\n    ringbuffer_mask = ringbuffer_size - 1;\n    ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + $fo1rr.maxDictionaryWordLength);\n    ringbuffer_end = ringbuffer_size;\n    block_type_trees = [];\n    block_len_trees = [];\n    for(var x = 0; x < 3 * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE; x++){\n        block_type_trees[x] = new $ee7f3d40128f729f$require$HuffmanCode(0, 0);\n        block_len_trees[x] = new $ee7f3d40128f729f$require$HuffmanCode(0, 0);\n    }\n    while(!input_end){\n        var meta_block_remaining_len = 0;\n        var is_uncompressed;\n        var block_length = [\n            268435456,\n            268435456,\n            268435456\n        ];\n        var block_type = [\n            0\n        ];\n        var num_block_types = [\n            1,\n            1,\n            1\n        ];\n        var block_type_rb = [\n            0,\n            1,\n            0,\n            1,\n            0,\n            1\n        ];\n        var block_type_rb_index = [\n            0\n        ];\n        var distance_postfix_bits;\n        var num_direct_distance_codes;\n        var distance_postfix_mask;\n        var num_distance_codes;\n        var context_map = null;\n        var context_modes = null;\n        var num_literal_htrees;\n        var dist_context_map = null;\n        var num_dist_htrees;\n        var context_offset = 0;\n        var context_map_slice = null;\n        var literal_htree_index = 0;\n        var dist_context_offset = 0;\n        var dist_context_map_slice = null;\n        var dist_htree_index = 0;\n        var context_lookup_offset1 = 0;\n        var context_lookup_offset2 = 0;\n        var context_mode;\n        var htree_command;\n        for(i = 0; i < 3; ++i){\n            hgroup[i].codes = null;\n            hgroup[i].htrees = null;\n        }\n        br.readMoreInput();\n        var _out = $ee7f3d40128f729f$var$DecodeMetaBlockLength(br);\n        meta_block_remaining_len = _out.meta_block_length;\n        if (pos + meta_block_remaining_len > output.buffer.length) {\n            /* We need to grow the output buffer to fit the additional data. */ var tmp = new Uint8Array(pos + meta_block_remaining_len);\n            tmp.set(output.buffer);\n            output.buffer = tmp;\n        }\n        input_end = _out.input_end;\n        is_uncompressed = _out.is_uncompressed;\n        if (_out.is_metadata) {\n            $ee7f3d40128f729f$var$JumpToByteBoundary(br);\n            for(; meta_block_remaining_len > 0; --meta_block_remaining_len){\n                br.readMoreInput();\n                /* Read one byte and ignore it. */ br.readBits(8);\n            }\n            continue;\n        }\n        if (meta_block_remaining_len === 0) continue;\n        if (is_uncompressed) {\n            br.bit_pos_ = br.bit_pos_ + 7 & -8;\n            $ee7f3d40128f729f$var$CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos, ringbuffer, ringbuffer_mask, br);\n            pos += meta_block_remaining_len;\n            continue;\n        }\n        for(i = 0; i < 3; ++i){\n            num_block_types[i] = $ee7f3d40128f729f$var$DecodeVarLenUint8(br) + 1;\n            if (num_block_types[i] >= 2) {\n                $ee7f3d40128f729f$var$ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n                $ee7f3d40128f729f$var$ReadHuffmanCode($ee7f3d40128f729f$var$kNumBlockLengthCodes, block_len_trees, i * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n                block_length[i] = $ee7f3d40128f729f$var$ReadBlockLength(block_len_trees, i * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n                block_type_rb_index[i] = 1;\n            }\n        }\n        br.readMoreInput();\n        distance_postfix_bits = br.readBits(2);\n        num_direct_distance_codes = $ee7f3d40128f729f$var$NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n        distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n        num_distance_codes = num_direct_distance_codes + (48 << distance_postfix_bits);\n        context_modes = new Uint8Array(num_block_types[0]);\n        for(i = 0; i < num_block_types[0]; ++i){\n            br.readMoreInput();\n            context_modes[i] = br.readBits(2) << 1;\n        }\n        var _o1 = $ee7f3d40128f729f$var$DecodeContextMap(num_block_types[0] << $ee7f3d40128f729f$var$kLiteralContextBits, br);\n        num_literal_htrees = _o1.num_htrees;\n        context_map = _o1.context_map;\n        var _o2 = $ee7f3d40128f729f$var$DecodeContextMap(num_block_types[2] << $ee7f3d40128f729f$var$kDistanceContextBits, br);\n        num_dist_htrees = _o2.num_htrees;\n        dist_context_map = _o2.context_map;\n        hgroup[0] = new $ee7f3d40128f729f$var$HuffmanTreeGroup($ee7f3d40128f729f$var$kNumLiteralCodes, num_literal_htrees);\n        hgroup[1] = new $ee7f3d40128f729f$var$HuffmanTreeGroup($ee7f3d40128f729f$var$kNumInsertAndCopyCodes, num_block_types[1]);\n        hgroup[2] = new $ee7f3d40128f729f$var$HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n        for(i = 0; i < 3; ++i)hgroup[i].decode(br);\n        context_map_slice = 0;\n        dist_context_map_slice = 0;\n        context_mode = context_modes[block_type[0]];\n        context_lookup_offset1 = $hX8C6.lookupOffsets[context_mode];\n        context_lookup_offset2 = $hX8C6.lookupOffsets[context_mode + 1];\n        htree_command = hgroup[1].htrees[0];\n        while(meta_block_remaining_len > 0){\n            var cmd_code;\n            var range_idx;\n            var insert_code;\n            var copy_code;\n            var insert_length;\n            var copy_length;\n            var distance_code;\n            var distance;\n            var context;\n            var j;\n            var copy_dst;\n            br.readMoreInput();\n            if (block_length[1] === 0) {\n                $ee7f3d40128f729f$var$DecodeBlockType(num_block_types[1], block_type_trees, 1, block_type, block_type_rb, block_type_rb_index, br);\n                block_length[1] = $ee7f3d40128f729f$var$ReadBlockLength(block_len_trees, $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n                htree_command = hgroup[1].htrees[block_type[1]];\n            }\n            --block_length[1];\n            cmd_code = $ee7f3d40128f729f$var$ReadSymbol(hgroup[1].codes, htree_command, br);\n            range_idx = cmd_code >> 6;\n            if (range_idx >= 2) {\n                range_idx -= 2;\n                distance_code = -1;\n            } else distance_code = 0;\n            insert_code = $7aaiK.kInsertRangeLut[range_idx] + (cmd_code >> 3 & 7);\n            copy_code = $7aaiK.kCopyRangeLut[range_idx] + (cmd_code & 7);\n            insert_length = $7aaiK.kInsertLengthPrefixCode[insert_code].offset + br.readBits($7aaiK.kInsertLengthPrefixCode[insert_code].nbits);\n            copy_length = $7aaiK.kCopyLengthPrefixCode[copy_code].offset + br.readBits($7aaiK.kCopyLengthPrefixCode[copy_code].nbits);\n            prev_byte1 = ringbuffer[pos - 1 & ringbuffer_mask];\n            prev_byte2 = ringbuffer[pos - 2 & ringbuffer_mask];\n            for(j = 0; j < insert_length; ++j){\n                br.readMoreInput();\n                if (block_length[0] === 0) {\n                    $ee7f3d40128f729f$var$DecodeBlockType(num_block_types[0], block_type_trees, 0, block_type, block_type_rb, block_type_rb_index, br);\n                    block_length[0] = $ee7f3d40128f729f$var$ReadBlockLength(block_len_trees, 0, br);\n                    context_offset = block_type[0] << $ee7f3d40128f729f$var$kLiteralContextBits;\n                    context_map_slice = context_offset;\n                    context_mode = context_modes[block_type[0]];\n                    context_lookup_offset1 = $hX8C6.lookupOffsets[context_mode];\n                    context_lookup_offset2 = $hX8C6.lookupOffsets[context_mode + 1];\n                }\n                context = $hX8C6.lookup[context_lookup_offset1 + prev_byte1] | $hX8C6.lookup[context_lookup_offset2 + prev_byte2];\n                literal_htree_index = context_map[context_map_slice + context];\n                --block_length[0];\n                prev_byte2 = prev_byte1;\n                prev_byte1 = $ee7f3d40128f729f$var$ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n                ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n                if ((pos & ringbuffer_mask) === ringbuffer_mask) output.write(ringbuffer, ringbuffer_size);\n                ++pos;\n            }\n            meta_block_remaining_len -= insert_length;\n            if (meta_block_remaining_len <= 0) break;\n            if (distance_code < 0) {\n                var context;\n                br.readMoreInput();\n                if (block_length[2] === 0) {\n                    $ee7f3d40128f729f$var$DecodeBlockType(num_block_types[2], block_type_trees, 2, block_type, block_type_rb, block_type_rb_index, br);\n                    block_length[2] = $ee7f3d40128f729f$var$ReadBlockLength(block_len_trees, 2 * $ee7f3d40128f729f$var$HUFFMAN_MAX_TABLE_SIZE, br);\n                    dist_context_offset = block_type[2] << $ee7f3d40128f729f$var$kDistanceContextBits;\n                    dist_context_map_slice = dist_context_offset;\n                }\n                --block_length[2];\n                context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n                dist_htree_index = dist_context_map[dist_context_map_slice + context];\n                distance_code = $ee7f3d40128f729f$var$ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n                if (distance_code >= num_direct_distance_codes) {\n                    var nbits;\n                    var postfix;\n                    var offset;\n                    distance_code -= num_direct_distance_codes;\n                    postfix = distance_code & distance_postfix_mask;\n                    distance_code >>= distance_postfix_bits;\n                    nbits = (distance_code >> 1) + 1;\n                    offset = (2 + (distance_code & 1) << nbits) - 4;\n                    distance_code = num_direct_distance_codes + (offset + br.readBits(nbits) << distance_postfix_bits) + postfix;\n                }\n            }\n            /* Convert the distance code to the actual distance by possibly looking */ /* up past distnaces from the ringbuffer. */ distance = $ee7f3d40128f729f$var$TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n            if (distance < 0) throw new Error(\"[BrotliDecompress] invalid distance\");\n            if (pos < max_backward_distance && max_distance !== max_backward_distance) max_distance = pos;\n            else max_distance = max_backward_distance;\n            copy_dst = pos & ringbuffer_mask;\n            if (distance > max_distance) {\n                if (copy_length >= $fo1rr.minDictionaryWordLength && copy_length <= $fo1rr.maxDictionaryWordLength) {\n                    var offset = $fo1rr.offsetsByLength[copy_length];\n                    var word_id = distance - max_distance - 1;\n                    var shift = $fo1rr.sizeBitsByLength[copy_length];\n                    var mask = (1 << shift) - 1;\n                    var word_idx = word_id & mask;\n                    var transform_idx = word_id >> shift;\n                    offset += word_idx * copy_length;\n                    if (transform_idx < $4zIc9.kNumTransforms) {\n                        var len = $4zIc9.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n                        copy_dst += len;\n                        pos += len;\n                        meta_block_remaining_len -= len;\n                        if (copy_dst >= ringbuffer_end) {\n                            output.write(ringbuffer, ringbuffer_size);\n                            for(var _x = 0; _x < copy_dst - ringbuffer_end; _x++)ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n                        }\n                    } else throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance + \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n                } else throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance + \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n            } else {\n                if (distance_code > 0) {\n                    dist_rb[dist_rb_idx & 3] = distance;\n                    ++dist_rb_idx;\n                }\n                if (copy_length > meta_block_remaining_len) throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance + \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n                for(j = 0; j < copy_length; ++j){\n                    ringbuffer[pos & ringbuffer_mask] = ringbuffer[pos - distance & ringbuffer_mask];\n                    if ((pos & ringbuffer_mask) === ringbuffer_mask) output.write(ringbuffer, ringbuffer_size);\n                    ++pos;\n                    --meta_block_remaining_len;\n                }\n            }\n            /* When we get here, we must have inserted at least one literal and */ /* made a copy of at least length two, therefore accessing the last 2 */ /* bytes is valid. */ prev_byte1 = ringbuffer[pos - 1 & ringbuffer_mask];\n            prev_byte2 = ringbuffer[pos - 2 & ringbuffer_mask];\n        }\n        /* Protect pos from overflow, wrap it around at every GB of input data */ pos &= 0x3fffffff;\n    }\n    output.write(ringbuffer, pos & ringbuffer_mask);\n}\n$ee7f3d40128f729f$export$59cbf0b8eef2df1e = $ee7f3d40128f729f$var$BrotliDecompress;\n$fo1rr.init();\n\n});\nparcelRequire.register(\"j5sEj\", function(module, exports) {\n\n$parcel$export(module.exports, \"BrotliInput\", () => $de54b50f360309a7$export$a450e20310cb640a, (v) => $de54b50f360309a7$export$a450e20310cb640a = v);\n$parcel$export(module.exports, \"BrotliOutput\", () => $de54b50f360309a7$export$29d67bcb1d627ed0, (v) => $de54b50f360309a7$export$29d67bcb1d627ed0 = v);\nvar $de54b50f360309a7$export$a450e20310cb640a;\nvar $de54b50f360309a7$export$29d67bcb1d627ed0;\nfunction $de54b50f360309a7$var$BrotliInput(buffer) {\n    this.buffer = buffer;\n    this.pos = 0;\n}\n$de54b50f360309a7$var$BrotliInput.prototype.read = function(buf, i, count) {\n    if (this.pos + count > this.buffer.length) count = this.buffer.length - this.pos;\n    for(var p = 0; p < count; p++)buf[i + p] = this.buffer[this.pos + p];\n    this.pos += count;\n    return count;\n};\n$de54b50f360309a7$export$a450e20310cb640a = $de54b50f360309a7$var$BrotliInput;\nfunction $de54b50f360309a7$var$BrotliOutput(buf) {\n    this.buffer = buf;\n    this.pos = 0;\n}\n$de54b50f360309a7$var$BrotliOutput.prototype.write = function(buf, count) {\n    if (this.pos + count > this.buffer.length) throw new Error(\"Output buffer is not large enough\");\n    this.buffer.set(buf.subarray(0, count), this.pos);\n    this.pos += count;\n    return count;\n};\n$de54b50f360309a7$export$29d67bcb1d627ed0 = $de54b50f360309a7$var$BrotliOutput;\n\n});\n\nparcelRequire.register(\"8JSYM\", function(module, exports) {\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Bit reading helpers\n*/ var $65cd2c782f23ca03$var$BROTLI_READ_SIZE = 4096;\nvar $65cd2c782f23ca03$var$BROTLI_IBUF_SIZE = 2 * $65cd2c782f23ca03$var$BROTLI_READ_SIZE + 32;\nvar $65cd2c782f23ca03$var$BROTLI_IBUF_MASK = 2 * $65cd2c782f23ca03$var$BROTLI_READ_SIZE - 1;\nvar $65cd2c782f23ca03$var$kBitMask = new Uint32Array([\n    0,\n    1,\n    3,\n    7,\n    15,\n    31,\n    63,\n    127,\n    255,\n    511,\n    1023,\n    2047,\n    4095,\n    8191,\n    16383,\n    32767,\n    65535,\n    131071,\n    262143,\n    524287,\n    1048575,\n    2097151,\n    4194303,\n    8388607,\n    16777215\n]);\n/* Input byte buffer, consist of a ringbuffer and a \"slack\" region where */ /* bytes from the start of the ringbuffer are copied. */ function $65cd2c782f23ca03$var$BrotliBitReader(input) {\n    this.buf_ = new Uint8Array($65cd2c782f23ca03$var$BROTLI_IBUF_SIZE);\n    this.input_ = input; /* input callback */ \n    this.reset();\n}\n$65cd2c782f23ca03$var$BrotliBitReader.READ_SIZE = $65cd2c782f23ca03$var$BROTLI_READ_SIZE;\n$65cd2c782f23ca03$var$BrotliBitReader.IBUF_MASK = $65cd2c782f23ca03$var$BROTLI_IBUF_MASK;\n$65cd2c782f23ca03$var$BrotliBitReader.prototype.reset = function() {\n    this.buf_ptr_ = 0; /* next input will write here */ \n    this.val_ = 0; /* pre-fetched bits */ \n    this.pos_ = 0; /* byte position in stream */ \n    this.bit_pos_ = 0; /* current bit-reading position in val_ */ \n    this.bit_end_pos_ = 0; /* bit-reading end position from LSB of val_ */ \n    this.eos_ = 0; /* input stream is finished */ \n    this.readMoreInput();\n    for(var i = 0; i < 4; i++){\n        this.val_ |= this.buf_[this.pos_] << 8 * i;\n        ++this.pos_;\n    }\n    return this.bit_end_pos_ > 0;\n};\n/* Fills up the input ringbuffer by calling the input callback.\n\n   Does nothing if there are at least 32 bytes present after current position.\n\n   Returns 0 if either:\n    - the input callback returned an error, or\n    - there is no more input and the position is past the end of the stream.\n\n   After encountering the end of the input stream, 32 additional zero bytes are\n   copied to the ringbuffer, therefore it is safe to call this function after\n   every 32 bytes of input is read.\n*/ $65cd2c782f23ca03$var$BrotliBitReader.prototype.readMoreInput = function() {\n    if (this.bit_end_pos_ > 256) return;\n    else if (this.eos_) {\n        if (this.bit_pos_ > this.bit_end_pos_) throw new Error(\"Unexpected end of input \" + this.bit_pos_ + \" \" + this.bit_end_pos_);\n    } else {\n        var dst = this.buf_ptr_;\n        var bytes_read = this.input_.read(this.buf_, dst, $65cd2c782f23ca03$var$BROTLI_READ_SIZE);\n        if (bytes_read < 0) throw new Error(\"Unexpected end of input\");\n        if (bytes_read < $65cd2c782f23ca03$var$BROTLI_READ_SIZE) {\n            this.eos_ = 1;\n            /* Store 32 bytes of zero after the stream end. */ for(var p = 0; p < 32; p++)this.buf_[dst + bytes_read + p] = 0;\n        }\n        if (dst === 0) {\n            /* Copy the head of the ringbuffer to the slack region. */ for(var p = 0; p < 32; p++)this.buf_[($65cd2c782f23ca03$var$BROTLI_READ_SIZE << 1) + p] = this.buf_[p];\n            this.buf_ptr_ = $65cd2c782f23ca03$var$BROTLI_READ_SIZE;\n        } else this.buf_ptr_ = 0;\n        this.bit_end_pos_ += bytes_read << 3;\n    }\n};\n/* Guarantees that there are at least 24 bits in the buffer. */ $65cd2c782f23ca03$var$BrotliBitReader.prototype.fillBitWindow = function() {\n    while(this.bit_pos_ >= 8){\n        this.val_ >>>= 8;\n        this.val_ |= this.buf_[this.pos_ & $65cd2c782f23ca03$var$BROTLI_IBUF_MASK] << 24;\n        ++this.pos_;\n        this.bit_pos_ = this.bit_pos_ - 8 >>> 0;\n        this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;\n    }\n};\n/* Reads the specified number of bits from Read Buffer. */ $65cd2c782f23ca03$var$BrotliBitReader.prototype.readBits = function(n_bits) {\n    if (32 - this.bit_pos_ < n_bits) this.fillBitWindow();\n    var val = this.val_ >>> this.bit_pos_ & $65cd2c782f23ca03$var$kBitMask[n_bits];\n    this.bit_pos_ += n_bits;\n    return val;\n};\nmodule.exports = $65cd2c782f23ca03$var$BrotliBitReader;\n\n});\n\nparcelRequire.register(\"fo1rr\", function(module, exports) {\n\n$parcel$export(module.exports, \"init\", () => $b33a37285e850206$export$2cd8252107eb640b, (v) => $b33a37285e850206$export$2cd8252107eb640b = v);\n$parcel$export(module.exports, \"dictionary\", () => $b33a37285e850206$export$d3757880ed390b62, (v) => $b33a37285e850206$export$d3757880ed390b62 = v);\n$parcel$export(module.exports, \"offsetsByLength\", () => $b33a37285e850206$export$a94670ba663785a0, (v) => $b33a37285e850206$export$a94670ba663785a0 = v);\n$parcel$export(module.exports, \"sizeBitsByLength\", () => $b33a37285e850206$export$149ef025c336056f, (v) => $b33a37285e850206$export$149ef025c336056f = v);\n$parcel$export(module.exports, \"minDictionaryWordLength\", () => $b33a37285e850206$export$66b25e7ba93e8824, (v) => $b33a37285e850206$export$66b25e7ba93e8824 = v);\n$parcel$export(module.exports, \"maxDictionaryWordLength\", () => $b33a37285e850206$export$2ce04c23045f1c32, (v) => $b33a37285e850206$export$2ce04c23045f1c32 = v);\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Collection of static dictionary words.\n*/ var $b33a37285e850206$export$2cd8252107eb640b;\nvar $b33a37285e850206$export$d3757880ed390b62;\nvar $b33a37285e850206$export$a94670ba663785a0;\nvar $b33a37285e850206$export$149ef025c336056f;\nvar $b33a37285e850206$export$66b25e7ba93e8824;\nvar $b33a37285e850206$export$2ce04c23045f1c32;\n\nvar $uI49e = parcelRequire(\"uI49e\");\n$b33a37285e850206$export$2cd8252107eb640b = function() {\n    $b33a37285e850206$export$d3757880ed390b62 = $uI49e.init();\n};\n$b33a37285e850206$export$a94670ba663785a0 = new Uint32Array([\n    0,\n    0,\n    0,\n    0,\n    0,\n    4096,\n    9216,\n    21504,\n    35840,\n    44032,\n    53248,\n    63488,\n    74752,\n    87040,\n    93696,\n    100864,\n    104704,\n    106752,\n    108928,\n    113536,\n    115968,\n    118528,\n    119872,\n    121280,\n    122016\n]);\n$b33a37285e850206$export$149ef025c336056f = new Uint8Array([\n    0,\n    0,\n    0,\n    0,\n    10,\n    10,\n    11,\n    11,\n    10,\n    10,\n    10,\n    10,\n    10,\n    9,\n    9,\n    8,\n    7,\n    7,\n    8,\n    7,\n    7,\n    6,\n    6,\n    5,\n    5\n]);\n$b33a37285e850206$export$66b25e7ba93e8824 = 4;\n$b33a37285e850206$export$2ce04c23045f1c32 = 24;\n\n});\nparcelRequire.register(\"uI49e\", function(module, exports) {\n\n$parcel$export(module.exports, \"init\", () => $05c4fc06ecec7c4f$export$2cd8252107eb640b, (v) => $05c4fc06ecec7c4f$export$2cd8252107eb640b = v);\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. 😜\n */ var $05c4fc06ecec7c4f$export$2cd8252107eb640b;\n\nvar $kuxul = parcelRequire(\"kuxul\");\n\n\n$05c4fc06ecec7c4f$export$2cd8252107eb640b = function() {\n    var BrotliDecompressBuffer = (parcelRequire(\"ktvS8\")).BrotliDecompressBuffer;\n    var compressed = $kuxul.toByteArray((parcelRequire(\"3Cq5K\")));\n    return BrotliDecompressBuffer(compressed);\n};\n\n});\nparcelRequire.register(\"kuxul\", function(module, exports) {\n\n$parcel$export(module.exports, \"byteLength\", () => $eeb0961446aae8e3$export$a48f0734ac7c2329, (v) => $eeb0961446aae8e3$export$a48f0734ac7c2329 = v);\n$parcel$export(module.exports, \"toByteArray\", () => $eeb0961446aae8e3$export$d622b2ad8d90c771, (v) => $eeb0961446aae8e3$export$d622b2ad8d90c771 = v);\n$parcel$export(module.exports, \"fromByteArray\", () => $eeb0961446aae8e3$export$6100ba28696e12de, (v) => $eeb0961446aae8e3$export$6100ba28696e12de = v);\nvar $eeb0961446aae8e3$export$a48f0734ac7c2329;\nvar $eeb0961446aae8e3$export$d622b2ad8d90c771;\nvar $eeb0961446aae8e3$export$6100ba28696e12de;\n\"use strict\";\n$eeb0961446aae8e3$export$a48f0734ac7c2329 = $eeb0961446aae8e3$var$byteLength;\n$eeb0961446aae8e3$export$d622b2ad8d90c771 = $eeb0961446aae8e3$var$toByteArray;\n$eeb0961446aae8e3$export$6100ba28696e12de = $eeb0961446aae8e3$var$fromByteArray;\nvar $eeb0961446aae8e3$var$lookup = [];\nvar $eeb0961446aae8e3$var$revLookup = [];\nvar $eeb0961446aae8e3$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $eeb0961446aae8e3$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $eeb0961446aae8e3$var$i = 0, $eeb0961446aae8e3$var$len = $eeb0961446aae8e3$var$code.length; $eeb0961446aae8e3$var$i < $eeb0961446aae8e3$var$len; ++$eeb0961446aae8e3$var$i){\n    $eeb0961446aae8e3$var$lookup[$eeb0961446aae8e3$var$i] = $eeb0961446aae8e3$var$code[$eeb0961446aae8e3$var$i];\n    $eeb0961446aae8e3$var$revLookup[$eeb0961446aae8e3$var$code.charCodeAt($eeb0961446aae8e3$var$i)] = $eeb0961446aae8e3$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$eeb0961446aae8e3$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$eeb0961446aae8e3$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $eeb0961446aae8e3$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $eeb0961446aae8e3$var$byteLength(b64) {\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$toByteArray(b64) {\n    var tmp;\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $eeb0961446aae8e3$var$Arr($eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 18 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 2 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 10 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $eeb0961446aae8e3$var$tripletToBase64(num) {\n    return $eeb0961446aae8e3$var$lookup[num >> 18 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 12 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 6 & 0x3F] + $eeb0961446aae8e3$var$lookup[num & 0x3F];\n}\nfunction $eeb0961446aae8e3$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($eeb0961446aae8e3$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $eeb0961446aae8e3$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($eeb0961446aae8e3$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 2] + $eeb0961446aae8e3$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 10] + $eeb0961446aae8e3$var$lookup[tmp >> 4 & 0x3F] + $eeb0961446aae8e3$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n});\n\nparcelRequire.register(\"3Cq5K\", function(module, exports) {\nmodule.exports = \"\";\n\n});\n\n\n\nparcelRequire.register(\"kls9x\", function(module, exports) {\n\n$parcel$export(module.exports, \"HuffmanCode\", () => $ecfb9b5b3306a38a$export$209a3d84f3357583, (v) => $ecfb9b5b3306a38a$export$209a3d84f3357583 = v);\n$parcel$export(module.exports, \"BrotliBuildHuffmanTable\", () => $ecfb9b5b3306a38a$export$8a58ff2090e8dcda, (v) => $ecfb9b5b3306a38a$export$8a58ff2090e8dcda = v);\nvar $ecfb9b5b3306a38a$export$209a3d84f3357583;\nvar $ecfb9b5b3306a38a$export$8a58ff2090e8dcda;\nfunction $ecfb9b5b3306a38a$var$HuffmanCode(bits, value) {\n    this.bits = bits; /* number of bits used for this symbol */ \n    this.value = value; /* symbol value or table offset */ \n}\n$ecfb9b5b3306a38a$export$209a3d84f3357583 = $ecfb9b5b3306a38a$var$HuffmanCode;\nvar $ecfb9b5b3306a38a$var$MAX_LENGTH = 15;\n/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the\n   bit-wise reversal of the len least significant bits of key. */ function $ecfb9b5b3306a38a$var$GetNextKey(key, len) {\n    var step = 1 << len - 1;\n    while(key & step)step >>= 1;\n    return (key & step - 1) + step;\n}\n/* Stores code in table[0], table[step], table[2*step], ..., table[end] */ /* Assumes that end is an integer multiple of step */ function $ecfb9b5b3306a38a$var$ReplicateValue(table, i, step, end, code) {\n    do {\n        end -= step;\n        table[i + end] = new $ecfb9b5b3306a38a$var$HuffmanCode(code.bits, code.value);\n    }while (end > 0);\n}\n/* Returns the table width of the next 2nd level table. count is the histogram\n   of bit lengths for the remaining symbols, len is the code length of the next\n   processed symbol */ function $ecfb9b5b3306a38a$var$NextTableBitSize(count, len, root_bits) {\n    var left = 1 << len - root_bits;\n    while(len < $ecfb9b5b3306a38a$var$MAX_LENGTH){\n        left -= count[len];\n        if (left <= 0) break;\n        ++len;\n        left <<= 1;\n    }\n    return len - root_bits;\n}\n$ecfb9b5b3306a38a$export$8a58ff2090e8dcda = function(root_table, table, root_bits, code_lengths, code_lengths_size) {\n    var start_table = table;\n    var code; /* current table entry */ \n    var len; /* current code length */ \n    var symbol; /* symbol index in original or sorted table */ \n    var key; /* reversed prefix code */ \n    var step; /* step size to replicate values in current table */ \n    var low; /* low bits for current root entry */ \n    var mask; /* mask for low bits */ \n    var table_bits; /* key length of current table */ \n    var table_size; /* size of current table */ \n    var total_size; /* sum of root table size and 2nd level table sizes */ \n    var sorted; /* symbols sorted by code length */ \n    var count = new Int32Array($ecfb9b5b3306a38a$var$MAX_LENGTH + 1); /* number of codes of each length */ \n    var offset = new Int32Array($ecfb9b5b3306a38a$var$MAX_LENGTH + 1); /* offsets in sorted table for each length */ \n    sorted = new Int32Array(code_lengths_size);\n    /* build histogram of code lengths */ for(symbol = 0; symbol < code_lengths_size; symbol++)count[code_lengths[symbol]]++;\n    /* generate offsets into sorted symbol table by code length */ offset[1] = 0;\n    for(len = 1; len < $ecfb9b5b3306a38a$var$MAX_LENGTH; len++)offset[len + 1] = offset[len] + count[len];\n    /* sort symbols by length, by symbol order within each length */ for(symbol = 0; symbol < code_lengths_size; symbol++)if (code_lengths[symbol] !== 0) sorted[offset[code_lengths[symbol]]++] = symbol;\n    table_bits = root_bits;\n    table_size = 1 << table_bits;\n    total_size = table_size;\n    /* special case code with only one value */ if (offset[$ecfb9b5b3306a38a$var$MAX_LENGTH] === 1) {\n        for(key = 0; key < total_size; ++key)root_table[table + key] = new $ecfb9b5b3306a38a$var$HuffmanCode(0, sorted[0] & 0xffff);\n        return total_size;\n    }\n    /* fill in root table */ key = 0;\n    symbol = 0;\n    for(len = 1, step = 2; len <= root_bits; ++len, step <<= 1)for(; count[len] > 0; --count[len]){\n        code = new $ecfb9b5b3306a38a$var$HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);\n        $ecfb9b5b3306a38a$var$ReplicateValue(root_table, table + key, step, table_size, code);\n        key = $ecfb9b5b3306a38a$var$GetNextKey(key, len);\n    }\n    /* fill in 2nd level tables and add pointers to root table */ mask = total_size - 1;\n    low = -1;\n    for(len = root_bits + 1, step = 2; len <= $ecfb9b5b3306a38a$var$MAX_LENGTH; ++len, step <<= 1)for(; count[len] > 0; --count[len]){\n        if ((key & mask) !== low) {\n            table += table_size;\n            table_bits = $ecfb9b5b3306a38a$var$NextTableBitSize(count, len, root_bits);\n            table_size = 1 << table_bits;\n            total_size += table_size;\n            low = key & mask;\n            root_table[start_table + low] = new $ecfb9b5b3306a38a$var$HuffmanCode(table_bits + root_bits & 0xff, table - start_table - low & 0xffff);\n        }\n        code = new $ecfb9b5b3306a38a$var$HuffmanCode(len - root_bits & 0xff, sorted[symbol++] & 0xffff);\n        $ecfb9b5b3306a38a$var$ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);\n        key = $ecfb9b5b3306a38a$var$GetNextKey(key, len);\n    }\n    return total_size;\n};\n\n});\n\nparcelRequire.register(\"hX8C6\", function(module, exports) {\n\n$parcel$export(module.exports, \"lookup\", () => $d11ea0ce95d3ac2c$export$dfc7155ac0343b8, (v) => $d11ea0ce95d3ac2c$export$dfc7155ac0343b8 = v);\n$parcel$export(module.exports, \"lookupOffsets\", () => $d11ea0ce95d3ac2c$export$cc8d42455ae4ca5e, (v) => $d11ea0ce95d3ac2c$export$cc8d42455ae4ca5e = v);\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/ /* Common context lookup table for all context modes. */ var $d11ea0ce95d3ac2c$export$dfc7155ac0343b8;\nvar $d11ea0ce95d3ac2c$export$cc8d42455ae4ca5e;\nvar $d11ea0ce95d3ac2c$var$CONTEXT_LSB6 = 0;\nvar $d11ea0ce95d3ac2c$var$CONTEXT_MSB6 = 1;\nvar $d11ea0ce95d3ac2c$var$CONTEXT_UTF8 = 2;\nvar $d11ea0ce95d3ac2c$var$CONTEXT_SIGNED = 3;\n$d11ea0ce95d3ac2c$export$dfc7155ac0343b8 = new Uint8Array([\n    /* CONTEXT_UTF8, last byte. */ /* ASCII range. */ 0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    4,\n    4,\n    0,\n    0,\n    4,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    8,\n    12,\n    16,\n    12,\n    12,\n    20,\n    12,\n    16,\n    24,\n    28,\n    12,\n    12,\n    32,\n    12,\n    36,\n    12,\n    44,\n    44,\n    44,\n    44,\n    44,\n    44,\n    44,\n    44,\n    44,\n    44,\n    32,\n    32,\n    24,\n    40,\n    28,\n    12,\n    12,\n    48,\n    52,\n    52,\n    52,\n    48,\n    52,\n    52,\n    52,\n    48,\n    52,\n    52,\n    52,\n    52,\n    52,\n    48,\n    52,\n    52,\n    52,\n    52,\n    52,\n    48,\n    52,\n    52,\n    52,\n    52,\n    52,\n    24,\n    12,\n    28,\n    12,\n    12,\n    12,\n    56,\n    60,\n    60,\n    60,\n    56,\n    60,\n    60,\n    60,\n    56,\n    60,\n    60,\n    60,\n    60,\n    60,\n    56,\n    60,\n    60,\n    60,\n    60,\n    60,\n    56,\n    60,\n    60,\n    60,\n    60,\n    60,\n    24,\n    12,\n    28,\n    12,\n    0,\n    /* UTF8 continuation byte range. */ 0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0,\n    1,\n    /* UTF8 lead byte range. */ 2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    2,\n    3,\n    /* CONTEXT_UTF8 second last byte. */ /* ASCII range. */ 0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    1,\n    1,\n    1,\n    1,\n    0,\n    /* UTF8 continuation byte range. */ 0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    /* UTF8 lead byte range. */ 0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    /* CONTEXT_SIGNED, second last byte. */ 0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    5,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    6,\n    7,\n    /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */ 0,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    8,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    40,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    48,\n    56,\n    /* CONTEXT_LSB6, last byte. */ 0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    /* CONTEXT_MSB6, last byte. */ 0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    6,\n    6,\n    6,\n    6,\n    7,\n    7,\n    7,\n    7,\n    8,\n    8,\n    8,\n    8,\n    9,\n    9,\n    9,\n    9,\n    10,\n    10,\n    10,\n    10,\n    11,\n    11,\n    11,\n    11,\n    12,\n    12,\n    12,\n    12,\n    13,\n    13,\n    13,\n    13,\n    14,\n    14,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    25,\n    25,\n    25,\n    25,\n    26,\n    26,\n    26,\n    26,\n    27,\n    27,\n    27,\n    27,\n    28,\n    28,\n    28,\n    28,\n    29,\n    29,\n    29,\n    29,\n    30,\n    30,\n    30,\n    30,\n    31,\n    31,\n    31,\n    31,\n    32,\n    32,\n    32,\n    32,\n    33,\n    33,\n    33,\n    33,\n    34,\n    34,\n    34,\n    34,\n    35,\n    35,\n    35,\n    35,\n    36,\n    36,\n    36,\n    36,\n    37,\n    37,\n    37,\n    37,\n    38,\n    38,\n    38,\n    38,\n    39,\n    39,\n    39,\n    39,\n    40,\n    40,\n    40,\n    40,\n    41,\n    41,\n    41,\n    41,\n    42,\n    42,\n    42,\n    42,\n    43,\n    43,\n    43,\n    43,\n    44,\n    44,\n    44,\n    44,\n    45,\n    45,\n    45,\n    45,\n    46,\n    46,\n    46,\n    46,\n    47,\n    47,\n    47,\n    47,\n    48,\n    48,\n    48,\n    48,\n    49,\n    49,\n    49,\n    49,\n    50,\n    50,\n    50,\n    50,\n    51,\n    51,\n    51,\n    51,\n    52,\n    52,\n    52,\n    52,\n    53,\n    53,\n    53,\n    53,\n    54,\n    54,\n    54,\n    54,\n    55,\n    55,\n    55,\n    55,\n    56,\n    56,\n    56,\n    56,\n    57,\n    57,\n    57,\n    57,\n    58,\n    58,\n    58,\n    58,\n    59,\n    59,\n    59,\n    59,\n    60,\n    60,\n    60,\n    60,\n    61,\n    61,\n    61,\n    61,\n    62,\n    62,\n    62,\n    62,\n    63,\n    63,\n    63,\n    63,\n    /* CONTEXT_{M,L}SB6, second last byte, */ 0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n]);\n$d11ea0ce95d3ac2c$export$cc8d42455ae4ca5e = new Uint16Array([\n    /* CONTEXT_LSB6 */ 1024,\n    1536,\n    /* CONTEXT_MSB6 */ 1280,\n    1536,\n    /* CONTEXT_UTF8 */ 0,\n    256,\n    /* CONTEXT_SIGNED */ 768,\n    512\n]);\n\n});\n\nparcelRequire.register(\"7aaiK\", function(module, exports) {\n\n$parcel$export(module.exports, \"kBlockLengthPrefixCode\", () => $5371753d531ab78c$export$6e6a061a64eda771, (v) => $5371753d531ab78c$export$6e6a061a64eda771 = v);\n$parcel$export(module.exports, \"kInsertLengthPrefixCode\", () => $5371753d531ab78c$export$62ffb848600e90dd, (v) => $5371753d531ab78c$export$62ffb848600e90dd = v);\n$parcel$export(module.exports, \"kCopyLengthPrefixCode\", () => $5371753d531ab78c$export$cc7c44d8afc93b69, (v) => $5371753d531ab78c$export$cc7c44d8afc93b69 = v);\n$parcel$export(module.exports, \"kInsertRangeLut\", () => $5371753d531ab78c$export$91c779240ecfdaca, (v) => $5371753d531ab78c$export$91c779240ecfdaca = v);\n$parcel$export(module.exports, \"kCopyRangeLut\", () => $5371753d531ab78c$export$c243b934bf41e980, (v) => $5371753d531ab78c$export$c243b934bf41e980 = v);\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup tables to map prefix codes to value ranges. This is used during\n   decoding of the block lengths, literal insertion lengths and copy lengths.\n*/ /* Represents the range of values belonging to a prefix code: */ /* [offset, offset + 2^nbits) */ var $5371753d531ab78c$export$6e6a061a64eda771;\nvar $5371753d531ab78c$export$62ffb848600e90dd;\nvar $5371753d531ab78c$export$cc7c44d8afc93b69;\nvar $5371753d531ab78c$export$91c779240ecfdaca;\nvar $5371753d531ab78c$export$c243b934bf41e980;\nfunction $5371753d531ab78c$var$PrefixCodeRange(offset, nbits) {\n    this.offset = offset;\n    this.nbits = nbits;\n}\n$5371753d531ab78c$export$6e6a061a64eda771 = [\n    new $5371753d531ab78c$var$PrefixCodeRange(1, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(5, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(9, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(13, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(17, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(25, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(33, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(41, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(49, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(65, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(81, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(97, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(113, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(145, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(177, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(209, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(241, 6),\n    new $5371753d531ab78c$var$PrefixCodeRange(305, 6),\n    new $5371753d531ab78c$var$PrefixCodeRange(369, 7),\n    new $5371753d531ab78c$var$PrefixCodeRange(497, 8),\n    new $5371753d531ab78c$var$PrefixCodeRange(753, 9),\n    new $5371753d531ab78c$var$PrefixCodeRange(1265, 10),\n    new $5371753d531ab78c$var$PrefixCodeRange(2289, 11),\n    new $5371753d531ab78c$var$PrefixCodeRange(4337, 12),\n    new $5371753d531ab78c$var$PrefixCodeRange(8433, 13),\n    new $5371753d531ab78c$var$PrefixCodeRange(16625, 24)\n];\n$5371753d531ab78c$export$62ffb848600e90dd = [\n    new $5371753d531ab78c$var$PrefixCodeRange(0, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(1, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(2, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(3, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(4, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(5, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(6, 1),\n    new $5371753d531ab78c$var$PrefixCodeRange(8, 1),\n    new $5371753d531ab78c$var$PrefixCodeRange(10, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(14, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(18, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(26, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(34, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(50, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(66, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(98, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(130, 6),\n    new $5371753d531ab78c$var$PrefixCodeRange(194, 7),\n    new $5371753d531ab78c$var$PrefixCodeRange(322, 8),\n    new $5371753d531ab78c$var$PrefixCodeRange(578, 9),\n    new $5371753d531ab78c$var$PrefixCodeRange(1090, 10),\n    new $5371753d531ab78c$var$PrefixCodeRange(2114, 12),\n    new $5371753d531ab78c$var$PrefixCodeRange(6210, 14),\n    new $5371753d531ab78c$var$PrefixCodeRange(22594, 24)\n];\n$5371753d531ab78c$export$cc7c44d8afc93b69 = [\n    new $5371753d531ab78c$var$PrefixCodeRange(2, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(3, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(4, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(5, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(6, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(7, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(8, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(9, 0),\n    new $5371753d531ab78c$var$PrefixCodeRange(10, 1),\n    new $5371753d531ab78c$var$PrefixCodeRange(12, 1),\n    new $5371753d531ab78c$var$PrefixCodeRange(14, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(18, 2),\n    new $5371753d531ab78c$var$PrefixCodeRange(22, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(30, 3),\n    new $5371753d531ab78c$var$PrefixCodeRange(38, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(54, 4),\n    new $5371753d531ab78c$var$PrefixCodeRange(70, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(102, 5),\n    new $5371753d531ab78c$var$PrefixCodeRange(134, 6),\n    new $5371753d531ab78c$var$PrefixCodeRange(198, 7),\n    new $5371753d531ab78c$var$PrefixCodeRange(326, 8),\n    new $5371753d531ab78c$var$PrefixCodeRange(582, 9),\n    new $5371753d531ab78c$var$PrefixCodeRange(1094, 10),\n    new $5371753d531ab78c$var$PrefixCodeRange(2118, 24)\n];\n$5371753d531ab78c$export$91c779240ecfdaca = [\n    0,\n    0,\n    8,\n    8,\n    0,\n    16,\n    8,\n    16,\n    16\n];\n$5371753d531ab78c$export$c243b934bf41e980 = [\n    0,\n    8,\n    0,\n    8,\n    16,\n    0,\n    16,\n    8,\n    16\n];\n\n});\n\nparcelRequire.register(\"4zIc9\", function(module, exports) {\n\n$parcel$export(module.exports, \"kNumTransforms\", () => $354cb680e66e788a$export$5d2d653c67838a2, (v) => $354cb680e66e788a$export$5d2d653c67838a2 = v);\n$parcel$export(module.exports, \"transformDictionaryWord\", () => $354cb680e66e788a$export$8cfa5a6f89d017bb, (v) => $354cb680e66e788a$export$8cfa5a6f89d017bb = v);\n/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/ var $354cb680e66e788a$export$4898d75d9d9d305c;\nvar $354cb680e66e788a$export$5d2d653c67838a2;\nvar $354cb680e66e788a$export$8cfa5a6f89d017bb;\n\nvar $fo1rr = parcelRequire(\"fo1rr\");\nvar $354cb680e66e788a$var$kIdentity = 0;\nvar $354cb680e66e788a$var$kOmitLast1 = 1;\nvar $354cb680e66e788a$var$kOmitLast2 = 2;\nvar $354cb680e66e788a$var$kOmitLast3 = 3;\nvar $354cb680e66e788a$var$kOmitLast4 = 4;\nvar $354cb680e66e788a$var$kOmitLast5 = 5;\nvar $354cb680e66e788a$var$kOmitLast6 = 6;\nvar $354cb680e66e788a$var$kOmitLast7 = 7;\nvar $354cb680e66e788a$var$kOmitLast8 = 8;\nvar $354cb680e66e788a$var$kOmitLast9 = 9;\nvar $354cb680e66e788a$var$kUppercaseFirst = 10;\nvar $354cb680e66e788a$var$kUppercaseAll = 11;\nvar $354cb680e66e788a$var$kOmitFirst1 = 12;\nvar $354cb680e66e788a$var$kOmitFirst2 = 13;\nvar $354cb680e66e788a$var$kOmitFirst3 = 14;\nvar $354cb680e66e788a$var$kOmitFirst4 = 15;\nvar $354cb680e66e788a$var$kOmitFirst5 = 16;\nvar $354cb680e66e788a$var$kOmitFirst6 = 17;\nvar $354cb680e66e788a$var$kOmitFirst7 = 18;\nvar $354cb680e66e788a$var$kOmitFirst8 = 19;\nvar $354cb680e66e788a$var$kOmitFirst9 = 20;\nfunction $354cb680e66e788a$var$Transform(prefix, transform, suffix) {\n    this.prefix = new Uint8Array(prefix.length);\n    this.transform = transform;\n    this.suffix = new Uint8Array(suffix.length);\n    for(var i = 0; i < prefix.length; i++)this.prefix[i] = prefix.charCodeAt(i);\n    for(var i = 0; i < suffix.length; i++)this.suffix[i] = suffix.charCodeAt(i);\n}\nvar $354cb680e66e788a$var$kTransforms = [\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst1, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" the \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\"s \", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" of \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" and \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst2, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast1, \"\"),\n    new $354cb680e66e788a$var$Transform(\", \", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \", \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" in \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" to \"),\n    new $354cb680e66e788a$var$Transform(\"e \", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, '\"'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \".\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, '\">'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"\\n\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast3, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"]\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" for \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst3, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast2, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" a \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" that \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \". \"),\n    new $354cb680e66e788a$var$Transform(\".\", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \", \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst4, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" with \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"'\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" from \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" by \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst5, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst6, \"\"),\n    new $354cb680e66e788a$var$Transform(\" the \", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast4, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \". The \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" on \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" as \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" is \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast7, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast1, \"ing \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"\\n\t\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \":\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \". \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ed \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst9, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitFirst7, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast6, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"(\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \", \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast8, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" at \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ly \"),\n    new $354cb680e66e788a$var$Transform(\" the \", $354cb680e66e788a$var$kIdentity, \" of \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast5, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kOmitLast9, \"\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \", \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, '\"'),\n    new $354cb680e66e788a$var$Transform(\".\", $354cb680e66e788a$var$kIdentity, \"(\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, '\">'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, '=\"'),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \".\"),\n    new $354cb680e66e788a$var$Transform(\".com/\", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\" the \", $354cb680e66e788a$var$kIdentity, \" of the \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \"'\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \". This \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \",\"),\n    new $354cb680e66e788a$var$Transform(\".\", $354cb680e66e788a$var$kIdentity, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \"(\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \".\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \" not \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, '=\"'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"er \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \" \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"al \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \"\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"='\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, '\"'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \". \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \"(\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ful \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \". \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ive \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"less \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \"'\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"est \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \".\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, '\">'),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \"='\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \",\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ize \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \".\"),\n    new $354cb680e66e788a$var$Transform(\"\\xc2\\xa0\", $354cb680e66e788a$var$kIdentity, \"\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kIdentity, \",\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, '=\"'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, '=\"'),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kIdentity, \"ous \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \", \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseFirst, \"='\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \",\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, '=\"'),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \", \"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \",\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \"(\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \". \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \".\"),\n    new $354cb680e66e788a$var$Transform(\"\", $354cb680e66e788a$var$kUppercaseAll, \"='\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \". \"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, '=\"'),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseAll, \"='\"),\n    new $354cb680e66e788a$var$Transform(\" \", $354cb680e66e788a$var$kUppercaseFirst, \"='\")\n];\n$354cb680e66e788a$export$4898d75d9d9d305c = $354cb680e66e788a$var$kTransforms;\n$354cb680e66e788a$export$5d2d653c67838a2 = $354cb680e66e788a$var$kTransforms.length;\nfunction $354cb680e66e788a$var$ToUpperCase(p, i) {\n    if (p[i] < 0xc0) {\n        if (p[i] >= 97 && p[i] <= 122) p[i] ^= 32;\n        return 1;\n    }\n    /* An overly simplified uppercasing model for utf-8. */ if (p[i] < 0xe0) {\n        p[i + 1] ^= 32;\n        return 2;\n    }\n    /* An arbitrary transform for three byte characters. */ p[i + 2] ^= 5;\n    return 3;\n}\n$354cb680e66e788a$export$8cfa5a6f89d017bb = function(dst, idx, word, len, transform) {\n    var prefix = $354cb680e66e788a$var$kTransforms[transform].prefix;\n    var suffix = $354cb680e66e788a$var$kTransforms[transform].suffix;\n    var t = $354cb680e66e788a$var$kTransforms[transform].transform;\n    var skip = t < $354cb680e66e788a$var$kOmitFirst1 ? 0 : t - ($354cb680e66e788a$var$kOmitFirst1 - 1);\n    var i = 0;\n    var start_idx = idx;\n    var uppercase;\n    if (skip > len) skip = len;\n    var prefix_pos = 0;\n    while(prefix_pos < prefix.length)dst[idx++] = prefix[prefix_pos++];\n    word += skip;\n    len -= skip;\n    if (t <= $354cb680e66e788a$var$kOmitLast9) len -= t;\n    for(i = 0; i < len; i++)dst[idx++] = $fo1rr.dictionary[word + i];\n    uppercase = idx - len;\n    if (t === $354cb680e66e788a$var$kUppercaseFirst) $354cb680e66e788a$var$ToUpperCase(dst, uppercase);\n    else if (t === $354cb680e66e788a$var$kUppercaseAll) while(len > 0){\n        var step = $354cb680e66e788a$var$ToUpperCase(dst, uppercase);\n        uppercase += step;\n        len -= step;\n    }\n    var suffix_pos = 0;\n    while(suffix_pos < suffix.length)dst[idx++] = suffix[suffix_pos++];\n    return idx - start_idx;\n};\n\n});\n\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $68d62278c0f02295$export$a143d493d941bafc;\nvar $68d62278c0f02295$export$e4cf37d7f6fb9e0a;\nvar $68d62278c0f02295$export$f99ded8fe4b79145;\nvar $68d62278c0f02295$export$599f31c3813fae4d;\n\"use strict\";\nvar $81d573d37fc80f93$export$a48f0734ac7c2329;\nvar $81d573d37fc80f93$export$d622b2ad8d90c771;\nvar $81d573d37fc80f93$export$6100ba28696e12de;\n\"use strict\";\n$81d573d37fc80f93$export$a48f0734ac7c2329 = $81d573d37fc80f93$var$byteLength;\n$81d573d37fc80f93$export$d622b2ad8d90c771 = $81d573d37fc80f93$var$toByteArray;\n$81d573d37fc80f93$export$6100ba28696e12de = $81d573d37fc80f93$var$fromByteArray;\nvar $81d573d37fc80f93$var$lookup = [];\nvar $81d573d37fc80f93$var$revLookup = [];\nvar $81d573d37fc80f93$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $81d573d37fc80f93$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $81d573d37fc80f93$var$i = 0, $81d573d37fc80f93$var$len = $81d573d37fc80f93$var$code.length; $81d573d37fc80f93$var$i < $81d573d37fc80f93$var$len; ++$81d573d37fc80f93$var$i){\n    $81d573d37fc80f93$var$lookup[$81d573d37fc80f93$var$i] = $81d573d37fc80f93$var$code[$81d573d37fc80f93$var$i];\n    $81d573d37fc80f93$var$revLookup[$81d573d37fc80f93$var$code.charCodeAt($81d573d37fc80f93$var$i)] = $81d573d37fc80f93$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$81d573d37fc80f93$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$81d573d37fc80f93$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $81d573d37fc80f93$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $81d573d37fc80f93$var$byteLength(b64) {\n    var lens = $81d573d37fc80f93$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $81d573d37fc80f93$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $81d573d37fc80f93$var$toByteArray(b64) {\n    var tmp;\n    var lens = $81d573d37fc80f93$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $81d573d37fc80f93$var$Arr($81d573d37fc80f93$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i)] << 18 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i)] << 2 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i)] << 10 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $81d573d37fc80f93$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $81d573d37fc80f93$var$tripletToBase64(num) {\n    return $81d573d37fc80f93$var$lookup[num >> 18 & 0x3F] + $81d573d37fc80f93$var$lookup[num >> 12 & 0x3F] + $81d573d37fc80f93$var$lookup[num >> 6 & 0x3F] + $81d573d37fc80f93$var$lookup[num & 0x3F];\n}\nfunction $81d573d37fc80f93$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($81d573d37fc80f93$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $81d573d37fc80f93$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($81d573d37fc80f93$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($81d573d37fc80f93$var$lookup[tmp >> 2] + $81d573d37fc80f93$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($81d573d37fc80f93$var$lookup[tmp >> 10] + $81d573d37fc80f93$var$lookup[tmp >> 4 & 0x3F] + $81d573d37fc80f93$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $6af26b3c18711748$export$aafa59e2e03f2942;\nvar $6af26b3c18711748$export$68d8715fc104d294;\n$6af26b3c18711748$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$6af26b3c18711748$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n\nconst $68d62278c0f02295$var$customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\n$68d62278c0f02295$export$a143d493d941bafc = $68d62278c0f02295$var$Buffer;\n$68d62278c0f02295$export$e4cf37d7f6fb9e0a = $68d62278c0f02295$var$SlowBuffer;\n$68d62278c0f02295$export$f99ded8fe4b79145 = 50;\nconst $68d62278c0f02295$var$K_MAX_LENGTH = 0x7fffffff;\n$68d62278c0f02295$export$599f31c3813fae4d = $68d62278c0f02295$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $68d62278c0f02295$var$Buffer.TYPED_ARRAY_SUPPORT = $68d62278c0f02295$var$typedArraySupport();\nif (!$68d62278c0f02295$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $68d62278c0f02295$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        const arr = new Uint8Array(1);\n        const proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($68d62278c0f02295$var$Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!$68d62278c0f02295$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($68d62278c0f02295$var$Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!$68d62278c0f02295$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $68d62278c0f02295$var$createBuffer(length) {\n    if (length > $68d62278c0f02295$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $68d62278c0f02295$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $68d62278c0f02295$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $68d62278c0f02295$var$allocUnsafe(arg);\n    }\n    return $68d62278c0f02295$var$from(arg, encodingOrOffset, length);\n}\n$68d62278c0f02295$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $68d62278c0f02295$var$from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return $68d62278c0f02295$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $68d62278c0f02295$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($68d62278c0f02295$var$isInstance(value, ArrayBuffer) || value && $68d62278c0f02295$var$isInstance(value.buffer, ArrayBuffer)) return $68d62278c0f02295$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && ($68d62278c0f02295$var$isInstance(value, SharedArrayBuffer) || value && $68d62278c0f02295$var$isInstance(value.buffer, SharedArrayBuffer))) return $68d62278c0f02295$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $68d62278c0f02295$var$Buffer.from(valueOf, encodingOrOffset, length);\n    const b = $68d62278c0f02295$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return $68d62278c0f02295$var$Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $68d62278c0f02295$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $68d62278c0f02295$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($68d62278c0f02295$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($68d62278c0f02295$var$Buffer, Uint8Array);\nfunction $68d62278c0f02295$var$assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $68d62278c0f02295$var$alloc(size, fill, encoding) {\n    $68d62278c0f02295$var$assertSize(size);\n    if (size <= 0) return $68d62278c0f02295$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? $68d62278c0f02295$var$createBuffer(size).fill(fill, encoding) : $68d62278c0f02295$var$createBuffer(size).fill(fill);\n    return $68d62278c0f02295$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $68d62278c0f02295$var$Buffer.alloc = function(size, fill, encoding) {\n    return $68d62278c0f02295$var$alloc(size, fill, encoding);\n};\nfunction $68d62278c0f02295$var$allocUnsafe(size) {\n    $68d62278c0f02295$var$assertSize(size);\n    return $68d62278c0f02295$var$createBuffer(size < 0 ? 0 : $68d62278c0f02295$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $68d62278c0f02295$var$Buffer.allocUnsafe = function(size) {\n    return $68d62278c0f02295$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $68d62278c0f02295$var$Buffer.allocUnsafeSlow = function(size) {\n    return $68d62278c0f02295$var$allocUnsafe(size);\n};\nfunction $68d62278c0f02295$var$fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!$68d62278c0f02295$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    const length = $68d62278c0f02295$var$byteLength(string, encoding) | 0;\n    let buf = $68d62278c0f02295$var$createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $68d62278c0f02295$var$fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : $68d62278c0f02295$var$checked(array.length) | 0;\n    const buf = $68d62278c0f02295$var$createBuffer(length);\n    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $68d62278c0f02295$var$fromArrayView(arrayView) {\n    if ($68d62278c0f02295$var$isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return $68d62278c0f02295$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $68d62278c0f02295$var$fromArrayLike(arrayView);\n}\nfunction $68d62278c0f02295$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    let buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $68d62278c0f02295$var$Buffer.prototype);\n    return buf;\n}\nfunction $68d62278c0f02295$var$fromObject(obj) {\n    if ($68d62278c0f02295$var$Buffer.isBuffer(obj)) {\n        const len = $68d62278c0f02295$var$checked(obj.length) | 0;\n        const buf = $68d62278c0f02295$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || $68d62278c0f02295$var$numberIsNaN(obj.length)) return $68d62278c0f02295$var$createBuffer(0);\n        return $68d62278c0f02295$var$fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return $68d62278c0f02295$var$fromArrayLike(obj.data);\n}\nfunction $68d62278c0f02295$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $68d62278c0f02295$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $68d62278c0f02295$var$K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction $68d62278c0f02295$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $68d62278c0f02295$var$Buffer.alloc(+length);\n}\n$68d62278c0f02295$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $68d62278c0f02295$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$68d62278c0f02295$var$Buffer.compare = function compare(a, b) {\n    if ($68d62278c0f02295$var$isInstance(a, Uint8Array)) a = $68d62278c0f02295$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($68d62278c0f02295$var$isInstance(b, Uint8Array)) b = $68d62278c0f02295$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$68d62278c0f02295$var$Buffer.isBuffer(a) || !$68d62278c0f02295$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$68d62278c0f02295$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\n$68d62278c0f02295$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $68d62278c0f02295$var$Buffer.alloc(0);\n    let i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    const buffer = $68d62278c0f02295$var$Buffer.allocUnsafe(length);\n    let pos = 0;\n    for(i = 0; i < list.length; ++i){\n        let buf = list[i];\n        if ($68d62278c0f02295$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) {\n                if (!$68d62278c0f02295$var$Buffer.isBuffer(buf)) buf = $68d62278c0f02295$var$Buffer.from(buf);\n                buf.copy(buffer, pos);\n            } else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$68d62278c0f02295$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $68d62278c0f02295$var$byteLength(string, encoding) {\n    if ($68d62278c0f02295$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $68d62278c0f02295$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return $68d62278c0f02295$var$utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return $68d62278c0f02295$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $68d62278c0f02295$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$68d62278c0f02295$var$Buffer.byteLength = $68d62278c0f02295$var$byteLength;\nfunction $68d62278c0f02295$var$slowToString(encoding, start, end) {\n    let loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return $68d62278c0f02295$var$hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return $68d62278c0f02295$var$utf8Slice(this, start, end);\n        case \"ascii\":\n            return $68d62278c0f02295$var$asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return $68d62278c0f02295$var$latin1Slice(this, start, end);\n        case \"base64\":\n            return $68d62278c0f02295$var$base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $68d62278c0f02295$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$68d62278c0f02295$var$Buffer.prototype._isBuffer = true;\nfunction $68d62278c0f02295$var$swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$68d62278c0f02295$var$Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(let i = 0; i < len; i += 2)$68d62278c0f02295$var$swap(this, i, i + 1);\n    return this;\n};\n$68d62278c0f02295$var$Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(let i = 0; i < len; i += 4){\n        $68d62278c0f02295$var$swap(this, i, i + 3);\n        $68d62278c0f02295$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$68d62278c0f02295$var$Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(let i = 0; i < len; i += 8){\n        $68d62278c0f02295$var$swap(this, i, i + 7);\n        $68d62278c0f02295$var$swap(this, i + 1, i + 6);\n        $68d62278c0f02295$var$swap(this, i + 2, i + 5);\n        $68d62278c0f02295$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$68d62278c0f02295$var$Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return $68d62278c0f02295$var$utf8Slice(this, 0, length);\n    return $68d62278c0f02295$var$slowToString.apply(this, arguments);\n};\n$68d62278c0f02295$var$Buffer.prototype.toLocaleString = $68d62278c0f02295$var$Buffer.prototype.toString;\n$68d62278c0f02295$var$Buffer.prototype.equals = function equals(b) {\n    if (!$68d62278c0f02295$var$Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return $68d62278c0f02295$var$Buffer.compare(this, b) === 0;\n};\n$68d62278c0f02295$var$Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = $68d62278c0f02295$export$f99ded8fe4b79145;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif ($68d62278c0f02295$var$customInspectSymbol) $68d62278c0f02295$var$Buffer.prototype[$68d62278c0f02295$var$customInspectSymbol] = $68d62278c0f02295$var$Buffer.prototype.inspect;\n$68d62278c0f02295$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($68d62278c0f02295$var$isInstance(target, Uint8Array)) target = $68d62278c0f02295$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$68d62278c0f02295$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $68d62278c0f02295$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($68d62278c0f02295$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = $68d62278c0f02295$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($68d62278c0f02295$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $68d62278c0f02295$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $68d62278c0f02295$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction $68d62278c0f02295$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    let i;\n    if (dir) {\n        let foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            let found = true;\n            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$68d62278c0f02295$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$68d62278c0f02295$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $68d62278c0f02295$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$68d62278c0f02295$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $68d62278c0f02295$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $68d62278c0f02295$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    let i;\n    for(i = 0; i < length; ++i){\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($68d62278c0f02295$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $68d62278c0f02295$var$utf8Write(buf, string, offset, length) {\n    return $68d62278c0f02295$var$blitBuffer($68d62278c0f02295$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $68d62278c0f02295$var$asciiWrite(buf, string, offset, length) {\n    return $68d62278c0f02295$var$blitBuffer($68d62278c0f02295$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $68d62278c0f02295$var$base64Write(buf, string, offset, length) {\n    return $68d62278c0f02295$var$blitBuffer($68d62278c0f02295$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $68d62278c0f02295$var$ucs2Write(buf, string, offset, length) {\n    return $68d62278c0f02295$var$blitBuffer($68d62278c0f02295$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$68d62278c0f02295$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return $68d62278c0f02295$var$hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return $68d62278c0f02295$var$utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return $68d62278c0f02295$var$asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return $68d62278c0f02295$var$base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $68d62278c0f02295$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$68d62278c0f02295$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $68d62278c0f02295$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $81d573d37fc80f93$export$6100ba28696e12de(buf);\n    else return $81d573d37fc80f93$export$6100ba28696e12de(buf.slice(start, end));\n}\nfunction $68d62278c0f02295$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while(i < end){\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $68d62278c0f02295$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst $68d62278c0f02295$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $68d62278c0f02295$var$decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= $68d62278c0f02295$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $68d62278c0f02295$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $68d62278c0f02295$var$asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $68d62278c0f02295$var$latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $68d62278c0f02295$var$hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for(let i = start; i < end; ++i)out += $68d62278c0f02295$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $68d62278c0f02295$var$utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$68d62278c0f02295$var$Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $68d62278c0f02295$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $68d62278c0f02295$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\n$68d62278c0f02295$var$Buffer.prototype.readUintLE = $68d62278c0f02295$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readUintBE = $68d62278c0f02295$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readUint8 = $68d62278c0f02295$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$68d62278c0f02295$var$Buffer.prototype.readUint16LE = $68d62278c0f02295$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$68d62278c0f02295$var$Buffer.prototype.readUint16BE = $68d62278c0f02295$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$68d62278c0f02295$var$Buffer.prototype.readUint32LE = $68d62278c0f02295$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$68d62278c0f02295$var$Buffer.prototype.readUint32BE = $68d62278c0f02295$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$68d62278c0f02295$var$Buffer.prototype.readBigUInt64LE = $68d62278c0f02295$var$defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    $68d62278c0f02295$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $68d62278c0f02295$var$boundsError(offset, this.length - 8);\n    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\n$68d62278c0f02295$var$Buffer.prototype.readBigUInt64BE = $68d62278c0f02295$var$defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    $68d62278c0f02295$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $68d62278c0f02295$var$boundsError(offset, this.length - 8);\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n$68d62278c0f02295$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$68d62278c0f02295$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$68d62278c0f02295$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$68d62278c0f02295$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$68d62278c0f02295$var$Buffer.prototype.readBigInt64LE = $68d62278c0f02295$var$defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    $68d62278c0f02295$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $68d62278c0f02295$var$boundsError(offset, this.length - 8);\n    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow\n    );\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\n$68d62278c0f02295$var$Buffer.prototype.readBigInt64BE = $68d62278c0f02295$var$defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    $68d62278c0f02295$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $68d62278c0f02295$var$boundsError(offset, this.length - 8);\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);\n});\n$68d62278c0f02295$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return $6af26b3c18711748$export$aafa59e2e03f2942(this, offset, true, 23, 4);\n};\n$68d62278c0f02295$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 4, this.length);\n    return $6af26b3c18711748$export$aafa59e2e03f2942(this, offset, false, 23, 4);\n};\n$68d62278c0f02295$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 8, this.length);\n    return $6af26b3c18711748$export$aafa59e2e03f2942(this, offset, true, 52, 8);\n};\n$68d62278c0f02295$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkOffset(offset, 8, this.length);\n    return $6af26b3c18711748$export$aafa59e2e03f2942(this, offset, false, 52, 8);\n};\nfunction $68d62278c0f02295$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$68d62278c0f02295$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\n$68d62278c0f02295$var$Buffer.prototype.writeUintLE = $68d62278c0f02295$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $68d62278c0f02295$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUintBE = $68d62278c0f02295$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $68d62278c0f02295$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUint8 = $68d62278c0f02295$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUint16LE = $68d62278c0f02295$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUint16BE = $68d62278c0f02295$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUint32LE = $68d62278c0f02295$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeUint32BE = $68d62278c0f02295$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $68d62278c0f02295$var$wrtBigUInt64LE(buf, value, offset, min, max) {\n    $68d62278c0f02295$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n}\nfunction $68d62278c0f02295$var$wrtBigUInt64BE(buf, value, offset, min, max) {\n    $68d62278c0f02295$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n}\n$68d62278c0f02295$var$Buffer.prototype.writeBigUInt64LE = $68d62278c0f02295$var$defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return $68d62278c0f02295$var$wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$68d62278c0f02295$var$Buffer.prototype.writeBigUInt64BE = $68d62278c0f02295$var$defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return $68d62278c0f02295$var$wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$68d62278c0f02295$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $68d62278c0f02295$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $68d62278c0f02295$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$68d62278c0f02295$var$Buffer.prototype.writeBigInt64LE = $68d62278c0f02295$var$defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return $68d62278c0f02295$var$wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\n$68d62278c0f02295$var$Buffer.prototype.writeBigInt64BE = $68d62278c0f02295$var$defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return $68d62278c0f02295$var$wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction $68d62278c0f02295$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction $68d62278c0f02295$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $6af26b3c18711748$export$68d8715fc104d294(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$68d62278c0f02295$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $68d62278c0f02295$var$writeFloat(this, value, offset, true, noAssert);\n};\n$68d62278c0f02295$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $68d62278c0f02295$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $68d62278c0f02295$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $68d62278c0f02295$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $6af26b3c18711748$export$68d8715fc104d294(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$68d62278c0f02295$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $68d62278c0f02295$var$writeDouble(this, value, offset, true, noAssert);\n};\n$68d62278c0f02295$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $68d62278c0f02295$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$68d62278c0f02295$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$68d62278c0f02295$var$Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$68d62278c0f02295$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !$68d62278c0f02295$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        const bytes = $68d62278c0f02295$var$Buffer.isBuffer(val) ? val : $68d62278c0f02295$var$Buffer.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\nconst $68d62278c0f02295$var$errors = {};\nfunction $68d62278c0f02295$var$E(sym, getMessage, Base) {\n    $68d62278c0f02295$var$errors[sym] = class NodeError extends Base {\n        constructor(){\n            super();\n            Object.defineProperty(this, \"message\", {\n                value: getMessage.apply(this, arguments),\n                writable: true,\n                configurable: true\n            });\n            // Add the error code to the name to include it in the stack trace.\n            this.name = `${this.name} [${sym}]`;\n            // Access the stack to generate the error message including the error code\n            // from the name.\n            this.stack // eslint-disable-line no-unused-expressions\n            ;\n            // Reset the name to the actual name.\n            delete this.name;\n        }\n        get code() {\n            return sym;\n        }\n        set code(value) {\n            Object.defineProperty(this, \"code\", {\n                configurable: true,\n                enumerable: true,\n                value: value,\n                writable: true\n            });\n        }\n        toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n        }\n    };\n}\n$68d62278c0f02295$var$E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n    if (name) return `${name} is outside of buffer bounds`;\n    return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\n$68d62278c0f02295$var$E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\n$68d62278c0f02295$var$E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = $68d62278c0f02295$var$addNumericalSeparator(String(input));\n    else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = $68d62278c0f02295$var$addNumericalSeparator(received);\n        received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n}, RangeError);\nfunction $68d62278c0f02295$var$addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;\n    return `${val.slice(0, i)}${res}`;\n}\n// CHECK FUNCTIONS\n// ===============\nfunction $68d62278c0f02295$var$checkBounds(buf, offset, byteLength) {\n    $68d62278c0f02295$var$validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) $68d62278c0f02295$var$boundsError(offset, buf.length - (byteLength + 1));\n}\nfunction $68d62278c0f02295$var$checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength > 3) {\n            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        } else range = `>= ${min}${n} and <= ${max}${n}`;\n        throw new $68d62278c0f02295$var$errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    $68d62278c0f02295$var$checkBounds(buf, offset, byteLength);\n}\nfunction $68d62278c0f02295$var$validateNumber(value, name) {\n    if (typeof value !== \"number\") throw new $68d62278c0f02295$var$errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction $68d62278c0f02295$var$boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n        $68d62278c0f02295$var$validateNumber(value, type);\n        throw new $68d62278c0f02295$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n    if (length < 0) throw new $68d62278c0f02295$var$errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    throw new $68d62278c0f02295$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n// HELPER FUNCTIONS\n// ================\nconst $68d62278c0f02295$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $68d62278c0f02295$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($68d62278c0f02295$var$INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction $68d62278c0f02295$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for(let i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction $68d62278c0f02295$var$asciiToBytes(str) {\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $68d62278c0f02295$var$utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $68d62278c0f02295$var$base64ToBytes(str) {\n    return $81d573d37fc80f93$export$d622b2ad8d90c771($68d62278c0f02295$var$base64clean(str));\n}\nfunction $68d62278c0f02295$var$blitBuffer(src, dst, offset, length) {\n    let i;\n    for(i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $68d62278c0f02295$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $68d62278c0f02295$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst $68d62278c0f02295$var$hexSliceLookupTable = function() {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for(let i = 0; i < 16; ++i){\n        const i16 = i * 16;\n        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n// Return not function with Error if BigInt not supported\nfunction $68d62278c0f02295$var$defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? $68d62278c0f02295$var$BufferBigIntNotDefined : fn;\n}\nfunction $68d62278c0f02295$var$BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n}\n\n\nvar $388b617130f03bd4$require$Buffer = $68d62278c0f02295$export$a143d493d941bafc;\nvar $f7a6899246d76dab$exports = {};\n// Node back-compat.\nconst $d28c261f9dc3f39e$var$ENCODING_MAPPING = {\n    utf16le: \"utf-16le\",\n    ucs2: \"utf-16le\",\n    utf16be: \"utf-16be\"\n};\nclass $d28c261f9dc3f39e$export$c18b354bac7948e9 {\n    constructor(buffer){\n        this.buffer = buffer;\n        this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        this.pos = 0;\n        this.length = this.buffer.length;\n    }\n    readString(length, encoding = \"ascii\") {\n        encoding = $d28c261f9dc3f39e$var$ENCODING_MAPPING[encoding] || encoding;\n        let buf = this.readBuffer(length);\n        try {\n            let decoder = new TextDecoder(encoding);\n            return decoder.decode(buf);\n        } catch (err) {\n            return buf;\n        }\n    }\n    readBuffer(length) {\n        return this.buffer.slice(this.pos, this.pos += length);\n    }\n    readUInt24BE() {\n        return (this.readUInt16BE() << 8) + this.readUInt8();\n    }\n    readUInt24LE() {\n        return this.readUInt16LE() + (this.readUInt8() << 16);\n    }\n    readInt24BE() {\n        return (this.readInt16BE() << 8) + this.readUInt8();\n    }\n    readInt24LE() {\n        return this.readUInt16LE() + (this.readInt8() << 16);\n    }\n}\n$d28c261f9dc3f39e$export$c18b354bac7948e9.TYPES = {\n    UInt8: 1,\n    UInt16: 2,\n    UInt24: 3,\n    UInt32: 4,\n    Int8: 1,\n    Int16: 2,\n    Int24: 3,\n    Int32: 4,\n    Float: 4,\n    Double: 8\n};\nfor (let key of Object.getOwnPropertyNames(DataView.prototype))if (key.slice(0, 3) === \"get\") {\n    let type = key.slice(3).replace(\"Ui\", \"UI\");\n    if (type === \"Float32\") type = \"Float\";\n    else if (type === \"Float64\") type = \"Double\";\n    let bytes = $d28c261f9dc3f39e$export$c18b354bac7948e9.TYPES[type];\n    $d28c261f9dc3f39e$export$c18b354bac7948e9.prototype[\"read\" + type + (bytes === 1 ? \"\" : \"BE\")] = function() {\n        const ret = this.view[key](this.pos, false);\n        this.pos += bytes;\n        return ret;\n    };\n    if (bytes !== 1) $d28c261f9dc3f39e$export$c18b354bac7948e9.prototype[\"read\" + type + \"LE\"] = function() {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n    };\n}\n\n\nconst $c207eaab05273912$var$textEncoder = new TextEncoder();\nconst $c207eaab05273912$var$isBigEndian = new Uint8Array(new Uint16Array([\n    0x1234\n]).buffer)[0] == 0x12;\nclass $c207eaab05273912$export$9b4f661deaa36c3e {\n    constructor(buffer){\n        this.buffer = buffer;\n        this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n        this.pos = 0;\n    }\n    writeBuffer(buffer) {\n        this.buffer.set(buffer, this.pos);\n        this.pos += buffer.length;\n    }\n    writeString(string, encoding = \"ascii\") {\n        let buf;\n        switch(encoding){\n            case \"utf16le\":\n            case \"utf16-le\":\n            case \"ucs2\":\n                buf = $c207eaab05273912$var$stringToUtf16(string, $c207eaab05273912$var$isBigEndian);\n                break;\n            case \"utf16be\":\n            case \"utf16-be\":\n                buf = $c207eaab05273912$var$stringToUtf16(string, !$c207eaab05273912$var$isBigEndian);\n                break;\n            case \"utf8\":\n                buf = $c207eaab05273912$var$textEncoder.encode(string);\n                break;\n            case \"ascii\":\n                buf = $c207eaab05273912$var$stringToAscii(string);\n                break;\n            default:\n                throw new Error(`Unsupported encoding: ${encoding}`);\n        }\n        this.writeBuffer(buf);\n    }\n    writeUInt24BE(val) {\n        this.buffer[this.pos++] = val >>> 16 & 0xff;\n        this.buffer[this.pos++] = val >>> 8 & 0xff;\n        this.buffer[this.pos++] = val & 0xff;\n    }\n    writeUInt24LE(val) {\n        this.buffer[this.pos++] = val & 0xff;\n        this.buffer[this.pos++] = val >>> 8 & 0xff;\n        this.buffer[this.pos++] = val >>> 16 & 0xff;\n    }\n    writeInt24BE(val) {\n        if (val >= 0) this.writeUInt24BE(val);\n        else this.writeUInt24BE(val + 0xffffff + 1);\n    }\n    writeInt24LE(val) {\n        if (val >= 0) this.writeUInt24LE(val);\n        else this.writeUInt24LE(val + 0xffffff + 1);\n    }\n    fill(val, length) {\n        if (length < this.buffer.length) {\n            this.buffer.fill(val, this.pos, this.pos + length);\n            this.pos += length;\n        } else {\n            const buf = new Uint8Array(length);\n            buf.fill(val);\n            this.writeBuffer(buf);\n        }\n    }\n}\nfunction $c207eaab05273912$var$stringToUtf16(string, swap) {\n    let buf = new Uint16Array(string.length);\n    for(let i = 0; i < string.length; i++){\n        let code = string.charCodeAt(i);\n        if (swap) code = code >> 8 | (code & 0xff) << 8;\n        buf[i] = code;\n    }\n    return new Uint8Array(buf.buffer);\n}\nfunction $c207eaab05273912$var$stringToAscii(string) {\n    let buf = new Uint8Array(string.length);\n    for(let i = 0; i < string.length; i++)// Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n    return buf;\n}\nfor (let key of Object.getOwnPropertyNames(DataView.prototype))if (key.slice(0, 3) === \"set\") {\n    let type = key.slice(3).replace(\"Ui\", \"UI\");\n    if (type === \"Float32\") type = \"Float\";\n    else if (type === \"Float64\") type = \"Double\";\n    let bytes = (0, $d28c261f9dc3f39e$export$c18b354bac7948e9).TYPES[type];\n    $c207eaab05273912$export$9b4f661deaa36c3e.prototype[\"write\" + type + (bytes === 1 ? \"\" : \"BE\")] = function(value) {\n        this.view[key](this.pos, value, false);\n        this.pos += bytes;\n    };\n    if (bytes !== 1) $c207eaab05273912$export$9b4f661deaa36c3e.prototype[\"write\" + type + \"LE\"] = function(value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n    };\n}\n\n\n\n\n\nclass $4c0d613e95890d04$export$ef88aa0d34c34520 {\n    fromBuffer(buffer) {\n        let stream = new (0, $d28c261f9dc3f39e$export$c18b354bac7948e9)(buffer);\n        return this.decode(stream);\n    }\n    toBuffer(value) {\n        let size = this.size(value);\n        let buffer = new Uint8Array(size);\n        let stream = new (0, $c207eaab05273912$export$9b4f661deaa36c3e)(buffer);\n        this.encode(stream, value);\n        return buffer;\n    }\n}\n\n\n\n\nclass $83cea26e2678b6a9$export$fffa67e515d04022 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, endian = \"BE\"){\n        super();\n        this.type = type;\n        this.endian = endian;\n        this.fn = this.type;\n        if (this.type[this.type.length - 1] !== \"8\") this.fn += this.endian;\n    }\n    size() {\n        return (0, $d28c261f9dc3f39e$export$c18b354bac7948e9).TYPES[this.type];\n    }\n    decode(stream) {\n        return stream[`read${this.fn}`]();\n    }\n    encode(stream, val) {\n        return stream[`write${this.fn}`](val);\n    }\n}\nconst $83cea26e2678b6a9$export$52e103c63c4e68cf = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt8\");\nconst $83cea26e2678b6a9$export$60dfe43c8297a8f8 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt16\", \"BE\");\nconst $83cea26e2678b6a9$export$56bd24b5a3ee8456 = $83cea26e2678b6a9$export$60dfe43c8297a8f8;\nconst $83cea26e2678b6a9$export$b92d76f0ca6d1789 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt16\", \"LE\");\nconst $83cea26e2678b6a9$export$255f45171f96b50c = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt24\", \"BE\");\nconst $83cea26e2678b6a9$export$1925298fbd719b21 = $83cea26e2678b6a9$export$255f45171f96b50c;\nconst $83cea26e2678b6a9$export$758e1dafc8dc7271 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt24\", \"LE\");\nconst $83cea26e2678b6a9$export$74c16dba6c885532 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt32\", \"BE\");\nconst $83cea26e2678b6a9$export$de9ffb9418dd7d0d = $83cea26e2678b6a9$export$74c16dba6c885532;\nconst $83cea26e2678b6a9$export$5f744bb30a534bc9 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"UInt32\", \"LE\");\nconst $83cea26e2678b6a9$export$5984f25eab09961f = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int8\");\nconst $83cea26e2678b6a9$export$198ae7d10d26a900 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int16\", \"BE\");\nconst $83cea26e2678b6a9$export$c35c15c7caeff2b6 = $83cea26e2678b6a9$export$198ae7d10d26a900;\nconst $83cea26e2678b6a9$export$399cc4b7169e5aed = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int16\", \"LE\");\nconst $83cea26e2678b6a9$export$3676d1f71eca2ec0 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int24\", \"BE\");\nconst $83cea26e2678b6a9$export$73f695d681ac61f9 = $83cea26e2678b6a9$export$3676d1f71eca2ec0;\nconst $83cea26e2678b6a9$export$671f8672dbd40a4 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int24\", \"LE\");\nconst $83cea26e2678b6a9$export$78a2ac3d09dd42d5 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int32\", \"BE\");\nconst $83cea26e2678b6a9$export$1d95835383bb05a = $83cea26e2678b6a9$export$78a2ac3d09dd42d5;\nconst $83cea26e2678b6a9$export$5ec1f146e759329a = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Int32\", \"LE\");\nconst $83cea26e2678b6a9$export$92b5c14c6abb5c97 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Float\", \"BE\");\nconst $83cea26e2678b6a9$export$6b5cd3983e3ee5ab = $83cea26e2678b6a9$export$92b5c14c6abb5c97;\nconst $83cea26e2678b6a9$export$6d20592bc4cb19d9 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Float\", \"LE\");\nconst $83cea26e2678b6a9$export$e50b9e97e4d43631 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Double\", \"BE\");\nconst $83cea26e2678b6a9$export$7b3cbda67be88f5f = $83cea26e2678b6a9$export$e50b9e97e4d43631;\nconst $83cea26e2678b6a9$export$6f53315aa512b751 = new $83cea26e2678b6a9$export$fffa67e515d04022(\"Double\", \"LE\");\nclass $83cea26e2678b6a9$export$13475bbd2a37a9b4 extends $83cea26e2678b6a9$export$fffa67e515d04022 {\n    constructor(size, endian, fracBits = size >> 1){\n        super(`Int${size}`, endian);\n        this._point = 1 << fracBits;\n    }\n    decode(stream) {\n        return super.decode(stream) / this._point;\n    }\n    encode(stream, val) {\n        return super.encode(stream, val * this._point | 0);\n    }\n}\nconst $83cea26e2678b6a9$export$f87b441e6bd90278 = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(16, \"BE\");\nconst $83cea26e2678b6a9$export$a3abada75ef55921 = $83cea26e2678b6a9$export$f87b441e6bd90278;\nconst $83cea26e2678b6a9$export$3752a2886837dc22 = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(16, \"LE\");\nconst $83cea26e2678b6a9$export$dd71d8d9bc792632 = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(32, \"BE\");\nconst $83cea26e2678b6a9$export$e913265d48471f2d = $83cea26e2678b6a9$export$dd71d8d9bc792632;\nconst $83cea26e2678b6a9$export$7fc47db6a5fc8223 = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(32, \"LE\");\n\n\n\nfunction $978b446018acf522$export$83b6dc3503c1fda6(length, stream, parent) {\n    let res;\n    if (typeof length === \"number\") res = length;\n    else if (typeof length === \"function\") res = length.call(parent, parent);\n    else if (parent && typeof length === \"string\") res = parent[length];\n    else if (stream && length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) res = length.decode(stream);\n    if (isNaN(res)) throw new Error(\"Not a fixed size\");\n    return res;\n}\nclass $978b446018acf522$export$41705b1d644e0f14 {\n    constructor(opts = {}){\n        this.enumerable = true;\n        this.configurable = true;\n        for(let key in opts){\n            const val = opts[key];\n            this[key] = val;\n        }\n    }\n}\n\n\nclass $c2a7f92f159a8c91$export$c4be6576ca6fe4aa extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, length, lengthType = \"count\"){\n        super();\n        this.type = type;\n        this.length = length;\n        this.lengthType = lengthType;\n    }\n    decode(stream, parent) {\n        let length;\n        const { pos: pos } = stream;\n        const res = [];\n        let ctx = parent;\n        if (this.length != null) length = $978b446018acf522$export$83b6dc3503c1fda6(this.length, stream, parent);\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) {\n            // define hidden properties\n            Object.defineProperties(res, {\n                parent: {\n                    value: parent\n                },\n                _startOffset: {\n                    value: pos\n                },\n                _currentOffset: {\n                    value: 0,\n                    writable: true\n                },\n                _length: {\n                    value: length\n                }\n            });\n            ctx = res;\n        }\n        if (length == null || this.lengthType === \"bytes\") {\n            const target = length != null ? stream.pos + length : (parent != null ? parent._length : undefined) ? parent._startOffset + parent._length : stream.length;\n            while(stream.pos < target)res.push(this.type.decode(stream, ctx));\n        } else for(let i = 0, end = length; i < end; i++)res.push(this.type.decode(stream, ctx));\n        return res;\n    }\n    size(array, ctx, includePointers = true) {\n        if (!array) return this.type.size(null, ctx) * $978b446018acf522$export$83b6dc3503c1fda6(this.length, null, ctx);\n        let size = 0;\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) {\n            size += this.length.size();\n            ctx = {\n                parent: ctx,\n                pointerSize: 0\n            };\n        }\n        for (let item of array)size += this.type.size(item, ctx);\n        if (ctx && includePointers && this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) size += ctx.pointerSize;\n        return size;\n    }\n    encode(stream, array, parent) {\n        let ctx = parent;\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) {\n            ctx = {\n                pointers: [],\n                startOffset: stream.pos,\n                parent: parent\n            };\n            ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n            this.length.encode(stream, array.length);\n        }\n        for (let item of array)this.type.encode(stream, item, ctx);\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) {\n            let i = 0;\n            while(i < ctx.pointers.length){\n                const ptr = ctx.pointers[i++];\n                ptr.type.encode(stream, ptr.val, ptr.parent);\n            }\n        }\n    }\n}\n\n\n\n\n\nclass $15242fe892221bcd$export$5576c026028d4983 extends (0, $c2a7f92f159a8c91$export$c4be6576ca6fe4aa) {\n    decode(stream, parent) {\n        const { pos: pos } = stream;\n        const length = $978b446018acf522$export$83b6dc3503c1fda6(this.length, stream, parent);\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) parent = {\n            parent: parent,\n            _startOffset: pos,\n            _currentOffset: 0,\n            _length: length\n        };\n        const res = new $15242fe892221bcd$var$LazyArrayValue(this.type, length, stream, parent);\n        stream.pos += length * this.type.size(null, parent);\n        return res;\n    }\n    size(val, ctx) {\n        if (val instanceof $15242fe892221bcd$var$LazyArrayValue) val = val.toArray();\n        return super.size(val, ctx);\n    }\n    encode(stream, val, ctx) {\n        if (val instanceof $15242fe892221bcd$var$LazyArrayValue) val = val.toArray();\n        return super.encode(stream, val, ctx);\n    }\n}\nclass $15242fe892221bcd$var$LazyArrayValue {\n    constructor(type, length, stream, ctx){\n        this.type = type;\n        this.length = length;\n        this.stream = stream;\n        this.ctx = ctx;\n        this.base = this.stream.pos;\n        this.items = [];\n    }\n    get(index) {\n        if (index < 0 || index >= this.length) return undefined;\n        if (this.items[index] == null) {\n            const { pos: pos } = this.stream;\n            this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n            this.items[index] = this.type.decode(this.stream, this.ctx);\n            this.stream.pos = pos;\n        }\n        return this.items[index];\n    }\n    toArray() {\n        const result = [];\n        for(let i = 0, end = this.length; i < end; i++)result.push(this.get(i));\n        return result;\n    }\n}\n\n\n\nclass $42b540cf7adee3c9$export$96b43b8a49f688ea extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, flags = []){\n        super();\n        this.type = type;\n        this.flags = flags;\n    }\n    decode(stream) {\n        const val = this.type.decode(stream);\n        const res = {};\n        for(let i = 0; i < this.flags.length; i++){\n            const flag = this.flags[i];\n            if (flag != null) res[flag] = !!(val & 1 << i);\n        }\n        return res;\n    }\n    size() {\n        return this.type.size();\n    }\n    encode(stream, keys) {\n        let val = 0;\n        for(let i = 0; i < this.flags.length; i++){\n            const flag = this.flags[i];\n            if (flag != null) {\n                if (keys[flag]) val |= 1 << i;\n            }\n        }\n        return this.type.encode(stream, val);\n    }\n}\n\n\n\nclass $a0962835272634bf$export$ff887cefee4d61ec extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type){\n        super();\n        this.type = type;\n    }\n    decode(stream, parent) {\n        return !!this.type.decode(stream, parent);\n    }\n    size(val, parent) {\n        return this.type.size(val, parent);\n    }\n    encode(stream, val, parent) {\n        return this.type.encode(stream, +val, parent);\n    }\n}\n\n\n\n\n\nclass $ce1900e78ba28923$export$7d22a0eea6656474 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(length){\n        super();\n        this.length = length;\n    }\n    decode(stream, parent) {\n        const length = $978b446018acf522$export$83b6dc3503c1fda6(this.length, stream, parent);\n        return stream.readBuffer(length);\n    }\n    size(val, parent) {\n        if (!val) return $978b446018acf522$export$83b6dc3503c1fda6(this.length, null, parent);\n        let len = val.length;\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) len += this.length.size();\n        return len;\n    }\n    encode(stream, buf, parent) {\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) this.length.encode(stream, buf.length);\n        return stream.writeBuffer(buf);\n    }\n}\n\n\n\nclass $cafc45cc672d5f91$export$deb82508dd66d288 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, options = []){\n        super();\n        this.type = type;\n        this.options = options;\n    }\n    decode(stream) {\n        const index = this.type.decode(stream);\n        return this.options[index] || index;\n    }\n    size() {\n        return this.type.size();\n    }\n    encode(stream, val) {\n        const index = this.options.indexOf(val);\n        if (index === -1) throw new Error(`Unknown option in enum: ${val}`);\n        return this.type.encode(stream, index);\n    }\n}\n\n\n\nclass $e3298619df00705e$export$7acb7b24c478f9c6 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, condition = true){\n        super();\n        this.type = type;\n        this.condition = condition;\n    }\n    decode(stream, parent) {\n        let { condition: condition } = this;\n        if (typeof condition === \"function\") condition = condition.call(parent, parent);\n        if (condition) return this.type.decode(stream, parent);\n    }\n    size(val, parent) {\n        let { condition: condition } = this;\n        if (typeof condition === \"function\") condition = condition.call(parent, parent);\n        if (condition) return this.type.size(val, parent);\n        else return 0;\n    }\n    encode(stream, val, parent) {\n        let { condition: condition } = this;\n        if (typeof condition === \"function\") condition = condition.call(parent, parent);\n        if (condition) return this.type.encode(stream, val, parent);\n    }\n}\n\n\n\n\nclass $30e179fcc799e217$export$da9b5fe187a9aa1 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(type, count = 1){\n        super();\n        this.type = type;\n        this.count = count;\n    }\n    decode(stream, parent) {\n        stream.pos += this.size(null, parent);\n        return undefined;\n    }\n    size(data, parent) {\n        const count = $978b446018acf522$export$83b6dc3503c1fda6(this.count, null, parent);\n        return this.type.size() * count;\n    }\n    encode(stream, val, parent) {\n        return stream.fill(0, this.size(val, parent));\n    }\n}\n\n\n\n\n\nclass $16be2d98cb6bced0$export$89b8e0fa65f6a914 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(length, encoding = \"ascii\"){\n        super();\n        this.length = length;\n        this.encoding = encoding;\n    }\n    decode(stream, parent) {\n        let length, pos;\n        if (this.length != null) length = $978b446018acf522$export$83b6dc3503c1fda6(this.length, stream, parent);\n        else {\n            let buffer;\n            ({ buffer: buffer, length: length, pos: pos } = stream);\n            while(pos < length && buffer[pos] !== 0x00)++pos;\n            length = pos - stream.pos;\n        }\n        let { encoding: encoding } = this;\n        if (typeof encoding === \"function\") encoding = encoding.call(parent, parent) || \"ascii\";\n        const string = stream.readString(length, encoding);\n        if (this.length == null && stream.pos < stream.length) stream.pos++;\n        return string;\n    }\n    size(val, parent) {\n        // Use the defined value if no value was given\n        if (!val) return $978b446018acf522$export$83b6dc3503c1fda6(this.length, null, parent);\n        let { encoding: encoding } = this;\n        if (typeof encoding === \"function\") encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || \"ascii\";\n        if (encoding === \"utf16be\") encoding = \"utf16le\";\n        let size = $16be2d98cb6bced0$var$byteLength(val, encoding);\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) size += this.length.size();\n        if (this.length == null) size++;\n        return size;\n    }\n    encode(stream, val, parent) {\n        let { encoding: encoding } = this;\n        if (typeof encoding === \"function\") encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || \"ascii\";\n        if (this.length instanceof (0, $83cea26e2678b6a9$export$fffa67e515d04022)) this.length.encode(stream, $16be2d98cb6bced0$var$byteLength(val, encoding));\n        stream.writeString(val, encoding);\n        if (this.length == null) return stream.writeUInt8(0x00);\n    }\n}\nfunction $16be2d98cb6bced0$var$byteLength(string, encoding) {\n    switch(encoding){\n        case \"ascii\":\n            return string.length;\n        case \"utf8\":\n            let len = 0;\n            for(let i = 0; i < string.length; i++){\n                let c = string.charCodeAt(i);\n                if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n                    let c2 = string.charCodeAt(++i);\n                    if ((c2 & 0xfc00) === 0xdc00) c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n                    else // unmatched surrogate.\n                    i--;\n                }\n                if ((c & 0xffffff80) === 0) len++;\n                else if ((c & 0xfffff800) === 0) len += 2;\n                else if ((c & 0xffff0000) === 0) len += 3;\n                else if ((c & 0xffe00000) === 0) len += 4;\n            }\n            return len;\n        case \"utf16le\":\n        case \"utf16-le\":\n        case \"utf16be\":\n        case \"utf16-be\":\n        case \"ucs2\":\n            return string.length * 2;\n        default:\n            throw new Error(\"Unknown encoding \" + encoding);\n    }\n}\n\n\n\n\nclass $0b2a422743092498$export$eabc71f011df675a extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(fields = {}){\n        super();\n        this.fields = fields;\n    }\n    decode(stream, parent, length = 0) {\n        const res = this._setup(stream, parent, length);\n        this._parseFields(stream, res, this.fields);\n        if (this.process != null) this.process.call(res, stream);\n        return res;\n    }\n    _setup(stream, parent, length) {\n        const res = {};\n        // define hidden properties\n        Object.defineProperties(res, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            },\n            _currentOffset: {\n                value: 0,\n                writable: true\n            },\n            _length: {\n                value: length\n            }\n        });\n        return res;\n    }\n    _parseFields(stream, res, fields) {\n        for(let key in fields){\n            var val;\n            const type = fields[key];\n            if (typeof type === \"function\") val = type.call(res, res);\n            else val = type.decode(stream, res);\n            if (val !== undefined) {\n                if (val instanceof $978b446018acf522$export$41705b1d644e0f14) Object.defineProperty(res, key, val);\n                else res[key] = val;\n            }\n            res._currentOffset = stream.pos - res._startOffset;\n        }\n    }\n    size(val, parent, includePointers = true) {\n        if (val == null) val = {};\n        const ctx = {\n            parent: parent,\n            val: val,\n            pointerSize: 0\n        };\n        if (this.preEncode != null) this.preEncode.call(val);\n        let size = 0;\n        for(let key in this.fields){\n            const type = this.fields[key];\n            if (type.size != null) size += type.size(val[key], ctx);\n        }\n        if (includePointers) size += ctx.pointerSize;\n        return size;\n    }\n    encode(stream, val, parent) {\n        let type;\n        if (this.preEncode != null) this.preEncode.call(val, stream);\n        const ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: val,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n        for(let key in this.fields){\n            type = this.fields[key];\n            if (type.encode != null) type.encode(stream, val[key], ctx);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            const ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n    }\n}\n\n\n\nconst $bf686a5101131396$var$getPath = (object, pathArray)=>{\n    return pathArray.reduce((prevObj, key)=>prevObj && prevObj[key], object);\n};\nclass $bf686a5101131396$export$95a8b60f4da7dec8 extends (0, $0b2a422743092498$export$eabc71f011df675a) {\n    constructor(type, versions = {}){\n        super();\n        this.type = type;\n        this.versions = versions;\n        if (typeof type === \"string\") this.versionPath = type.split(\".\");\n    }\n    decode(stream, parent, length = 0) {\n        const res = this._setup(stream, parent, length);\n        if (typeof this.type === \"string\") res.version = $bf686a5101131396$var$getPath(parent, this.versionPath);\n        else res.version = this.type.decode(stream);\n        if (this.versions.header) this._parseFields(stream, res, this.versions.header);\n        const fields = this.versions[res.version];\n        if (fields == null) throw new Error(`Unknown version ${res.version}`);\n        if (fields instanceof $bf686a5101131396$export$95a8b60f4da7dec8) return fields.decode(stream, parent);\n        this._parseFields(stream, res, fields);\n        if (this.process != null) this.process.call(res, stream);\n        return res;\n    }\n    size(val, parent, includePointers = true) {\n        let key, type;\n        if (!val) throw new Error(\"Not a fixed size\");\n        if (this.preEncode != null) this.preEncode.call(val);\n        const ctx = {\n            parent: parent,\n            val: val,\n            pointerSize: 0\n        };\n        let size = 0;\n        if (typeof this.type !== \"string\") size += this.type.size(val.version, ctx);\n        if (this.versions.header) for(key in this.versions.header){\n            type = this.versions.header[key];\n            if (type.size != null) size += type.size(val[key], ctx);\n        }\n        const fields = this.versions[val.version];\n        if (fields == null) throw new Error(`Unknown version ${val.version}`);\n        for(key in fields){\n            type = fields[key];\n            if (type.size != null) size += type.size(val[key], ctx);\n        }\n        if (includePointers) size += ctx.pointerSize;\n        return size;\n    }\n    encode(stream, val, parent) {\n        let key, type;\n        if (this.preEncode != null) this.preEncode.call(val, stream);\n        const ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: val,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n        if (typeof this.type !== \"string\") this.type.encode(stream, val.version);\n        if (this.versions.header) for(key in this.versions.header){\n            type = this.versions.header[key];\n            if (type.encode != null) type.encode(stream, val[key], ctx);\n        }\n        const fields = this.versions[val.version];\n        for(key in fields){\n            type = fields[key];\n            if (type.encode != null) type.encode(stream, val[key], ctx);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            const ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n    }\n}\n\n\n\n\n\n\nclass $a835a1cb0586c20c$export$b56007f12edf0c17 extends (0, $4c0d613e95890d04$export$ef88aa0d34c34520) {\n    constructor(offsetType, type, options = {}){\n        super();\n        this.offsetType = offsetType;\n        this.type = type;\n        this.options = options;\n        if (this.type === \"void\") this.type = null;\n        if (this.options.type == null) this.options.type = \"local\";\n        if (this.options.allowNull == null) this.options.allowNull = true;\n        if (this.options.nullValue == null) this.options.nullValue = 0;\n        if (this.options.lazy == null) this.options.lazy = false;\n        if (this.options.relativeTo) {\n            if (typeof this.options.relativeTo !== \"function\") throw new Error(\"relativeTo option must be a function\");\n            this.relativeToGetter = options.relativeTo;\n        }\n    }\n    decode(stream, ctx) {\n        const offset = this.offsetType.decode(stream, ctx);\n        // handle NULL pointers\n        if (offset === this.options.nullValue && this.options.allowNull) return null;\n        let relative;\n        switch(this.options.type){\n            case \"local\":\n                relative = ctx._startOffset;\n                break;\n            case \"immediate\":\n                relative = stream.pos - this.offsetType.size();\n                break;\n            case \"parent\":\n                relative = ctx.parent._startOffset;\n                break;\n            default:\n                var c = ctx;\n                while(c.parent)c = c.parent;\n                relative = c._startOffset || 0;\n        }\n        if (this.options.relativeTo) relative += this.relativeToGetter(ctx);\n        const ptr = offset + relative;\n        if (this.type != null) {\n            let val = null;\n            const decodeValue = ()=>{\n                if (val != null) return val;\n                const { pos: pos } = stream;\n                stream.pos = ptr;\n                val = this.type.decode(stream, ctx);\n                stream.pos = pos;\n                return val;\n            };\n            // If this is a lazy pointer, define a getter to decode only when needed.\n            // This obviously only works when the pointer is contained by a Struct.\n            if (this.options.lazy) return new $978b446018acf522$export$41705b1d644e0f14({\n                get: decodeValue\n            });\n            return decodeValue();\n        } else return ptr;\n    }\n    size(val, ctx) {\n        const parent = ctx;\n        switch(this.options.type){\n            case \"local\":\n            case \"immediate\":\n                break;\n            case \"parent\":\n                ctx = ctx.parent;\n                break;\n            default:\n                while(ctx.parent)ctx = ctx.parent;\n        }\n        let { type: type } = this;\n        if (type == null) {\n            if (!(val instanceof $a835a1cb0586c20c$export$df5cb1f3d04f5a0f)) throw new Error(\"Must be a VoidPointer\");\n            ({ type: type } = val);\n            val = val.value;\n        }\n        if (val && ctx) {\n            // Must be written as two separate lines rather than += in case `type.size` mutates ctx.pointerSize.\n            let size = type.size(val, parent);\n            ctx.pointerSize += size;\n        }\n        return this.offsetType.size();\n    }\n    encode(stream, val, ctx) {\n        let relative;\n        const parent = ctx;\n        if (val == null) {\n            this.offsetType.encode(stream, this.options.nullValue);\n            return;\n        }\n        switch(this.options.type){\n            case \"local\":\n                relative = ctx.startOffset;\n                break;\n            case \"immediate\":\n                relative = stream.pos + this.offsetType.size(val, parent);\n                break;\n            case \"parent\":\n                ctx = ctx.parent;\n                relative = ctx.startOffset;\n                break;\n            default:\n                relative = 0;\n                while(ctx.parent)ctx = ctx.parent;\n        }\n        if (this.options.relativeTo) relative += this.relativeToGetter(parent.val);\n        this.offsetType.encode(stream, ctx.pointerOffset - relative);\n        let { type: type } = this;\n        if (type == null) {\n            if (!(val instanceof $a835a1cb0586c20c$export$df5cb1f3d04f5a0f)) throw new Error(\"Must be a VoidPointer\");\n            ({ type: type } = val);\n            val = val.value;\n        }\n        ctx.pointers.push({\n            type: type,\n            val: val,\n            parent: parent\n        });\n        return ctx.pointerOffset += type.size(val, parent);\n    }\n}\nclass $a835a1cb0586c20c$export$df5cb1f3d04f5a0f {\n    constructor(type, value){\n        this.type = type;\n        this.value = value;\n    }\n}\n\n\n\n\nvar $5110215535661f7a$exports = {};\n\n$5110215535661f7a$exports = (parcelRequire(\"eQMeO\"));\n\n\nvar $17039aff9b7a4ae1$exports = {};\n\n$17039aff9b7a4ae1$exports = (parcelRequire(\"hieg9\"));\n\n\nvar $54da56340462fe8a$exports = {};\n\"use strict\";\n// do not edit .js files directly - edit src/index.jst\n$54da56340462fe8a$exports = function equal(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        if (a.constructor !== b.constructor) return false;\n        var length, i, keys;\n        if (Array.isArray(a)) {\n            length = a.length;\n            if (length != b.length) return false;\n            for(i = length; i-- !== 0;)if (!equal(a[i], b[i])) return false;\n            return true;\n        }\n        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n        keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length) return false;\n        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n        for(i = length; i-- !== 0;){\n            var key = keys[i];\n            if (!equal(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    return a !== a && b !== b;\n};\n\n\n\nvar $kuxul = parcelRequire(\"kuxul\");\nvar $6b4db174c89ebdc9$exports = {};\nvar $9f97e41f2448bce6$exports = {};\nvar $9f97e41f2448bce6$var$TINF_OK = 0;\nvar $9f97e41f2448bce6$var$TINF_DATA_ERROR = -3;\nfunction $9f97e41f2448bce6$var$Tree() {\n    this.table = new Uint16Array(16); /* table of code length counts */ \n    this.trans = new Uint16Array(288); /* code -> symbol translation table */ \n}\nfunction $9f97e41f2448bce6$var$Data(source, dest) {\n    this.source = source;\n    this.sourceIndex = 0;\n    this.tag = 0;\n    this.bitcount = 0;\n    this.dest = dest;\n    this.destLen = 0;\n    this.ltree = new $9f97e41f2448bce6$var$Tree(); /* dynamic length/symbol tree */ \n    this.dtree = new $9f97e41f2448bce6$var$Tree(); /* dynamic distance tree */ \n}\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */ var $9f97e41f2448bce6$var$sltree = new $9f97e41f2448bce6$var$Tree();\nvar $9f97e41f2448bce6$var$sdtree = new $9f97e41f2448bce6$var$Tree();\n/* extra bits and base tables for length codes */ var $9f97e41f2448bce6$var$length_bits = new Uint8Array(30);\nvar $9f97e41f2448bce6$var$length_base = new Uint16Array(30);\n/* extra bits and base tables for distance codes */ var $9f97e41f2448bce6$var$dist_bits = new Uint8Array(30);\nvar $9f97e41f2448bce6$var$dist_base = new Uint16Array(30);\n/* special ordering of code length codes */ var $9f97e41f2448bce6$var$clcidx = new Uint8Array([\n    16,\n    17,\n    18,\n    0,\n    8,\n    7,\n    9,\n    6,\n    10,\n    5,\n    11,\n    4,\n    12,\n    3,\n    13,\n    2,\n    14,\n    1,\n    15\n]);\n/* used by tinf_decode_trees, avoids allocations every call */ var $9f97e41f2448bce6$var$code_tree = new $9f97e41f2448bce6$var$Tree();\nvar $9f97e41f2448bce6$var$lengths = new Uint8Array(320);\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */ /* build extra bits and base tables */ function $9f97e41f2448bce6$var$tinf_build_bits_base(bits, base, delta, first) {\n    var i, sum;\n    /* build bits table */ for(i = 0; i < delta; ++i)bits[i] = 0;\n    for(i = 0; i < 30 - delta; ++i)bits[i + delta] = i / delta | 0;\n    /* build base table */ for(sum = first, i = 0; i < 30; ++i){\n        base[i] = sum;\n        sum += 1 << bits[i];\n    }\n}\n/* build the fixed huffman trees */ function $9f97e41f2448bce6$var$tinf_build_fixed_trees(lt, dt) {\n    var i;\n    /* build fixed length tree */ for(i = 0; i < 7; ++i)lt.table[i] = 0;\n    lt.table[7] = 24;\n    lt.table[8] = 152;\n    lt.table[9] = 112;\n    for(i = 0; i < 24; ++i)lt.trans[i] = 256 + i;\n    for(i = 0; i < 144; ++i)lt.trans[24 + i] = i;\n    for(i = 0; i < 8; ++i)lt.trans[168 + i] = 280 + i;\n    for(i = 0; i < 112; ++i)lt.trans[176 + i] = 144 + i;\n    /* build fixed distance tree */ for(i = 0; i < 5; ++i)dt.table[i] = 0;\n    dt.table[5] = 32;\n    for(i = 0; i < 32; ++i)dt.trans[i] = i;\n}\n/* given an array of code lengths, build a tree */ var $9f97e41f2448bce6$var$offs = new Uint16Array(16);\nfunction $9f97e41f2448bce6$var$tinf_build_tree(t, lengths, off, num) {\n    var i, sum;\n    /* clear code length count table */ for(i = 0; i < 16; ++i)t.table[i] = 0;\n    /* scan symbol lengths, and sum code length counts */ for(i = 0; i < num; ++i)t.table[lengths[off + i]]++;\n    t.table[0] = 0;\n    /* compute offset table for distribution sort */ for(sum = 0, i = 0; i < 16; ++i){\n        $9f97e41f2448bce6$var$offs[i] = sum;\n        sum += t.table[i];\n    }\n    /* create code->symbol translation table (symbols sorted by code) */ for(i = 0; i < num; ++i)if (lengths[off + i]) t.trans[$9f97e41f2448bce6$var$offs[lengths[off + i]]++] = i;\n}\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */ /* get one bit from source stream */ function $9f97e41f2448bce6$var$tinf_getbit(d) {\n    /* check if tag is empty */ if (!d.bitcount--) {\n        /* load next tag */ d.tag = d.source[d.sourceIndex++];\n        d.bitcount = 7;\n    }\n    /* shift bit out of tag */ var bit = d.tag & 1;\n    d.tag >>>= 1;\n    return bit;\n}\n/* read a num bit value from a stream and add base */ function $9f97e41f2448bce6$var$tinf_read_bits(d, num, base) {\n    if (!num) return base;\n    while(d.bitcount < 24){\n        d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n        d.bitcount += 8;\n    }\n    var val = d.tag & 0xffff >>> 16 - num;\n    d.tag >>>= num;\n    d.bitcount -= num;\n    return val + base;\n}\n/* given a data stream and a tree, decode a symbol */ function $9f97e41f2448bce6$var$tinf_decode_symbol(d, t) {\n    while(d.bitcount < 24){\n        d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n        d.bitcount += 8;\n    }\n    var sum = 0, cur = 0, len = 0;\n    var tag = d.tag;\n    /* get more bits while code value is above sum */ do {\n        cur = 2 * cur + (tag & 1);\n        tag >>>= 1;\n        ++len;\n        sum += t.table[len];\n        cur -= t.table[len];\n    }while (cur >= 0);\n    d.tag = tag;\n    d.bitcount -= len;\n    return t.trans[sum + cur];\n}\n/* given a data stream, decode dynamic trees from it */ function $9f97e41f2448bce6$var$tinf_decode_trees(d, lt, dt) {\n    var hlit, hdist, hclen;\n    var i, num, length;\n    /* get 5 bits HLIT (257-286) */ hlit = $9f97e41f2448bce6$var$tinf_read_bits(d, 5, 257);\n    /* get 5 bits HDIST (1-32) */ hdist = $9f97e41f2448bce6$var$tinf_read_bits(d, 5, 1);\n    /* get 4 bits HCLEN (4-19) */ hclen = $9f97e41f2448bce6$var$tinf_read_bits(d, 4, 4);\n    for(i = 0; i < 19; ++i)$9f97e41f2448bce6$var$lengths[i] = 0;\n    /* read code lengths for code length alphabet */ for(i = 0; i < hclen; ++i){\n        /* get 3 bits code length (0-7) */ var clen = $9f97e41f2448bce6$var$tinf_read_bits(d, 3, 0);\n        $9f97e41f2448bce6$var$lengths[$9f97e41f2448bce6$var$clcidx[i]] = clen;\n    }\n    /* build code length tree */ $9f97e41f2448bce6$var$tinf_build_tree($9f97e41f2448bce6$var$code_tree, $9f97e41f2448bce6$var$lengths, 0, 19);\n    /* decode code lengths for the dynamic trees */ for(num = 0; num < hlit + hdist;){\n        var sym = $9f97e41f2448bce6$var$tinf_decode_symbol(d, $9f97e41f2448bce6$var$code_tree);\n        switch(sym){\n            case 16:\n                /* copy previous code length 3-6 times (read 2 bits) */ var prev = $9f97e41f2448bce6$var$lengths[num - 1];\n                for(length = $9f97e41f2448bce6$var$tinf_read_bits(d, 2, 3); length; --length)$9f97e41f2448bce6$var$lengths[num++] = prev;\n                break;\n            case 17:\n                /* repeat code length 0 for 3-10 times (read 3 bits) */ for(length = $9f97e41f2448bce6$var$tinf_read_bits(d, 3, 3); length; --length)$9f97e41f2448bce6$var$lengths[num++] = 0;\n                break;\n            case 18:\n                /* repeat code length 0 for 11-138 times (read 7 bits) */ for(length = $9f97e41f2448bce6$var$tinf_read_bits(d, 7, 11); length; --length)$9f97e41f2448bce6$var$lengths[num++] = 0;\n                break;\n            default:\n                /* values 0-15 represent the actual code lengths */ $9f97e41f2448bce6$var$lengths[num++] = sym;\n                break;\n        }\n    }\n    /* build dynamic trees */ $9f97e41f2448bce6$var$tinf_build_tree(lt, $9f97e41f2448bce6$var$lengths, 0, hlit);\n    $9f97e41f2448bce6$var$tinf_build_tree(dt, $9f97e41f2448bce6$var$lengths, hlit, hdist);\n}\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */ /* given a stream and two trees, inflate a block of data */ function $9f97e41f2448bce6$var$tinf_inflate_block_data(d, lt, dt) {\n    while(true){\n        var sym = $9f97e41f2448bce6$var$tinf_decode_symbol(d, lt);\n        /* check for end of block */ if (sym === 256) return $9f97e41f2448bce6$var$TINF_OK;\n        if (sym < 256) d.dest[d.destLen++] = sym;\n        else {\n            var length, dist, offs;\n            var i;\n            sym -= 257;\n            /* possibly get more bits from length code */ length = $9f97e41f2448bce6$var$tinf_read_bits(d, $9f97e41f2448bce6$var$length_bits[sym], $9f97e41f2448bce6$var$length_base[sym]);\n            dist = $9f97e41f2448bce6$var$tinf_decode_symbol(d, dt);\n            /* possibly get more bits from distance code */ offs = d.destLen - $9f97e41f2448bce6$var$tinf_read_bits(d, $9f97e41f2448bce6$var$dist_bits[dist], $9f97e41f2448bce6$var$dist_base[dist]);\n            /* copy match */ for(i = offs; i < offs + length; ++i)d.dest[d.destLen++] = d.dest[i];\n        }\n    }\n}\n/* inflate an uncompressed block of data */ function $9f97e41f2448bce6$var$tinf_inflate_uncompressed_block(d) {\n    var length, invlength;\n    var i;\n    /* unread from bitbuffer */ while(d.bitcount > 8){\n        d.sourceIndex--;\n        d.bitcount -= 8;\n    }\n    /* get length */ length = d.source[d.sourceIndex + 1];\n    length = 256 * length + d.source[d.sourceIndex];\n    /* get one's complement of length */ invlength = d.source[d.sourceIndex + 3];\n    invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n    /* check length */ if (length !== (~invlength & 0x0000ffff)) return $9f97e41f2448bce6$var$TINF_DATA_ERROR;\n    d.sourceIndex += 4;\n    /* copy block */ for(i = length; i; --i)d.dest[d.destLen++] = d.source[d.sourceIndex++];\n    /* make sure we start next block on a byte boundary */ d.bitcount = 0;\n    return $9f97e41f2448bce6$var$TINF_OK;\n}\n/* inflate stream from source to dest */ function $9f97e41f2448bce6$var$tinf_uncompress(source, dest) {\n    var d = new $9f97e41f2448bce6$var$Data(source, dest);\n    var bfinal, btype, res;\n    do {\n        /* read final block flag */ bfinal = $9f97e41f2448bce6$var$tinf_getbit(d);\n        /* read block type (2 bits) */ btype = $9f97e41f2448bce6$var$tinf_read_bits(d, 2, 0);\n        /* decompress block */ switch(btype){\n            case 0:\n                /* decompress uncompressed block */ res = $9f97e41f2448bce6$var$tinf_inflate_uncompressed_block(d);\n                break;\n            case 1:\n                /* decompress block with fixed huffman trees */ res = $9f97e41f2448bce6$var$tinf_inflate_block_data(d, $9f97e41f2448bce6$var$sltree, $9f97e41f2448bce6$var$sdtree);\n                break;\n            case 2:\n                /* decompress block with dynamic huffman trees */ $9f97e41f2448bce6$var$tinf_decode_trees(d, d.ltree, d.dtree);\n                res = $9f97e41f2448bce6$var$tinf_inflate_block_data(d, d.ltree, d.dtree);\n                break;\n            default:\n                res = $9f97e41f2448bce6$var$TINF_DATA_ERROR;\n        }\n        if (res !== $9f97e41f2448bce6$var$TINF_OK) throw new Error(\"Data error\");\n    }while (!bfinal);\n    if (d.destLen < d.dest.length) {\n        if (typeof d.dest.slice === \"function\") return d.dest.slice(0, d.destLen);\n        else return d.dest.subarray(0, d.destLen);\n    }\n    return d.dest;\n}\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */ /* build fixed huffman trees */ $9f97e41f2448bce6$var$tinf_build_fixed_trees($9f97e41f2448bce6$var$sltree, $9f97e41f2448bce6$var$sdtree);\n/* build extra bits and base tables */ $9f97e41f2448bce6$var$tinf_build_bits_base($9f97e41f2448bce6$var$length_bits, $9f97e41f2448bce6$var$length_base, 4, 3);\n$9f97e41f2448bce6$var$tinf_build_bits_base($9f97e41f2448bce6$var$dist_bits, $9f97e41f2448bce6$var$dist_base, 2, 1);\n/* fix a special case */ $9f97e41f2448bce6$var$length_bits[28] = 0;\n$9f97e41f2448bce6$var$length_base[28] = 258;\n$9f97e41f2448bce6$exports = $9f97e41f2448bce6$var$tinf_uncompress;\n\n\nvar $03c86720e418ebc3$exports = {};\nconst $03c86720e418ebc3$var$isBigEndian = new Uint8Array(new Uint32Array([\n    0x12345678\n]).buffer)[0] === 0x12;\nconst $03c86720e418ebc3$var$swap = (b, n, m)=>{\n    let i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n};\nconst $03c86720e418ebc3$var$swap32 = (array)=>{\n    const len = array.length;\n    for(let i = 0; i < len; i += 4){\n        $03c86720e418ebc3$var$swap(array, i, i + 3);\n        $03c86720e418ebc3$var$swap(array, i + 1, i + 2);\n    }\n};\nconst $03c86720e418ebc3$var$swap32LE = (array)=>{\n    if ($03c86720e418ebc3$var$isBigEndian) $03c86720e418ebc3$var$swap32(array);\n};\n$03c86720e418ebc3$exports = {\n    swap32LE: $03c86720e418ebc3$var$swap32LE\n};\n\n\nvar $6b4db174c89ebdc9$require$swap32LE = $03c86720e418ebc3$exports.swap32LE;\n// Shift size for getting the index-1 table offset.\nconst $6b4db174c89ebdc9$var$SHIFT_1 = 11;\n// Shift size for getting the index-2 table offset.\nconst $6b4db174c89ebdc9$var$SHIFT_2 = 5;\n// Difference between the two shift sizes,\n// for getting an index-1 offset from an index-2 offset. 6=11-5\nconst $6b4db174c89ebdc9$var$SHIFT_1_2 = $6b4db174c89ebdc9$var$SHIFT_1 - $6b4db174c89ebdc9$var$SHIFT_2;\n// Number of index-1 entries for the BMP. 32=0x20\n// This part of the index-1 table is omitted from the serialized form.\nconst $6b4db174c89ebdc9$var$OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> $6b4db174c89ebdc9$var$SHIFT_1;\n// Number of entries in an index-2 block. 64=0x40\nconst $6b4db174c89ebdc9$var$INDEX_2_BLOCK_LENGTH = 1 << $6b4db174c89ebdc9$var$SHIFT_1_2;\n// Mask for getting the lower bits for the in-index-2-block offset. */\nconst $6b4db174c89ebdc9$var$INDEX_2_MASK = $6b4db174c89ebdc9$var$INDEX_2_BLOCK_LENGTH - 1;\n// Shift size for shifting left the index array values.\n// Increases possible data size with 16-bit index values at the cost\n// of compactability.\n// This requires data blocks to be aligned by DATA_GRANULARITY.\nconst $6b4db174c89ebdc9$var$INDEX_SHIFT = 2;\n// Number of entries in a data block. 32=0x20\nconst $6b4db174c89ebdc9$var$DATA_BLOCK_LENGTH = 1 << $6b4db174c89ebdc9$var$SHIFT_2;\n// Mask for getting the lower bits for the in-data-block offset.\nconst $6b4db174c89ebdc9$var$DATA_MASK = $6b4db174c89ebdc9$var$DATA_BLOCK_LENGTH - 1;\n// The part of the index-2 table for U+D800..U+DBFF stores values for\n// lead surrogate code _units_ not code _points_.\n// Values for lead surrogate code _points_ are indexed with this portion of the table.\n// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)\nconst $6b4db174c89ebdc9$var$LSCP_INDEX_2_OFFSET = 0x10000 >> $6b4db174c89ebdc9$var$SHIFT_2;\nconst $6b4db174c89ebdc9$var$LSCP_INDEX_2_LENGTH = 0x400 >> $6b4db174c89ebdc9$var$SHIFT_2;\n// Count the lengths of both BMP pieces. 2080=0x820\nconst $6b4db174c89ebdc9$var$INDEX_2_BMP_LENGTH = $6b4db174c89ebdc9$var$LSCP_INDEX_2_OFFSET + $6b4db174c89ebdc9$var$LSCP_INDEX_2_LENGTH;\n// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.\nconst $6b4db174c89ebdc9$var$UTF8_2B_INDEX_2_OFFSET = $6b4db174c89ebdc9$var$INDEX_2_BMP_LENGTH;\nconst $6b4db174c89ebdc9$var$UTF8_2B_INDEX_2_LENGTH = 32; // U+0800 is the first code point after 2-byte UTF-8\n// The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n// Variable length, for code points up to highStart, where the last single-value range starts.\n// Maximum length 512=0x200=0x100000>>SHIFT_1.\n// (For 0x100000 supplementary code points U+10000..U+10ffff.)\n//\n// The part of the index-2 table for supplementary code points starts\n// after this index-1 table.\n//\n// Both the index-1 table and the following part of the index-2 table\n// are omitted completely if there is only BMP data.\nconst $6b4db174c89ebdc9$var$INDEX_1_OFFSET = $6b4db174c89ebdc9$var$UTF8_2B_INDEX_2_OFFSET + $6b4db174c89ebdc9$var$UTF8_2B_INDEX_2_LENGTH;\n// The alignment size of a data block. Also the granularity for compaction.\nconst $6b4db174c89ebdc9$var$DATA_GRANULARITY = 1 << $6b4db174c89ebdc9$var$INDEX_SHIFT;\nclass $6b4db174c89ebdc9$var$UnicodeTrie {\n    constructor(data){\n        const isBuffer = typeof data.readUInt32BE === \"function\" && typeof data.slice === \"function\";\n        if (isBuffer || data instanceof Uint8Array) {\n            // read binary format\n            let uncompressedLength;\n            if (isBuffer) {\n                this.highStart = data.readUInt32LE(0);\n                this.errorValue = data.readUInt32LE(4);\n                uncompressedLength = data.readUInt32LE(8);\n                data = data.slice(12);\n            } else {\n                const view = new DataView(data.buffer);\n                this.highStart = view.getUint32(0, true);\n                this.errorValue = view.getUint32(4, true);\n                uncompressedLength = view.getUint32(8, true);\n                data = data.subarray(12);\n            }\n            // double inflate the actual trie data\n            data = $9f97e41f2448bce6$exports(data, new Uint8Array(uncompressedLength));\n            data = $9f97e41f2448bce6$exports(data, new Uint8Array(uncompressedLength));\n            // swap bytes from little-endian\n            $6b4db174c89ebdc9$require$swap32LE(data);\n            this.data = new Uint32Array(data.buffer);\n        } else // pre-parsed data\n        ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);\n    }\n    get(codePoint) {\n        let index;\n        if (codePoint < 0 || codePoint > 0x10ffff) return this.errorValue;\n        if (codePoint < 0xd800 || codePoint > 0xdbff && codePoint <= 0xffff) {\n            // Ordinary BMP code point, excluding leading surrogates.\n            // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.\n            // data is stored in the index array itself.\n            index = (this.data[codePoint >> $6b4db174c89ebdc9$var$SHIFT_2] << $6b4db174c89ebdc9$var$INDEX_SHIFT) + (codePoint & $6b4db174c89ebdc9$var$DATA_MASK);\n            return this.data[index];\n        }\n        if (codePoint <= 0xffff) {\n            // Lead Surrogate Code Point.  A Separate index section is stored for\n            // lead surrogate code units and code points.\n            //   The main index has the code unit data.\n            //   For this function, we need the code point data.\n            index = (this.data[$6b4db174c89ebdc9$var$LSCP_INDEX_2_OFFSET + (codePoint - 0xd800 >> $6b4db174c89ebdc9$var$SHIFT_2)] << $6b4db174c89ebdc9$var$INDEX_SHIFT) + (codePoint & $6b4db174c89ebdc9$var$DATA_MASK);\n            return this.data[index];\n        }\n        if (codePoint < this.highStart) {\n            // Supplemental code point, use two-level lookup.\n            index = this.data[$6b4db174c89ebdc9$var$INDEX_1_OFFSET - $6b4db174c89ebdc9$var$OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> $6b4db174c89ebdc9$var$SHIFT_1)];\n            index = this.data[index + (codePoint >> $6b4db174c89ebdc9$var$SHIFT_2 & $6b4db174c89ebdc9$var$INDEX_2_MASK)];\n            index = (index << $6b4db174c89ebdc9$var$INDEX_SHIFT) + (codePoint & $6b4db174c89ebdc9$var$DATA_MASK);\n            return this.data[index];\n        }\n        return this.data[this.data.length - $6b4db174c89ebdc9$var$DATA_GRANULARITY];\n    }\n}\n$6b4db174c89ebdc9$exports = $6b4db174c89ebdc9$var$UnicodeTrie;\n\n\nfunction $38e929d1b08c92d4$var$$parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n}\nvar $38e929d1b08c92d4$var$$f4087201da764553$exports = {};\n$38e929d1b08c92d4$var$$f4087201da764553$exports = JSON.parse('{\"categories\":[\"Cc\",\"Zs\",\"Po\",\"Sc\",\"Ps\",\"Pe\",\"Sm\",\"Pd\",\"Nd\",\"Lu\",\"Sk\",\"Pc\",\"Ll\",\"So\",\"Lo\",\"Pi\",\"Cf\",\"No\",\"Pf\",\"Lt\",\"Lm\",\"Mn\",\"Me\",\"Mc\",\"Nl\",\"Zl\",\"Zp\",\"Cs\",\"Co\"],\"combiningClasses\":[\"Not_Reordered\",\"Above\",\"Above_Right\",\"Below\",\"Attached_Above_Right\",\"Attached_Below\",\"Overlay\",\"Iota_Subscript\",\"Double_Below\",\"Double_Above\",\"Below_Right\",\"Above_Left\",\"CCC10\",\"CCC11\",\"CCC12\",\"CCC13\",\"CCC14\",\"CCC15\",\"CCC16\",\"CCC17\",\"CCC18\",\"CCC19\",\"CCC20\",\"CCC21\",\"CCC22\",\"CCC23\",\"CCC24\",\"CCC25\",\"CCC30\",\"CCC31\",\"CCC32\",\"CCC27\",\"CCC28\",\"CCC29\",\"CCC33\",\"CCC34\",\"CCC35\",\"CCC36\",\"Nukta\",\"Virama\",\"CCC84\",\"CCC91\",\"CCC103\",\"CCC107\",\"CCC118\",\"CCC122\",\"CCC129\",\"CCC130\",\"CCC132\",\"Attached_Above\",\"Below_Left\",\"Left\",\"Kana_Voicing\",\"CCC26\",\"Right\"],\"scripts\":[\"Common\",\"Latin\",\"Bopomofo\",\"Inherited\",\"Greek\",\"Coptic\",\"Cyrillic\",\"Armenian\",\"Hebrew\",\"Arabic\",\"Syriac\",\"Thaana\",\"Nko\",\"Samaritan\",\"Mandaic\",\"Devanagari\",\"Bengali\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhala\",\"Thai\",\"Lao\",\"Tibetan\",\"Myanmar\",\"Georgian\",\"Hangul\",\"Ethiopic\",\"Cherokee\",\"Canadian_Aboriginal\",\"Ogham\",\"Runic\",\"Tagalog\",\"Hanunoo\",\"Buhid\",\"Tagbanwa\",\"Khmer\",\"Mongolian\",\"Limbu\",\"Tai_Le\",\"New_Tai_Lue\",\"Buginese\",\"Tai_Tham\",\"Balinese\",\"Sundanese\",\"Batak\",\"Lepcha\",\"Ol_Chiki\",\"Braille\",\"Glagolitic\",\"Tifinagh\",\"Han\",\"Hiragana\",\"Katakana\",\"Yi\",\"Lisu\",\"Vai\",\"Bamum\",\"Syloti_Nagri\",\"Phags_Pa\",\"Saurashtra\",\"Kayah_Li\",\"Rejang\",\"Javanese\",\"Cham\",\"Tai_Viet\",\"Meetei_Mayek\",\"null\",\"Linear_B\",\"Lycian\",\"Carian\",\"Old_Italic\",\"Gothic\",\"Old_Permic\",\"Ugaritic\",\"Old_Persian\",\"Deseret\",\"Shavian\",\"Osmanya\",\"Osage\",\"Elbasan\",\"Caucasian_Albanian\",\"Linear_A\",\"Cypriot\",\"Imperial_Aramaic\",\"Palmyrene\",\"Nabataean\",\"Hatran\",\"Phoenician\",\"Lydian\",\"Meroitic_Hieroglyphs\",\"Meroitic_Cursive\",\"Kharoshthi\",\"Old_South_Arabian\",\"Old_North_Arabian\",\"Manichaean\",\"Avestan\",\"Inscriptional_Parthian\",\"Inscriptional_Pahlavi\",\"Psalter_Pahlavi\",\"Old_Turkic\",\"Old_Hungarian\",\"Hanifi_Rohingya\",\"Old_Sogdian\",\"Sogdian\",\"Elymaic\",\"Brahmi\",\"Kaithi\",\"Sora_Sompeng\",\"Chakma\",\"Mahajani\",\"Sharada\",\"Khojki\",\"Multani\",\"Khudawadi\",\"Grantha\",\"Newa\",\"Tirhuta\",\"Siddham\",\"Modi\",\"Takri\",\"Ahom\",\"Dogra\",\"Warang_Citi\",\"Nandinagari\",\"Zanabazar_Square\",\"Soyombo\",\"Pau_Cin_Hau\",\"Bhaiksuki\",\"Marchen\",\"Masaram_Gondi\",\"Gunjala_Gondi\",\"Makasar\",\"Cuneiform\",\"Egyptian_Hieroglyphs\",\"Anatolian_Hieroglyphs\",\"Mro\",\"Bassa_Vah\",\"Pahawh_Hmong\",\"Medefaidrin\",\"Miao\",\"Tangut\",\"Nushu\",\"Duployan\",\"SignWriting\",\"Nyiakeng_Puachue_Hmong\",\"Wancho\",\"Mende_Kikakui\",\"Adlam\"],\"eaw\":[\"N\",\"Na\",\"A\",\"W\",\"H\",\"F\"]}');\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$trie = new (0, (/*@__PURE__*/$parcel$interopDefault($6b4db174c89ebdc9$exports)))((0, (/*@__PURE__*/$parcel$interopDefault($kuxul))).toByteArray(\"\"));\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$log2 = Math.log2 || ((n)=>Math.log(n) / Math.LN2);\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$bits = (n)=>$38e929d1b08c92d4$var$$747425b437e121da$var$log2(n) + 1 | 0;\n// compute the number of bits stored for each field\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_BITS = $38e929d1b08c92d4$var$$747425b437e121da$var$bits(/*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).categories.length - 1);\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_BITS = $38e929d1b08c92d4$var$$747425b437e121da$var$bits(/*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).combiningClasses.length - 1);\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_BITS = $38e929d1b08c92d4$var$$747425b437e121da$var$bits(/*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).scripts.length - 1);\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS = $38e929d1b08c92d4$var$$747425b437e121da$var$bits(/*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).eaw.length - 1);\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS = 10;\n// compute shift and mask values for each field\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_SHIFT = $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_SHIFT = $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_SHIFT = $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS + $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_SHIFT = $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_MASK = (1 << $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_BITS) - 1;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_MASK = (1 << $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_BITS) - 1;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_MASK = (1 << $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_BITS) - 1;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_MASK = (1 << $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS) - 1;\nconst $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_MASK = (1 << $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_BITS) - 1;\nfunction $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint) {\n    const val = $38e929d1b08c92d4$var$$747425b437e121da$var$trie.get(codePoint);\n    return /*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).categories[val >> $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_SHIFT & $38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_MASK];\n}\nfunction $38e929d1b08c92d4$export$c03b919c6651ed55(codePoint) {\n    const val = $38e929d1b08c92d4$var$$747425b437e121da$var$trie.get(codePoint);\n    return /*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).combiningClasses[val >> $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_SHIFT & $38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_MASK];\n}\nfunction $38e929d1b08c92d4$export$941569448d136665(codePoint) {\n    const val = $38e929d1b08c92d4$var$$747425b437e121da$var$trie.get(codePoint);\n    return /*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).scripts[val >> $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_SHIFT & $38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_MASK];\n}\nfunction $38e929d1b08c92d4$export$92f6187db8ca6d26(codePoint) {\n    const val = $38e929d1b08c92d4$var$$747425b437e121da$var$trie.get(codePoint);\n    return /*@__PURE__*/ $38e929d1b08c92d4$var$$parcel$interopDefault($38e929d1b08c92d4$var$$f4087201da764553$exports).eaw[val >> $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_SHIFT & $38e929d1b08c92d4$var$$747425b437e121da$var$EAW_MASK];\n}\nfunction $38e929d1b08c92d4$export$7d1258ebb7625a0d(codePoint) {\n    let val = $38e929d1b08c92d4$var$$747425b437e121da$var$trie.get(codePoint);\n    let num = val & $38e929d1b08c92d4$var$$747425b437e121da$var$NUMBER_MASK;\n    if (num === 0) return null;\n    else if (num <= 50) return num - 1;\n    else if (num < 0x1e0) {\n        const numerator = (num >> 4) - 12;\n        const denominator = (num & 0xf) + 1;\n        return numerator / denominator;\n    } else if (num < 0x300) {\n        val = (num >> 5) - 14;\n        let exp = (num & 0x1f) + 2;\n        while(exp > 0){\n            val *= 10;\n            exp--;\n        }\n        return val;\n    } else {\n        val = (num >> 2) - 0xbf;\n        let exp = (num & 3) + 1;\n        while(exp > 0){\n            val *= 60;\n            exp--;\n        }\n        return val;\n    }\n}\nfunction $38e929d1b08c92d4$export$52c8ea63abd07594(codePoint) {\n    const category = $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint);\n    return category === \"Lu\" || category === \"Ll\" || category === \"Lt\" || category === \"Lm\" || category === \"Lo\" || category === \"Nl\";\n}\nfunction $38e929d1b08c92d4$export$727d9dbc4fbb948f(codePoint) {\n    return $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint) === \"Nd\";\n}\nfunction $38e929d1b08c92d4$export$a5b49f4dc6a07d2c(codePoint) {\n    const category = $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint);\n    return category === \"Pc\" || category === \"Pd\" || category === \"Pe\" || category === \"Pf\" || category === \"Pi\" || category === \"Po\" || category === \"Ps\";\n}\nfunction $38e929d1b08c92d4$export$7b6804e8df61fcf5(codePoint) {\n    return $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint) === \"Ll\";\n}\nfunction $38e929d1b08c92d4$export$aebd617640818cda(codePoint) {\n    return $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint) === \"Lu\";\n}\nfunction $38e929d1b08c92d4$export$de8b4ee23b2cf823(codePoint) {\n    return $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint) === \"Lt\";\n}\nfunction $38e929d1b08c92d4$export$3c52dd84024ae72c(codePoint) {\n    const category = $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint);\n    return category === \"Zs\" || category === \"Zl\" || category === \"Zp\";\n}\nfunction $38e929d1b08c92d4$export$a11bdcffe109e74b(codePoint) {\n    const category = $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint);\n    return category === \"Nd\" || category === \"No\" || category === \"Nl\" || category === \"Lu\" || category === \"Ll\" || category === \"Lt\" || category === \"Lm\" || category === \"Lo\" || category === \"Me\" || category === \"Mc\";\n}\nfunction $38e929d1b08c92d4$export$e33ad6871e762338(codePoint) {\n    const category = $38e929d1b08c92d4$export$410364bbb673ddbc(codePoint);\n    return category === \"Mn\" || category === \"Me\" || category === \"Mc\";\n}\nvar $38e929d1b08c92d4$export$2e2bcd8739ae039 = {\n    getCategory: $38e929d1b08c92d4$export$410364bbb673ddbc,\n    getCombiningClass: $38e929d1b08c92d4$export$c03b919c6651ed55,\n    getScript: $38e929d1b08c92d4$export$941569448d136665,\n    getEastAsianWidth: $38e929d1b08c92d4$export$92f6187db8ca6d26,\n    getNumericValue: $38e929d1b08c92d4$export$7d1258ebb7625a0d,\n    isAlphabetic: $38e929d1b08c92d4$export$52c8ea63abd07594,\n    isDigit: $38e929d1b08c92d4$export$727d9dbc4fbb948f,\n    isPunctuation: $38e929d1b08c92d4$export$a5b49f4dc6a07d2c,\n    isLowerCase: $38e929d1b08c92d4$export$7b6804e8df61fcf5,\n    isUpperCase: $38e929d1b08c92d4$export$aebd617640818cda,\n    isTitleCase: $38e929d1b08c92d4$export$de8b4ee23b2cf823,\n    isWhiteSpace: $38e929d1b08c92d4$export$3c52dd84024ae72c,\n    isBaseForm: $38e929d1b08c92d4$export$a11bdcffe109e74b,\n    isMark: $38e929d1b08c92d4$export$e33ad6871e762338\n};\n\n\n\nvar $b79de8adb8c1e088$exports = {};\n\"use strict\";\nvar $b79de8adb8c1e088$var$INITIAL_STATE = 1;\nvar $b79de8adb8c1e088$var$FAIL_STATE = 0;\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */ class $b79de8adb8c1e088$var$StateMachine {\n    constructor(dfa){\n        this.stateTable = dfa.stateTable;\n        this.accepting = dfa.accepting;\n        this.tags = dfa.tags;\n    }\n    /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */ match(str) {\n        var self = this;\n        return {\n            *[Symbol.iterator] () {\n                var state = $b79de8adb8c1e088$var$INITIAL_STATE;\n                var startRun = null;\n                var lastAccepting = null;\n                var lastState = null;\n                for(var p = 0; p < str.length; p++){\n                    var c = str[p];\n                    lastState = state;\n                    state = self.stateTable[state][c];\n                    if (state === $b79de8adb8c1e088$var$FAIL_STATE) {\n                        // yield the last match if any\n                        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) yield [\n                            startRun,\n                            lastAccepting,\n                            self.tags[lastState]\n                        ];\n                         // reset the state as if we started over from the initial state\n                        state = self.stateTable[$b79de8adb8c1e088$var$INITIAL_STATE][c];\n                        startRun = null;\n                    } // start a run if not in the failure state\n                    if (state !== $b79de8adb8c1e088$var$FAIL_STATE && startRun == null) startRun = p;\n                     // if accepting, mark the potential match end\n                    if (self.accepting[state]) lastAccepting = p;\n                     // reset the state to the initial state if we get into the failure state\n                    if (state === $b79de8adb8c1e088$var$FAIL_STATE) state = $b79de8adb8c1e088$var$INITIAL_STATE;\n                } // yield the last match if any\n                if (startRun != null && lastAccepting != null && lastAccepting >= startRun) yield [\n                    startRun,\n                    lastAccepting,\n                    self.tags[state]\n                ];\n            }\n        };\n    }\n    /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */ apply(str, actions) {\n        for (var [start, end, tags] of this.match(str)){\n            for (var tag of tags)if (typeof actions[tag] === \"function\") actions[tag](start, end, str.slice(start, end + 1));\n        }\n    }\n}\n$b79de8adb8c1e088$exports = $b79de8adb8c1e088$var$StateMachine;\n\n\nvar $610eece7e795b354$exports = {};\n\nvar $610eece7e795b354$require$Buffer = $68d62278c0f02295$export$a143d493d941bafc;\nvar $610eece7e795b354$var$clone = function() {\n    \"use strict\";\n    function _instanceof(obj, type) {\n        return type != null && obj instanceof type;\n    }\n    var nativeMap;\n    try {\n        nativeMap = Map;\n    } catch (_) {\n        // maybe a reference error because no `Map`. Give it a dummy value that no\n        // value will ever be an instanceof.\n        nativeMap = function() {};\n    }\n    var nativeSet;\n    try {\n        nativeSet = Set;\n    } catch (_) {\n        nativeSet = function() {};\n    }\n    var nativePromise;\n    try {\n        nativePromise = Promise;\n    } catch (_) {\n        nativePromise = function() {};\n    }\n    /**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/ function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n        if (typeof circular === \"object\") {\n            depth = circular.depth;\n            prototype = circular.prototype;\n            includeNonEnumerable = circular.includeNonEnumerable;\n            circular = circular.circular;\n        }\n        // maintain two arrays for circular references, where corresponding parents\n        // and children have the same index\n        var allParents = [];\n        var allChildren = [];\n        var useBuffer = typeof $610eece7e795b354$require$Buffer != \"undefined\";\n        if (typeof circular == \"undefined\") circular = true;\n        if (typeof depth == \"undefined\") depth = Infinity;\n        // recurse this function so we don't reset allParents and allChildren\n        function _clone(parent, depth) {\n            // cloning null always returns null\n            if (parent === null) return null;\n            if (depth === 0) return parent;\n            var child;\n            var proto;\n            if (typeof parent != \"object\") return parent;\n            if (_instanceof(parent, nativeMap)) child = new nativeMap();\n            else if (_instanceof(parent, nativeSet)) child = new nativeSet();\n            else if (_instanceof(parent, nativePromise)) child = new nativePromise(function(resolve, reject) {\n                parent.then(function(value) {\n                    resolve(_clone(value, depth - 1));\n                }, function(err) {\n                    reject(_clone(err, depth - 1));\n                });\n            });\n            else if (clone.__isArray(parent)) child = [];\n            else if (clone.__isRegExp(parent)) {\n                child = new RegExp(parent.source, __getRegExpFlags(parent));\n                if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n            } else if (clone.__isDate(parent)) child = new Date(parent.getTime());\n            else if (useBuffer && $610eece7e795b354$require$Buffer.isBuffer(parent)) {\n                if ($610eece7e795b354$require$Buffer.allocUnsafe) // Node.js >= 4.5.0\n                child = $610eece7e795b354$require$Buffer.allocUnsafe(parent.length);\n                else // Older Node.js versions\n                child = new $610eece7e795b354$require$Buffer(parent.length);\n                parent.copy(child);\n                return child;\n            } else if (_instanceof(parent, Error)) child = Object.create(parent);\n            else if (typeof prototype == \"undefined\") {\n                proto = Object.getPrototypeOf(parent);\n                child = Object.create(proto);\n            } else {\n                child = Object.create(prototype);\n                proto = prototype;\n            }\n            if (circular) {\n                var index = allParents.indexOf(parent);\n                if (index != -1) return allChildren[index];\n                allParents.push(parent);\n                allChildren.push(child);\n            }\n            if (_instanceof(parent, nativeMap)) parent.forEach(function(value, key) {\n                var keyChild = _clone(key, depth - 1);\n                var valueChild = _clone(value, depth - 1);\n                child.set(keyChild, valueChild);\n            });\n            if (_instanceof(parent, nativeSet)) parent.forEach(function(value) {\n                var entryChild = _clone(value, depth - 1);\n                child.add(entryChild);\n            });\n            for(var i in parent){\n                var attrs;\n                if (proto) attrs = Object.getOwnPropertyDescriptor(proto, i);\n                if (attrs && attrs.set == null) continue;\n                child[i] = _clone(parent[i], depth - 1);\n            }\n            if (Object.getOwnPropertySymbols) {\n                var symbols = Object.getOwnPropertySymbols(parent);\n                for(var i = 0; i < symbols.length; i++){\n                    // Don't need to worry about cloning a symbol because it is a primitive,\n                    // like a number or string.\n                    var symbol = symbols[i];\n                    var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n                    if (descriptor && !descriptor.enumerable && !includeNonEnumerable) continue;\n                    child[symbol] = _clone(parent[symbol], depth - 1);\n                    if (!descriptor.enumerable) Object.defineProperty(child, symbol, {\n                        enumerable: false\n                    });\n                }\n            }\n            if (includeNonEnumerable) {\n                var allPropertyNames = Object.getOwnPropertyNames(parent);\n                for(var i = 0; i < allPropertyNames.length; i++){\n                    var propertyName = allPropertyNames[i];\n                    var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n                    if (descriptor && descriptor.enumerable) continue;\n                    child[propertyName] = _clone(parent[propertyName], depth - 1);\n                    Object.defineProperty(child, propertyName, {\n                        enumerable: false\n                    });\n                }\n            }\n            return child;\n        }\n        return _clone(parent, depth);\n    }\n    /**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */ clone.clonePrototype = function clonePrototype(parent) {\n        if (parent === null) return null;\n        var c = function() {};\n        c.prototype = parent;\n        return new c();\n    };\n    // private utility functions\n    function __objToStr(o) {\n        return Object.prototype.toString.call(o);\n    }\n    clone.__objToStr = __objToStr;\n    function __isDate(o) {\n        return typeof o === \"object\" && __objToStr(o) === \"[object Date]\";\n    }\n    clone.__isDate = __isDate;\n    function __isArray(o) {\n        return typeof o === \"object\" && __objToStr(o) === \"[object Array]\";\n    }\n    clone.__isArray = __isArray;\n    function __isRegExp(o) {\n        return typeof o === \"object\" && __objToStr(o) === \"[object RegExp]\";\n    }\n    clone.__isRegExp = __isRegExp;\n    function __getRegExpFlags(re) {\n        var flags = \"\";\n        if (re.global) flags += \"g\";\n        if (re.ignoreCase) flags += \"i\";\n        if (re.multiline) flags += \"m\";\n        return flags;\n    }\n    clone.__getRegExpFlags = __getRegExpFlags;\n    return clone;\n}();\nif (0, $610eece7e795b354$exports) $610eece7e795b354$exports = $610eece7e795b354$var$clone;\n\n\n\nvar $ded8ee29b9370409$exports = {};\n\n$ded8ee29b9370409$exports = (parcelRequire(\"ktvS8\")).BrotliDecompressBuffer;\n\n\nfunction $f7a6899246d76dab$var$$parcel$exportWildcard(dest, source) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || dest.hasOwnProperty(key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function get() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n}\nfunction $f7a6899246d76dab$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\nfunction $f7a6899246d76dab$var$$parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n}\nvar $f7a6899246d76dab$var$$59aa4ed98453e1d4$exports = {};\n$f7a6899246d76dab$var$$parcel$export($f7a6899246d76dab$var$$59aa4ed98453e1d4$exports, \"logErrors\", ()=>$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$bd5c5d8b8dcafd78);\n$f7a6899246d76dab$var$$parcel$export($f7a6899246d76dab$var$$59aa4ed98453e1d4$exports, \"registerFormat\", ()=>$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be);\n$f7a6899246d76dab$var$$parcel$export($f7a6899246d76dab$var$$59aa4ed98453e1d4$exports, \"create\", ()=>$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$185802fd694ee1f5);\n$f7a6899246d76dab$var$$parcel$export($f7a6899246d76dab$var$$59aa4ed98453e1d4$exports, \"defaultLanguage\", ()=>$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940);\n$f7a6899246d76dab$var$$parcel$export($f7a6899246d76dab$var$$59aa4ed98453e1d4$exports, \"setDefaultLanguage\", ()=>$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$5157e7780d44cc36);\nlet $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$bd5c5d8b8dcafd78 = false;\nlet $f7a6899246d76dab$var$$59aa4ed98453e1d4$var$formats = [];\nfunction $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be(format) {\n    $f7a6899246d76dab$var$$59aa4ed98453e1d4$var$formats.push(format);\n}\nfunction $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$185802fd694ee1f5(buffer, postscriptName) {\n    for(let i = 0; i < $f7a6899246d76dab$var$$59aa4ed98453e1d4$var$formats.length; i++){\n        let format = $f7a6899246d76dab$var$$59aa4ed98453e1d4$var$formats[i];\n        if (format.probe(buffer)) {\n            let font = new format(new $d28c261f9dc3f39e$export$c18b354bac7948e9(buffer));\n            if (postscriptName) return font.getFont(postscriptName);\n            return font;\n        }\n    }\n    throw new Error(\"Unknown font format\");\n}\nlet $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940 = \"en\";\nfunction $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$5157e7780d44cc36(lang = \"en\") {\n    $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940 = lang;\n}\nfunction $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d(target, key1, descriptor) {\n    if (descriptor.get) {\n        let get = descriptor.get;\n        descriptor.get = function() {\n            let value = get.call(this);\n            Object.defineProperty(this, key1, {\n                value: value\n            });\n            return value;\n        };\n    } else if (typeof descriptor.value === \"function\") {\n        let fn = descriptor.value;\n        return {\n            get () {\n                let cache1 = new Map;\n                function memoized(...args) {\n                    let key = args.length > 0 ? args[0] : \"value\";\n                    if (cache1.has(key)) return cache1.get(key);\n                    let result = fn.apply(this, args);\n                    cache1.set(key, result);\n                    return result;\n                }\n                Object.defineProperty(this, key1, {\n                    value: memoized\n                });\n                return memoized;\n            }\n        };\n    }\n}\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$SubHeader = new $0b2a422743092498$export$eabc71f011df675a({\n    firstCode: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    entryCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    idDelta: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    idRangeOffset: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapGroup = new $0b2a422743092498$export$eabc71f011df675a({\n    startCharCode: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    endCharCode: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    glyphID: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$UnicodeValueRange = new $0b2a422743092498$export$eabc71f011df675a({\n    startUnicodeValue: $83cea26e2678b6a9$export$1925298fbd719b21,\n    additionalCount: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$UVSMapping = new $0b2a422743092498$export$eabc71f011df675a({\n    unicodeValue: $83cea26e2678b6a9$export$1925298fbd719b21,\n    glyphID: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$DefaultUVS = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$e4ae0436c91af89f$var$UnicodeValueRange, $83cea26e2678b6a9$export$de9ffb9418dd7d0d);\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$NonDefaultUVS = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$e4ae0436c91af89f$var$UVSMapping, $83cea26e2678b6a9$export$de9ffb9418dd7d0d);\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$VarSelectorRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    varSelector: $83cea26e2678b6a9$export$1925298fbd719b21,\n    defaultUVS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$e4ae0436c91af89f$var$DefaultUVS, {\n        type: \"parent\"\n    }),\n    nonDefaultUVS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$e4ae0436c91af89f$var$NonDefaultUVS, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapSubtable = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    0: {\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        language: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        codeMap: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$52e103c63c4e68cf, 256)\n    },\n    2: {\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        language: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        subHeaderKeys: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, 256),\n        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys),\n        subHeaders: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$e4ae0436c91af89f$var$SubHeader, \"subHeaderCount\"),\n        glyphIndexArray: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"subHeaderCount\")\n    },\n    4: {\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        language: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        segCountX2: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        segCount: (t)=>t.segCountX2 >> 1,\n        searchRange: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        entrySelector: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        rangeShift: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        endCode: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"segCount\"),\n        reservedPad: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        startCode: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"segCount\"),\n        idDelta: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$c35c15c7caeff2b6, \"segCount\"),\n        idRangeOffset: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"segCount\"),\n        glyphIndexArray: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>(t.length - t._currentOffset) / 2)\n    },\n    6: {\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        language: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        firstCode: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        entryCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyphIndices: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"entryCount\")\n    },\n    8: {\n        reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        language: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        is32: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$52e103c63c4e68cf, 8192),\n        nGroups: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        groups: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    10: {\n        reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        language: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        firstCode: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        entryCount: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        glyphIndices: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numChars\")\n    },\n    12: {\n        reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        language: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        nGroups: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        groups: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    13: {\n        reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        language: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        nGroups: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        groups: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    14: {\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        numRecords: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        varSelectors: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$e4ae0436c91af89f$var$VarSelectorRecord, \"numRecords\")\n    }\n});\nlet $f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    platformID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    encodingID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    table: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapSubtable, {\n        type: \"parent\",\n        lazy: true\n    })\n});\nvar $f7a6899246d76dab$var$$e4ae0436c91af89f$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numSubtables: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapEntry, \"numSubtables\")\n});\nvar $f7a6899246d76dab$var$$55a60976afb7c261$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$1d95835383bb05a,\n    revision: $83cea26e2678b6a9$export$1d95835383bb05a,\n    checkSumAdjustment: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    magicNumber: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    unitsPerEm: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    created: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$1d95835383bb05a, 2),\n    modified: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$1d95835383bb05a, 2),\n    xMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    macStyle: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"outline\",\n        \"shadow\",\n        \"condensed\",\n        \"extended\"\n    ]),\n    lowestRecPPEM: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    fontDirectionHint: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    indexToLocFormat: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    glyphDataFormat: $83cea26e2678b6a9$export$c35c15c7caeff2b6 // 0 for current format\n});\nvar $f7a6899246d76dab$var$$dde72b7b5b650596$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$1d95835383bb05a,\n    ascent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    descent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    lineGap: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    advanceWidthMax: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minLeftSideBearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    minRightSideBearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMaxExtent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretSlopeRise: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretSlopeRun: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$c35c15c7caeff2b6, 4),\n    metricDataFormat: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    numberOfMetrics: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // Number of advance widths in 'hmtx' table\n});\nlet $f7a6899246d76dab$var$$a7c40184072c9a5b$var$HmtxEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    advance: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    bearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n});\nvar $f7a6899246d76dab$var$$a7c40184072c9a5b$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    metrics: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$a7c40184072c9a5b$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics),\n    bearings: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$c35c15c7caeff2b6, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\nvar $f7a6899246d76dab$var$$521197722369f691$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$1d95835383bb05a,\n    numGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxPoints: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxContours: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxComponentPoints: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxComponentContours: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxZones: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxTwilightPoints: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxStorage: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxFunctionDefs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxInstructionDefs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxStackElements: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxSizeOfInstructions: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxComponentElements: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    maxComponentDepth: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // Maximum levels of recursion; 1 for simple components\n});\nfunction $f7a6899246d76dab$var$$e2613b812f052cbe$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {\n    if (platformID === 1 && $f7a6899246d76dab$var$$e2613b812f052cbe$export$479e671907f486d1[languageID]) return $f7a6899246d76dab$var$$e2613b812f052cbe$export$479e671907f486d1[languageID];\n    return $f7a6899246d76dab$var$$e2613b812f052cbe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS = new Set([\n    \"x-mac-roman\",\n    \"x-mac-cyrillic\",\n    \"iso-8859-6\",\n    \"iso-8859-8\"\n]);\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$var$MAC_ENCODINGS = {\n    \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc†\\xb0\\xa2\\xa3\\xa7•\\xb6\\xdf\\xaeŠ™\\xb4\\xa8≠Ž\\xd8∞\\xb1≤≥∆\\xb5∂∑∏š∫\\xaa\\xbaΩž\\xf8\\xbf\\xa1\\xac√ƒ≈Ć\\xabČ… \\xc0\\xc3\\xd5ŒœĐ—“”‘’\\xf7◊\\xa9⁄€‹›\\xc6\\xbb–\\xb7‚„‰\\xc2ć\\xc1č\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4đ\\xd2\\xda\\xdb\\xd9ıˆ˜\\xafπ\\xcb˚\\xb8\\xca\\xe6ˇ\",\n    \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc†\\xb0\\xa2\\xa3\\xa7•\\xb6\\xdf\\xae\\xa9™\\xb4\\xa8≠\\xc6\\xd8Ḃ\\xb1≤≥ḃĊċḊḋḞḟĠġṀ\\xe6\\xf8ṁṖṗɼƒſṠ\\xab\\xbb… \\xc0\\xc3\\xd5Œœ–—“”‘’ṡẛ\\xffŸṪ€‹›Ŷŷṫ\\xb7Ỳỳ⁊\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4♣\\xd2\\xda\\xdb\\xd9ı\\xdd\\xfdŴŵẄẅẀẁẂẃ\",\n    \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc΅\\xe0\\xe2\\xe4΄\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3™\\xee\\xef•\\xbd‰\\xf4\\xf6\\xa6€\\xf9\\xfb\\xfc†ΓΔΘΛΞΠ\\xdf\\xae\\xa9ΣΪ\\xa7≠\\xb0\\xb7Α\\xb1≤≥\\xa5ΒΕΖΗΙΚΜΦΫΨΩάΝ\\xacΟΡ≈Τ\\xab\\xbb… ΥΧΆΈœ–―“”‘’\\xf7ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\xad\",\n    \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7•\\xb6\\xdf\\xae\\xa9™\\xb4\\xa8≠\\xc6\\xd8∞\\xb1≤≥\\xa5\\xb5∂∑∏π∫\\xaa\\xbaΩ\\xe6\\xf8\\xbf\\xa1\\xac√ƒ≈∆\\xab\\xbb… \\xc0\\xc3\\xd5Œœ–—“”‘’\\xf7◊\\xffŸ⁄€\\xd0\\xf0\\xde\\xfe\\xfd\\xb7‚„‰\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\xd2\\xda\\xdb\\xd9ıˆ˜\\xaf˘˙˚\\xb8˝˛ˇ\",\n    \"x-mac-inuit\": \"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ\\xb0ᒡᒥᒦ•\\xb6ᒧ\\xae\\xa9™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł\",\n    \"x-mac-ce\": \"\\xc4Āā\\xc9Ą\\xd6\\xdc\\xe1ąČ\\xe4čĆć\\xe9ŹźĎ\\xedďĒēĖ\\xf3ė\\xf4\\xf6\\xf5\\xfaĚě\\xfc†\\xb0Ę\\xa3\\xa7•\\xb6\\xdf\\xae\\xa9™ę\\xa8≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ\\xac√ńŇ∆\\xab\\xbb… ňŐ\\xd5őŌ–—“”‘’\\xf7◊ōŔŕŘ‹›řŖŗŠ‚„šŚś\\xc1Ťť\\xcdŽžŪ\\xd3\\xd4ūŮ\\xdaůŰűŲų\\xdd\\xfdķŻŁżĢˇ\",\n    \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc†\\xb0\\xa2\\xa3\\xa7•\\xb6\\xdf\\xae\\xa9™\\xb4\\xa8≠ĂȘ∞\\xb1≤≥\\xa5\\xb5∂∑∏π∫\\xaa\\xbaΩăș\\xbf\\xa1\\xac√ƒ≈∆\\xab\\xbb… \\xc0\\xc3\\xd5Œœ–—“”‘’\\xf7◊\\xffŸ⁄€‹›Țț‡\\xb7‚„‰\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\xd2\\xda\\xdb\\xd9ıˆ˜\\xaf˘˙˚\\xb8˝˛ˇ\",\n    \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc†\\xb0\\xa2\\xa3\\xa7•\\xb6\\xdf\\xae\\xa9™\\xb4\\xa8≠\\xc6\\xd8∞\\xb1≤≥\\xa5\\xb5∂∑∏π∫\\xaa\\xbaΩ\\xe6\\xf8\\xbf\\xa1\\xac√ƒ≈∆\\xab\\xbb… \\xc0\\xc3\\xd5Œœ–—“”‘’\\xf7◊\\xffŸĞğİıŞş‡\\xb7‚„‰\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\xd2\\xda\\xdb\\xd9ˆ˜\\xaf˘˙˚\\xb8˝˛ˇ\"\n};\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$var$encodingCache = new Map();\nfunction $f7a6899246d76dab$var$$e2613b812f052cbe$export$1dceb3c14ed68bee(encoding) {\n    let cached = $f7a6899246d76dab$var$$e2613b812f052cbe$var$encodingCache.get(encoding);\n    if (cached) return cached;\n    // These encodings aren't supported by TextDecoder.\n    let mapping = $f7a6899246d76dab$var$$e2613b812f052cbe$var$MAC_ENCODINGS[encoding];\n    if (mapping) {\n        let res = new Map();\n        for(let i = 0; i < mapping.length; i++)res.set(mapping.charCodeAt(i), 0x80 + i);\n        $f7a6899246d76dab$var$$e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n    // Only single byte encodings can be mapped 1:1.\n    if ($f7a6899246d76dab$var$$e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n        // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n        // Use this to create a mapping of code points.\n        let decoder = new TextDecoder(encoding);\n        let mapping = new Uint8Array(0x80);\n        for(let i = 0; i < 0x80; i++)mapping[i] = 0x80 + i;\n        let res = new Map();\n        let s = decoder.decode(mapping);\n        for(let i1 = 0; i1 < 0x80; i1++)res.set(s.charCodeAt(i1), 0x80 + i1);\n        $f7a6899246d76dab$var$$e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n}\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$export$6fef87b7618bdf0b = [\n    // unicode\n    [\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\"\n    ],\n    // macintosh\n    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n    // 0\tRoman                 17\tMalayalam\n    // 1\tJapanese\t            18\tSinhalese\n    // 2\tTraditional Chinese\t  19\tBurmese\n    // 3\tKorean\t              20\tKhmer\n    // 4\tArabic\t              21\tThai\n    // 5\tHebrew\t              22\tLaotian\n    // 6\tGreek\t                23\tGeorgian\n    // 7\tRussian\t              24\tArmenian\n    // 8\tRSymbol\t              25\tSimplified Chinese\n    // 9\tDevanagari\t          26\tTibetan\n    // 10\tGurmukhi\t            27\tMongolian\n    // 11\tGujarati\t            28\tGeez\n    // 12\tOriya\t                29\tSlavic\n    // 13\tBengali\t              30\tVietnamese\n    // 14\tTamil\t                31\tSindhi\n    // 15\tTelugu\t              32\t(Uninterpreted)\n    // 16\tKannada\n    [\n        \"x-mac-roman\",\n        \"shift-jis\",\n        \"big5\",\n        \"euc-kr\",\n        \"iso-8859-6\",\n        \"iso-8859-8\",\n        \"x-mac-greek\",\n        \"x-mac-cyrillic\",\n        \"x-mac-symbol\",\n        \"x-mac-devanagari\",\n        \"x-mac-gurmukhi\",\n        \"x-mac-gujarati\",\n        \"Oriya\",\n        \"Bengali\",\n        \"Tamil\",\n        \"Telugu\",\n        \"Kannada\",\n        \"Malayalam\",\n        \"Sinhalese\",\n        \"Burmese\",\n        \"Khmer\",\n        \"iso-8859-11\",\n        \"Laotian\",\n        \"Georgian\",\n        \"Armenian\",\n        \"hz-gb-2312\",\n        \"Tibetan\",\n        \"Mongolian\",\n        \"Geez\",\n        \"x-mac-ce\",\n        \"Vietnamese\",\n        \"Sindhi\"\n    ],\n    // ISO (deprecated)\n    [\n        \"ascii\"\n    ],\n    // windows\n    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n    [\n        \"symbol\",\n        \"utf16be\",\n        \"shift-jis\",\n        \"gb18030\",\n        \"big5\",\n        \"x-cp20949\",\n        \"johab\",\n        null,\n        null,\n        null,\n        \"utf16be\"\n    ]\n];\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$export$479e671907f486d1 = {\n    15: \"x-mac-icelandic\",\n    17: \"x-mac-turkish\",\n    18: \"x-mac-croatian\",\n    24: \"x-mac-ce\",\n    25: \"x-mac-ce\",\n    26: \"x-mac-ce\",\n    27: \"x-mac-ce\",\n    28: \"x-mac-ce\",\n    30: \"x-mac-icelandic\",\n    37: \"x-mac-romanian\",\n    38: \"x-mac-ce\",\n    39: \"x-mac-ce\",\n    40: \"x-mac-ce\",\n    143: \"x-mac-inuit\",\n    146: \"x-mac-gaelic\"\n};\nconst $f7a6899246d76dab$var$$e2613b812f052cbe$export$2092376fd002e13 = [\n    // unicode\n    [],\n    {\n        0: \"en\",\n        30: \"fo\",\n        60: \"ks\",\n        90: \"rw\",\n        1: \"fr\",\n        31: \"fa\",\n        61: \"ku\",\n        91: \"rn\",\n        2: \"de\",\n        32: \"ru\",\n        62: \"sd\",\n        92: \"ny\",\n        3: \"it\",\n        33: \"zh\",\n        63: \"bo\",\n        93: \"mg\",\n        4: \"nl\",\n        34: \"nl-BE\",\n        64: \"ne\",\n        94: \"eo\",\n        5: \"sv\",\n        35: \"ga\",\n        65: \"sa\",\n        128: \"cy\",\n        6: \"es\",\n        36: \"sq\",\n        66: \"mr\",\n        129: \"eu\",\n        7: \"da\",\n        37: \"ro\",\n        67: \"bn\",\n        130: \"ca\",\n        8: \"pt\",\n        38: \"cz\",\n        68: \"as\",\n        131: \"la\",\n        9: \"no\",\n        39: \"sk\",\n        69: \"gu\",\n        132: \"qu\",\n        10: \"he\",\n        40: \"si\",\n        70: \"pa\",\n        133: \"gn\",\n        11: \"ja\",\n        41: \"yi\",\n        71: \"or\",\n        134: \"ay\",\n        12: \"ar\",\n        42: \"sr\",\n        72: \"ml\",\n        135: \"tt\",\n        13: \"fi\",\n        43: \"mk\",\n        73: \"kn\",\n        136: \"ug\",\n        14: \"el\",\n        44: \"bg\",\n        74: \"ta\",\n        137: \"dz\",\n        15: \"is\",\n        45: \"uk\",\n        75: \"te\",\n        138: \"jv\",\n        16: \"mt\",\n        46: \"be\",\n        76: \"si\",\n        139: \"su\",\n        17: \"tr\",\n        47: \"uz\",\n        77: \"my\",\n        140: \"gl\",\n        18: \"hr\",\n        48: \"kk\",\n        78: \"km\",\n        141: \"af\",\n        19: \"zh-Hant\",\n        49: \"az-Cyrl\",\n        79: \"lo\",\n        142: \"br\",\n        20: \"ur\",\n        50: \"az-Arab\",\n        80: \"vi\",\n        143: \"iu\",\n        21: \"hi\",\n        51: \"hy\",\n        81: \"id\",\n        144: \"gd\",\n        22: \"th\",\n        52: \"ka\",\n        82: \"tl\",\n        145: \"gv\",\n        23: \"ko\",\n        53: \"mo\",\n        83: \"ms\",\n        146: \"ga\",\n        24: \"lt\",\n        54: \"ky\",\n        84: \"ms-Arab\",\n        147: \"to\",\n        25: \"pl\",\n        55: \"tg\",\n        85: \"am\",\n        148: \"el-polyton\",\n        26: \"hu\",\n        56: \"tk\",\n        86: \"ti\",\n        149: \"kl\",\n        27: \"es\",\n        57: \"mn-CN\",\n        87: \"om\",\n        150: \"az\",\n        28: \"lv\",\n        58: \"mn\",\n        88: \"so\",\n        151: \"nn\",\n        29: \"se\",\n        59: \"ps\",\n        89: \"sw\"\n    },\n    // ISO (deprecated)\n    [],\n    {\n        0x0436: \"af\",\n        0x4009: \"en-IN\",\n        0x0487: \"rw\",\n        0x0432: \"tn\",\n        0x041C: \"sq\",\n        0x1809: \"en-IE\",\n        0x0441: \"sw\",\n        0x045B: \"si\",\n        0x0484: \"gsw\",\n        0x2009: \"en-JM\",\n        0x0457: \"kok\",\n        0x041B: \"sk\",\n        0x045E: \"am\",\n        0x4409: \"en-MY\",\n        0x0412: \"ko\",\n        0x0424: \"sl\",\n        0x1401: \"ar-DZ\",\n        0x1409: \"en-NZ\",\n        0x0440: \"ky\",\n        0x2C0A: \"es-AR\",\n        0x3C01: \"ar-BH\",\n        0x3409: \"en-PH\",\n        0x0454: \"lo\",\n        0x400A: \"es-BO\",\n        0x0C01: \"ar\",\n        0x4809: \"en-SG\",\n        0x0426: \"lv\",\n        0x340A: \"es-CL\",\n        0x0801: \"ar-IQ\",\n        0x1C09: \"en-ZA\",\n        0x0427: \"lt\",\n        0x240A: \"es-CO\",\n        0x2C01: \"ar-JO\",\n        0x2C09: \"en-TT\",\n        0x082E: \"dsb\",\n        0x140A: \"es-CR\",\n        0x3401: \"ar-KW\",\n        0x0809: \"en-GB\",\n        0x046E: \"lb\",\n        0x1C0A: \"es-DO\",\n        0x3001: \"ar-LB\",\n        0x0409: \"en\",\n        0x042F: \"mk\",\n        0x300A: \"es-EC\",\n        0x1001: \"ar-LY\",\n        0x3009: \"en-ZW\",\n        0x083E: \"ms-BN\",\n        0x440A: \"es-SV\",\n        0x1801: \"ary\",\n        0x0425: \"et\",\n        0x043E: \"ms\",\n        0x100A: \"es-GT\",\n        0x2001: \"ar-OM\",\n        0x0438: \"fo\",\n        0x044C: \"ml\",\n        0x480A: \"es-HN\",\n        0x4001: \"ar-QA\",\n        0x0464: \"fil\",\n        0x043A: \"mt\",\n        0x080A: \"es-MX\",\n        0x0401: \"ar-SA\",\n        0x040B: \"fi\",\n        0x0481: \"mi\",\n        0x4C0A: \"es-NI\",\n        0x2801: \"ar-SY\",\n        0x080C: \"fr-BE\",\n        0x047A: \"arn\",\n        0x180A: \"es-PA\",\n        0x1C01: \"aeb\",\n        0x0C0C: \"fr-CA\",\n        0x044E: \"mr\",\n        0x3C0A: \"es-PY\",\n        0x3801: \"ar-AE\",\n        0x040C: \"fr\",\n        0x047C: \"moh\",\n        0x280A: \"es-PE\",\n        0x2401: \"ar-YE\",\n        0x140C: \"fr-LU\",\n        0x0450: \"mn\",\n        0x500A: \"es-PR\",\n        0x042B: \"hy\",\n        0x180C: \"fr-MC\",\n        0x0850: \"mn-CN\",\n        0x0C0A: \"es\",\n        0x044D: \"as\",\n        0x100C: \"fr-CH\",\n        0x0461: \"ne\",\n        0x040A: \"es\",\n        0x082C: \"az-Cyrl\",\n        0x0462: \"fy\",\n        0x0414: \"nb\",\n        0x540A: \"es-US\",\n        0x042C: \"az\",\n        0x0456: \"gl\",\n        0x0814: \"nn\",\n        0x380A: \"es-UY\",\n        0x046D: \"ba\",\n        0x0437: \"ka\",\n        0x0482: \"oc\",\n        0x200A: \"es-VE\",\n        0x042D: \"eu\",\n        0x0C07: \"de-AT\",\n        0x0448: \"or\",\n        0x081D: \"sv-FI\",\n        0x0423: \"be\",\n        0x0407: \"de\",\n        0x0463: \"ps\",\n        0x041D: \"sv\",\n        0x0845: \"bn\",\n        0x1407: \"de-LI\",\n        0x0415: \"pl\",\n        0x045A: \"syr\",\n        0x0445: \"bn-IN\",\n        0x1007: \"de-LU\",\n        0x0416: \"pt\",\n        0x0428: \"tg\",\n        0x201A: \"bs-Cyrl\",\n        0x0807: \"de-CH\",\n        0x0816: \"pt-PT\",\n        0x085F: \"tzm\",\n        0x141A: \"bs\",\n        0x0408: \"el\",\n        0x0446: \"pa\",\n        0x0449: \"ta\",\n        0x047E: \"br\",\n        0x046F: \"kl\",\n        0x046B: \"qu-BO\",\n        0x0444: \"tt\",\n        0x0402: \"bg\",\n        0x0447: \"gu\",\n        0x086B: \"qu-EC\",\n        0x044A: \"te\",\n        0x0403: \"ca\",\n        0x0468: \"ha\",\n        0x0C6B: \"qu\",\n        0x041E: \"th\",\n        0x0C04: \"zh-HK\",\n        0x040D: \"he\",\n        0x0418: \"ro\",\n        0x0451: \"bo\",\n        0x1404: \"zh-MO\",\n        0x0439: \"hi\",\n        0x0417: \"rm\",\n        0x041F: \"tr\",\n        0x0804: \"zh\",\n        0x040E: \"hu\",\n        0x0419: \"ru\",\n        0x0442: \"tk\",\n        0x1004: \"zh-SG\",\n        0x040F: \"is\",\n        0x243B: \"smn\",\n        0x0480: \"ug\",\n        0x0404: \"zh-TW\",\n        0x0470: \"ig\",\n        0x103B: \"smj-NO\",\n        0x0422: \"uk\",\n        0x0483: \"co\",\n        0x0421: \"id\",\n        0x143B: \"smj\",\n        0x042E: \"hsb\",\n        0x041A: \"hr\",\n        0x045D: \"iu\",\n        0x0C3B: \"se-FI\",\n        0x0420: \"ur\",\n        0x101A: \"hr-BA\",\n        0x085D: \"iu-Latn\",\n        0x043B: \"se\",\n        0x0843: \"uz-Cyrl\",\n        0x0405: \"cs\",\n        0x083C: \"ga\",\n        0x083B: \"se-SE\",\n        0x0443: \"uz\",\n        0x0406: \"da\",\n        0x0434: \"xh\",\n        0x203B: \"sms\",\n        0x042A: \"vi\",\n        0x048C: \"prs\",\n        0x0435: \"zu\",\n        0x183B: \"sma-NO\",\n        0x0452: \"cy\",\n        0x0465: \"dv\",\n        0x0410: \"it\",\n        0x1C3B: \"sms\",\n        0x0488: \"wo\",\n        0x0813: \"nl-BE\",\n        0x0810: \"it-CH\",\n        0x044F: \"sa\",\n        0x0485: \"sah\",\n        0x0413: \"nl\",\n        0x0411: \"ja\",\n        0x1C1A: \"sr-Cyrl-BA\",\n        0x0478: \"ii\",\n        0x0C09: \"en-AU\",\n        0x044B: \"kn\",\n        0x0C1A: \"sr\",\n        0x046A: \"yo\",\n        0x2809: \"en-BZ\",\n        0x043F: \"kk\",\n        0x181A: \"sr-Latn-BA\",\n        0x1009: \"en-CA\",\n        0x0453: \"km\",\n        0x081A: \"sr-Latn\",\n        0x2409: \"en-029\",\n        0x0486: \"quc\",\n        0x046C: \"nso\"\n    }\n];\nlet $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    platformID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    encodingID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    languageID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nameID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    string: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $16be2d98cb6bced0$export$89b8e0fa65f6a914(\"length\", (t)=>$f7a6899246d76dab$var$$e2613b812f052cbe$export$badc544e0651b6b1(t.platformID, t.encodingID, t.languageID)), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.parent.stringOffset,\n        allowNull: false\n    })\n});\nlet $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$LangTagRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    tag: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $16be2d98cb6bced0$export$89b8e0fa65f6a914(\"length\", \"utf16be\"), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.stringOffset\n    })\n});\nvar $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    0: {\n        count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        stringOffset: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        records: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameRecord, \"count\")\n    },\n    1: {\n        count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        stringOffset: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        records: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameRecord, \"count\"),\n        langTagCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        langTags: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$LangTagRecord, \"langTagCount\")\n    }\n});\nvar $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable;\nconst $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NAMES = [\n    \"copyright\",\n    \"fontFamily\",\n    \"fontSubfamily\",\n    \"uniqueSubfamily\",\n    \"fullName\",\n    \"version\",\n    \"postscriptName\",\n    \"trademark\",\n    \"manufacturer\",\n    \"designer\",\n    \"description\",\n    \"vendorURL\",\n    \"designerURL\",\n    \"license\",\n    \"licenseURL\",\n    null,\n    \"preferredFamily\",\n    \"preferredSubfamily\",\n    \"compatibleFull\",\n    \"sampleText\",\n    \"postscriptCIDFontName\",\n    \"wwsFamilyName\",\n    \"wwsSubfamilyName\"\n];\n$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable.process = function(stream) {\n    var records = {};\n    for (let record of this.records){\n        // find out what language this is for\n        let language = $f7a6899246d76dab$var$$e2613b812f052cbe$export$2092376fd002e13[record.platformID][record.languageID];\n        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n        if (language == null) language = record.platformID + \"-\" + record.languageID;\n        // if the nameID is >= 256, it is a font feature record (AAT)\n        let key = record.nameID >= 256 ? \"fontFeatures\" : $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NAMES[record.nameID] || record.nameID;\n        if (records[key] == null) records[key] = {};\n        let obj = records[key];\n        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n        if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n    this.records = records;\n};\n$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable.preEncode = function() {\n    if (Array.isArray(this.records)) return;\n    this.version = 0;\n    let records = [];\n    for(let key in this.records){\n        let val = this.records[key];\n        if (key === \"fontFeatures\") continue;\n        records.push({\n            platformID: 3,\n            encodingID: 1,\n            languageID: 0x409,\n            nameID: $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length * 2,\n            string: val.en\n        });\n        if (key === \"postscriptName\") records.push({\n            platformID: 1,\n            encodingID: 0,\n            languageID: 0,\n            nameID: $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length,\n            string: val.en\n        });\n    }\n    this.records = records;\n    this.count = records.length;\n    this.stringOffset = $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable.size(this, null, false);\n};\nvar $f7a6899246d76dab$var$$114ea85db469b435$var$OS2 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    header: {\n        xAvgCharWidth: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        usWeightClass: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        usWidthClass: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        fsType: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n            null,\n            \"noEmbedding\",\n            \"viewOnly\",\n            \"editable\",\n            null,\n            null,\n            null,\n            null,\n            \"noSubsetting\",\n            \"bitmapOnly\"\n        ]),\n        ySubscriptXSize: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySubscriptYSize: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySubscriptXOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySubscriptYOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySuperscriptXSize: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySuperscriptYSize: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySuperscriptXOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        ySuperscriptYOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        yStrikeoutSize: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        yStrikeoutPosition: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        sFamilyClass: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        panose: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, 10),\n        ulCharRange: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, 4),\n        vendorID: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n        fsSelection: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n            \"italic\",\n            \"underscore\",\n            \"negative\",\n            \"outlined\",\n            \"strikeout\",\n            \"bold\",\n            \"regular\",\n            \"useTypoMetrics\",\n            \"wws\",\n            \"oblique\"\n        ]),\n        usFirstCharIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        usLastCharIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // The maximum Unicode index in this font\n    },\n    // The Apple version of this table ends here, but the Microsoft one continues on...\n    0: {},\n    1: {\n        typoAscender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoDescender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoLineGap: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        winAscent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        winDescent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        codePageRange: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, 2)\n    },\n    2: {\n        // these should be common with version 1 somehow\n        typoAscender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoDescender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoLineGap: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        winAscent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        winDescent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        codePageRange: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, 2),\n        xHeight: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        capHeight: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        defaultChar: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        breakChar: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        maxContent: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    5: {\n        typoAscender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoDescender: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        typoLineGap: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        winAscent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        winDescent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        codePageRange: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, 2),\n        xHeight: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        capHeight: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        defaultChar: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        breakChar: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        maxContent: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        usLowerOpticalPointSize: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        usUpperOpticalPointSize: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    }\n});\nlet $f7a6899246d76dab$var$$114ea85db469b435$var$versions = $f7a6899246d76dab$var$$114ea85db469b435$var$OS2.versions;\n$f7a6899246d76dab$var$$114ea85db469b435$var$versions[3] = $f7a6899246d76dab$var$$114ea85db469b435$var$versions[4] = $f7a6899246d76dab$var$$114ea85db469b435$var$versions[2];\nvar $f7a6899246d76dab$var$$114ea85db469b435$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$114ea85db469b435$var$OS2;\nvar $f7a6899246d76dab$var$$f93b30299e1ea0f5$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$e913265d48471f2d, {\n    header: {\n        italicAngle: $83cea26e2678b6a9$export$e913265d48471f2d,\n        underlinePosition: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        underlineThickness: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        isFixedPitch: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        minMemType42: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        maxMemType42: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        minMemType1: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        maxMemType1: $83cea26e2678b6a9$export$de9ffb9418dd7d0d // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n    },\n    1: {},\n    2: {\n        numberOfGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyphNameIndex: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numberOfGlyphs\"),\n        names: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $16be2d98cb6bced0$export$89b8e0fa65f6a914($83cea26e2678b6a9$export$52e103c63c4e68cf))\n    },\n    2.5: {\n        numberOfGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, \"numberOfGlyphs\")\n    },\n    3: {},\n    4: {\n        map: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, (t)=>t.parent.maxp.numGlyphs)\n    }\n});\nvar $f7a6899246d76dab$var$$8fb09b0f473d61a0$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    controlValues: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$c35c15c7caeff2b6)\n});\nvar // These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$f7a6899246d76dab$var$$873d79fea57d3161$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    instructions: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf)\n});\nlet $f7a6899246d76dab$var$$83c4155666d50c37$var$loca = new $bf686a5101131396$export$95a8b60f4da7dec8(\"head.indexToLocFormat\", {\n    0: {\n        offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456)\n    },\n    1: {\n        offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d)\n    }\n});\n$f7a6899246d76dab$var$$83c4155666d50c37$var$loca.process = function() {\n    if (this.version === 0 && !this._processed) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;\n        this._processed = true;\n    }\n};\n$f7a6899246d76dab$var$$83c4155666d50c37$var$loca.preEncode = function() {\n    if (this.version === 0 && this._processed !== false) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;\n        this._processed = false;\n    }\n};\nvar $f7a6899246d76dab$var$$83c4155666d50c37$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$83c4155666d50c37$var$loca;\nvar $f7a6899246d76dab$var$$b12598db7cdf7042$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    controlValueProgram: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf)\n});\nvar $f7a6899246d76dab$var$$7707bdf21a3d89cc$export$2e2bcd8739ae039 = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $ce1900e78ba28923$export$7d22a0eea6656474);\nclass $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039 {\n    getCFFVersion(ctx) {\n        while(ctx && !ctx.hdrSize)ctx = ctx.parent;\n        return ctx ? ctx.version : -1;\n    }\n    decode(stream, parent) {\n        let version = this.getCFFVersion(parent);\n        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n        if (count === 0) return [];\n        let offSize = stream.readUInt8();\n        let offsetType;\n        if (offSize === 1) offsetType = $83cea26e2678b6a9$export$52e103c63c4e68cf;\n        else if (offSize === 2) offsetType = $83cea26e2678b6a9$export$56bd24b5a3ee8456;\n        else if (offSize === 3) offsetType = $83cea26e2678b6a9$export$1925298fbd719b21;\n        else if (offSize === 4) offsetType = $83cea26e2678b6a9$export$de9ffb9418dd7d0d;\n        else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n        let ret = [];\n        let startPos = stream.pos + (count + 1) * offSize - 1;\n        let start = offsetType.decode(stream);\n        for(let i = 0; i < count; i++){\n            let end = offsetType.decode(stream);\n            if (this.type != null) {\n                let pos = stream.pos;\n                stream.pos = startPos + start;\n                parent.length = end - start;\n                ret.push(this.type.decode(stream, parent));\n                stream.pos = pos;\n            } else ret.push({\n                offset: startPos + start,\n                length: end - start\n            });\n            start = end;\n        }\n        stream.pos = startPos + start;\n        return ret;\n    }\n    size(arr, parent) {\n        let size = 2;\n        if (arr.length === 0) return size;\n        let type = this.type || new $ce1900e78ba28923$export$7d22a0eea6656474;\n        // find maximum offset to detminine offset type\n        let offset = 1;\n        for(let i = 0; i < arr.length; i++){\n            let item = arr[i];\n            offset += type.size(item, parent);\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $83cea26e2678b6a9$export$52e103c63c4e68cf;\n        else if (offset <= 0xffff) offsetType = $83cea26e2678b6a9$export$56bd24b5a3ee8456;\n        else if (offset <= 0xffffff) offsetType = $83cea26e2678b6a9$export$1925298fbd719b21;\n        else if (offset <= 0xffffffff) offsetType = $83cea26e2678b6a9$export$de9ffb9418dd7d0d;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        size += 1 + offsetType.size() * (arr.length + 1);\n        size += offset - 1;\n        return size;\n    }\n    encode(stream, arr, parent) {\n        stream.writeUInt16BE(arr.length);\n        if (arr.length === 0) return;\n        let type = this.type || new $ce1900e78ba28923$export$7d22a0eea6656474;\n        // find maximum offset to detminine offset type\n        let sizes = [];\n        let offset = 1;\n        for (let item of arr){\n            let s = type.size(item, parent);\n            sizes.push(s);\n            offset += s;\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $83cea26e2678b6a9$export$52e103c63c4e68cf;\n        else if (offset <= 0xffff) offsetType = $83cea26e2678b6a9$export$56bd24b5a3ee8456;\n        else if (offset <= 0xffffff) offsetType = $83cea26e2678b6a9$export$1925298fbd719b21;\n        else if (offset <= 0xffffffff) offsetType = $83cea26e2678b6a9$export$de9ffb9418dd7d0d;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        // write offset size\n        stream.writeUInt8(offsetType.size());\n        // write elements\n        offset = 1;\n        offsetType.encode(stream, offset);\n        for (let size of sizes){\n            offset += size;\n            offsetType.encode(stream, offset);\n        }\n        for (let item1 of arr)type.encode(stream, item1, parent);\n        return;\n    }\n    constructor(type){\n        this.type = type;\n    }\n}\nconst $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF = 0xf;\nconst $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_LOOKUP = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \".\",\n    \"E\",\n    \"E-\",\n    null,\n    \"-\"\n];\nconst $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP = {\n    \".\": 10,\n    \"E\": 11,\n    \"E-\": 12,\n    \"-\": 14\n};\nclass $f7a6899246d76dab$var$$f77b592c17132d70$export$2e2bcd8739ae039 {\n    static decode(stream, value) {\n        if (32 <= value && value <= 246) return value - 139;\n        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n        if (value === 28) return stream.readInt16BE();\n        if (value === 29) return stream.readInt32BE();\n        if (value === 30) {\n            let str = \"\";\n            while(true){\n                let b = stream.readUInt8();\n                let n1 = b >> 4;\n                if (n1 === $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_LOOKUP[n1];\n                let n2 = b & 15;\n                if (n2 === $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_LOOKUP[n2];\n            }\n            return parseFloat(str);\n        }\n        return null;\n    }\n    static size(value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, set to 32768\n        if (value.forceLarge) value = 32768;\n        if ((value | 0) !== value) {\n            let str = \"\" + value;\n            return 1 + Math.ceil((str.length + 1) / 2);\n        } else if (-107 <= value && value <= 107) return 1;\n        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;\n        else if (-32768 <= value && value <= 32767) return 3;\n        else return 5;\n    }\n    static encode(stream, value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, save the old value and set to 32768\n        let val = Number(value);\n        if (value.forceLarge) {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        } else if ((val | 0) !== val) {\n            stream.writeUInt8(30);\n            let str = \"\" + val;\n            for(let i = 0; i < str.length; i += 2){\n                let c1 = str[i];\n                let n1 = $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n                if (i === str.length - 1) var n2 = $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF;\n                else {\n                    let c2 = str[i + 1];\n                    var n2 = $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n                }\n                stream.writeUInt8(n1 << 4 | n2 & 15);\n            }\n            if (n2 !== $f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF) return stream.writeUInt8($f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF << 4);\n        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);\n        else if (108 <= val && val <= 1131) {\n            val -= 108;\n            stream.writeUInt8((val >> 8) + 247);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-1131 <= val && val <= -108) {\n            val = -val - 108;\n            stream.writeUInt8((val >> 8) + 251);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-32768 <= val && val <= 32767) {\n            stream.writeUInt8(28);\n            return stream.writeInt16BE(val);\n        } else {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        }\n    }\n}\nclass $f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039 {\n    decodeOperands(type, stream, ret, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [\n                op\n            ]));\n        else if (type.decode != null) return type.decode(stream, ret, operands);\n        else switch(type){\n            case \"number\":\n            case \"offset\":\n            case \"sid\":\n                return operands[0];\n            case \"boolean\":\n                return !!operands[0];\n            default:\n                return operands;\n        }\n    }\n    encodeOperands(type, stream, ctx, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]);\n        else if (type.encode != null) return type.encode(stream, operands, ctx);\n        else if (typeof operands === \"number\") return [\n            operands\n        ];\n        else if (typeof operands === \"boolean\") return [\n            +operands\n        ];\n        else if (Array.isArray(operands)) return operands;\n        else return [\n            operands\n        ];\n    }\n    decode(stream, parent) {\n        let end = stream.pos + parent.length;\n        let ret = {};\n        let operands = [];\n        // define hidden properties\n        Object.defineProperties(ret, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            }\n        });\n        // fill in defaults\n        for(let key in this.fields){\n            let field = this.fields[key];\n            ret[field[1]] = field[3];\n        }\n        while(stream.pos < end){\n            let b = stream.readUInt8();\n            if (b < 28) {\n                if (b === 12) b = b << 8 | stream.readUInt8();\n                let field = this.fields[b];\n                if (!field) throw new Error(`Unknown operator ${b}`);\n                let val = this.decodeOperands(field[2], stream, ret, operands);\n                if (val != null) {\n                    if (val instanceof $978b446018acf522$export$41705b1d644e0f14) Object.defineProperty(ret, field[1], val);\n                    else ret[field[1]] = val;\n                }\n                operands = [];\n            } else operands.push($f7a6899246d76dab$var$$f77b592c17132d70$export$2e2bcd8739ae039.decode(stream, b));\n        }\n        return ret;\n    }\n    size(dict, parent, includePointers = true) {\n        let ctx = {\n            parent: parent,\n            val: dict,\n            pointerSize: 0,\n            startOffset: parent.startOffset || 0\n        };\n        let len = 0;\n        for(let k in this.fields){\n            let field = this.fields[k];\n            let val = dict[field[1]];\n            if (val == null || $f7a6899246d76dab$var$$parcel$interopDefault($54da56340462fe8a$exports)(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], null, ctx, val);\n            for (let op of operands)len += $f7a6899246d76dab$var$$f77b592c17132d70$export$2e2bcd8739ae039.size(op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            len += key.length;\n        }\n        if (includePointers) len += ctx.pointerSize;\n        return len;\n    }\n    encode(stream, dict, parent) {\n        let ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: dict,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n        for (let field of this.ops){\n            let val = dict[field[1]];\n            if (val == null || $f7a6899246d76dab$var$$parcel$interopDefault($54da56340462fe8a$exports)(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], stream, ctx, val);\n            for (let op of operands)$f7a6899246d76dab$var$$f77b592c17132d70$export$2e2bcd8739ae039.encode(stream, op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            for (let op1 of key)stream.writeUInt8(op1);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            let ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n        return;\n    }\n    constructor(ops = []){\n        this.ops = ops;\n        this.fields = {};\n        for (let field of ops){\n            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n            this.fields[key] = field;\n        }\n    }\n}\nclass $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039 extends $a835a1cb0586c20c$export$b56007f12edf0c17 {\n    decode(stream, parent, operands) {\n        this.offsetType = {\n            decode: ()=>operands[0]\n        };\n        return super.decode(stream, parent, operands);\n    }\n    encode(stream, value, ctx) {\n        if (!stream) {\n            // compute the size (so ctx.pointerSize is correct)\n            this.offsetType = {\n                size: ()=>0\n            };\n            this.size(value, ctx);\n            return [\n                new $f7a6899246d76dab$var$$4aa1b0749c2770f8$var$Ptr(0)\n            ];\n        }\n        let ptr = null;\n        this.offsetType = {\n            encode: (stream, val)=>ptr = val\n        };\n        super.encode(stream, value, ctx);\n        return [\n            new $f7a6899246d76dab$var$$4aa1b0749c2770f8$var$Ptr(ptr)\n        ];\n    }\n    constructor(type, options = {}){\n        if (options.type == null) options.type = \"global\";\n        super(null, type, options);\n    }\n}\nclass $f7a6899246d76dab$var$$4aa1b0749c2770f8$var$Ptr {\n    valueOf() {\n        return this.val;\n    }\n    constructor(val){\n        this.val = val;\n        this.forceLarge = true;\n    }\n}\nclass $f7a6899246d76dab$var$$15a0cbb3d09cf7ee$var$CFFBlendOp {\n    static decode(stream, parent, operands) {\n        let numBlends = operands.pop();\n        // TODO: actually blend. For now just consume the deltas\n        // since we don't use any of the values anyway.\n        while(operands.length > numBlends)operands.pop();\n    }\n}\nvar $f7a6899246d76dab$var$$15a0cbb3d09cf7ee$export$2e2bcd8739ae039 = new $f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039([\n    // key       name                    type                                          default\n    [\n        6,\n        \"BlueValues\",\n        \"delta\",\n        null\n    ],\n    [\n        7,\n        \"OtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        8,\n        \"FamilyBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        9,\n        \"FamilyOtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            9\n        ],\n        \"BlueScale\",\n        \"number\",\n        0.039625\n    ],\n    [\n        [\n            12,\n            10\n        ],\n        \"BlueShift\",\n        \"number\",\n        7\n    ],\n    [\n        [\n            12,\n            11\n        ],\n        \"BlueFuzz\",\n        \"number\",\n        1\n    ],\n    [\n        10,\n        \"StdHW\",\n        \"number\",\n        null\n    ],\n    [\n        11,\n        \"StdVW\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            12\n        ],\n        \"StemSnapH\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            13\n        ],\n        \"StemSnapV\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            14\n        ],\n        \"ForceBold\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            17\n        ],\n        \"LanguageGroup\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            18\n        ],\n        \"ExpansionFactor\",\n        \"number\",\n        0.06\n    ],\n    [\n        [\n            12,\n            19\n        ],\n        \"initialRandomSeed\",\n        \"number\",\n        0\n    ],\n    [\n        20,\n        \"defaultWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        21,\n        \"nominalWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        22,\n        \"vsindex\",\n        \"number\",\n        0\n    ],\n    [\n        23,\n        \"blend\",\n        $f7a6899246d76dab$var$$15a0cbb3d09cf7ee$var$CFFBlendOp,\n        null\n    ],\n    [\n        19,\n        \"Subrs\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039(new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039, {\n            type: \"local\"\n        }),\n        null\n    ]\n]);\nvar // not edit. Length should be 391.\n$f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\",\n    \"001.000\",\n    \"001.001\",\n    \"001.002\",\n    \"001.003\",\n    \"Black\",\n    \"Bold\",\n    \"Book\",\n    \"Light\",\n    \"Medium\",\n    \"Regular\",\n    \"Roman\",\n    \"Semibold\"\n];\nlet $f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$dee0027060fa13bd = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"\",\n    \"questiondown\",\n    \"\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"\",\n    \"ring\",\n    \"cedilla\",\n    \"\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"AE\",\n    \"\",\n    \"ordfeminine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"ae\",\n    \"\",\n    \"\",\n    \"\",\n    \"dotlessi\",\n    \"\",\n    \"\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\"\n];\nlet $f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$4f58f497e14a53c3 = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"\",\n    \"\",\n    \"isuperior\",\n    \"\",\n    \"\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"\",\n    \"\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"\",\n    \"\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"\",\n    \"Dotaccentsmall\",\n    \"\",\n    \"\",\n    \"Macronsmall\",\n    \"\",\n    \"\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"\",\n    \"\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"\",\n    \"\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $f7a6899246d76dab$var$$1e7c7c16984e4427$export$c33b50336c234f16 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\"\n];\nlet $f7a6899246d76dab$var$$1e7c7c16984e4427$export$3ed0f9e1fee8d489 = [\n    \".notdef\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $f7a6899246d76dab$var$$1e7c7c16984e4427$export$dc28be11139d4120 = [\n    \".notdef\",\n    \"space\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"hyphensuperior\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"centoldstyle\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\"\n];\n//########################\n// Scripts and Languages #\n//########################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysTable = new $0b2a422743092498$export$eabc71f011df675a({\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    reqFeatureIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    featureCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    featureIndexes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"featureCount\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    langSys: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysTable, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$Script = new $0b2a422743092498$export$eabc71f011df675a({\n    defaultLangSys: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysTable),\n    count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    langSysRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysRecord, \"count\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ScriptRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    script: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$Script, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$3e15fc05ce864229 = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$ScriptRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\n//#######################\n// Features and Lookups #\n//#######################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureParams = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nameID: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$6e91cf7616333d5 = new $0b2a422743092498$export$eabc71f011df675a({\n    featureParams: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureParams),\n    lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupListIndexes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"lookupCount\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    feature: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$aa18130def4b6cb4 = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupFlags = new $0b2a422743092498$export$eabc71f011df675a({\n    markAttachmentType: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    flags: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$52e103c63c4e68cf, [\n        \"rightToLeft\",\n        \"ignoreBaseGlyphs\",\n        \"ignoreLigatures\",\n        \"ignoreMarks\",\n        \"useMarkFilteringSet\"\n    ])\n});\nfunction $f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a(SubTable) {\n    let Lookup = new $0b2a422743092498$export$eabc71f011df675a({\n        lookupType: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        flags: $f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupFlags,\n        subTableCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        subTables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, SubTable), \"subTableCount\"),\n        markFilteringSet: new $e3298619df00705e$export$7acb7b24c478f9c6($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.flags.flags.useMarkFilteringSet)\n    });\n    return new $15242fe892221bcd$export$5576c026028d4983(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, Lookup), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\n}\n//#################\n// Coverage Table #\n//#################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$RangeRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    start: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    end: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    startCoverageIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyphs: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"glyphCount\")\n    },\n    2: {\n        rangeCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        rangeRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$RangeRecord, \"rangeCount\")\n    }\n});\n//#########################\n// Class Definition Table #\n//#########################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRangeRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    start: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    end: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    class: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        startGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        classValueArray: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"glyphCount\")\n    },\n    2: {\n        classRangeCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        classRangeRecord: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRangeRecord, \"classRangeCount\")\n    }\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10 = new $0b2a422743092498$export$eabc71f011df675a({\n    a: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    b: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    deltaFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    sequenceIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupListIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$Rule = new $0b2a422743092498$export$eabc71f011df675a({\n    glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    input: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.glyphCount - 1),\n    lookupRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$RuleSet = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$Rule), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRule = new $0b2a422743092498$export$eabc71f011df675a({\n    glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    classes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.glyphCount - 1),\n    lookupRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassSet = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRule), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$841858b892ce1f4c = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        ruleSetCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        ruleSets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$RuleSet), \"ruleSetCount\")\n    },\n    2: {\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        classDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n        classSetCnt: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        classSet: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassSet), \"classSetCnt\")\n    },\n    3: {\n        glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverages: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"glyphCount\"),\n        lookupRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRule = new $0b2a422743092498$export$eabc71f011df675a({\n    backtrackGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    backtrack: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"backtrackGlyphCount\"),\n    inputGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    input: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.inputGlyphCount - 1),\n    lookaheadGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookahead: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"lookaheadGlyphCount\"),\n    lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRuleSet = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRule), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b6dd765146ad212a$export$5e6d09e6861162f6 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        chainCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        chainRuleSets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    2: {\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        backtrackClassDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n        inputClassDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n        lookaheadClassDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n        chainCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        chainClassSet: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    3: {\n        backtrackGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        backtrackCoverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        inputGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        inputCoverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"inputGlyphCount\"),\n        lookaheadGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookaheadCoverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        lookupCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookupRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n/*******************\n * Variation Store *\n *******************/ let $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14 = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(16, \"BE\", 14);\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$RegionAxisCoordinates = new $0b2a422743092498$export$eabc71f011df675a({\n    startCoord: $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14,\n    peakCoord: $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14,\n    endCoord: $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$VariationRegionList = new $0b2a422743092498$export$eabc71f011df675a({\n    axisCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    regionCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    variationRegions: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2e4adcda047b3383$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$DeltaSet = new $0b2a422743092498$export$eabc71f011df675a({\n    shortDeltas: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$c35c15c7caeff2b6, (t)=>t.parent.shortDeltaCount),\n    regionDeltas: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$5984f25eab09961f, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount),\n    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$ItemVariationData = new $0b2a422743092498$export$eabc71f011df675a({\n    itemCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    shortDeltaCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    regionIndexCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    regionIndexes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"regionIndexCount\"),\n    deltaSets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2e4adcda047b3383$var$DeltaSet, \"itemCount\")\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241 = new $0b2a422743092498$export$eabc71f011df675a({\n    format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    variationRegionList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$var$VariationRegionList),\n    variationDataCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    itemVariationData: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/ let $f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionTable = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        axisIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        axisIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        filterRangeMinValue: $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14,\n        filterRangeMaxValue: $f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14\n    }\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionSet = new $0b2a422743092498$export$eabc71f011df675a({\n    conditionCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    conditionTable: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionTable), \"conditionCount\")\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitutionRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    featureIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    alternateFeatureTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$b6dd765146ad212a$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitution = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    substitutionCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    substitutions: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureVariationRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    conditionSet: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionSet, {\n        type: \"parent\"\n    }),\n    featureTableSubstitution: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitution, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$2e4adcda047b3383$export$441b70b7971dd419 = new $0b2a422743092498$export$eabc71f011df675a({\n    majorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    featureVariationRecordCount: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    featureVariationRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass $f7a6899246d76dab$var$$5b547cf9e5da519b$var$PredefinedOp {\n    decode(stream, parent, operands) {\n        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n        return this.type.decode(stream, parent, operands);\n    }\n    size(value, ctx) {\n        return this.type.size(value, ctx);\n    }\n    encode(stream, value, ctx) {\n        let index = this.predefinedOps.indexOf(value);\n        if (index !== -1) return index;\n        return this.type.encode(stream, value, ctx);\n    }\n    constructor(predefinedOps, type){\n        this.predefinedOps = predefinedOps;\n        this.type = type;\n    }\n}\nclass $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFEncodingVersion extends $83cea26e2678b6a9$export$fffa67e515d04022 {\n    decode(stream) {\n        return $83cea26e2678b6a9$export$52e103c63c4e68cf.decode(stream) & 0x7f;\n    }\n    constructor(){\n        super(\"UInt8\");\n    }\n}\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range1 = new $0b2a422743092498$export$eabc71f011df675a({\n    first: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nLeft: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range2 = new $0b2a422743092498$export$eabc71f011df675a({\n    first: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nLeft: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomEncoding = new $bf686a5101131396$export$95a8b60f4da7dec8(new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFEncodingVersion(), {\n    0: {\n        nCodes: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        codes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, \"nCodes\")\n    },\n    1: {\n        nRanges: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        ranges: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range1, \"nRanges\")\n    }\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFEncoding = new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$PredefinedOp([\n    $f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$dee0027060fa13bd,\n    $f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$4f58f497e14a53c3\n], new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomEncoding, {\n    lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass $f7a6899246d76dab$var$$5b547cf9e5da519b$var$RangeArray extends $c2a7f92f159a8c91$export$c4be6576ca6fe4aa {\n    decode(stream, parent) {\n        let length = (0, $978b446018acf522$export$83b6dc3503c1fda6)(this.length, stream, parent);\n        let count = 0;\n        let res = [];\n        while(count < length){\n            let range = this.type.decode(stream, parent);\n            range.offset = count;\n            count += range.nLeft + 1;\n            res.push(range);\n        }\n        return res;\n    }\n}\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomCharset = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$52e103c63c4e68cf, {\n    0: {\n        glyphs: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.parent.CharStrings.length - 1)\n    },\n    1: {\n        ranges: new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$RangeArray($f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range1, (t)=>t.parent.CharStrings.length - 1)\n    },\n    2: {\n        ranges: new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$RangeArray($f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range2, (t)=>t.parent.CharStrings.length - 1)\n    }\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCharset = new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$PredefinedOp([\n    $f7a6899246d76dab$var$$1e7c7c16984e4427$export$c33b50336c234f16,\n    $f7a6899246d76dab$var$$1e7c7c16984e4427$export$3ed0f9e1fee8d489,\n    $f7a6899246d76dab$var$$1e7c7c16984e4427$export$dc28be11139d4120\n], new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomCharset, {\n    lazy: true\n}));\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange3 = new $0b2a422743092498$export$eabc71f011df675a({\n    first: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    fd: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange4 = new $0b2a422743092498$export$eabc71f011df675a({\n    first: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    fd: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDSelect = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$52e103c63c4e68cf, {\n    0: {\n        fds: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.parent.CharStrings.length)\n    },\n    3: {\n        nRanges: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        ranges: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange3, \"nRanges\"),\n        sentinel: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    4: {\n        nRanges: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        ranges: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange4, \"nRanges\"),\n        sentinel: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n    }\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$ptr = new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$15a0cbb3d09cf7ee$export$2e2bcd8739ae039);\nclass $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFPrivateOp {\n    decode(stream, parent, operands) {\n        parent.length = operands[0];\n        return $f7a6899246d76dab$var$$5b547cf9e5da519b$var$ptr.decode(stream, parent, [\n            operands[1]\n        ]);\n    }\n    size(dict, ctx) {\n        return [\n            $f7a6899246d76dab$var$$15a0cbb3d09cf7ee$export$2e2bcd8739ae039.size(dict, ctx, false),\n            $f7a6899246d76dab$var$$5b547cf9e5da519b$var$ptr.size(dict, ctx)[0]\n        ];\n    }\n    encode(stream, dict, ctx) {\n        return [\n            $f7a6899246d76dab$var$$15a0cbb3d09cf7ee$export$2e2bcd8739ae039.size(dict, ctx, false),\n            $f7a6899246d76dab$var$$5b547cf9e5da519b$var$ptr.encode(stream, dict, ctx)[0]\n        ];\n    }\n}\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$FontDict = new $f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039([\n    // key       name                   type(s)                                 default\n    [\n        18,\n        \"Private\",\n        new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ]\n]);\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTopDict = new $f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039([\n    // key       name                   type(s)                                 default\n    [\n        [\n            12,\n            30\n        ],\n        \"ROS\",\n        [\n            \"sid\",\n            \"sid\",\n            \"number\"\n        ],\n        null\n    ],\n    [\n        0,\n        \"version\",\n        \"sid\",\n        null\n    ],\n    [\n        1,\n        \"Notice\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            0\n        ],\n        \"Copyright\",\n        \"sid\",\n        null\n    ],\n    [\n        2,\n        \"FullName\",\n        \"sid\",\n        null\n    ],\n    [\n        3,\n        \"FamilyName\",\n        \"sid\",\n        null\n    ],\n    [\n        4,\n        \"Weight\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            1\n        ],\n        \"isFixedPitch\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            2\n        ],\n        \"ItalicAngle\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            3\n        ],\n        \"UnderlinePosition\",\n        \"number\",\n        -100\n    ],\n    [\n        [\n            12,\n            4\n        ],\n        \"UnderlineThickness\",\n        \"number\",\n        50\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            6\n        ],\n        \"CharstringType\",\n        \"number\",\n        2\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        13,\n        \"UniqueID\",\n        \"number\",\n        null\n    ],\n    [\n        5,\n        \"FontBBox\",\n        \"array\",\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            8\n        ],\n        \"StrokeWidth\",\n        \"number\",\n        0\n    ],\n    [\n        14,\n        \"XUID\",\n        \"array\",\n        null\n    ],\n    [\n        15,\n        \"charset\",\n        $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCharset,\n        $f7a6899246d76dab$var$$1e7c7c16984e4427$export$c33b50336c234f16\n    ],\n    [\n        16,\n        \"Encoding\",\n        $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFEncoding,\n        $f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$dee0027060fa13bd\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039(new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039),\n        null\n    ],\n    [\n        18,\n        \"Private\",\n        new $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            20\n        ],\n        \"SyntheticBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            21\n        ],\n        \"PostScript\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            22\n        ],\n        \"BaseFontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            23\n        ],\n        \"BaseFontBlend\",\n        \"delta\",\n        null\n    ],\n    // CID font specific\n    [\n        [\n            12,\n            31\n        ],\n        \"CIDFontVersion\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            32\n        ],\n        \"CIDFontRevision\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            33\n        ],\n        \"CIDFontType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            34\n        ],\n        \"CIDCount\",\n        \"number\",\n        8720\n    ],\n    [\n        [\n            12,\n            35\n        ],\n        \"UIDBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039(new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ]\n]);\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$VariationStore = new $0b2a422743092498$export$eabc71f011df675a({\n    length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    itemVariationStore: $f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241\n});\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFF2TopDict = new $f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039([\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039(new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039),\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039(new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        24,\n        \"vstore\",\n        new $f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$VariationStore),\n        null\n    ],\n    [\n        25,\n        \"maxstack\",\n        \"number\",\n        193\n    ]\n]);\nlet $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTop = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$a3abada75ef55921, {\n    1: {\n        hdrSize: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        offSize: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        nameIndex: new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039(new $16be2d98cb6bced0$export$89b8e0fa65f6a914(\"length\")),\n        topDictIndex: new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039($f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTopDict),\n        stringIndex: new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039(new $16be2d98cb6bced0$export$89b8e0fa65f6a914(\"length\")),\n        globalSubrIndex: new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039\n    },\n    2: {\n        hdrSize: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        topDict: $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFF2TopDict,\n        globalSubrIndex: new $f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039\n    }\n});\nvar $f7a6899246d76dab$var$$5b547cf9e5da519b$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTop;\nclass $f7a6899246d76dab$var$$f717432b360040c7$var$CFFFont {\n    static decode(stream) {\n        return new $f7a6899246d76dab$var$$f717432b360040c7$var$CFFFont(stream);\n    }\n    decode() {\n        let start = this.stream.pos;\n        let top = $f7a6899246d76dab$var$$5b547cf9e5da519b$export$2e2bcd8739ae039.decode(this.stream);\n        for(let key in top){\n            let val = top[key];\n            this[key] = val;\n        }\n        if (this.version < 2) {\n            if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n            this.topDict = this.topDictIndex[0];\n        }\n        this.isCIDFont = this.topDict.ROS != null;\n        return this;\n    }\n    string(sid) {\n        if (this.version >= 2) return null;\n        if (sid < $f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039.length) return $f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039[sid];\n        return this.stringIndex[sid - $f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039.length];\n    }\n    get postscriptName() {\n        if (this.version < 2) return this.nameIndex[0];\n        return null;\n    }\n    get fullName() {\n        return this.string(this.topDict.FullName);\n    }\n    get familyName() {\n        return this.string(this.topDict.FamilyName);\n    }\n    getCharString(glyph) {\n        this.stream.pos = this.topDict.CharStrings[glyph].offset;\n        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n    getGlyphName(gid) {\n        // CFF2 glyph names are in the post table.\n        if (this.version >= 2) return null;\n        // CID-keyed fonts don't have glyph names\n        if (this.isCIDFont) return null;\n        let { charset: charset } = this.topDict;\n        if (Array.isArray(charset)) return charset[gid];\n        if (gid === 0) return \".notdef\";\n        gid -= 1;\n        switch(charset.version){\n            case 0:\n                return this.string(charset.glyphs[gid]);\n            case 1:\n            case 2:\n                for(let i = 0; i < charset.ranges.length; i++){\n                    let range = charset.ranges[i];\n                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n                }\n                break;\n        }\n        return null;\n    }\n    fdForGlyph(gid) {\n        if (!this.topDict.FDSelect) return null;\n        switch(this.topDict.FDSelect.version){\n            case 0:\n                return this.topDict.FDSelect.fds[gid];\n            case 3:\n            case 4:\n                let { ranges: ranges } = this.topDict.FDSelect;\n                let low = 0;\n                let high = ranges.length - 1;\n                while(low <= high){\n                    let mid = low + high >> 1;\n                    if (gid < ranges[mid].first) high = mid - 1;\n                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;\n                    else return ranges[mid].fd;\n                }\n            default:\n                throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n        }\n    }\n    privateDictForGlyph(gid) {\n        if (this.topDict.FDSelect) {\n            let fd = this.fdForGlyph(gid);\n            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n            return null;\n        }\n        if (this.version < 2) return this.topDict.Private;\n        return this.topDict.FDArray[0].Private;\n    }\n    constructor(stream){\n        this.stream = stream;\n        this.decode();\n    }\n}\nvar $f7a6899246d76dab$var$$f717432b360040c7$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$f717432b360040c7$var$CFFFont;\nlet $f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$var$VerticalOrigin = new $0b2a422743092498$export$eabc71f011df675a({\n    glyphIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    vertOriginY: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n});\nvar $f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    majorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    defaultVertOriginY: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    numVertOriginYMetrics: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    metrics: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\nlet $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0 = new $0b2a422743092498$export$eabc71f011df675a({\n    height: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    width: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    horiBearingX: $83cea26e2678b6a9$export$5984f25eab09961f,\n    horiBearingY: $83cea26e2678b6a9$export$5984f25eab09961f,\n    horiAdvance: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    vertBearingX: $83cea26e2678b6a9$export$5984f25eab09961f,\n    vertBearingY: $83cea26e2678b6a9$export$5984f25eab09961f,\n    vertAdvance: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nlet $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12 = new $0b2a422743092498$export$eabc71f011df675a({\n    height: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    width: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    bearingX: $83cea26e2678b6a9$export$5984f25eab09961f,\n    bearingY: $83cea26e2678b6a9$export$5984f25eab09961f,\n    advance: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nlet $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$EBDTComponent = new $0b2a422743092498$export$eabc71f011df675a({\n    glyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    xOffset: $83cea26e2678b6a9$export$5984f25eab09961f,\n    yOffset: $83cea26e2678b6a9$export$5984f25eab09961f\n});\nclass $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$ByteAligned {\n}\nclass $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$BitAligned {\n}\nlet $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$f1f5ddeb20d14f = new $bf686a5101131396$export$95a8b60f4da7dec8(\"version\", {\n    1: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$ByteAligned\n    },\n    2: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$BitAligned\n    },\n    // format 3 is deprecated\n    // format 4 is not supported by Microsoft\n    5: {\n        data: $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$BitAligned\n    },\n    6: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$ByteAligned\n    },\n    7: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $f7a6899246d76dab$var$$20e0c7bbecb76d75$var$BitAligned\n    },\n    8: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        pad: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf),\n        numComponents: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        components: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    9: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0,\n        pad: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf),\n        numComponents: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        components: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    17: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        dataLen: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        data: new $ce1900e78ba28923$export$7d22a0eea6656474(\"dataLen\")\n    },\n    18: {\n        metrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0,\n        dataLen: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        data: new $ce1900e78ba28923$export$7d22a0eea6656474(\"dataLen\")\n    },\n    19: {\n        dataLen: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        data: new $ce1900e78ba28923$export$7d22a0eea6656474(\"dataLen\")\n    }\n});\nlet $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$SBitLineMetrics = new $0b2a422743092498$export$eabc71f011df675a({\n    ascender: $83cea26e2678b6a9$export$5984f25eab09961f,\n    descender: $83cea26e2678b6a9$export$5984f25eab09961f,\n    widthMax: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    caretSlopeNumerator: $83cea26e2678b6a9$export$5984f25eab09961f,\n    caretSlopeDenominator: $83cea26e2678b6a9$export$5984f25eab09961f,\n    caretOffset: $83cea26e2678b6a9$export$5984f25eab09961f,\n    minOriginSB: $83cea26e2678b6a9$export$5984f25eab09961f,\n    minAdvanceSB: $83cea26e2678b6a9$export$5984f25eab09961f,\n    maxBeforeBL: $83cea26e2678b6a9$export$5984f25eab09961f,\n    minAfterBL: $83cea26e2678b6a9$export$5984f25eab09961f,\n    pad: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$5984f25eab09961f, 2)\n});\nlet $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$CodeOffsetPair = new $0b2a422743092498$export$eabc71f011df675a({\n    glyphCode: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    offset: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtable = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    header: {\n        imageFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        imageDataOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n    },\n    1: {\n        offsetArray: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    2: {\n        imageSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        bigMetrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0\n    },\n    3: {\n        offsetArray: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    4: {\n        numGlyphs: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        glyphArray: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$CodeOffsetPair, (t)=>t.numGlyphs + 1)\n    },\n    5: {\n        imageSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        bigMetrics: $f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0,\n        numGlyphs: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        glyphCodeArray: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numGlyphs\")\n    }\n});\nlet $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtableArray = new $0b2a422743092498$export$eabc71f011df675a({\n    firstGlyphIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lastGlyphIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    subtable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtable)\n});\nlet $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$BitmapSizeTable = new $0b2a422743092498$export$eabc71f011df675a({\n    indexSubTableArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtableArray, 1), {\n        type: \"parent\"\n    }),\n    indexTablesSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    numberOfIndexSubTables: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    colorRef: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    hori: $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$SBitLineMetrics,\n    vert: $f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$SBitLineMetrics,\n    startGlyphIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    endGlyphIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    ppemX: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    ppemY: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    bitDepth: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    flags: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$52e103c63c4e68cf, [\n        \"horizontal\",\n        \"vertical\"\n    ])\n});\nvar $f7a6899246d76dab$var$$035bb95c0cdb1f6d$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    numSizes: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    sizes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$BitmapSizeTable, \"numSizes\")\n});\nlet $f7a6899246d76dab$var$$73d13900b55a3c0c$var$ImageTable = new $0b2a422743092498$export$eabc71f011df675a({\n    ppem: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    resolution: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    imageOffsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"void\"), (t)=>t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$f7a6899246d76dab$var$$73d13900b55a3c0c$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    flags: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n        \"renderOutlines\"\n    ]),\n    numImgTables: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    imageTables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$73d13900b55a3c0c$var$ImageTable), \"numImgTables\")\n});\nlet $f7a6899246d76dab$var$$97f6b8be3a347a8f$var$LayerRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    gid: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    paletteIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nlet $f7a6899246d76dab$var$$97f6b8be3a347a8f$var$BaseGlyphRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    gid: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    // and is not rendered for color.\n    firstLayerIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    // There will be numLayers consecutive entries for this base glyph.\n    numLayers: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nvar $f7a6899246d76dab$var$$97f6b8be3a347a8f$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numBaseGlyphRecords: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    baseGlyphRecord: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$97f6b8be3a347a8f$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n    layerRecords: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$97f6b8be3a347a8f$var$LayerRecord, \"numLayerRecords\"), {\n        lazy: true\n    }),\n    numLayerRecords: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$16ca60ecbdee30ea$var$ColorRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    blue: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    green: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    red: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    alpha: $83cea26e2678b6a9$export$52e103c63c4e68cf\n});\nvar $f7a6899246d76dab$var$$16ca60ecbdee30ea$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    header: {\n        numPaletteEntries: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        numPalettes: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        numColorRecords: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        colorRecords: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$16ca60ecbdee30ea$var$ColorRecord, \"numColorRecords\")),\n        colorRecordIndices: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numPalettes\")\n    },\n    0: {},\n    1: {\n        offsetPaletteTypeArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"numPalettes\")),\n        offsetPaletteLabelArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numPalettes\")),\n        offsetPaletteEntryLabelArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numPaletteEntries\"))\n    }\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        coordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6 // X or Y value, in design units\n    },\n    2: {\n        coordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        referenceGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        baseCoordPoint: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // Index of contour point on the referenceGlyph\n    },\n    3: {\n        coordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        deviceTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10) // Device table for X or Y value\n    }\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseValues = new $0b2a422743092498$export$eabc71f011df675a({\n    defaultIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    baseCoordCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    baseCoords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord), \"baseCoordCount\")\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$FeatMinMaxRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    minCoord: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }),\n    maxCoord: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }) // May be NULL\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$MinMax = new $0b2a422743092498$export$eabc71f011df675a({\n    minCoord: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord),\n    maxCoord: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord),\n    featMinMaxCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    featMinMaxRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$7327e41706f9d5c7$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseLangSysRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    minMax: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$MinMax, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScript = new $0b2a422743092498$export$eabc71f011df675a({\n    baseValues: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseValues),\n    defaultMinMax: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$MinMax),\n    baseLangSysCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    baseLangSysRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    script: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScript, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptList = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseTagList = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$7327e41706f9d5c7$var$Axis = new $0b2a422743092498$export$eabc71f011df675a({\n    baseTagList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseTagList),\n    baseScriptList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptList)\n});\nvar $f7a6899246d76dab$var$$7327e41706f9d5c7$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$de9ffb9418dd7d0d, {\n    header: {\n        horizAxis: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$Axis),\n        vertAxis: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7327e41706f9d5c7$var$Axis) // May be NULL\n    },\n    0x00010000: {},\n    0x00010001: {\n        itemVariationStore: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241)\n    }\n});\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachPoint = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachList = new $0b2a422743092498$export$eabc71f011df675a({\n    coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n    glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    attachPoints: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachPoint), \"glyphCount\")\n});\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$CaretValue = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        coordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n    },\n    2: {\n        caretValuePoint: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    3: {\n        coordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        deviceTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10)\n    }\n});\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigGlyph = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$CaretValue), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigCaretList = new $0b2a422743092498$export$eabc71f011df675a({\n    coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n    ligGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    ligGlyphs: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $f7a6899246d76dab$var$$7e48bbe9e5345664$var$MarkGlyphSetsDef = new $0b2a422743092498$export$eabc71f011df675a({\n    markSetTableFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    markSetCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    coverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"markSetCount\")\n});\nvar $f7a6899246d76dab$var$$7e48bbe9e5345664$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$de9ffb9418dd7d0d, {\n    header: {\n        glyphClassDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n        attachList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachList),\n        ligCaretList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigCaretList),\n        markAttachClassDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71)\n    },\n    0x00010000: {},\n    0x00010002: {\n        markGlyphSetsDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$MarkGlyphSetsDef)\n    },\n    0x00010003: {\n        markGlyphSetsDef: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$7e48bbe9e5345664$var$MarkGlyphSetsDef),\n        itemVariationStore: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241)\n    }\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat = new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n    \"xPlacement\",\n    \"yPlacement\",\n    \"xAdvance\",\n    \"yAdvance\",\n    \"xPlaDevice\",\n    \"yPlaDevice\",\n    \"xAdvDevice\",\n    \"yAdvDevice\"\n]);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$types = {\n    xPlacement: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yPlacement: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xAdvance: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yAdvance: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xPlaDevice: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10, {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yPlaDevice: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10, {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    xAdvDevice: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10, {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yAdvDevice: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10, {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    })\n};\nclass $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord {\n    buildStruct(parent) {\n        let struct = parent;\n        while(!struct[this.key] && struct.parent)struct = struct.parent;\n        if (!struct[this.key]) return;\n        let fields = {};\n        fields.rel = ()=>struct._startOffset;\n        let format = struct[this.key];\n        for(let key in format)if (format[key]) fields[key] = $f7a6899246d76dab$var$$b687332511a4da75$var$types[key];\n        return new $0b2a422743092498$export$eabc71f011df675a(fields);\n    }\n    size(val, ctx) {\n        return this.buildStruct(ctx).size(val, ctx);\n    }\n    decode(stream, parent) {\n        let res = this.buildStruct(parent).decode(stream, parent);\n        delete res.rel;\n        return res;\n    }\n    constructor(key = \"valueFormat\"){\n        this.key = key;\n    }\n}\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$PairValueRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    secondGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    value1: new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$PairSet = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b687332511a4da75$var$PairValueRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$Class2Record = new $0b2a422743092498$export$eabc71f011df675a({\n    value1: new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    1: {\n        xCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        yCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n    },\n    2: {\n        xCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        yCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        anchorPoint: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    3: {\n        xCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        yCoordinate: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n        xDeviceTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10),\n        yDeviceTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10)\n    }\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$EntryExitRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    entryAnchor: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    }),\n    exitAnchor: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$MarkRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    class: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    markAnchor: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$MarkArray = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b687332511a4da75$var$MarkRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$BaseRecord = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor), (t)=>t.parent.classCount);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$BaseArray = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b687332511a4da75$var$BaseRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$ComponentRecord = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$Anchor), (t)=>t.parent.parent.classCount);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$LigatureAttach = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b687332511a4da75$var$ComponentRecord, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b687332511a4da75$var$LigatureArray = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$LigatureAttach), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f = new $bf686a5101131396$export$95a8b60f4da7dec8(\"lookupType\", {\n    1: new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n        1: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            valueFormat: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            value: new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord()\n        },\n        2: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            valueFormat: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            valueCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            values: new $15242fe892221bcd$export$5576c026028d4983(new $f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord(), \"valueCount\")\n        }\n    }),\n    2: new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n        1: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            valueFormat1: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            valueFormat2: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            pairSetCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            pairSets: new $15242fe892221bcd$export$5576c026028d4983(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$PairSet), \"pairSetCount\")\n        },\n        2: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            valueFormat1: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            valueFormat2: $f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat,\n            classDef1: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n            classDef2: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71),\n            class1Count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            class2Count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            classRecords: new $15242fe892221bcd$export$5576c026028d4983(new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$b687332511a4da75$var$Class2Record, \"class2Count\"), \"class1Count\")\n        }\n    }),\n    3: {\n        format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        entryExitCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        entryExitRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$b687332511a4da75$var$EntryExitRecord, \"entryExitCount\")\n    },\n    4: {\n        format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        markCoverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        baseCoverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        classCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        markArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$MarkArray),\n        baseArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$BaseArray)\n    },\n    5: {\n        format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        markCoverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        ligatureCoverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        classCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        markArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$MarkArray),\n        ligatureArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$LigatureArray)\n    },\n    6: {\n        format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        mark1Coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        mark2Coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        classCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        mark1Array: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$MarkArray),\n        mark2Array: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b687332511a4da75$var$BaseArray)\n    },\n    7: $f7a6899246d76dab$var$$b6dd765146ad212a$export$841858b892ce1f4c,\n    8: $f7a6899246d76dab$var$$b6dd765146ad212a$export$5e6d09e6861162f6,\n    9: {\n        posFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookupType: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        extension: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, null)\n    }\n});\n// Fix circular reference\n$f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f.versions[9].extension.type = $f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f;\nvar $f7a6899246d76dab$var$$b687332511a4da75$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$de9ffb9418dd7d0d, {\n    header: {\n        scriptList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$3e15fc05ce864229),\n        featureList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$aa18130def4b6cb4),\n        lookupList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a($f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$export$441b70b7971dd419)\n    }\n});\nlet $f7a6899246d76dab$var$$99ccad60b96f92fb$var$Sequence = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$99ccad60b96f92fb$var$AlternateSet = $f7a6899246d76dab$var$$99ccad60b96f92fb$var$Sequence;\nlet $f7a6899246d76dab$var$$99ccad60b96f92fb$var$Ligature = new $0b2a422743092498$export$eabc71f011df675a({\n    glyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    compCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    components: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.compCount - 1)\n});\nlet $f7a6899246d76dab$var$$99ccad60b96f92fb$var$LigatureSet = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$99ccad60b96f92fb$var$Ligature), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$99ccad60b96f92fb$var$GSUBLookup = new $bf686a5101131396$export$95a8b60f4da7dec8(\"lookupType\", {\n    1: new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n        1: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            deltaGlyphID: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n        },\n        2: {\n            coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n            glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            substitute: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"glyphCount\")\n        }\n    }),\n    2: {\n        substFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        sequences: new $15242fe892221bcd$export$5576c026028d4983(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$99ccad60b96f92fb$var$Sequence), \"count\")\n    },\n    3: {\n        substFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        alternateSet: new $15242fe892221bcd$export$5576c026028d4983(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$99ccad60b96f92fb$var$AlternateSet), \"count\")\n    },\n    4: {\n        substFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        ligatureSets: new $15242fe892221bcd$export$5576c026028d4983(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$99ccad60b96f92fb$var$LigatureSet), \"count\")\n    },\n    5: $f7a6899246d76dab$var$$b6dd765146ad212a$export$841858b892ce1f4c,\n    6: $f7a6899246d76dab$var$$b6dd765146ad212a$export$5e6d09e6861162f6,\n    7: {\n        substFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookupType: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        extension: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, null)\n    },\n    8: {\n        substFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        coverage: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111),\n        backtrackCoverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        lookaheadGlyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        lookaheadCoverage: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        substitutes: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"glyphCount\")\n    }\n});\n// Fix circular reference\n$f7a6899246d76dab$var$$99ccad60b96f92fb$var$GSUBLookup.versions[7].extension.type = $f7a6899246d76dab$var$$99ccad60b96f92fb$var$GSUBLookup;\nvar $f7a6899246d76dab$var$$99ccad60b96f92fb$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$de9ffb9418dd7d0d, {\n    header: {\n        scriptList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$3e15fc05ce864229),\n        featureList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$b6dd765146ad212a$export$aa18130def4b6cb4),\n        lookupList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a($f7a6899246d76dab$var$$99ccad60b96f92fb$var$GSUBLookup))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$export$441b70b7971dd419)\n    }\n});\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfPriority = new $0b2a422743092498$export$eabc71f011df675a({\n    shrinkageEnableGSUB: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGSUB: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageEnableGPOS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGPOS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageJstfMax: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a($f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f)),\n    extensionEnableGSUB: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGSUB: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    extensionEnableGPOS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGPOS: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList),\n    extensionJstfMax: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a($f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f))\n});\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSys = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfPriority), $83cea26e2678b6a9$export$56bd24b5a3ee8456);\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSysRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    jstfLangSys: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSys)\n});\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScript = new $0b2a422743092498$export$eabc71f011df675a({\n    extenderGlyphs: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, $83cea26e2678b6a9$export$56bd24b5a3ee8456)),\n    defaultLangSys: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSys),\n    langSysCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    langSysRecords: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScriptRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    script: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScript, {\n        type: \"parent\"\n    })\n});\nvar $f7a6899246d76dab$var$$573d5042c76c4940$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    scriptCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    scriptList: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScriptRecord, \"scriptCount\")\n});\n// TODO: add this to restructure\nclass $f7a6899246d76dab$var$$a5875b80d6087f61$var$VariableSizeNumber {\n    decode(stream, parent) {\n        switch(this.size(0, parent)){\n            case 1:\n                return stream.readUInt8();\n            case 2:\n                return stream.readUInt16BE();\n            case 3:\n                return stream.readUInt24BE();\n            case 4:\n                return stream.readUInt32BE();\n        }\n    }\n    size(val, parent) {\n        return (0, $978b446018acf522$export$83b6dc3503c1fda6)(this._size, null, parent);\n    }\n    constructor(size){\n        this._size = size;\n    }\n}\nlet $f7a6899246d76dab$var$$a5875b80d6087f61$var$MapDataEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    entry: new $f7a6899246d76dab$var$$a5875b80d6087f61$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1),\n    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $f7a6899246d76dab$var$$a5875b80d6087f61$var$DeltaSetIndexMap = new $0b2a422743092498$export$eabc71f011df675a({\n    entryFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    mapCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    mapData: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a5875b80d6087f61$var$MapDataEntry, \"mapCount\")\n});\nvar $f7a6899246d76dab$var$$a5875b80d6087f61$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    majorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    itemVariationStore: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241),\n    advanceWidthMapping: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$a5875b80d6087f61$var$DeltaSetIndexMap),\n    LSBMapping: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$a5875b80d6087f61$var$DeltaSetIndexMap),\n    RSBMapping: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$a5875b80d6087f61$var$DeltaSetIndexMap)\n});\nlet $f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$Signature = new $0b2a422743092498$export$eabc71f011df675a({\n    format: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    offset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$SignatureBlock = new $0b2a422743092498$export$eabc71f011df675a({\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456, 2),\n    cbSignature: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    signature: new $ce1900e78ba28923$export$7d22a0eea6656474(\"cbSignature\")\n});\nvar $f7a6899246d76dab$var$$4423bc1ac09bbbd1$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    ulVersion: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    usNumSigs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    usFlag: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    signatures: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$Signature, \"usNumSigs\"),\n    signatureBlocks: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$SignatureBlock, \"usNumSigs\")\n});\nlet $f7a6899246d76dab$var$$7b50e3f8d83263de$var$GaspRange = new $0b2a422743092498$export$eabc71f011df675a({\n    rangeMaxPPEM: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    rangeGaspBehavior: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$56bd24b5a3ee8456, [\n        \"grayscale\",\n        \"gridfit\",\n        \"symmetricSmoothing\",\n        \"symmetricGridfit\" // only in version 1, for ClearType\n    ])\n});\nvar $f7a6899246d76dab$var$$7b50e3f8d83263de$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numRanges: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    gaspRanges: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$7b50e3f8d83263de$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\nlet $f7a6899246d76dab$var$$7bf92ec372cd2307$var$DeviceRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    pixelSize: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    maximumWidth: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    widths: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.parent.parent.maxp.numGlyphs)\n});\nvar $f7a6899246d76dab$var$$7bf92ec372cd2307$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numRecords: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    sizeDeviceRecord: $83cea26e2678b6a9$export$1d95835383bb05a,\n    records: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$7bf92ec372cd2307$var$DeviceRecord, \"numRecords\")\n});\nlet $f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernPair = new $0b2a422743092498$export$eabc71f011df675a({\n    left: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    right: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    value: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n});\nlet $f7a6899246d76dab$var$$a3f544bcf76542d1$var$ClassTable = new $0b2a422743092498$export$eabc71f011df675a({\n    firstGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"nGlyphs\"),\n    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $f7a6899246d76dab$var$$a3f544bcf76542d1$var$Kern2Array = new $0b2a422743092498$export$eabc71f011df675a({\n    off: (t)=>t._startOffset - t.parent.parent._startOffset,\n    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n    values: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$c35c15c7caeff2b6, \"len\")\n});\nlet $f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernSubtable = new $bf686a5101131396$export$95a8b60f4da7dec8(\"format\", {\n    0: {\n        nPairs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        searchRange: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        entrySelector: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        rangeShift: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        pairs: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernPair, \"nPairs\")\n    },\n    2: {\n        rowWidth: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        leftTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        rightTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        array: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$a3f544bcf76542d1$var$Kern2Array, {\n            type: \"parent\"\n        })\n    },\n    3: {\n        glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        kernValueCount: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        leftClassCount: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        rightClassCount: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        flags: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        kernValue: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$c35c15c7caeff2b6, \"kernValueCount\"),\n        leftClass: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, \"glyphCount\"),\n        rightClass: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, \"glyphCount\"),\n        kernIndex: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.leftClassCount * t.rightClassCount)\n    }\n});\nlet $f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernTable = new $bf686a5101131396$export$95a8b60f4da7dec8(\"version\", {\n    0: {\n        subVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        format: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        coverage: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$52e103c63c4e68cf, [\n            \"horizontal\",\n            \"minimum\",\n            \"crossStream\",\n            \"override\" // If set to 1 the value in this table replaces the accumulated value\n        ]),\n        subtable: $f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernSubtable,\n        padding: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.length - t._currentOffset)\n    },\n    1: {\n        length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        coverage: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$52e103c63c4e68cf, [\n            null,\n            null,\n            null,\n            null,\n            null,\n            \"variation\",\n            \"crossStream\",\n            \"vertical\" // Set if table has vertical kerning values\n        ]),\n        format: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n        tupleIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        subtable: $f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernSubtable,\n        padding: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.length - t._currentOffset)\n    }\n});\nvar $f7a6899246d76dab$var$$a3f544bcf76542d1$export$2e2bcd8739ae039 = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n    0: {\n        nTables: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernTable, \"nTables\")\n    },\n    1: {\n        reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n        nTables: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernTable, \"nTables\")\n    }\n});\nvar // Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$f7a6899246d76dab$var$$86687befb45925d0$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    yPels: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, \"numGlyphs\")\n});\nvar // NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$f7a6899246d76dab$var$$91429006e51e0fe8$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    fontNumber: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    pitch: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    xHeight: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    style: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    typeFamily: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    capHeight: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    symbolSet: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    typeface: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(16),\n    characterComplement: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(8),\n    fileName: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(6),\n    strokeWeight: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(1),\n    widthType: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(1),\n    serifStyle: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf)\n});\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nlet $f7a6899246d76dab$var$$627850fc9deed59a$var$Ratio = new $0b2a422743092498$export$eabc71f011df675a({\n    bCharSet: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    xRatio: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    yStartRatio: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    yEndRatio: $83cea26e2678b6a9$export$52e103c63c4e68cf // Ending y-Ratio value\n});\nlet $f7a6899246d76dab$var$$627850fc9deed59a$var$vTable = new $0b2a422743092498$export$eabc71f011df675a({\n    yPelHeight: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    yMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6 // Minimum value (in pels) for this yPelHeight\n});\nlet $f7a6899246d76dab$var$$627850fc9deed59a$var$VdmxGroup = new $0b2a422743092498$export$eabc71f011df675a({\n    recs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    startsz: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    endsz: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    entries: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$627850fc9deed59a$var$vTable, \"recs\") // The VDMX records\n});\nvar $f7a6899246d76dab$var$$627850fc9deed59a$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numRecs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    numRatios: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    ratioRanges: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$627850fc9deed59a$var$Ratio, \"numRatios\"),\n    offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numRatios\"),\n    groups: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$627850fc9deed59a$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\nvar $f7a6899246d76dab$var$$65c33f5f068fc77f$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    ascent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    descent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    lineGap: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    advanceHeightMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    minTopSideBearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    minBottomSideBearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMaxExtent: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretSlopeRise: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretSlopeRun: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    caretOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$c35c15c7caeff2b6, 4),\n    metricDataFormat: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    numberOfMetrics: $83cea26e2678b6a9$export$56bd24b5a3ee8456 // Number of advance heights in the Vertical Metrics table\n});\nlet $f7a6899246d76dab$var$$597d739523b65bb3$var$VmtxEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    advance: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    bearing: $83cea26e2678b6a9$export$c35c15c7caeff2b6 // The top sidebearing of the glyph\n});\nvar $f7a6899246d76dab$var$$597d739523b65bb3$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    metrics: new $15242fe892221bcd$export$5576c026028d4983($f7a6899246d76dab$var$$597d739523b65bb3$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics),\n    bearings: new $15242fe892221bcd$export$5576c026028d4983($83cea26e2678b6a9$export$c35c15c7caeff2b6, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\nlet $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$shortFrac = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(16, \"BE\", 14);\nlet $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Correspondence = new $0b2a422743092498$export$eabc71f011df675a({\n    fromCoord: $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$shortFrac,\n    toCoord: $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$shortFrac\n});\nlet $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Segment = new $0b2a422743092498$export$eabc71f011df675a({\n    pairCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    correspondence: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Correspondence, \"pairCount\")\n});\nvar $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    axisCount: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    segment: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Segment, \"axisCount\")\n});\nclass $f7a6899246d76dab$var$$22801616bd931ca3$var$UnboundedArrayAccessor {\n    getItem(index) {\n        if (this._items[index] == null) {\n            let pos = this.stream.pos;\n            this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n            this._items[index] = this.type.decode(this.stream, this.parent);\n            this.stream.pos = pos;\n        }\n        return this._items[index];\n    }\n    inspect() {\n        return `[UnboundedArray ${this.type.constructor.name}]`;\n    }\n    constructor(type, stream, parent){\n        this.type = type;\n        this.stream = stream;\n        this.parent = parent;\n        this.base = this.stream.pos;\n        this._items = [];\n    }\n}\nclass $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a extends $c2a7f92f159a8c91$export$c4be6576ca6fe4aa {\n    decode(stream, parent) {\n        return new $f7a6899246d76dab$var$$22801616bd931ca3$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n    constructor(type){\n        super(type, 0);\n    }\n}\nlet $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c = function(ValueType = $83cea26e2678b6a9$export$56bd24b5a3ee8456) {\n    // Helper class that makes internal structures invisible to pointers\n    class Shadow {\n        decode(stream, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.decode(stream, ctx);\n        }\n        size(val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.size(val, ctx);\n        }\n        encode(stream, val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.encode(stream, val, ctx);\n        }\n        constructor(type){\n            this.type = type;\n        }\n    }\n    ValueType = new Shadow(ValueType);\n    let BinarySearchHeader = new $0b2a422743092498$export$eabc71f011df675a({\n        unitSize: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        nUnits: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        searchRange: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        entrySelector: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        rangeShift: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    });\n    let LookupSegmentSingle = new $0b2a422743092498$export$eabc71f011df675a({\n        lastGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        firstGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        value: ValueType\n    });\n    let LookupSegmentArray = new $0b2a422743092498$export$eabc71f011df675a({\n        lastGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        firstGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        values: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1), {\n            type: \"parent\"\n        })\n    });\n    let LookupSingle = new $0b2a422743092498$export$eabc71f011df675a({\n        glyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        value: ValueType\n    });\n    return new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$56bd24b5a3ee8456, {\n        0: {\n            values: new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n        },\n        2: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        4: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits)\n        },\n        6: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(LookupSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        8: {\n            firstGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            count: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n            values: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(ValueType, \"count\")\n        }\n    });\n};\nfunction $f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba(entryData = {}, lookupType = $83cea26e2678b6a9$export$56bd24b5a3ee8456) {\n    let entry = Object.assign({\n        newState: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    }, entryData);\n    let Entry = new $0b2a422743092498$export$eabc71f011df675a(entry);\n    let StateArray = new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.nClasses));\n    let StateHeader = new $0b2a422743092498$export$eabc71f011df675a({\n        nClasses: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        classTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c(lookupType)),\n        stateArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, StateArray),\n        entryTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader;\n}\nfunction $f7a6899246d76dab$var$$22801616bd931ca3$export$105027425199cc51(entryData = {}, lookupType = $83cea26e2678b6a9$export$56bd24b5a3ee8456) {\n    let ClassLookupTable = new $0b2a422743092498$export$eabc71f011df675a({\n        version () {\n            return 8;\n        },\n        firstGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        values: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, $83cea26e2678b6a9$export$56bd24b5a3ee8456)\n    });\n    let entry = Object.assign({\n        newStateOffset: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        // convert offset to stateArray index\n        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n        flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    }, entryData);\n    let Entry = new $0b2a422743092498$export$eabc71f011df675a(entry);\n    let StateArray = new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.nClasses));\n    let StateHeader1 = new $0b2a422743092498$export$eabc71f011df675a({\n        nClasses: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        classTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, ClassLookupTable),\n        stateArray: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, StateArray),\n        entryTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader1;\n}\nlet $f7a6899246d76dab$var$$3a5ca96d3e3aaf20$var$BslnSubtable = new $bf686a5101131396$export$95a8b60f4da7dec8(\"format\", {\n    0: {\n        deltas: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$c35c15c7caeff2b6, 32)\n    },\n    1: {\n        deltas: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$c35c15c7caeff2b6, 32),\n        mappingData: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c($83cea26e2678b6a9$export$56bd24b5a3ee8456)\n    },\n    2: {\n        standardGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        controlPoints: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, 32)\n    },\n    3: {\n        standardGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        controlPoints: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, 32),\n        mappingData: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c($83cea26e2678b6a9$export$56bd24b5a3ee8456)\n    }\n});\nvar $f7a6899246d76dab$var$$3a5ca96d3e3aaf20$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    defaultBaseline: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    subtable: $f7a6899246d76dab$var$$3a5ca96d3e3aaf20$var$BslnSubtable\n});\nlet $f7a6899246d76dab$var$$8d4241d96b2b0589$var$Setting = new $0b2a422743092498$export$eabc71f011df675a({\n    setting: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nameIndex: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $f7a6899246d76dab$var$$8d4241d96b2b0589$var$FeatureName = new $0b2a422743092498$export$eabc71f011df675a({\n    feature: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nSettings: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    settingTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$8d4241d96b2b0589$var$Setting, \"nSettings\"), {\n        type: \"parent\"\n    }),\n    featureFlags: new $42b540cf7adee3c9$export$96b43b8a49f688ea($83cea26e2678b6a9$export$52e103c63c4e68cf, [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"hasDefault\",\n        \"exclusive\"\n    ]),\n    defaultSetting: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    nameIndex: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $f7a6899246d76dab$var$$8d4241d96b2b0589$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    featureNameCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    reserved1: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    reserved2: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$de9ffb9418dd7d0d),\n    featureNames: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$8d4241d96b2b0589$var$FeatureName, \"featureNameCount\")\n});\nlet $f7a6899246d76dab$var$$a79cd5132b1cf476$var$Axis = new $0b2a422743092498$export$eabc71f011df675a({\n    axisTag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    minValue: $83cea26e2678b6a9$export$e913265d48471f2d,\n    defaultValue: $83cea26e2678b6a9$export$e913265d48471f2d,\n    maxValue: $83cea26e2678b6a9$export$e913265d48471f2d,\n    flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nameID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $f7a6899246d76dab$var$$a79cd5132b1cf476$var$Instance = new $0b2a422743092498$export$eabc71f011df675a({\n    nameID: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID],\n    flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    coord: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$e913265d48471f2d, (t)=>t.parent.axisCount),\n    postscriptNameID: new $e3298619df00705e$export$7acb7b24c478f9c6($83cea26e2678b6a9$export$56bd24b5a3ee8456, (t)=>t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $f7a6899246d76dab$var$$a79cd5132b1cf476$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    offsetToData: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    countSizePairs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    axisCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    axisSize: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    instanceCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    instanceSize: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    axis: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a79cd5132b1cf476$var$Axis, \"axisCount\"),\n    instance: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$a79cd5132b1cf476$var$Instance, \"instanceCount\")\n});\nlet $f7a6899246d76dab$var$$3f36f1a5e6989457$var$shortFrac = new $83cea26e2678b6a9$export$13475bbd2a37a9b4(16, \"BE\", 14);\nclass $f7a6899246d76dab$var$$3f36f1a5e6989457$var$Offset {\n    static decode(stream, parent) {\n        // In short format, offsets are multiplied by 2.\n        // This doesn't seem to be documented by Apple, but it\n        // is implemented this way in Freetype.\n        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n}\nlet $f7a6899246d76dab$var$$3f36f1a5e6989457$var$gvar = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    axisCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    globalCoordCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    globalCoords: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$3f36f1a5e6989457$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n    glyphCount: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    offsetToData: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa(new $a835a1cb0586c20c$export$b56007f12edf0c17($f7a6899246d76dab$var$$3f36f1a5e6989457$var$Offset, \"void\", {\n        relativeTo: (ctx)=>ctx.offsetToData,\n        allowNull: false\n    }), (t)=>t.glyphCount + 1)\n});\nvar $f7a6899246d76dab$var$$3f36f1a5e6989457$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$3f36f1a5e6989457$var$gvar;\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ClassTable = new $0b2a422743092498$export$eabc71f011df675a({\n    length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    coverage: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    subFeatureFlags: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    stateTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$105027425199cc51\n});\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaRecord = new $0b2a422743092498$export$eabc71f011df675a({\n    justClass: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    beforeGrowLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n    beforeShrinkLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n    afterGrowLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n    afterShrinkLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n    growFlags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    shrinkFlags: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n});\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaCluster = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaRecord, $83cea26e2678b6a9$export$de9ffb9418dd7d0d);\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ActionData = new $bf686a5101131396$export$95a8b60f4da7dec8(\"actionType\", {\n    0: {\n        lowerLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n        upperLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n        order: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyphs: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, $83cea26e2678b6a9$export$56bd24b5a3ee8456)\n    },\n    1: {\n        addGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    2: {\n        substThreshold: $83cea26e2678b6a9$export$e913265d48471f2d,\n        addGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        substGlyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    },\n    3: {},\n    4: {\n        variationAxis: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        minimumLimit: $83cea26e2678b6a9$export$e913265d48471f2d,\n        noStretchValue: $83cea26e2678b6a9$export$e913265d48471f2d,\n        maximumLimit: $83cea26e2678b6a9$export$e913265d48471f2d\n    },\n    5: {\n        flags: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n        glyph: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n    }\n});\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$Action = new $0b2a422743092498$export$eabc71f011df675a({\n    actionClass: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    actionType: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    actionLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    actionData: $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ActionData,\n    padding: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.actionLength - t._currentOffset)\n});\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostcompensationAction = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$Action, $83cea26e2678b6a9$export$de9ffb9418dd7d0d);\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostCompensationTable = new $0b2a422743092498$export$eabc71f011df675a({\n    lookupTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostcompensationAction))\n});\nlet $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$JustificationTable = new $0b2a422743092498$export$eabc71f011df675a({\n    classTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ClassTable, {\n        type: \"parent\"\n    }),\n    wdcOffset: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    postCompensationTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostCompensationTable, {\n        type: \"parent\"\n    }),\n    widthDeltaClusters: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaCluster, {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.wdcOffset\n    }))\n});\nvar $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    horizontal: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$JustificationTable),\n    vertical: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$JustificationTable)\n});\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$LigatureData = {\n    action: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n};\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$ContextualData = {\n    markIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    currentIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n};\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$InsertionData = {\n    currentInsertIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    markedInsertIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456\n};\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubstitutionTable = new $0b2a422743092498$export$eabc71f011df675a({\n    items: new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a(new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c))\n});\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubtableData = new $bf686a5101131396$export$95a8b60f4da7dec8(\"type\", {\n    0: {\n        stateTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba\n    },\n    1: {\n        stateTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$ContextualData),\n        substitutionTable: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubstitutionTable)\n    },\n    2: {\n        stateTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$LigatureData),\n        ligatureActions: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a($83cea26e2678b6a9$export$de9ffb9418dd7d0d)),\n        components: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a($83cea26e2678b6a9$export$56bd24b5a3ee8456)),\n        ligatureList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a($83cea26e2678b6a9$export$56bd24b5a3ee8456))\n    },\n    4: {\n        lookupTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c\n    },\n    5: {\n        stateTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$InsertionData),\n        insertionActions: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, new $f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a($83cea26e2678b6a9$export$56bd24b5a3ee8456))\n    }\n});\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$Subtable = new $0b2a422743092498$export$eabc71f011df675a({\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    coverage: $83cea26e2678b6a9$export$1925298fbd719b21,\n    type: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    subFeatureFlags: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    table: $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubtableData,\n    padding: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf, (t)=>t.length - t._currentOffset)\n});\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$FeatureEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    featureType: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    featureSetting: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    enableFlags: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    disableFlags: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$MorxChain = new $0b2a422743092498$export$eabc71f011df675a({\n    defaultFlags: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    chainLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    nFeatureEntries: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    nSubtables: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    features: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$FeatureEntry, \"nFeatureEntries\"),\n    subtables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$Subtable, \"nSubtables\")\n});\nvar $f7a6899246d76dab$var$$ef40c6dc80fd50a2$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    unused: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    nChains: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    chains: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$MorxChain, \"nChains\")\n});\nlet $f7a6899246d76dab$var$$ab24dea08b58a7cc$var$OpticalBounds = new $0b2a422743092498$export$eabc71f011df675a({\n    left: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    top: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    right: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    bottom: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n});\nvar $f7a6899246d76dab$var$$ab24dea08b58a7cc$export$2e2bcd8739ae039 = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$e913265d48471f2d,\n    format: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    lookupTable: new $f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c($f7a6899246d76dab$var$$ab24dea08b58a7cc$var$OpticalBounds)\n});\nlet $f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables = {};\nvar $f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.cmap = $f7a6899246d76dab$var$$e4ae0436c91af89f$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.head = $f7a6899246d76dab$var$$55a60976afb7c261$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.hhea = $f7a6899246d76dab$var$$dde72b7b5b650596$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.hmtx = $f7a6899246d76dab$var$$a7c40184072c9a5b$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.maxp = $f7a6899246d76dab$var$$521197722369f691$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.name = $f7a6899246d76dab$var$$51a9f4feb3a3b2b1$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables[\"OS/2\"] = $f7a6899246d76dab$var$$114ea85db469b435$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.post = $f7a6899246d76dab$var$$f93b30299e1ea0f5$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.fpgm = $f7a6899246d76dab$var$$873d79fea57d3161$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.loca = $f7a6899246d76dab$var$$83c4155666d50c37$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.prep = $f7a6899246d76dab$var$$b12598db7cdf7042$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables[\"cvt \"] = $f7a6899246d76dab$var$$8fb09b0f473d61a0$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.glyf = $f7a6899246d76dab$var$$7707bdf21a3d89cc$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables[\"CFF \"] = $f7a6899246d76dab$var$$f717432b360040c7$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables[\"CFF2\"] = $f7a6899246d76dab$var$$f717432b360040c7$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.VORG = $f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.EBLC = $f7a6899246d76dab$var$$035bb95c0cdb1f6d$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.CBLC = $f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.EBLC;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.sbix = $f7a6899246d76dab$var$$73d13900b55a3c0c$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.COLR = $f7a6899246d76dab$var$$97f6b8be3a347a8f$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.CPAL = $f7a6899246d76dab$var$$16ca60ecbdee30ea$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.BASE = $f7a6899246d76dab$var$$7327e41706f9d5c7$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.GDEF = $f7a6899246d76dab$var$$7e48bbe9e5345664$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.GPOS = $f7a6899246d76dab$var$$b687332511a4da75$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.GSUB = $f7a6899246d76dab$var$$99ccad60b96f92fb$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.JSTF = $f7a6899246d76dab$var$$573d5042c76c4940$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.HVAR = $f7a6899246d76dab$var$$a5875b80d6087f61$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.DSIG = $f7a6899246d76dab$var$$4423bc1ac09bbbd1$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.gasp = $f7a6899246d76dab$var$$7b50e3f8d83263de$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.hdmx = $f7a6899246d76dab$var$$7bf92ec372cd2307$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.kern = $f7a6899246d76dab$var$$a3f544bcf76542d1$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.LTSH = $f7a6899246d76dab$var$$86687befb45925d0$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.PCLT = $f7a6899246d76dab$var$$91429006e51e0fe8$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.VDMX = $f7a6899246d76dab$var$$627850fc9deed59a$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.vhea = $f7a6899246d76dab$var$$65c33f5f068fc77f$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.vmtx = $f7a6899246d76dab$var$$597d739523b65bb3$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.avar = $f7a6899246d76dab$var$$35aa0c87d9c3d3a0$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.bsln = $f7a6899246d76dab$var$$3a5ca96d3e3aaf20$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.feat = $f7a6899246d76dab$var$$8d4241d96b2b0589$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.fvar = $f7a6899246d76dab$var$$a79cd5132b1cf476$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.gvar = $f7a6899246d76dab$var$$3f36f1a5e6989457$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.just = $f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.morx = $f7a6899246d76dab$var$$ef40c6dc80fd50a2$export$2e2bcd8739ae039;\n$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables.opbd = $f7a6899246d76dab$var$$ab24dea08b58a7cc$export$2e2bcd8739ae039;\nlet $f7a6899246d76dab$var$$df50e1efe10a1247$var$TableEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    checkSum: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    offset: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"void\", {\n        type: \"global\"\n    }),\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$df50e1efe10a1247$var$Directory = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    numTables: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    searchRange: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    entrySelector: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    rangeShift: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$df50e1efe10a1247$var$TableEntry, \"numTables\")\n});\n$f7a6899246d76dab$var$$df50e1efe10a1247$var$Directory.process = function() {\n    let tables = {};\n    for (let table of this.tables)tables[table.tag] = table;\n    this.tables = tables;\n};\n$f7a6899246d76dab$var$$df50e1efe10a1247$var$Directory.preEncode = function() {\n    if (!Array.isArray(this.tables)) {\n        let tables = [];\n        for(let tag in this.tables){\n            let table = this.tables[tag];\n            if (table) tables.push({\n                tag: tag,\n                checkSum: 0,\n                offset: new $a835a1cb0586c20c$export$df5cb1f3d04f5a0f($f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039[tag], table),\n                length: $f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039[tag].size(table)\n            });\n        }\n        this.tables = tables;\n    }\n    this.tag = \"true\";\n    this.numTables = this.tables.length;\n    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n    let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n    this.searchRange = maxPowerOf2 * 16;\n    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n    this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $f7a6899246d76dab$var$$df50e1efe10a1247$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$df50e1efe10a1247$var$Directory;\nfunction $f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac(arr, cmp) {\n    let min = 0;\n    let max = arr.length - 1;\n    while(min <= max){\n        let mid = min + max >> 1;\n        let res = cmp(arr[mid]);\n        if (res < 0) max = mid - 1;\n        else if (res > 0) min = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\nfunction $f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(index, end) {\n    let range1 = [];\n    while(index < end)range1.push(index++);\n    return range1;\n}\nconst $f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst $f7a6899246d76dab$var$$66a5b9fb5318558a$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP = new Uint8Array(256);\nfor(let i = 0; i < $f7a6899246d76dab$var$$66a5b9fb5318558a$var$CHARS.length; i++)$f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP[$f7a6899246d76dab$var$$66a5b9fb5318558a$var$CHARS.charCodeAt(i)] = i;\nfunction $f7a6899246d76dab$var$$66a5b9fb5318558a$export$94fdf11bafc8de6b(base64) {\n    let bufferLength = base64.length * 0.75;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    let bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i1 = 0, len = base64.length; i1 < len; i1 += 4){\n        let encoded1 = $f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1)];\n        let encoded2 = $f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n        let encoded3 = $f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n        let encoded4 = $f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return bytes;\n}\nclass $f7a6899246d76dab$var$$0d6e160064c86e50$export$2e2bcd8739ae039 {\n    findSubtable(cmapTable, pairs) {\n        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){\n            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n        }\n        return null;\n    }\n    lookup(codepoint, variationSelector) {\n        // If there is no Unicode cmap in this font, we need to re-encode\n        // the codepoint in the encoding that the cmap supports.\n        if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;\n        else if (variationSelector) {\n            let gid = this.getVariationSelector(codepoint, variationSelector);\n            if (gid) return gid;\n        }\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return cmap.codeMap.get(codepoint) || 0;\n            case 4:\n                {\n                    let min = 0;\n                    let max = cmap.segCount - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;\n                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;\n                        else {\n                            let rangeOffset = cmap.idRangeOffset.get(mid);\n                            let gid;\n                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);\n                            else {\n                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                                gid = cmap.glyphIndexArray.get(index) || 0;\n                                if (gid !== 0) gid += cmap.idDelta.get(mid);\n                            }\n                            return gid & 0xffff;\n                        }\n                    }\n                    return 0;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n            case 12:\n            case 13:\n                {\n                    let min = 0;\n                    let max = cmap.nGroups - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        let group = cmap.groups.get(mid);\n                        if (codepoint < group.startCharCode) max = mid - 1;\n                        else if (codepoint > group.endCharCode) min = mid + 1;\n                        else {\n                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);\n                            else return group.glyphID;\n                        }\n                    }\n                    return 0;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    getVariationSelector(codepoint, variationSelector) {\n        if (!this.uvs) return 0;\n        let selectors = this.uvs.varSelectors.toArray();\n        let i = $f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac(selectors, (x)=>variationSelector - x.varSelector);\n        let sel = selectors[i];\n        if (i !== -1 && sel.defaultUVS) i = $f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n        if (i !== -1 && sel.nonDefaultUVS) {\n            i = $f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue);\n            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n        }\n        return 0;\n    }\n    getCharacterSet() {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return $f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(0, cmap.codeMap.length);\n            case 4:\n                {\n                    let res = [];\n                    let endCodes = cmap.endCode.toArray();\n                    for(let i = 0; i < endCodes.length; i++){\n                        let tail = endCodes[i] + 1;\n                        let start = cmap.startCode.get(i);\n                        res.push(...$f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(start, tail));\n                    }\n                    return res;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return $f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n            case 12:\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())res.push(...$f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    codePointsForGlyph(gid) {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                {\n                    let res = [];\n                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);\n                    return res;\n                }\n            case 4:\n                {\n                    let res = [];\n                    for(let i = 0; i < cmap.segCount; i++){\n                        let end = cmap.endCode.get(i);\n                        let start = cmap.startCode.get(i);\n                        let rangeOffset = cmap.idRangeOffset.get(i);\n                        let delta = cmap.idDelta.get(i);\n                        for(var c = start; c <= end; c++){\n                            let g = 0;\n                            if (rangeOffset === 0) g = c + delta;\n                            else {\n                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                                g = cmap.glyphIndexArray.get(index) || 0;\n                                if (g !== 0) g += delta;\n                            }\n                            if (g === gid) res.push(c);\n                        }\n                    }\n                    return res;\n                }\n            case 12:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n                    return res;\n                }\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...$f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    constructor(cmapTable){\n        // Attempt to find a Unicode cmap first\n        this.encoding = null;\n        this.cmap = this.findSubtable(cmapTable, [\n            // 32-bit subtables\n            [\n                3,\n                10\n            ],\n            [\n                0,\n                6\n            ],\n            [\n                0,\n                4\n            ],\n            // 16-bit subtables\n            [\n                3,\n                1\n            ],\n            [\n                0,\n                3\n            ],\n            [\n                0,\n                2\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        // If not unicode cmap was found, take the first table with a supported encoding.\n        if (!this.cmap) for (let cmap of cmapTable.tables){\n            let encoding = $f7a6899246d76dab$var$$e2613b812f052cbe$export$badc544e0651b6b1(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n            let mapping = $f7a6899246d76dab$var$$e2613b812f052cbe$export$1dceb3c14ed68bee(encoding);\n            if (mapping) {\n                this.cmap = cmap.table;\n                this.encoding = mapping;\n            }\n        }\n        if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n        this.uvs = this.findSubtable(cmapTable, [\n            [\n                0,\n                5\n            ]\n        ]);\n        if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\nclass $f7a6899246d76dab$var$$4646d52c2a559cdb$export$2e2bcd8739ae039 {\n    process(glyphs, positions) {\n        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){\n            let left = glyphs[glyphIndex].id;\n            let right = glyphs[glyphIndex + 1].id;\n            positions[glyphIndex].xAdvance += this.getKerning(left, right);\n        }\n    }\n    getKerning(left, right) {\n        let res = 0;\n        for (let table of this.kern.tables){\n            if (table.coverage.crossStream) continue;\n            switch(table.version){\n                case 0:\n                    if (!table.coverage.horizontal) continue;\n                    break;\n                case 1:\n                    if (table.coverage.vertical || table.coverage.variation) continue;\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning table version ${table.version}`);\n            }\n            let val = 0;\n            let s = table.subtable;\n            switch(table.format){\n                case 0:\n                    let pairIdx = $f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac(s.pairs, function(pair) {\n                        return left - pair.left || right - pair.right;\n                    });\n                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n                    break;\n                case 2:\n                    let leftOffset = 0, rightOffset = 0;\n                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n                    else leftOffset = s.array.off;\n                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n                    let index = (leftOffset + rightOffset - s.array.off) / 2;\n                    val = s.array.values.get(index);\n                    break;\n                case 3:\n                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n            }\n            // Microsoft supports the override flag, which resets the result\n            // Otherwise, the sum of the results from all subtables is returned\n            if (table.coverage.override) res = val;\n            else res += val;\n        }\n        return res;\n    }\n    constructor(font){\n        this.kern = font.kern;\n    }\n}\nclass $f7a6899246d76dab$var$$a57a26817cd35108$export$2e2bcd8739ae039 {\n    positionGlyphs(glyphs, positions) {\n        // find each base + mark cluster, and position the marks relative to the base\n        let clusterStart = 0;\n        let clusterEnd = 0;\n        for(let index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.isMark) clusterEnd = index;\n            else {\n                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n                clusterStart = clusterEnd = index;\n            }\n        }\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        return positions;\n    }\n    positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n        let base = glyphs[clusterStart];\n        let baseBox = base.cbox.copy();\n        // adjust bounding box for ligature glyphs\n        if (base.codePoints.length > 1) baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n        let xOffset = -positions[clusterStart].xAdvance;\n        let yOffset = 0;\n        let yGap = this.font.unitsPerEm / 16;\n        // position each of the mark glyphs relative to the base glyph\n        for(let index = clusterStart + 1; index <= clusterEnd; index++){\n            let mark = glyphs[index];\n            let markBox = mark.cbox;\n            let position = positions[index];\n            let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n            if (combiningClass !== \"Not_Reordered\") {\n                position.xOffset = position.yOffset = 0;\n                // x positioning\n                switch(combiningClass){\n                    case \"Double_Above\":\n                    case \"Double_Below\":\n                        // LTR. TODO: RTL support.\n                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n                        break;\n                    case \"Attached_Below_Left\":\n                    case \"Below_Left\":\n                    case \"Above_Left\":\n                        // left align\n                        position.xOffset += baseBox.minX - markBox.minX;\n                        break;\n                    case \"Attached_Above_Right\":\n                    case \"Below_Right\":\n                    case \"Above_Right\":\n                        // right align\n                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n                        break;\n                    default:\n                        // center align\n                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n                }\n                // y positioning\n                switch(combiningClass){\n                    case \"Double_Below\":\n                    case \"Below_Left\":\n                    case \"Below\":\n                    case \"Below_Right\":\n                    case \"Attached_Below_Left\":\n                    case \"Attached_Below\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n                        position.yOffset = -baseBox.minY - markBox.maxY;\n                        baseBox.minY += markBox.height;\n                        break;\n                    case \"Double_Above\":\n                    case \"Above_Left\":\n                    case \"Above\":\n                    case \"Above_Right\":\n                    case \"Attached_Above\":\n                    case \"Attached_Above_Right\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n                        position.yOffset = baseBox.maxY - markBox.minY;\n                        baseBox.maxY += markBox.height;\n                        break;\n                }\n                position.xAdvance = position.yAdvance = 0;\n                position.xOffset += xOffset;\n                position.yOffset += yOffset;\n            } else {\n                xOffset -= position.xAdvance;\n                yOffset -= position.yAdvance;\n            }\n        }\n        return;\n    }\n    getCombiningClass(codePoint) {\n        let combiningClass = (0, $38e929d1b08c92d4$export$c03b919c6651ed55)(codePoint);\n        // Thai / Lao need some per-character work\n        if ((codePoint & -256) === 0x0e00) {\n            if (combiningClass === \"Not_Reordered\") switch(codePoint){\n                case 0x0e31:\n                case 0x0e34:\n                case 0x0e35:\n                case 0x0e36:\n                case 0x0e37:\n                case 0x0e47:\n                case 0x0e4c:\n                case 0x0e3d:\n                case 0x0e4e:\n                    return \"Above_Right\";\n                case 0x0eb1:\n                case 0x0eb4:\n                case 0x0eb5:\n                case 0x0eb6:\n                case 0x0eb7:\n                case 0x0ebb:\n                case 0x0ecc:\n                case 0x0ecd:\n                    return \"Above\";\n                case 0x0ebc:\n                    return \"Below\";\n            }\n            else if (codePoint === 0x0e3a) return \"Below_Right\";\n        }\n        switch(combiningClass){\n            // Hebrew\n            case \"CCC10\":\n            case \"CCC11\":\n            case \"CCC12\":\n            case \"CCC13\":\n            case \"CCC14\":\n            case \"CCC15\":\n            case \"CCC16\":\n            case \"CCC17\":\n            case \"CCC18\":\n            case \"CCC20\":\n            case \"CCC22\":\n                return \"Below\";\n            case \"CCC23\":\n                return \"Attached_Above\";\n            case \"CCC24\":\n                return \"Above_Right\";\n            case \"CCC25\":\n            case \"CCC19\":\n                return \"Above_Left\";\n            case \"CCC26\":\n                return \"Above\";\n            case \"CCC21\":\n                break;\n            // Arabic and Syriac\n            case \"CCC27\":\n            case \"CCC28\":\n            case \"CCC30\":\n            case \"CCC31\":\n            case \"CCC33\":\n            case \"CCC34\":\n            case \"CCC35\":\n            case \"CCC36\":\n                return \"Above\";\n            case \"CCC29\":\n            case \"CCC32\":\n                return \"Below\";\n            // Thai\n            case \"CCC103\":\n                return \"Below_Right\";\n            case \"CCC107\":\n                return \"Above_Right\";\n            // Lao\n            case \"CCC118\":\n                return \"Below\";\n            case \"CCC122\":\n                return \"Above\";\n            // Tibetan\n            case \"CCC129\":\n            case \"CCC132\":\n                return \"Below\";\n            case \"CCC130\":\n                return \"Above\";\n        }\n        return combiningClass;\n    }\n    constructor(font){\n        this.font = font;\n    }\n}\nclass $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039 {\n    /**\n   * The width of the bounding box\n   * @type {number}\n   */ get width() {\n        return this.maxX - this.minX;\n    }\n    /**\n   * The height of the bounding box\n   * @type {number}\n   */ get height() {\n        return this.maxY - this.minY;\n    }\n    addPoint(x, y) {\n        if (Math.abs(x) !== Infinity) {\n            if (x < this.minX) this.minX = x;\n            if (x > this.maxX) this.maxX = x;\n        }\n        if (Math.abs(y) !== Infinity) {\n            if (y < this.minY) this.minY = y;\n            if (y > this.maxY) this.maxY = y;\n        }\n    }\n    copy() {\n        return new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){\n        /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */ this.minX = minX;\n        /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */ this.minY = minY;\n        /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */ this.maxX = maxX;\n        /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */ this.maxY = maxY;\n    }\n}\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS = {\n    Caucasian_Albanian: \"aghb\",\n    Arabic: \"arab\",\n    Imperial_Aramaic: \"armi\",\n    Armenian: \"armn\",\n    Avestan: \"avst\",\n    Balinese: \"bali\",\n    Bamum: \"bamu\",\n    Bassa_Vah: \"bass\",\n    Batak: \"batk\",\n    Bengali: [\n        \"bng2\",\n        \"beng\"\n    ],\n    Bopomofo: \"bopo\",\n    Brahmi: \"brah\",\n    Braille: \"brai\",\n    Buginese: \"bugi\",\n    Buhid: \"buhd\",\n    Chakma: \"cakm\",\n    Canadian_Aboriginal: \"cans\",\n    Carian: \"cari\",\n    Cham: \"cham\",\n    Cherokee: \"cher\",\n    Coptic: \"copt\",\n    Cypriot: \"cprt\",\n    Cyrillic: \"cyrl\",\n    Devanagari: [\n        \"dev2\",\n        \"deva\"\n    ],\n    Deseret: \"dsrt\",\n    Duployan: \"dupl\",\n    Egyptian_Hieroglyphs: \"egyp\",\n    Elbasan: \"elba\",\n    Ethiopic: \"ethi\",\n    Georgian: \"geor\",\n    Glagolitic: \"glag\",\n    Gothic: \"goth\",\n    Grantha: \"gran\",\n    Greek: \"grek\",\n    Gujarati: [\n        \"gjr2\",\n        \"gujr\"\n    ],\n    Gurmukhi: [\n        \"gur2\",\n        \"guru\"\n    ],\n    Hangul: \"hang\",\n    Han: \"hani\",\n    Hanunoo: \"hano\",\n    Hebrew: \"hebr\",\n    Hiragana: \"hira\",\n    Pahawh_Hmong: \"hmng\",\n    Katakana_Or_Hiragana: \"hrkt\",\n    Old_Italic: \"ital\",\n    Javanese: \"java\",\n    Kayah_Li: \"kali\",\n    Katakana: \"kana\",\n    Kharoshthi: \"khar\",\n    Khmer: \"khmr\",\n    Khojki: \"khoj\",\n    Kannada: [\n        \"knd2\",\n        \"knda\"\n    ],\n    Kaithi: \"kthi\",\n    Tai_Tham: \"lana\",\n    Lao: \"lao \",\n    Latin: \"latn\",\n    Lepcha: \"lepc\",\n    Limbu: \"limb\",\n    Linear_A: \"lina\",\n    Linear_B: \"linb\",\n    Lisu: \"lisu\",\n    Lycian: \"lyci\",\n    Lydian: \"lydi\",\n    Mahajani: \"mahj\",\n    Mandaic: \"mand\",\n    Manichaean: \"mani\",\n    Mende_Kikakui: \"mend\",\n    Meroitic_Cursive: \"merc\",\n    Meroitic_Hieroglyphs: \"mero\",\n    Malayalam: [\n        \"mlm2\",\n        \"mlym\"\n    ],\n    Modi: \"modi\",\n    Mongolian: \"mong\",\n    Mro: \"mroo\",\n    Meetei_Mayek: \"mtei\",\n    Myanmar: [\n        \"mym2\",\n        \"mymr\"\n    ],\n    Old_North_Arabian: \"narb\",\n    Nabataean: \"nbat\",\n    Nko: \"nko \",\n    Ogham: \"ogam\",\n    Ol_Chiki: \"olck\",\n    Old_Turkic: \"orkh\",\n    Oriya: [\n        \"ory2\",\n        \"orya\"\n    ],\n    Osmanya: \"osma\",\n    Palmyrene: \"palm\",\n    Pau_Cin_Hau: \"pauc\",\n    Old_Permic: \"perm\",\n    Phags_Pa: \"phag\",\n    Inscriptional_Pahlavi: \"phli\",\n    Psalter_Pahlavi: \"phlp\",\n    Phoenician: \"phnx\",\n    Miao: \"plrd\",\n    Inscriptional_Parthian: \"prti\",\n    Rejang: \"rjng\",\n    Runic: \"runr\",\n    Samaritan: \"samr\",\n    Old_South_Arabian: \"sarb\",\n    Saurashtra: \"saur\",\n    Shavian: \"shaw\",\n    Sharada: \"shrd\",\n    Siddham: \"sidd\",\n    Khudawadi: \"sind\",\n    Sinhala: \"sinh\",\n    Sora_Sompeng: \"sora\",\n    Sundanese: \"sund\",\n    Syloti_Nagri: \"sylo\",\n    Syriac: \"syrc\",\n    Tagbanwa: \"tagb\",\n    Takri: \"takr\",\n    Tai_Le: \"tale\",\n    New_Tai_Lue: \"talu\",\n    Tamil: [\n        \"tml2\",\n        \"taml\"\n    ],\n    Tai_Viet: \"tavt\",\n    Telugu: [\n        \"tel2\",\n        \"telu\"\n    ],\n    Tifinagh: \"tfng\",\n    Tagalog: \"tglg\",\n    Thaana: \"thaa\",\n    Thai: \"thai\",\n    Tibetan: \"tibt\",\n    Tirhuta: \"tirh\",\n    Ugaritic: \"ugar\",\n    Vai: \"vai \",\n    Warang_Citi: \"wara\",\n    Old_Persian: \"xpeo\",\n    Cuneiform: \"xsux\",\n    Yi: \"yi  \",\n    Inherited: \"zinh\",\n    Common: \"zyyy\",\n    Unknown: \"zzzz\"\n};\nconst $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS = {};\nfor(let script in $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS){\n    let tag = $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script];\n    if (Array.isArray(tag)) for (let t of tag)$f7a6899246d76dab$var$$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[t] = script;\n    else $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$b32f0b5f69d65e51(script1) {\n    return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script1];\n}\nfunction $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$ce50e82f12a827a4(tag) {\n    return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$e5cb25e204fb8450(string) {\n    let len = string.length;\n    let idx = 0;\n    while(idx < len){\n        let code = string.charCodeAt(idx++);\n        // Check if this is a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            let next = string.charCodeAt(idx);\n            // Check if this is a low surrogate\n            if (0xdc00 <= next && next <= 0xdfff) {\n                idx++;\n                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n            }\n        }\n        let script2 = (0, $38e929d1b08c92d4$export$941569448d136665)(code);\n        if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script2];\n    }\n    return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints) {\n    for(let i = 0; i < codePoints.length; i++){\n        let codePoint = codePoints[i];\n        let script3 = (0, $38e929d1b08c92d4$export$941569448d136665)(codePoint);\n        if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script3];\n    }\n    return $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nconst $f7a6899246d76dab$var$$e38a1a895f6aeb54$var$RTL = {\n    arab: true,\n    hebr: true,\n    syrc: true,\n    thaa: true,\n    cprt: true,\n    khar: true,\n    phnx: true,\n    \"nko \": true,\n    lydi: true,\n    avst: true,\n    armi: true,\n    phli: true,\n    prti: true,\n    sarb: true,\n    orkh: true,\n    samr: true,\n    mand: true,\n    merc: true,\n    mero: true,\n    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n    mani: true,\n    mend: true,\n    nbat: true,\n    narb: true,\n    palm: true,\n    phlp: true // Psalter Pahlavi\n};\nfunction $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script4) {\n    if ($f7a6899246d76dab$var$$e38a1a895f6aeb54$var$RTL[script4]) return \"rtl\";\n    return \"ltr\";\n}\nclass $f7a6899246d76dab$var$$b19c79ec7a94fa39$export$2e2bcd8739ae039 {\n    /**\n   * The total advance width of the run.\n   * @type {number}\n   */ get advanceWidth() {\n        let width = 0;\n        for (let position of this.positions)width += position.xAdvance;\n        return width;\n    }\n    /**\n  * The total advance height of the run.\n  * @type {number}\n  */ get advanceHeight() {\n        let height = 0;\n        for (let position of this.positions)height += position.yAdvance;\n        return height;\n    }\n    /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */ get bbox() {\n        let bbox = new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039;\n        let x = 0;\n        let y = 0;\n        for(let index = 0; index < this.glyphs.length; index++){\n            let glyph = this.glyphs[index];\n            let p = this.positions[index];\n            let b = glyph.bbox;\n            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n            x += p.xAdvance;\n            y += p.yAdvance;\n        }\n        return bbox;\n    }\n    constructor(glyphs, features, script, language, direction){\n        /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */ this.glyphs = glyphs;\n        /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */ this.positions = null;\n        /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */ this.script = script;\n        /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */ this.language = language || null;\n        /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */ this.direction = direction || $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */ this.features = {};\n        // Convert features to an object\n        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;\n        else if (typeof features === \"object\") this.features = features;\n    }\n}\nclass $f7a6899246d76dab$var$$9195cf1266c12ea5$export$2e2bcd8739ae039 {\n    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){\n        /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */ this.xAdvance = xAdvance;\n        /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */ this.yAdvance = yAdvance;\n        /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */ this.xOffset = xOffset;\n        /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */ this.yOffset = yOffset;\n    }\n}\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features = {\n    allTypographicFeatures: {\n        code: 0,\n        exclusive: false,\n        allTypeFeatures: 0\n    },\n    ligatures: {\n        code: 1,\n        exclusive: false,\n        requiredLigatures: 0,\n        commonLigatures: 2,\n        rareLigatures: 4,\n        // logos: 6\n        rebusPictures: 8,\n        diphthongLigatures: 10,\n        squaredLigatures: 12,\n        abbrevSquaredLigatures: 14,\n        symbolLigatures: 16,\n        contextualLigatures: 18,\n        historicalLigatures: 20\n    },\n    cursiveConnection: {\n        code: 2,\n        exclusive: true,\n        unconnected: 0,\n        partiallyConnected: 1,\n        cursive: 2\n    },\n    letterCase: {\n        code: 3,\n        exclusive: true\n    },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n    verticalSubstitution: {\n        code: 4,\n        exclusive: false,\n        substituteVerticalForms: 0\n    },\n    linguisticRearrangement: {\n        code: 5,\n        exclusive: false,\n        linguisticRearrangement: 0\n    },\n    numberSpacing: {\n        code: 6,\n        exclusive: true,\n        monospacedNumbers: 0,\n        proportionalNumbers: 1,\n        thirdWidthNumbers: 2,\n        quarterWidthNumbers: 3\n    },\n    smartSwash: {\n        code: 8,\n        exclusive: false,\n        wordInitialSwashes: 0,\n        wordFinalSwashes: 2,\n        // lineInitialSwashes: 4\n        // lineFinalSwashes: 6\n        nonFinalSwashes: 8\n    },\n    diacritics: {\n        code: 9,\n        exclusive: true,\n        showDiacritics: 0,\n        hideDiacritics: 1,\n        decomposeDiacritics: 2\n    },\n    verticalPosition: {\n        code: 10,\n        exclusive: true,\n        normalPosition: 0,\n        superiors: 1,\n        inferiors: 2,\n        ordinals: 3,\n        scientificInferiors: 4\n    },\n    fractions: {\n        code: 11,\n        exclusive: true,\n        noFractions: 0,\n        verticalFractions: 1,\n        diagonalFractions: 2\n    },\n    overlappingCharacters: {\n        code: 13,\n        exclusive: false,\n        preventOverlap: 0\n    },\n    typographicExtras: {\n        code: 14,\n        exclusive: false,\n        // hyphensToEmDash: 0\n        // hyphenToEnDash: 2\n        slashedZero: 4\n    },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n    mathematicalExtras: {\n        code: 15,\n        exclusive: false,\n        // hyphenToMinus: 0\n        // asteristoMultiply: 2\n        // slashToDivide: 4\n        // inequalityLigatures: 6\n        // exponents: 8\n        mathematicalGreek: 10\n    },\n    ornamentSets: {\n        code: 16,\n        exclusive: true,\n        noOrnaments: 0,\n        dingbats: 1,\n        piCharacters: 2,\n        fleurons: 3,\n        decorativeBorders: 4,\n        internationalSymbols: 5,\n        mathSymbols: 6\n    },\n    characterAlternatives: {\n        code: 17,\n        exclusive: true,\n        noAlternates: 0\n    },\n    // user defined options\n    designComplexity: {\n        code: 18,\n        exclusive: true,\n        designLevel1: 0,\n        designLevel2: 1,\n        designLevel3: 2,\n        designLevel4: 3,\n        designLevel5: 4\n    },\n    styleOptions: {\n        code: 19,\n        exclusive: true,\n        noStyleOptions: 0,\n        displayText: 1,\n        engravedText: 2,\n        illuminatedCaps: 3,\n        titlingCaps: 4,\n        tallCaps: 5\n    },\n    characterShape: {\n        code: 20,\n        exclusive: true,\n        traditionalCharacters: 0,\n        simplifiedCharacters: 1,\n        JIS1978Characters: 2,\n        JIS1983Characters: 3,\n        JIS1990Characters: 4,\n        traditionalAltOne: 5,\n        traditionalAltTwo: 6,\n        traditionalAltThree: 7,\n        traditionalAltFour: 8,\n        traditionalAltFive: 9,\n        expertCharacters: 10,\n        JIS2004Characters: 11,\n        hojoCharacters: 12,\n        NLCCharacters: 13,\n        traditionalNamesCharacters: 14\n    },\n    numberCase: {\n        code: 21,\n        exclusive: true,\n        lowerCaseNumbers: 0,\n        upperCaseNumbers: 1\n    },\n    textSpacing: {\n        code: 22,\n        exclusive: true,\n        proportionalText: 0,\n        monospacedText: 1,\n        halfWidthText: 2,\n        thirdWidthText: 3,\n        quarterWidthText: 4,\n        altProportionalText: 5,\n        altHalfWidthText: 6\n    },\n    transliteration: {\n        code: 23,\n        exclusive: true,\n        noTransliteration: 0\n    },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n    annotation: {\n        code: 24,\n        exclusive: true,\n        noAnnotation: 0,\n        boxAnnotation: 1,\n        roundedBoxAnnotation: 2,\n        circleAnnotation: 3,\n        invertedCircleAnnotation: 4,\n        parenthesisAnnotation: 5,\n        periodAnnotation: 6,\n        romanNumeralAnnotation: 7,\n        diamondAnnotation: 8,\n        invertedBoxAnnotation: 9,\n        invertedRoundedBoxAnnotation: 10\n    },\n    kanaSpacing: {\n        code: 25,\n        exclusive: true,\n        fullWidthKana: 0,\n        proportionalKana: 1\n    },\n    ideographicSpacing: {\n        code: 26,\n        exclusive: true,\n        fullWidthIdeographs: 0,\n        proportionalIdeographs: 1,\n        halfWidthIdeographs: 2\n    },\n    unicodeDecomposition: {\n        code: 27,\n        exclusive: false,\n        canonicalComposition: 0,\n        compatibilityComposition: 2,\n        transcodingComposition: 4\n    },\n    rubyKana: {\n        code: 28,\n        exclusive: false,\n        // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n        // rubyKana: 1     # deprecated - use rubyKanaOn instead\n        rubyKana: 2\n    },\n    CJKSymbolAlternatives: {\n        code: 29,\n        exclusive: true,\n        noCJKSymbolAlternatives: 0,\n        CJKSymbolAltOne: 1,\n        CJKSymbolAltTwo: 2,\n        CJKSymbolAltThree: 3,\n        CJKSymbolAltFour: 4,\n        CJKSymbolAltFive: 5\n    },\n    ideographicAlternatives: {\n        code: 30,\n        exclusive: true,\n        noIdeographicAlternatives: 0,\n        ideographicAltOne: 1,\n        ideographicAltTwo: 2,\n        ideographicAltThree: 3,\n        ideographicAltFour: 4,\n        ideographicAltFive: 5\n    },\n    CJKVerticalRomanPlacement: {\n        code: 31,\n        exclusive: true,\n        CJKVerticalRomanCentered: 0,\n        CJKVerticalRomanHBaseline: 1\n    },\n    italicCJKRoman: {\n        code: 32,\n        exclusive: false,\n        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n        CJKItalicRoman: 2\n    },\n    caseSensitiveLayout: {\n        code: 33,\n        exclusive: false,\n        caseSensitiveLayout: 0,\n        caseSensitiveSpacing: 2\n    },\n    alternateKana: {\n        code: 34,\n        exclusive: false,\n        alternateHorizKana: 0,\n        alternateVertKana: 2\n    },\n    stylisticAlternatives: {\n        code: 35,\n        exclusive: false,\n        noStylisticAlternates: 0,\n        stylisticAltOne: 2,\n        stylisticAltTwo: 4,\n        stylisticAltThree: 6,\n        stylisticAltFour: 8,\n        stylisticAltFive: 10,\n        stylisticAltSix: 12,\n        stylisticAltSeven: 14,\n        stylisticAltEight: 16,\n        stylisticAltNine: 18,\n        stylisticAltTen: 20,\n        stylisticAltEleven: 22,\n        stylisticAltTwelve: 24,\n        stylisticAltThirteen: 26,\n        stylisticAltFourteen: 28,\n        stylisticAltFifteen: 30,\n        stylisticAltSixteen: 32,\n        stylisticAltSeventeen: 34,\n        stylisticAltEighteen: 36,\n        stylisticAltNineteen: 38,\n        stylisticAltTwenty: 40\n    },\n    contextualAlternates: {\n        code: 36,\n        exclusive: false,\n        contextualAlternates: 0,\n        swashAlternates: 2,\n        contextualSwashAlternates: 4\n    },\n    lowerCase: {\n        code: 37,\n        exclusive: true,\n        defaultLowerCase: 0,\n        lowerCaseSmallCaps: 1,\n        lowerCasePetiteCaps: 2\n    },\n    upperCase: {\n        code: 38,\n        exclusive: true,\n        defaultUpperCase: 0,\n        upperCaseSmallCaps: 1,\n        upperCasePetiteCaps: 2\n    },\n    languageTag: {\n        code: 39,\n        exclusive: true\n    },\n    CJKRomanSpacing: {\n        code: 103,\n        exclusive: true,\n        halfWidthCJKRoman: 0,\n        proportionalCJKRoman: 1,\n        defaultCJKRoman: 2,\n        fullWidthCJKRoman: 3\n    }\n};\nconst $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature = (name, selector)=>[\n        $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[name].code,\n        $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[name][selector]\n    ];\nconst $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping = {\n    rlig: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"requiredLigatures\"),\n    clig: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"contextualLigatures\"),\n    dlig: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"rareLigatures\"),\n    hlig: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    liga: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"commonLigatures\"),\n    hist: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    smcp: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n    pcap: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n    frac: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    dnom: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    numr: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    afrc: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"fractions\", \"verticalFractions\"),\n    // aalt\n    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n    // unic, vatu, vhal, vjmo, vpal, vrt2\n    // dist -> trak table?\n    // kern, vkrn -> kern table\n    // lfbd + opbd + rtbd -> opbd table?\n    // mark, mkmk -> acnt table?\n    // locl -> languageTag + ltag table\n    case: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n    ccmp: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n    cpct: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    valt: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    swsh: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n    cswh: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n    curs: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"cursiveConnection\", \"cursive\"),\n    c2pc: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n    c2sc: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n    init: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n    fin2: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    medi: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    med2: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    fin3: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    fina: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    pkna: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n    half: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    halt: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n    hkna: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n    vkna: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateVertKana\"),\n    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n    ital: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n    lnum: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n    onum: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n    mgrk: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n    // nalt: not enough info. what type of annotation?\n    // ornm: ditto, which ornament style?\n    calt: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n    vrt2: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    vert: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    tnum: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n    pnum: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n    sups: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"superiors\"),\n    subs: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"inferiors\"),\n    ordn: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"ordinals\"),\n    pwid: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    hwid: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    qwid: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"quarterWidthText\"),\n    twid: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"thirdWidthText\"),\n    fwid: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    palt: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altProportionalText\"),\n    trad: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalCharacters\"),\n    smpl: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n    jp78: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1978Characters\"),\n    jp83: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1983Characters\"),\n    jp90: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1990Characters\"),\n    jp04: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS2004Characters\"),\n    expt: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"expertCharacters\"),\n    hojo: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"hojoCharacters\"),\n    nlck: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"NLCCharacters\"),\n    tnam: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n    ruby: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"rubyKana\", \"rubyKana\"),\n    titl: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"styleOptions\", \"titlingCaps\"),\n    zero: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"typographicExtras\", \"slashedZero\"),\n    ss01: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n    ss02: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n    ss03: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n    ss04: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n    ss05: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n    ss06: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n    ss07: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n    ss08: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n    ss09: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n    ss10: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n    ss11: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n    ss12: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n    ss13: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n    ss14: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n    ss15: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n    ss16: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n    ss17: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n    ss18: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n    ss19: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n    ss20: $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor(let i = 1; i <= 99; i++)$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [\n    $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features.characterAlternatives.code,\n    i\n];\n// create inverse mapping\nlet $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping = {};\nfor(let ot in $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping){\n    let aat = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping[ot];\n    if ($f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[aat[0]] == null) $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[aat[0]] = {};\n    $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $f7a6899246d76dab$var$$2b7f887ebcb5888a$export$b813f7d2a1677c16(features1) {\n    let res = {};\n    for(let k in features1){\n        let r;\n        if (r = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping[k]) {\n            if (res[r[0]] == null) res[r[0]] = {};\n            res[r[0]][r[1]] = features1[k];\n        }\n    }\n    return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$mapFeatureStrings(f) {\n    let [type, setting] = f;\n    if (isNaN(type)) var typeCode = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[type] && $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[type].code;\n    else var typeCode = type;\n    if (isNaN(setting)) var settingCode = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[type] && $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features[type][setting];\n    else var settingCode = setting;\n    return [\n        typeCode,\n        settingCode\n    ];\n}\nfunction $f7a6899246d76dab$var$$2b7f887ebcb5888a$export$bd6df347a4f391c4(features2) {\n    let res = {};\n    if (Array.isArray(features2)) for(let k = 0; k < features2.length; k++){\n        let r;\n        let f = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$mapFeatureStrings(features2[k]);\n        if (r = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[f[0]] && $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]]) res[r] = true;\n    }\n    else if (typeof features2 === \"object\") for(let type in features2){\n        let feature1 = features2[type];\n        for(let setting in feature1){\n            let r;\n            let f = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$mapFeatureStrings([\n                type,\n                setting\n            ]);\n            if (feature1[setting] && (r = $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[f[0]] && $f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]])) res[r] = true;\n        }\n    }\n    return Object.keys(res);\n}\nclass $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039 {\n    lookup(glyph) {\n        switch(this.table.version){\n            case 0:\n                return this.table.values.getItem(glyph);\n            case 2:\n            case 4:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.firstGlyph === 0xffff) return null;\n                        if (glyph < seg.firstGlyph) max = mid - 1;\n                        else if (glyph > seg.lastGlyph) min = mid + 1;\n                        else {\n                            if (this.table.version === 2) return seg.value;\n                            else return seg.values[glyph - seg.firstGlyph];\n                        }\n                    }\n                    return null;\n                }\n            case 6:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.glyph === 0xffff) return null;\n                        if (glyph < seg.glyph) max = mid - 1;\n                        else if (glyph > seg.glyph) min = mid + 1;\n                        else return seg.value;\n                    }\n                    return null;\n                }\n            case 8:\n                return this.table.values[glyph - this.table.firstGlyph];\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n    }\n    glyphsForValue(classValue) {\n        let res = [];\n        switch(this.table.version){\n            case 2:\n            case 4:\n                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...$f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723(segment.firstGlyph, segment.lastGlyph + 1));\n                else {\n                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n                }\n                break;\n            case 6:\n                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);\n                break;\n            case 8:\n                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n                break;\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n        return res;\n    }\n    constructor(table){\n        this.table = table;\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$START_OF_TEXT_STATE = 0;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$START_OF_LINE_STATE = 1;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$END_OF_TEXT_CLASS = 0;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$DELETED_GLYPH_CLASS = 2;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$END_OF_LINE_CLASS = 3;\nconst $f7a6899246d76dab$var$$860c6347bb941b91$var$DONT_ADVANCE = 0x4000;\nclass $f7a6899246d76dab$var$$860c6347bb941b91$export$2e2bcd8739ae039 {\n    process(glyphs, reverse, processEntry) {\n        let currentState = $f7a6899246d76dab$var$$860c6347bb941b91$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n        let index = reverse ? glyphs.length - 1 : 0;\n        let dir = reverse ? -1 : 1;\n        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){\n            let glyph = null;\n            let classCode = $f7a6899246d76dab$var$$860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n            let shouldAdvance = true;\n            if (index === glyphs.length || index === -1) classCode = $f7a6899246d76dab$var$$860c6347bb941b91$var$END_OF_TEXT_CLASS;\n            else {\n                glyph = glyphs[index];\n                if (glyph.id === 0xffff) classCode = $f7a6899246d76dab$var$$860c6347bb941b91$var$DELETED_GLYPH_CLASS;\n                else {\n                    classCode = this.lookupTable.lookup(glyph.id);\n                    if (classCode == null) classCode = $f7a6899246d76dab$var$$860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n                }\n            }\n            let row = this.stateTable.stateArray.getItem(currentState);\n            let entryIndex = row[classCode];\n            let entry = this.stateTable.entryTable.getItem(entryIndex);\n            if (classCode !== $f7a6899246d76dab$var$$860c6347bb941b91$var$END_OF_TEXT_CLASS && classCode !== $f7a6899246d76dab$var$$860c6347bb941b91$var$DELETED_GLYPH_CLASS) {\n                processEntry(glyph, entry, index);\n                shouldAdvance = !(entry.flags & $f7a6899246d76dab$var$$860c6347bb941b91$var$DONT_ADVANCE);\n            }\n            currentState = entry.newState;\n            if (shouldAdvance) index += dir;\n        }\n        return glyphs;\n    }\n    /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */ traverse(opts, state = 0, visited = new Set) {\n        if (visited.has(state)) return;\n        visited.add(state);\n        let { nClasses: nClasses, stateArray: stateArray, entryTable: entryTable } = this.stateTable;\n        let row = stateArray.getItem(state);\n        // Skip predefined classes\n        for(let classCode = 4; classCode < nClasses; classCode++){\n            let entryIndex = row[classCode];\n            let entry = entryTable.getItem(entryIndex);\n            // Try all glyphs in the class\n            for (let glyph of this.lookupTable.glyphsForValue(classCode)){\n                if (opts.enter) opts.enter(glyph, entry);\n                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n                if (opts.exit) opts.exit(glyph, entry);\n            }\n        }\n    }\n    constructor(stateTable){\n        this.stateTable = stateTable;\n        this.lookupTable = new $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039(stateTable.classTable);\n    }\n}\n// indic replacement flags\nconst $f7a6899246d76dab$var$$99be642f82069918$var$MARK_FIRST = 0x8000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$MARK_LAST = 0x2000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nconst $f7a6899246d76dab$var$$99be642f82069918$var$SET_MARK = 0x8000;\n// ligature entry flags\nconst $f7a6899246d76dab$var$$99be642f82069918$var$SET_COMPONENT = 0x8000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nconst $f7a6899246d76dab$var$$99be642f82069918$var$LAST_MASK = 0x80000000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$STORE_MASK = 0x40000000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$VERTICAL_ONLY = 0x800000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$REVERSE_DIRECTION = 0x400000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nconst $f7a6899246d76dab$var$$99be642f82069918$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $f7a6899246d76dab$var$$99be642f82069918$var$MARKED_INSERT_COUNT = 0x001F;\nclass $f7a6899246d76dab$var$$99be642f82069918$export$2e2bcd8739ae039 {\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    process(glyphs, features = {}) {\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            // enable/disable the requested features\n            for (let feature of chain.features){\n                let f;\n                if (f = features[feature.featureType]) {\n                    if (f[feature.featureSetting]) {\n                        flags &= feature.disableFlags;\n                        flags |= feature.enableFlags;\n                    } else if (f[feature.featureSetting] === false) {\n                        flags |= ~feature.disableFlags;\n                        flags &= ~feature.enableFlags;\n                    }\n                }\n            }\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n        }\n        // remove deleted glyphs\n        let index = glyphs.length - 1;\n        while(index >= 0){\n            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n            index--;\n        }\n        return glyphs;\n    }\n    processSubtable(subtable, glyphs) {\n        this.subtable = subtable;\n        this.glyphs = glyphs;\n        if (this.subtable.type === 4) {\n            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n            return;\n        }\n        this.ligatureStack = [];\n        this.markedGlyph = null;\n        this.firstGlyph = null;\n        this.lastGlyph = null;\n        this.markedIndex = null;\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let reverse = !!(this.subtable.coverage & $f7a6899246d76dab$var$$99be642f82069918$var$REVERSE_DIRECTION);\n        return stateMachine.process(this.glyphs, reverse, process);\n    }\n    getStateMachine(subtable) {\n        return new $f7a6899246d76dab$var$$860c6347bb941b91$export$2e2bcd8739ae039(subtable.table.stateTable);\n    }\n    getProcessor() {\n        switch(this.subtable.type){\n            case 0:\n                return this.processIndicRearragement;\n            case 1:\n                return this.processContextualSubstitution;\n            case 2:\n                return this.processLigature;\n            case 4:\n                return this.processNoncontextualSubstitutions;\n            case 5:\n                return this.processGlyphInsertion;\n            default:\n                throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n        }\n    }\n    processIndicRearragement(glyph, entry, index) {\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$MARK_FIRST) this.firstGlyph = index;\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$MARK_LAST) this.lastGlyph = index;\n        $f7a6899246d76dab$var$$99be642f82069918$var$reorderGlyphs(this.glyphs, entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n    processContextualSubstitution(glyph, entry, index) {\n        let subsitutions = this.subtable.table.substitutionTable.items;\n        if (entry.markIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.markIndex);\n            let lookupTable = new $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039(lookup);\n            glyph = this.glyphs[this.markedGlyph];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.currentIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.currentIndex);\n            let lookupTable = new $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039(lookup);\n            glyph = this.glyphs[index];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$SET_MARK) this.markedGlyph = index;\n    }\n    processLigature(glyph, entry, index) {\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$SET_COMPONENT) this.ligatureStack.push(index);\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$PERFORM_ACTION) {\n            let actions = this.subtable.table.ligatureActions;\n            let components = this.subtable.table.components;\n            let ligatureList = this.subtable.table.ligatureList;\n            let actionIndex = entry.action;\n            let last = false;\n            let ligatureIndex = 0;\n            let codePoints = [];\n            let ligatureGlyphs = [];\n            while(!last){\n                let componentGlyph = this.ligatureStack.pop();\n                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n                let action = actions.getItem(actionIndex++);\n                last = !!(action & $f7a6899246d76dab$var$$99be642f82069918$var$LAST_MASK);\n                let store = !!(action & $f7a6899246d76dab$var$$99be642f82069918$var$STORE_MASK);\n                let offset = (action & $f7a6899246d76dab$var$$99be642f82069918$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n                offset += this.glyphs[componentGlyph].id;\n                let component = components.getItem(offset);\n                ligatureIndex += component;\n                if (last || store) {\n                    let ligatureEntry = ligatureList.getItem(ligatureIndex);\n                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n                    ligatureGlyphs.push(componentGlyph);\n                    ligatureIndex = 0;\n                    codePoints = [];\n                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n            }\n            // Put ligature glyph indexes back on the stack\n            this.ligatureStack.push(...ligatureGlyphs);\n        }\n    }\n    processNoncontextualSubstitutions(subtable, glyphs, index) {\n        let lookupTable = new $f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039(subtable.table.lookupTable);\n        for(index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.id !== 0xffff) {\n                let gid = lookupTable.lookup(glyph.id);\n                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n            }\n        }\n    }\n    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n        let insertions = [];\n        while(count--){\n            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n            insertions.push(this.font.getGlyph(gid));\n        }\n        if (!isBefore) glyphIndex++;\n        this.glyphs.splice(glyphIndex, 0, ...insertions);\n    }\n    processGlyphInsertion(glyph, entry, index) {\n        if (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$SET_MARK) this.markedIndex = index;\n        if (entry.markedInsertIndex !== 0xffff) {\n            let count = (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$MARKED_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$MARKED_INSERT_BEFORE);\n            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n        }\n        if (entry.currentInsertIndex !== 0xffff) {\n            let count = (entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$CURRENT_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $f7a6899246d76dab$var$$99be642f82069918$var$CURRENT_INSERT_BEFORE);\n            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n        }\n    }\n    getSupportedFeatures() {\n        let features = [];\n        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([\n            feature.featureType,\n            feature.featureSetting\n        ]);\n        return features;\n    }\n    generateInputs(gid) {\n        if (!this.inputCache) this.generateInputCache();\n        return this.inputCache[gid] || [];\n    }\n    generateInputCache() {\n        this.inputCache = {};\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n        }\n    }\n    generateInputsForSubtable(subtable) {\n        // Currently, only supporting ligature subtables.\n        if (subtable.type !== 2) return;\n        let reverse = !!(subtable.coverage & $f7a6899246d76dab$var$$99be642f82069918$var$REVERSE_DIRECTION);\n        if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n        this.subtable = subtable;\n        this.ligatureStack = [];\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let input = [];\n        let stack = [];\n        this.glyphs = [];\n        stateMachine.traverse({\n            enter: (glyph, entry)=>{\n                let glyphs = this.glyphs;\n                stack.push({\n                    glyphs: glyphs.slice(),\n                    ligatureStack: this.ligatureStack.slice()\n                });\n                // Add glyph to input and glyphs to process.\n                let g1 = this.font.getGlyph(glyph);\n                input.push(g1);\n                glyphs.push(input[input.length - 1]);\n                // Process ligature substitution\n                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n                // Add input to result if only one matching (non-deleted) glyph remains.\n                let count = 0;\n                let found = 0;\n                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {\n                    count++;\n                    found = glyphs[i].id;\n                }\n                if (count === 1) {\n                    let result = input.map((g)=>g.id);\n                    let cache1 = this.inputCache[found];\n                    if (cache1) cache1.push(result);\n                    else this.inputCache[found] = [\n                        result\n                    ];\n                }\n            },\n            exit: ()=>{\n                ({ glyphs: this.glyphs, ligatureStack: this.ligatureStack } = stack.pop());\n                input.pop();\n            }\n        });\n    }\n    constructor(font){\n        this.processIndicRearragement = this.processIndicRearragement.bind(this);\n        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n        this.processLigature = this.processLigature.bind(this);\n        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n        this.font = font;\n        this.morx = font.morx;\n        this.inputCache = null;\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$99be642f82069918$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n    if (reverseB) end.reverse();\n    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n    if (reverseA) start.reverse();\n    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n    return glyphs;\n}\nfunction $f7a6899246d76dab$var$$99be642f82069918$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n    let length = lastGlyph - firstGlyph + 1;\n    switch(verb){\n        case 0:\n            return glyphs;\n        case 1:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 2:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 3:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 4:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 5:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ], true, false);\n        case 6:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 7:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 8:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 9:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 10:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 11:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ], true, false);\n        case 12:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 13:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, false);\n        case 14:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 15:\n            return $f7a6899246d76dab$var$$99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, true);\n        default:\n            throw new Error(`Unknown verb: ${verb}`);\n    }\n}\nclass $f7a6899246d76dab$var$$860fcbd64bc12fbc$export$2e2bcd8739ae039 {\n    substitute(glyphRun) {\n        // AAT expects the glyphs to be in visual order prior to morx processing,\n        // so reverse the glyphs if the script is right-to-left.\n        if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n        this.morxProcessor.process(glyphRun.glyphs, $f7a6899246d76dab$var$$2b7f887ebcb5888a$export$b813f7d2a1677c16(glyphRun.features));\n    }\n    getAvailableFeatures(script, language) {\n        return $f7a6899246d76dab$var$$2b7f887ebcb5888a$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n    stringsForGlyph(gid) {\n        let glyphStrings = this.morxProcessor.generateInputs(gid);\n        let result = new Set;\n        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, \"\");\n        return result;\n    }\n    _addStrings(glyphs, index, strings, string) {\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n        for (let codePoint of codePoints){\n            let s = string + String.fromCodePoint(codePoint);\n            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);\n            else strings.add(s);\n        }\n    }\n    constructor(font){\n        this.font = font;\n        this.morxProcessor = new $f7a6899246d76dab$var$$99be642f82069918$export$2e2bcd8739ae039(font);\n        this.fallbackPosition = false;\n    }\n}\nclass $f7a6899246d76dab$var$$d7e93cca3cf8ce8a$export$2e2bcd8739ae039 {\n    /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */ _addFeatures(features, global) {\n        let stageIndex = this.stages.length - 1;\n        let stage = this.stages[stageIndex];\n        for (let feature of features)if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n        }\n    }\n    /**\n   * Add features to the last stage\n   */ add(arg, global = true) {\n        if (this.stages.length === 0) this.stages.push([]);\n        if (typeof arg === \"string\") arg = [\n            arg\n        ];\n        if (Array.isArray(arg)) this._addFeatures(arg, global);\n        else if (typeof arg === \"object\") {\n            this._addFeatures(arg.global || [], true);\n            this._addFeatures(arg.local || [], false);\n        } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n   * Add a new stage\n   */ addStage(arg, global) {\n        if (typeof arg === \"function\") this.stages.push(arg, []);\n        else {\n            this.stages.push([]);\n            this.add(arg, global);\n        }\n    }\n    setFeatureOverrides(features) {\n        if (Array.isArray(features)) this.add(features);\n        else if (typeof features === \"object\") for(let tag in features){\n            if (features[tag]) this.add(tag);\n            else if (this.allFeatures[tag] != null) {\n                let stage = this.stages[this.allFeatures[tag]];\n                stage.splice(stage.indexOf(tag), 1);\n                delete this.allFeatures[tag];\n                delete this.globalFeatures[tag];\n            }\n        }\n    }\n    /**\n   * Assigns the global features to the given glyphs\n   */ assignGlobalFeatures(glyphs) {\n        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;\n    }\n    /**\n   * Executes the planned stages using the given OTProcessor\n   */ process(processor, glyphs, positions) {\n        for (let stage of this.stages){\n            if (typeof stage === \"function\") {\n                if (!positions) stage(this.font, glyphs, this);\n            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n    }\n    constructor(font, script, direction){\n        this.font = font;\n        this.script = script;\n        this.direction = direction;\n        this.stages = [];\n        this.globalFeatures = {};\n        this.allFeatures = {};\n    }\n}\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$VARIATION_FEATURES = [\n    \"rvrn\"\n];\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$COMMON_FEATURES = [\n    \"ccmp\",\n    \"locl\",\n    \"rlig\",\n    \"mark\",\n    \"mkmk\"\n];\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$FRACTIONAL_FEATURES = [\n    \"frac\",\n    \"numr\",\n    \"dnom\"\n];\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$HORIZONTAL_FEATURES = [\n    \"calt\",\n    \"clig\",\n    \"liga\",\n    \"rclt\",\n    \"curs\",\n    \"kern\"\n];\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$VERTICAL_FEATURES = [\n    \"vert\"\n];\nconst $f7a6899246d76dab$var$$d28fb665ee343afc$var$DIRECTIONAL_FEATURES = {\n    ltr: [\n        \"ltra\",\n        \"ltrm\"\n    ],\n    rtl: [\n        \"rtla\",\n        \"rtlm\"\n    ]\n};\nclass $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static plan(plan, glyphs, features) {\n        // Plan the features we want to apply\n        this.planPreprocessing(plan);\n        this.planFeatures(plan);\n        this.planPostprocessing(plan, features);\n        // Assign the global features to all the glyphs\n        plan.assignGlobalFeatures(glyphs);\n        // Assign local features to glyphs\n        this.assignFeatures(plan, glyphs);\n    }\n    static planPreprocessing(plan) {\n        plan.add({\n            global: [\n                ...$f7a6899246d76dab$var$$d28fb665ee343afc$var$VARIATION_FEATURES,\n                ...$f7a6899246d76dab$var$$d28fb665ee343afc$var$DIRECTIONAL_FEATURES[plan.direction]\n            ],\n            local: $f7a6899246d76dab$var$$d28fb665ee343afc$var$FRACTIONAL_FEATURES\n        });\n    }\n    static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n    }\n    static planPostprocessing(plan, userFeatures) {\n        plan.add([\n            ...$f7a6899246d76dab$var$$d28fb665ee343afc$var$COMMON_FEATURES,\n            ...$f7a6899246d76dab$var$$d28fb665ee343afc$var$HORIZONTAL_FEATURES\n        ]);\n        plan.setFeatureOverrides(userFeatures);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Enable contextual fractions\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            if (glyph.codePoints[0] === 0x2044) {\n                let start = i;\n                let end = i + 1;\n                // Apply numerator\n                while(start > 0 && (0, $38e929d1b08c92d4$export$727d9dbc4fbb948f)(glyphs[start - 1].codePoints[0])){\n                    glyphs[start - 1].features.numr = true;\n                    glyphs[start - 1].features.frac = true;\n                    start--;\n                }\n                // Apply denominator\n                while(end < glyphs.length && (0, $38e929d1b08c92d4$export$727d9dbc4fbb948f)(glyphs[end].codePoints[0])){\n                    glyphs[end].features.dnom = true;\n                    glyphs[end].features.frac = true;\n                    end++;\n                }\n                // Apply fraction slash\n                glyph.features.frac = true;\n                i = end - 1;\n            }\n        }\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)($f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$trie = new ($f7a6899246d76dab$var$$parcel$interopDefault($6b4db174c89ebdc9$exports))($f7a6899246d76dab$var$$66a5b9fb5318558a$export$94fdf11bafc8de6b(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FEATURES = [\n    \"isol\",\n    \"fina\",\n    \"fin2\",\n    \"fin3\",\n    \"medi\",\n    \"med2\",\n    \"init\"\n];\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ShapingClasses = {\n    Non_Joining: 0,\n    Left_Joining: 1,\n    Right_Joining: 2,\n    Dual_Joining: 3,\n    Join_Causing: 3,\n    ALAPH: 4,\n    \"DALATH RISH\": 5,\n    Transparent: 6\n};\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL = \"isol\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA = \"fina\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN2 = \"fin2\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN3 = \"fin3\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI = \"medi\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2 = \"med2\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT = \"init\";\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nconst $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$STATE_TABLE = [\n    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n    // State 0: prev was U,  not willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 2: prev was D/L in ISOL form,  willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 3: prev was D in FINA form,  willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 4: prev was FINA ALAPH,  not willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 6: prev was DALATH/RISH,  not willing to join.\n    [\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN3,\n            5\n        ],\n        [\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE,\n            $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ]\n];\nclass $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static planFeatures(plan) {\n        plan.add([\n            \"ccmp\",\n            \"locl\"\n        ]);\n        for(let i = 0; i < $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FEATURES.length; i++){\n            let feature = $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FEATURES[i];\n            plan.addStage(feature, false);\n        }\n        plan.addStage(\"mset\");\n    }\n    static assignFeatures(plan, glyphs) {\n        super.assignFeatures(plan, glyphs);\n        let prev = -1;\n        let state = 0;\n        let actions = [];\n        // Apply the state machine to map glyphs to features\n        for(let i = 0; i < glyphs.length; i++){\n            let curAction, prevAction;\n            var glyph = glyphs[i];\n            let type = $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$getShapingClass(glyph.codePoints[0]);\n            if (type === $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ShapingClasses.Transparent) {\n                actions[i] = $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE;\n                continue;\n            }\n            [prevAction, curAction, state] = $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$STATE_TABLE[state][type];\n            if (prevAction !== $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$NONE && prev !== -1) actions[prev] = prevAction;\n            actions[i] = curAction;\n            prev = i;\n        }\n        // Apply the chosen features to their respective glyphs\n        for(let index = 0; index < glyphs.length; index++){\n            let feature;\n            var glyph = glyphs[index];\n            if (feature = actions[index]) glyph.features[feature] = true;\n        }\n    }\n}\nfunction $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$getShapingClass(codePoint) {\n    let res = $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$trie.get(codePoint);\n    if (res) return res - 1;\n    let category = (0, $38e929d1b08c92d4$export$410364bbb673ddbc)(codePoint);\n    if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ShapingClasses.Transparent;\n    return $f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ShapingClasses.Non_Joining;\n}\nclass $f7a6899246d76dab$var$$d6368085223f631e$export$2e2bcd8739ae039 {\n    reset(options = {}, index = 0) {\n        this.options = options;\n        this.flags = options.flags || {};\n        this.markAttachmentType = options.markAttachmentType || 0;\n        this.index = index;\n    }\n    get cur() {\n        return this.glyphs[this.index] || null;\n    }\n    shouldIgnore(glyph) {\n        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n    move(dir) {\n        this.index += dir;\n        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;\n        if (0 > this.index || this.index >= this.glyphs.length) return null;\n        return this.glyphs[this.index];\n    }\n    next() {\n        return this.move(1);\n    }\n    prev() {\n        return this.move(-1);\n    }\n    peek(count = 1) {\n        let idx = this.index;\n        let res = this.increment(count);\n        this.index = idx;\n        return res;\n    }\n    peekIndex(count = 1) {\n        let idx = this.index;\n        this.increment(count);\n        let res = this.index;\n        this.index = idx;\n        return res;\n    }\n    increment(count = 1) {\n        let dir = count < 0 ? -1 : 1;\n        count = Math.abs(count);\n        while(count--)this.move(dir);\n        return this.glyphs[this.index];\n    }\n    constructor(glyphs, options){\n        this.glyphs = glyphs;\n        this.reset(options);\n    }\n}\nconst $f7a6899246d76dab$var$$7b226e6bbeadedeb$var$DEFAULT_SCRIPTS = [\n    \"DFLT\",\n    \"dflt\",\n    \"latn\"\n];\nclass $f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    findScript(script) {\n        if (this.table.scriptList == null) return null;\n        if (!Array.isArray(script)) script = [\n            script\n        ];\n        for (let s of script)for (let entry of this.table.scriptList){\n            if (entry.tag === s) return entry;\n        }\n        return null;\n    }\n    selectScript(script, language, direction) {\n        let changed = false;\n        let entry;\n        if (!this.script || script !== this.scriptTag) {\n            entry = this.findScript(script);\n            if (!entry) entry = this.findScript($f7a6899246d76dab$var$$7b226e6bbeadedeb$var$DEFAULT_SCRIPTS);\n            if (!entry) return this.scriptTag;\n            this.scriptTag = entry.tag;\n            this.script = entry.script;\n            this.language = null;\n            this.languageTag = null;\n            changed = true;\n        }\n        if (!direction || direction !== this.direction) this.direction = direction || $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n        if (!language || language !== this.languageTag) {\n            this.language = null;\n            for (let lang of this.script.langSysRecords)if (lang.tag === language) {\n                this.language = lang.langSys;\n                this.languageTag = lang.tag;\n                break;\n            }\n            if (!this.language) {\n                this.language = this.script.defaultLangSys;\n                this.languageTag = null;\n            }\n            changed = true;\n        }\n        // Build a feature lookup table\n        if (changed) {\n            this.features = {};\n            if (this.language) for (let featureIndex of this.language.featureIndexes){\n                let record = this.table.featureList[featureIndex];\n                let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n                this.features[record.tag] = substituteFeature || record.feature;\n            }\n        }\n        return this.scriptTag;\n    }\n    lookupsForFeatures(userFeatures = [], exclude) {\n        let lookups = [];\n        for (let tag of userFeatures){\n            let feature = this.features[tag];\n            if (!feature) continue;\n            for (let lookupIndex of feature.lookupListIndexes){\n                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n                lookups.push({\n                    feature: tag,\n                    index: lookupIndex,\n                    lookup: this.table.lookupList.get(lookupIndex)\n                });\n            }\n        }\n        lookups.sort((a, b)=>a.index - b.index);\n        return lookups;\n    }\n    substituteFeatureForVariations(featureIndex) {\n        if (this.variationsIndex === -1) return null;\n        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n        let substitutions = record.featureTableSubstitution.substitutions;\n        for (let substitution of substitutions){\n            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n        return null;\n    }\n    findVariationsIndex(coords) {\n        let variations = this.table.featureVariations;\n        if (!variations) return -1;\n        let records = variations.featureVariationRecords;\n        for(let i = 0; i < records.length; i++){\n            let conditions = records[i].conditionSet.conditionTable;\n            if (this.variationConditionsMatch(conditions, coords)) return i;\n        }\n        return -1;\n    }\n    variationConditionsMatch(conditions, coords) {\n        return conditions.every((condition)=>{\n            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n        });\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        let lookups = this.lookupsForFeatures(userFeatures);\n        this.applyLookups(lookups, glyphs, advances);\n    }\n    applyLookups(lookups, glyphs, positions) {\n        this.glyphs = glyphs;\n        this.positions = positions;\n        this.glyphIterator = new $f7a6899246d76dab$var$$d6368085223f631e$export$2e2bcd8739ae039(glyphs);\n        for (let { feature: feature, lookup: lookup } of lookups){\n            this.currentFeature = feature;\n            this.glyphIterator.reset(lookup.flags);\n            while(this.glyphIterator.index < glyphs.length){\n                if (!(feature in this.glyphIterator.cur.features)) {\n                    this.glyphIterator.next();\n                    continue;\n                }\n                for (let table of lookup.subTables){\n                    let res = this.applyLookup(lookup.lookupType, table);\n                    if (res) break;\n                }\n                this.glyphIterator.next();\n            }\n        }\n    }\n    applyLookup(lookup, table) {\n        throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n    applyLookupList(lookupRecords) {\n        let options = this.glyphIterator.options;\n        let glyphIndex = this.glyphIterator.index;\n        for (let lookupRecord of lookupRecords){\n            // Reset flags and find glyph index for this lookup record\n            this.glyphIterator.reset(options, glyphIndex);\n            this.glyphIterator.increment(lookupRecord.sequenceIndex);\n            // Get the lookup and setup flags for subtables\n            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n            // Apply lookup subtables until one matches\n            for (let table of lookup.subTables){\n                if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n        }\n        this.glyphIterator.reset(options, glyphIndex);\n        return true;\n    }\n    coverageIndex(coverage, glyph) {\n        if (glyph == null) glyph = this.glyphIterator.cur.id;\n        switch(coverage.version){\n            case 1:\n                return coverage.glyphs.indexOf(glyph);\n            case 2:\n                for (let range of coverage.rangeRecords){\n                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n                }\n                break;\n        }\n        return -1;\n    }\n    match(sequenceIndex, sequence, fn, matched) {\n        let pos = this.glyphIterator.index;\n        let glyph = this.glyphIterator.increment(sequenceIndex);\n        let idx = 0;\n        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){\n            if (matched) matched.push(this.glyphIterator.index);\n            idx++;\n            glyph = this.glyphIterator.next();\n        }\n        this.glyphIterator.index = pos;\n        if (idx < sequence.length) return false;\n        return matched || true;\n    }\n    sequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id);\n    }\n    sequenceMatchIndices(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>{\n            // If the current feature doesn't apply to this glyph,\n            if (!(this.currentFeature in glyph.features)) return false;\n            return component === glyph.id;\n        }, []);\n    }\n    coverageSequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0);\n    }\n    getClassID(glyph, classDef) {\n        switch(classDef.version){\n            case 1:\n                let i = glyph - classDef.startGlyph;\n                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n                break;\n            case 2:\n                for (let range of classDef.classRangeRecord){\n                    if (range.start <= glyph && glyph <= range.end) return range.class;\n                }\n                break;\n        }\n        return 0;\n    }\n    classSequenceMatches(sequenceIndex, sequence, classDef) {\n        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef));\n    }\n    applyContext(table) {\n        let index, set;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                set = table.ruleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n                if (index === -1) return false;\n                set = table.classSet[index];\n                for (let rule1 of set){\n                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    applyChainingContext(table) {\n        let index;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                let set = table.chainRuleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n                let rules = table.chainClassSet[index];\n                if (!rules) return false;\n                for (let rule2 of rules){\n                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    constructor(font, table){\n        this.font = font;\n        this.table = table;\n        this.script = null;\n        this.scriptTag = null;\n        this.language = null;\n        this.languageTag = null;\n        this.features = {};\n        this.lookups = {};\n        // Setup variation substitutions\n        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n        // initialize to default script + language\n        this.selectScript();\n        // current context (set by applyFeatures)\n        this.glyphs = [];\n        this.positions = []; // only used by GPOS\n        this.ligatureID = 1;\n        this.currentFeature = null;\n    }\n}\nclass $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039 {\n    get id() {\n        return this._id;\n    }\n    set id(id) {\n        this._id = id;\n        this.substituted = true;\n        let GDEF = this._font.GDEF;\n        if (GDEF && GDEF.glyphClassDef) {\n            // TODO: clean this up\n            let classID = $f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039.prototype.getClassID(id, GDEF.glyphClassDef);\n            this.isBase = classID === 1;\n            this.isLigature = classID === 2;\n            this.isMark = classID === 3;\n            this.markAttachmentType = GDEF.markAttachClassDef ? $f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n        } else {\n            this.isMark = this.codePoints.length > 0 && this.codePoints.every($38e929d1b08c92d4$export$e33ad6871e762338);\n            this.isBase = !this.isMark;\n            this.isLigature = this.codePoints.length > 1;\n            this.markAttachmentType = 0;\n        }\n    }\n    copy() {\n        return new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n    constructor(font, id, codePoints = [], features){\n        this._font = font;\n        this.codePoints = codePoints;\n        this.id = id;\n        this.features = {};\n        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){\n            let feature = features[i];\n            this.features[feature] = true;\n        }\n        else if (typeof features === \"object\") Object.assign(this.features, features);\n        this.ligatureID = null;\n        this.ligatureComponent = null;\n        this.isLigated = false;\n        this.cursiveAttachment = null;\n        this.markAttachment = null;\n        this.shaperInfo = null;\n        this.substituted = false;\n        this.isMultiplied = false;\n    }\n}\nclass $f7a6899246d76dab$var$$fa1d9fd80dd7279e$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static planFeatures(plan) {\n        plan.add([\n            \"ljmo\",\n            \"vjmo\",\n            \"tjmo\"\n        ], false);\n    }\n    static assignFeatures(plan, glyphs) {\n        let state = 0;\n        let i = 0;\n        while(i < glyphs.length){\n            let action;\n            let glyph = glyphs[i];\n            let code = glyph.codePoints[0];\n            let type = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType(code);\n            [action, state] = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$STATE_TABLE[state][type];\n            switch(action){\n                case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE:\n                    // Decompose the composed syllable if it is not supported by the font.\n                    if (!plan.font.hasGlyphForCodePoint(code)) i = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$decompose(glyphs, i, plan.font);\n                    break;\n                case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$COMPOSE:\n                    // Found a decomposed syllable. Try to compose if supported by the font.\n                    i = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$compose(glyphs, i, plan.font);\n                    break;\n                case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$TONE_MARK:\n                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n                    $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, plan.font);\n                    break;\n                case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$INVALID:\n                    // Tone mark has no valid syllable to attach to, so insert a dotted circle\n                    i = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, plan.font);\n                    break;\n            }\n            i++;\n        }\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)($f7a6899246d76dab$var$$fa1d9fd80dd7279e$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE = 0xac00;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_END = 0xd7a4;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_COUNT = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_END - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE + 1;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE = 0x1100; // lead\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE = 0x1161; // vowel\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE = 0x11a7; // trail\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_COUNT = 19;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_COUNT = 21;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT = 28;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_END = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE + $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_COUNT - 1;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_END = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE + $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_COUNT - 1;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_END = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE + $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT - 1;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DOTTED_CIRCLE = 0x25cc;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isTone = (code)=>0x302e <= code && code <= 0x302f;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLVT = (code)=>$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE <= code && code <= $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_END;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLV = (code)=>code - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE < $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_COUNT && (code - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE) % $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT === 0;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningL = (code)=>$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE <= code && code <= $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_END;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningV = (code)=>$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE <= code && code <= $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_END;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningT = (code)=>$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE + 1 && 1 <= code && code <= $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_END;\n// Character categories\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$X = 0; // Other character\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L = 1; // Leading consonant\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V = 2; // Medial vowel\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T = 3; // Trailing consonant\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LV = 4; // Composed <LV> syllable\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LVT = 5; // Composed <LVT> syllable\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType(code) {\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isL(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L;\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isV(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V;\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isT(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T;\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLV(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LV;\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLVT(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LVT;\n    if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isTone(code)) return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$M;\n    return $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$X;\n}\n// State machine actions\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION = 0;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE = 1;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$COMPOSE = 2;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$TONE_MARK = 4;\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$STATE_TABLE = [\n    //       X                 L                 V                T                  LV                LVT               M\n    // State 0: start state\n    [\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 1: <L>\n    [\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$COMPOSE,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 2: <L,V> or <LV>\n    [\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$COMPOSE,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ],\n    // State 3: <L,V,T> or <LVT>\n    [\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ]\n];\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, code, features) {\n    return new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(font, font.glyphForCodePoint(code).id, [\n        code\n    ], features);\n}\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$decompose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyph.codePoints[0];\n    let s = code - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE;\n    let t = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE + s % $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT;\n    s = s / $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT | 0;\n    let l = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE + s / $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_COUNT | 0;\n    let v = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE + s % $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_COUNT;\n    // Don't decompose if all of the components are not available\n    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n    // Replace the current glyph with decomposed L, V, and T glyphs,\n    // and apply the proper OpenType features to each component.\n    let ljmo = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, l, glyph.features);\n    ljmo.features.ljmo = true;\n    let vjmo = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, v, glyph.features);\n    vjmo.features.vjmo = true;\n    let insert = [\n        ljmo,\n        vjmo\n    ];\n    if (t > $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE) {\n        let tjmo = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, t, glyph.features);\n        tjmo.features.tjmo = true;\n        insert.push(tjmo);\n    }\n    glyphs.splice(i, 1, ...insert);\n    return i + insert.length - 1;\n}\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$compose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    let type = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType(code);\n    let prev = glyphs[i - 1].codePoints[0];\n    let prevType = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType(prev);\n    // Figure out what type of syllable we're dealing with\n    let lv, ljmo, vjmo, tjmo;\n    if (prevType === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LV && type === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T) {\n        // <LV,T>\n        lv = prev;\n        tjmo = glyph;\n    } else {\n        if (type === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V) {\n            // <L,V>\n            ljmo = glyphs[i - 1];\n            vjmo = glyph;\n        } else {\n            // <L,V,T>\n            ljmo = glyphs[i - 2];\n            vjmo = glyphs[i - 1];\n            tjmo = glyph;\n        }\n        let l = ljmo.codePoints[0];\n        let v = vjmo.codePoints[0];\n        // Make sure L and V are combining characters\n        if ($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningL(l) && $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningV(v)) lv = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE + ((l - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE) * $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_COUNT + (v - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE)) * $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_COUNT;\n    }\n    let t = tjmo && tjmo.codePoints[0] || $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE;\n    if (lv != null && (t === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE || $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningT(t))) {\n        let s = lv + (t - $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE);\n        // Replace with a composed glyph if supported by the font,\n        // otherwise apply the proper OpenType features to each component.\n        if (font.hasGlyphForCodePoint(s)) {\n            let del = prevType === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V ? 3 : 2;\n            glyphs.splice(i - del + 1, del, $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, s, glyph.features));\n            return i - del + 1;\n        }\n    }\n    // Didn't compose (either a non-combining component or unsupported by font).\n    if (ljmo) ljmo.features.ljmo = true;\n    if (vjmo) vjmo.features.vjmo = true;\n    if (tjmo) tjmo.features.tjmo = true;\n    if (prevType === $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LV) {\n        // Sequence was originally <L,V>, which got combined earlier.\n        // Either the T was non-combining, or the LVT glyph wasn't supported.\n        // Decompose the glyph again and apply OT features.\n        $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$decompose(glyphs, i - 1, font);\n        return i + 1;\n    }\n    return i;\n}\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getLength(code) {\n    switch($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType(code)){\n        case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LV:\n        case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$LVT:\n            return 1;\n        case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V:\n            return 2;\n        case $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T:\n            return 3;\n    }\n}\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    // Move tone mark to the beginning of the previous syllable, unless it is zero width\n    if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n    let prev = glyphs[i - 1].codePoints[0];\n    let len = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getLength(prev);\n    glyphs.splice(i, 1);\n    return glyphs.splice(i - len, 0, glyph);\n}\nfunction $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    if (font.hasGlyphForCodePoint($f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DOTTED_CIRCLE)) {\n        let dottedCircle = $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph(font, $f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DOTTED_CIRCLE, glyph.features);\n        // If the tone mark is zero width, insert the dotted circle before, otherwise after\n        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n        glyphs.splice(idx, 0, dottedCircle);\n        i++;\n    }\n    return i;\n}\nvar $f7a6899246d76dab$var$$d22b56f2cf15e5ba$exports = {};\n$f7a6899246d76dab$var$$d22b56f2cf15e5ba$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\nvar $f7a6899246d76dab$var$$79781f8c452881c2$exports = {};\n$f7a6899246d76dab$var$$79781f8c452881c2$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c = {\n    X: 1,\n    C: 2,\n    V: 4,\n    N: 8,\n    H: 16,\n    ZWNJ: 32,\n    ZWJ: 64,\n    M: 128,\n    SM: 256,\n    VD: 512,\n    A: 1024,\n    Placeholder: 2048,\n    Dotted_Circle: 4096,\n    RS: 8192,\n    Coeng: 16384,\n    Repha: 32768,\n    Ra: 65536,\n    CM: 131072,\n    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0 = {\n    Start: 1,\n    Ra_To_Become_Reph: 2,\n    Pre_M: 4,\n    Pre_C: 8,\n    Base_C: 16,\n    After_Main: 32,\n    Above_C: 64,\n    Before_Sub: 128,\n    Below_C: 256,\n    After_Sub: 512,\n    Before_Post: 1024,\n    Post_C: 2048,\n    After_Post: 4096,\n    Final_C: 8192,\n    SMVD: 16384,\n    End: 32768\n};\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$8519deaa7de2b07 = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.C | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Ra | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.CM | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.V | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Placeholder | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Dotted_Circle;\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$bbcd928767338e0d = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWNJ;\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Coeng;\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$e99d119da76a0fc5 = {\n    Default: {\n        hasOldSpec: false,\n        virama: 0,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Devanagari: {\n        hasOldSpec: true,\n        virama: 0x094D,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Bengali: {\n        hasOldSpec: true,\n        virama: 0x09CD,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gurmukhi: {\n        hasOldSpec: true,\n        virama: 0x0A4D,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gujarati: {\n        hasOldSpec: true,\n        virama: 0x0ACD,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Oriya: {\n        hasOldSpec: true,\n        virama: 0x0B4D,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Tamil: {\n        hasOldSpec: true,\n        virama: 0x0BCD,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Telugu: {\n        hasOldSpec: true,\n        virama: 0x0C4D,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Explicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Kannada: {\n        hasOldSpec: true,\n        virama: 0x0CCD,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Malayalam: {\n        hasOldSpec: true,\n        virama: 0x0D4D,\n        basePos: \"Last\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Log_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    // Handled by UniversalShaper\n    // Sinhala: {\n    //   hasOldSpec: false,\n    //   virama: 0x0DCA,\n    //   basePos: 'Last_Sinhala',\n    //   rephPos: POSITIONS.After_Main,\n    //   rephMode: 'Explicit',\n    //   blwfMode: 'Pre_And_Post'\n    // },\n    Khmer: {\n        hasOldSpec: false,\n        virama: 0x17D2,\n        basePos: \"First\",\n        rephPos: $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n        rephMode: \"Vis_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    }\n};\nconst $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$f647c9cfdd77d95a = {\n    // Khmer\n    0x17BE: [\n        0x17C1,\n        0x17BE\n    ],\n    0x17BF: [\n        0x17C1,\n        0x17BF\n    ],\n    0x17C0: [\n        0x17C1,\n        0x17C0\n    ],\n    0x17C4: [\n        0x17C1,\n        0x17C4\n    ],\n    0x17C5: [\n        0x17C1,\n        0x17C5\n    ]\n};\nconst { decompositions: $f7a6899246d76dab$var$$d203e6b9523d0071$var$decompositions } = /*@__PURE__*/ $f7a6899246d76dab$var$$parcel$interopDefault($f7a6899246d76dab$var$$79781f8c452881c2$exports);\nconst $f7a6899246d76dab$var$$d203e6b9523d0071$var$trie = new ($f7a6899246d76dab$var$$parcel$interopDefault($6b4db174c89ebdc9$exports))($f7a6899246d76dab$var$$66a5b9fb5318558a$export$94fdf11bafc8de6b(\"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\"));\nconst $f7a6899246d76dab$var$$d203e6b9523d0071$var$stateMachine = new ($f7a6899246d76dab$var$$parcel$interopDefault($b79de8adb8c1e088$exports))(/*@__PURE__*/ $f7a6899246d76dab$var$$parcel$interopDefault($f7a6899246d76dab$var$$d22b56f2cf15e5ba$exports));\nclass $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static planFeatures(plan) {\n        plan.addStage($f7a6899246d76dab$var$$d203e6b9523d0071$var$setupSyllables);\n        plan.addStage([\n            \"locl\",\n            \"ccmp\"\n        ]);\n        plan.addStage($f7a6899246d76dab$var$$d203e6b9523d0071$var$initialReordering);\n        plan.addStage(\"nukt\");\n        plan.addStage(\"akhn\");\n        plan.addStage(\"rphf\", false);\n        plan.addStage(\"rkrf\");\n        plan.addStage(\"pref\", false);\n        plan.addStage(\"blwf\", false);\n        plan.addStage(\"abvf\", false);\n        plan.addStage(\"half\", false);\n        plan.addStage(\"pstf\", false);\n        plan.addStage(\"vatu\");\n        plan.addStage(\"cjct\");\n        plan.addStage(\"cfar\", false);\n        plan.addStage($f7a6899246d76dab$var$$d203e6b9523d0071$var$finalReordering);\n        plan.addStage({\n            local: [\n                \"init\"\n            ],\n            global: [\n                \"pres\",\n                \"abvs\",\n                \"blws\",\n                \"psts\",\n                \"haln\",\n                \"dist\",\n                \"abvm\",\n                \"blwm\",\n                \"calt\",\n                \"clig\"\n            ]\n        });\n        // Setup the indic config for the selected script\n        plan.unicodeScript = $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$ce50e82f12a827a4(plan.script);\n        plan.indicConfig = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$e99d119da76a0fc5[plan.unicodeScript] || $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$e99d119da76a0fc5.Default;\n        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n    // TODO: turn off kern (Khmer) and liga features.\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split matras\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            let d = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$f647c9cfdd77d95a[codepoint] || $f7a6899246d76dab$var$$d203e6b9523d0071$var$decompositions[codepoint];\n            if (d) {\n                let decomposed = d.map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)($f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicCategory(glyph) {\n    return $f7a6899246d76dab$var$$d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicPosition(glyph) {\n    return 1 << ($f7a6899246d76dab$var$$d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nclass $f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo {\n    constructor(category, position, syllableType, syllable){\n        this.category = category;\n        this.position = position;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    let last = 0;\n    for (let [start, end, tags] of $f7a6899246d76dab$var$$d203e6b9523d0071$var$stateMachine.match(glyphs.map($f7a6899246d76dab$var$$d203e6b9523d0071$var$indicCategory))){\n        if (start > last) {\n            ++syllable;\n            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.X, $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.End, \"non_indic_cluster\", syllable);\n        }\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo(1 << $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicCategory(glyphs[i]), $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicPosition(glyphs[i]), tags[0], syllable);\n        last = end + 1;\n    }\n    if (last < glyphs.length) {\n        ++syllable;\n        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.X, $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.End, \"non_indic_cluster\", syllable);\n    }\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyph) {\n    return glyph.shaperInfo.category & $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$8519deaa7de2b07;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyph) {\n    return glyph.shaperInfo.category & $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$bbcd928767338e0d;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyph) {\n    return glyph.shaperInfo.category & $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs, feature) {\n    for (let glyph of glyphs)glyph.features = {\n        [feature]: true\n    };\n    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n    GSUB.applyFeatures([\n        feature\n    ], glyphs);\n    return glyphs.length === 1;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$consonantPosition(font, consonant, virama) {\n    let glyphs = [\n        virama,\n        consonant,\n        virama\n    ];\n    if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Below_C;\n    else if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Post_C;\n    else if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Post_C;\n    return $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C;\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$initialReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    let virama = font.glyphForCodePoint(indicConfig.virama).id;\n    if (virama) {\n        let info = new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(font, virama, [\n            indicConfig.virama\n        ]);\n        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C) glyphs[i].shaperInfo.position = $f7a6899246d76dab$var$$d203e6b9523d0071$var$consonantPosition(font, glyphs[i].copy(), info);\n    }\n    for(let start = 0, end = $f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        let { category: category, syllableType: syllableType } = glyphs[start].shaperInfo;\n        if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n        if (syllableType === \"broken_cluster\" && dottedCircle) {\n            let g = new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = new $f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo(1 << $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicCategory(g), $f7a6899246d76dab$var$$d203e6b9523d0071$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n            // Insert after possible Repha.\n            let i = start;\n            while(i < end && glyphs[i].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Repha)i++;\n            glyphs.splice(i++, 0, g);\n            end++;\n        }\n        // 1. Find base consonant:\n        //\n        // The shaping engine finds the base consonant of the syllable, using the\n        // following algorithm: starting from the end of the syllable, move backwards\n        // until a consonant is found that does not have a below-base or post-base\n        // form (post-base forms have to follow below-base forms), or that is not a\n        // pre-base reordering Ra, or arrive at the first consonant. The consonant\n        // stopped at will be the base.\n        let base = end;\n        let limit = start;\n        let hasReph = false;\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        if (indicConfig.rephPos !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ)) {\n            // See if it matches the 'rphf' feature.\n            let g = [\n                glyphs[start].copy(),\n                glyphs[start + 1].copy(),\n                glyphs[start + 2].copy()\n            ];\n            if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(g, \"rphf\")) {\n                limit += 2;\n                while(limit < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n                base = start;\n                hasReph = true;\n            }\n        } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Repha) {\n            limit++;\n            while(limit < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n            base = start;\n            hasReph = true;\n        }\n        switch(indicConfig.basePos){\n            case \"Last\":\n                {\n                    // starting from the end of the syllable, move backwards\n                    let i = end;\n                    let seenBelow = false;\n                    do {\n                        let info = glyphs[--i].shaperInfo;\n                        // until a consonant is found\n                        if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[i])) {\n                            // that does not have a below-base or post-base form\n                            // (post-base forms have to follow below-base forms),\n                            if (info.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Below_C && (info.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Post_C || seenBelow)) {\n                                base = i;\n                                break;\n                            }\n                            // or that is not a pre-base reordering Ra,\n                            //\n                            // IMPLEMENTATION NOTES:\n                            //\n                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n                            // by the logic above already.\n                            //\n                            // or arrive at the first consonant. The consonant stopped at will\n                            // be the base.\n                            if (info.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Below_C) seenBelow = true;\n                            base = i;\n                        } else if (start < i && info.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ && glyphs[i - 1].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H) break;\n                    }while (i > limit);\n                    break;\n                }\n            case \"First\":\n                // The first consonant is always the base.\n                base = start;\n                // Mark all subsequent consonants as below.\n                for(let i = base + 1; i < end; i++)if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Below_C;\n        }\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        //\n        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n        if (hasReph && base === start && limit - base <= 2) hasReph = false;\n        // 2. Decompose and reorder Matras:\n        //\n        // Each matra and any syllable modifier sign in the cluster are moved to the\n        // appropriate position relative to the consonant(s) in the cluster. The\n        // shaping engine decomposes two- or three-part matras into their constituent\n        // parts before any repositioning. Matra characters are classified by which\n        // consonant in a conjunct they have affinity for and are reordered to the\n        // following positions:\n        //\n        //   o Before first half form in the syllable\n        //   o After subjoined consonants\n        //   o After post-form consonant\n        //   o After main consonant (for above marks)\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // The normalize() routine has already decomposed matras for us, so we don't\n        // need to worry about that.\n        // 3.  Reorder marks to canonical order:\n        //\n        // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n        // if necessary, so that the nukta is first.\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // We don't need to do this: the normalize() routine already did this for us.\n        // Reorder characters\n        for(let i1 = start; i1 < base; i1++){\n            let info = glyphs[i1].shaperInfo;\n            info.position = Math.min($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_C, info.position);\n        }\n        if (base < end) glyphs[base].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C;\n        // Mark final consonants.  A final consonant is one appearing after a matra,\n        // like in Khmer.\n        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M) {\n            for(let j = i2 + 1; j < end; j++)if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[j])) {\n                glyphs[j].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Final_C;\n                break;\n            }\n            break;\n        }\n        // Handle beginning Ra\n        if (hasReph) glyphs[start].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph;\n        // For old-style Indic script tags, move the first post-base Halant after\n        // last consonant.\n        //\n        // Reports suggest that in some scripts Uniscribe does this only if there\n        // is *not* a Halant after last consonant already (eg. Kannada), while it\n        // does it unconditionally in other scripts (eg. Malayalam).  We don't\n        // currently know about other scripts, so we single out Malayalam for now.\n        //\n        // Kannada test case:\n        // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n        // With some versions of Lohit Kannada.\n        // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n        //\n        // Malayalam test case:\n        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n        // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n        if (plan.isOldSpec) {\n            let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H) {\n                let j;\n                for(j = end - 1; j > i; j--){\n                    if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H) break;\n                }\n                if (glyphs[j].shaperInfo.category !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H && j > i) {\n                    // Move Halant to after last consonant.\n                    let t = glyphs[i];\n                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n                    glyphs[j] = t;\n                }\n                break;\n            }\n        }\n        // Attach misc marks to previous char to move with them.\n        let lastPos = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Start;\n        for(let i3 = start; i3 < end; i3++){\n            let info = glyphs[i3].shaperInfo;\n            if (info.category & ($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$bbcd928767338e0d | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.N | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.RS | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.CM | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc & info.category)) {\n                info.position = lastPos;\n                if (info.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H && info.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M) {\n                    // Uniscribe doesn't move the Halant with Left Matra.\n                    // TEST: U+092B,U+093F,U+094DE\n                    // We follow.  This is important for the Sinhala\n                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n                    // where U+0DD9 is a left matra and U+0DCA is the virama.\n                    // We don't want to move the virama with the left matra.\n                    // TEST: U+0D9A,U+0DDA\n                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M) {\n                        info.position = glyphs[j - 1].shaperInfo.position;\n                        break;\n                    }\n                }\n            } else if (info.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.SMVD) lastPos = info.position;\n        }\n        // For post-base consonants let them own anything before them\n        // since the last consonant or matra.\n        let last = base;\n        for(let i4 = base + 1; i4 < end; i4++){\n            if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[i4])) {\n                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n                last = i4;\n            } else if (glyphs[i4].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M) last = i4;\n        }\n        let arr = glyphs.slice(start, end);\n        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position);\n        glyphs.splice(start, arr.length, ...arr);\n        // Find base again\n        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C) {\n            base = i5;\n            break;\n        }\n        // Setup features now\n        // Reph\n        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;\n        // Pre-base\n        let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n        for(let i7 = start; i7 < base; i7++){\n            glyphs[i7].features.half = true;\n            if (blwf) glyphs[i7].features.blwf = true;\n        }\n        // Post-base\n        for(let i8 = base + 1; i8 < end; i8++){\n            glyphs[i8].features.abvf = true;\n            glyphs[i8].features.pstf = true;\n            glyphs[i8].features.blwf = true;\n        }\n        if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n            // Old-spec eye-lash Ra needs special handling.  From the\n            // spec:\n            //\n            // \"The feature 'below-base form' is applied to consonants\n            // having below-base forms and following the base consonant.\n            // The exception is vattu, which may appear below half forms\n            // as well as below the base glyph. The feature 'below-base\n            // form' will be applied to all such occurrences of Ra as well.\"\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n            // with Sanskrit 2003 font.\n            //\n            // However, note that Ra,Halant,ZWJ is the correct way to\n            // request eyelash form of Ra, so we wouldbn't inhibit it\n            // in that sequence.\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Ra && glyphs[i + 1].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ)) {\n                glyphs[i].features.blwf = true;\n                glyphs[i + 1].features.blwf = true;\n            }\n        }\n        let prefLen = 2;\n        if (features.pref && base + prefLen < end) for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){\n            let g = [\n                glyphs[i9].copy(),\n                glyphs[i9 + 1].copy()\n            ];\n            if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute(g, \"pref\")) {\n                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;\n                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n                // Read the feature spec.\n                // This allows distinguishing the following cases with MS Khmer fonts:\n                // U+1784,U+17D2,U+179A,U+17D2,U+1782\n                // U+1784,U+17D2,U+1782,U+17D2,U+179A\n                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;\n                break;\n            }\n        }\n        // Apply ZWJ/ZWNJ effects\n        for(let i10 = start + 1; i10 < end; i10++)if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[i10])) {\n            let nonJoiner = glyphs[i10].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWNJ;\n            let j = i10;\n            do {\n                j--;\n                // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n                // being there, since we don't skip them for the CJCT\n                // feature (ie. F_MANUAL_ZWJ)\n                // A ZWNJ disables HALF.\n                if (nonJoiner) delete glyphs[j].features.half;\n            }while (j > start && !$f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[j]));\n        }\n    }\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$finalReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    for(let start = 0, end = $f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        // 4. Final reordering:\n        //\n        // After the localized forms and basic shaping forms GSUB features have been\n        // applied (see below), the shaping engine performs some final glyph\n        // reordering before applying all the remaining font features to the entire\n        // cluster.\n        let tryPref = !!features.pref;\n        // Find base again\n        let base = start;\n        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C) {\n            if (tryPref && base + 1 < end) {\n                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                        // Ok, this was a 'pref' candidate but didn't form any.\n                        // Base is around here...\n                        base = i;\n                        while(base < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[base]))base++;\n                        glyphs[base].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.BASE_C;\n                        tryPref = false;\n                    }\n                    break;\n                }\n            }\n            // For Malayalam, skip over unformed below- (but NOT post-) forms.\n            if (plan.unicodeScript === \"Malayalam\") for(let i = base + 1; i < end; i++){\n                while(i < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i === end || !$f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[i])) break;\n                i++; // Skip halant.\n                while(i < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Below_C) {\n                    base = i;\n                    glyphs[base].shaperInfo.position = $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C;\n                }\n            }\n            if (start < base && glyphs[base].shaperInfo.position > $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Base_C) base--;\n            break;\n        }\n        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ) base--;\n        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.N | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc))base--;\n        // o Reorder matras:\n        //\n        // If a pre-base matra character had been reordered before applying basic\n        // features, the glyph can be moved closer to the main consonant based on\n        // whether half-forms had been formed. Actual position for the matra is\n        // defined as “after last standalone halant glyph, after initial matra\n        // position and before the main consonant”. If ZWJ or ZWNJ follow this\n        // halant, position is moved after it.\n        //\n        if (start + 1 < end && start < base) {\n            // If we lost track of base, alas, position before last thingy.\n            let newPos = base === end ? base - 2 : base - 1;\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc)))newPos--;\n                // If we found no Halant we are done.\n                // Otherwise only proceed if the Halant does\n                // not belong to the Matra itself!\n                if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M) {\n                    if (newPos + 1 < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[newPos + 1])) newPos++;\n                } else newPos = start; // No move.\n            }\n            if (start < newPos && glyphs[newPos].shaperInfo.position !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M) {\n                // Now go see if there's actually any matras...\n                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M) {\n                    let oldPos = i - 1;\n                    if (oldPos < base && base <= newPos) base--;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n                    glyphs[newPos] = tmp;\n                    newPos--;\n                }\n            }\n        }\n        // o Reorder reph:\n        //\n        // Reph’s original position is always at the beginning of the syllable,\n        // (i.e. it is not reordered at the character reordering stage). However,\n        // it will be reordered according to the basic-forms shaping results.\n        // Possible positions for reph, depending on the script, are; after main,\n        // before post-base consonant forms, and after post-base consonant forms.\n        // Two cases:\n        //\n        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n        //   we should only move it if the sequence ligated to the repha form.\n        //\n        // - If repha is encoded separately and in the logical position, we should only\n        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n        //   to make it work without the reordering.\n        if (start + 1 < end && glyphs[start].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n            let newRephPos;\n            let rephPos = indicConfig.rephPos;\n            let found = false;\n            // 1. If reph should be positioned after post-base consonant forms,\n            //    proceed to step 5.\n            if (rephPos !== $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post) {\n                //  2. If the reph repositioning class is not after post-base: target\n                //     position is after the first explicit halant glyph between the\n                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n                //     are following this halant, position is moved after it. If such\n                //     position is found, this is the target position. Otherwise,\n                //     proceed to the next step.\n                //\n                //     Note: in old-implementation fonts, where classifications were\n                //     fixed in shaping engine, there was no case where reph position\n                //     will be found on this step.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n                // 3. If reph should be repositioned after the main consonant: find the\n                //    first consonant not ligated with main, or find the first\n                //    consonant that is not a potential pre-base reordering Ra.\n                if (!found && rephPos === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main)newRephPos++;\n                    found = newRephPos < end;\n                }\n                // 4. If reph should be positioned before post-base consonant, find\n                //    first post-base classified consonant not ligated with main. If no\n                //    consonant is found, the target position should be before the\n                //    first matra, syllable modifier sign or vedic sign.\n                //\n                // This is our take on what step 4 is trying to say (and failing, BADLY).\n                if (!found && rephPos === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Sub) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Post_C | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.SMVD)))newRephPos++;\n                    found = newRephPos < end;\n                }\n            }\n            //  5. If no consonant is found in steps 3 or 4, move reph to a position\n            //     immediately before the first post-base matra, syllable modifier\n            //     sign or vedic sign that has a reordering class after the intended\n            //     reph position. For example, if the reordering position for reph\n            //     is post-main, it will skip above-base matras that also have a\n            //     post-main position.\n            if (!found) {\n                // Copied from step 2.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n            }\n            // 6. Otherwise, reorder reph to the end of the syllable.\n            if (!found) {\n                newRephPos = end - 1;\n                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.SMVD)newRephPos--;\n                // If the Reph is to be ending up after a Matra,Halant sequence,\n                // position it before that Halant so it can interact with the Matra.\n                // However, if it's a plain Consonant,Halant we shouldn't do that.\n                // Uniscribe doesn't do this.\n                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n                if ($f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M) newRephPos--;\n                }\n            }\n            let reph = glyphs[start];\n            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n            glyphs[newRephPos] = reph;\n            if (start < base && base <= newRephPos) base--;\n        }\n        // o Reorder pre-base reordering consonants:\n        //\n        // If a pre-base reordering consonant is found, reorder it according to\n        // the following rules:\n        if (tryPref && base + 1 < end) {\n            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                // 1. Only reorder a glyph produced by substitution during application\n                //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n                //    the feature generally but block it in certain contexts.)\n                // Note: We just check that something got substituted.  We don't check that\n                // the <pref> feature actually did it...\n                //\n                // Reorder pref only if it ligated.\n                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n                    // 2. Try to find a target position the same way as for pre-base matra.\n                    //    If it is found, reorder pre-base consonant glyph.\n                    //\n                    // 3. If position is not found, reorder immediately before main\n                    //    consonant.\n                    let newPos = base;\n                    // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n                    // We want to position matra after them.\n                    if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ($f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M | $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc)))newPos--;\n                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n                        // split matra, it should be reordered to *before* the left part of such matra.\n                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M) {\n                            let oldPos = i;\n                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c.M) {\n                                newPos--;\n                                break;\n                            }\n                        }\n                    }\n                    if (newPos > start && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos - 1])) {\n                        if (newPos < end && $f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner(glyphs[newPos])) newPos++;\n                    }\n                    let oldPos = i;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n                    glyphs[newPos] = tmp;\n                    if (newPos <= base && base < oldPos) base++;\n                }\n                break;\n            }\n        }\n        // Apply 'init' to the Left Matra if it's a word start.\n        if (glyphs[start].shaperInfo.position === $f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Pre_M && (!start || !/Cf|Mn/.test((0, $38e929d1b08c92d4$export$410364bbb673ddbc)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n    }\n}\nfunction $f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nconst { categories: $f7a6899246d76dab$var$$9b772791ccede8a5$var$categories, decompositions: $f7a6899246d76dab$var$$9b772791ccede8a5$var$decompositions } = /*@__PURE__*/ $f7a6899246d76dab$var$$parcel$interopDefault($f7a6899246d76dab$var$$79781f8c452881c2$exports);\nconst $f7a6899246d76dab$var$$9b772791ccede8a5$var$trie = new ($f7a6899246d76dab$var$$parcel$interopDefault($6b4db174c89ebdc9$exports))($f7a6899246d76dab$var$$66a5b9fb5318558a$export$94fdf11bafc8de6b(\"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\"));\nconst $f7a6899246d76dab$var$$9b772791ccede8a5$var$stateMachine = new ($f7a6899246d76dab$var$$parcel$interopDefault($b79de8adb8c1e088$exports))(/*@__PURE__*/ $f7a6899246d76dab$var$$parcel$interopDefault($f7a6899246d76dab$var$$79781f8c452881c2$exports));\nclass $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static planFeatures(plan) {\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$setupSyllables);\n        // Default glyph pre-processing group\n        plan.addStage([\n            \"locl\",\n            \"ccmp\",\n            \"nukt\",\n            \"akhn\"\n        ]);\n        // Reordering group\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"rphf\"\n        ], false);\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$recordRphf);\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"pref\"\n        ]);\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$recordPref);\n        // Orthographic unit shaping group\n        plan.addStage([\n            \"rkrf\",\n            \"abvf\",\n            \"blwf\",\n            \"half\",\n            \"pstf\",\n            \"vatu\",\n            \"cjct\"\n        ]);\n        plan.addStage($f7a6899246d76dab$var$$9b772791ccede8a5$var$reorder);\n        // Topographical features\n        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n        // Standard topographic presentation and positional feature application\n        plan.addStage([\n            \"abvs\",\n            \"blws\",\n            \"pres\",\n            \"psts\",\n            \"dist\",\n            \"abvm\",\n            \"blwm\"\n        ]);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split vowels\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            if ($f7a6899246d76dab$var$$9b772791ccede8a5$var$decompositions[codepoint]) {\n                let decomposed = $f7a6899246d76dab$var$$9b772791ccede8a5$var$decompositions[codepoint].map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)($f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$useCategory(glyph) {\n    return $f7a6899246d76dab$var$$9b772791ccede8a5$var$trie.get(glyph.codePoints[0]);\n}\nclass $f7a6899246d76dab$var$$9b772791ccede8a5$var$USEInfo {\n    constructor(category, syllableType, syllable){\n        this.category = category;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    for (let [start, end, tags] of $f7a6899246d76dab$var$$9b772791ccede8a5$var$stateMachine.match(glyphs.map($f7a6899246d76dab$var$$9b772791ccede8a5$var$useCategory))){\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $f7a6899246d76dab$var$$9b772791ccede8a5$var$USEInfo($f7a6899246d76dab$var$$9b772791ccede8a5$var$categories[$f7a6899246d76dab$var$$9b772791ccede8a5$var$useCategory(glyphs[i])], tags[0], syllable);\n        // Assign rphf feature\n        let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;\n    }\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$clearSubstitutionFlags(font, glyphs) {\n    for (let glyph of glyphs)glyph.substituted = false;\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$recordRphf(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) glyph.shaperInfo.category = \"R\";\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$recordPref(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted) glyph.shaperInfo.category = \"VPre\";\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$reorder(font, glyphs) {\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    for(let start = 0, end = $f7a6899246d76dab$var$$9b772791ccede8a5$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $f7a6899246d76dab$var$$9b772791ccede8a5$var$nextSyllable(glyphs, start)){\n        let i, j;\n        let info = glyphs[start].shaperInfo;\n        let type = info.syllableType;\n        // Only a few syllable types need reordering.\n        if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n        // Insert a dotted circle glyph in broken clusters.\n        if (type === \"broken_cluster\" && dottedCircle) {\n            let g = new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = info;\n            // Insert after possible Repha.\n            for(i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n            glyphs.splice(++i, 0, g);\n            end++;\n        }\n        // Move things forward.\n        if (info.category === \"R\" && end - start > 1) for(i = start + 1; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($f7a6899246d76dab$var$$9b772791ccede8a5$var$isBase(info) || $f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant(glyphs[i])) {\n                // If we hit a halant, move before it; otherwise it's a base: move to it's\n                // place, and shift things in between backward.\n                if ($f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant(glyphs[i])) i--;\n                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n                break;\n            }\n        }\n        // Move things back.\n        for(i = start, j = end; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($f7a6899246d76dab$var$$9b772791ccede8a5$var$isBase(info) || $f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant(glyphs[i])) // place, and shift things in between backward.\n            j = $f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant(glyphs[i]) ? i + 1 : i;\n            else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n        }\n    }\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant(glyph) {\n    return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $f7a6899246d76dab$var$$9b772791ccede8a5$var$isBase(info) {\n    return info.category === \"B\" || info.category === \"GB\";\n}\nconst $f7a6899246d76dab$var$$fdb4471fc82bc2c2$var$SHAPERS = {\n    arab: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    mong: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    syrc: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    \"nko \": $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    phag: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    mand: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    mani: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    phlp: $f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039,\n    hang: $f7a6899246d76dab$var$$fa1d9fd80dd7279e$export$2e2bcd8739ae039,\n    bng2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    beng: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    dev2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    deva: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    gjr2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    gujr: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    guru: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    gur2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    knda: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    knd2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    mlm2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    mlym: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    ory2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    orya: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    taml: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    tml2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    telu: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    tel2: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    khmr: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    bali: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    batk: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    brah: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    bugi: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    buhd: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    cakm: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    cham: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    dupl: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    egyp: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    gran: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    hano: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    java: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    kthi: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    kali: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    khar: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    khoj: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    sind: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    lepc: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    limb: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    mahj: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    // mand: UniversalShaper, // Mandaic\n    // mani: UniversalShaper, // Manichaean\n    mtei: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    modi: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    // mong: UniversalShaper, // Mongolian\n    // 'nko ': UniversalShaper, // N’Ko\n    hmng: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    // phag: UniversalShaper, // Phags-pa\n    // phlp: UniversalShaper, // Psalter Pahlavi\n    rjng: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    saur: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    shrd: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    sidd: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    sinh: $f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039,\n    sund: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    sylo: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tglg: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tagb: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tale: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    lana: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tavt: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    takr: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tibt: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tfng: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    tirh: $f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039,\n    latn: $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039,\n    DFLT: $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039 // Default\n};\nfunction $f7a6899246d76dab$var$$fdb4471fc82bc2c2$export$7877a478dd30fd3d(script) {\n    if (!Array.isArray(script)) script = [\n        script\n    ];\n    for (let s of script){\n        let shaper = $f7a6899246d76dab$var$$fdb4471fc82bc2c2$var$SHAPERS[s];\n        if (shaper) return shaper;\n    }\n    return $f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039;\n}\nclass $f7a6899246d76dab$var$$86bc1883359e094a$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    let glyph = this.glyphIterator.cur;\n                    switch(table.version){\n                        case 1:\n                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                            break;\n                        case 2:\n                            glyph.id = table.substitute.get(index);\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let sequence = table.sequences.get(index);\n                        if (sequence.length === 0) {\n                            // If the sequence length is zero, delete the glyph.\n                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                            this.glyphs.splice(this.glyphIterator.index, 1);\n                            return true;\n                        }\n                        this.glyphIterator.cur.id = sequence[0];\n                        this.glyphIterator.cur.ligatureComponent = 0;\n                        let features = this.glyphIterator.cur.features;\n                        let curGlyph = this.glyphIterator.cur;\n                        let replacement = sequence.slice(1).map((gid, i)=>{\n                            let glyph = new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(this.font, gid, undefined, features);\n                            glyph.shaperInfo = curGlyph.shaperInfo;\n                            glyph.isLigated = curGlyph.isLigated;\n                            glyph.ligatureComponent = i + 1;\n                            glyph.substituted = true;\n                            glyph.isMultiplied = true;\n                            return glyph;\n                        });\n                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n                        return true;\n                    }\n                    return false;\n                }\n            case 3:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let USER_INDEX = 0; // TODO\n                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n                        return true;\n                    }\n                    return false;\n                }\n            case 4:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    for (let ligature of table.ligatureSets.get(index)){\n                        let matched = this.sequenceMatchIndices(1, ligature.components);\n                        if (!matched) continue;\n                        let curGlyph = this.glyphIterator.cur;\n                        // Concatenate all of the characters the new ligature will represent\n                        let characters = curGlyph.codePoints.slice();\n                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);\n                        // Create the replacement ligature glyph\n                        let ligatureGlyph = new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(this.font, ligature.glyph, characters, curGlyph.features);\n                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n                        ligatureGlyph.isLigated = true;\n                        ligatureGlyph.substituted = true;\n                        // From Harfbuzz:\n                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                        //   the ligature to keep its old ligature id.  This will allow it to attach to\n                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                        //   later, we don't want them to lose their ligature id/component, otherwise\n                        //   GPOS will fail to correctly position the mark ligature on top of the\n                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                        //\n                        // - If a ligature is formed of components that some of which are also ligatures\n                        //   themselves, and those ligature components had marks attached to *their*\n                        //   components, we have to attach the marks to the new ligature component\n                        //   positions!  Now *that*'s tricky!  And these marks may be following the\n                        //   last component of the whole sequence, so we should loop forward looking\n                        //   for them and update them.\n                        //\n                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                        //   the new ligature with a component value of 2.\n                        //\n                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                        let isMarkLigature = curGlyph.isMark;\n                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;\n                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                        let lastLigID = curGlyph.ligatureID;\n                        let lastNumComps = curGlyph.codePoints.length;\n                        let curComps = lastNumComps;\n                        let idx = this.glyphIterator.index + 1;\n                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                        // This allows GPOS to attach marks to the correct ligature components.\n                        for (let matchIndex of matched){\n                            // Don't assign new ligature components for mark ligatures (see above)\n                            if (isMarkLigature) idx = matchIndex;\n                            else while(idx < matchIndex){\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                                idx++;\n                            }\n                            lastLigID = this.glyphs[idx].ligatureID;\n                            lastNumComps = this.glyphs[idx].codePoints.length;\n                            curComps += lastNumComps;\n                            idx++; // skip base glyph\n                        }\n                        // Adjust ligature components for any marks following\n                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){\n                            if (this.glyphs[i1].ligatureID === lastLigID) {\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[i1].ligatureComponent = ligatureComponent;\n                            } else break;\n                        }\n                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);\n                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                        return true;\n                    }\n                    return false;\n                }\n            case 5:\n                return this.applyContext(table);\n            case 6:\n                return this.applyChainingContext(table);\n            case 7:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n        }\n    }\n}\nclass $f7a6899246d76dab$var$$79ea6270f0a90256$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    applyPositionValue(sequenceIndex, value) {\n        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n        if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n        if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n        if (value.xPlacement != null) position.xOffset += value.xPlacement;\n        if (value.yPlacement != null) position.yOffset += value.yPlacement;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n        }\n    // TODO: device tables\n    }\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            this.applyPositionValue(0, table.value);\n                            break;\n                        case 2:\n                            this.applyPositionValue(0, table.values.get(index));\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let nextGlyph = this.glyphIterator.peek();\n                    if (!nextGlyph) return false;\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            let set = table.pairSets.get(index);\n                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {\n                                this.applyPositionValue(0, pair.value1);\n                                this.applyPositionValue(1, pair.value2);\n                                return true;\n                            }\n                            return false;\n                        case 2:\n                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                            if (class1 === -1 || class2 === -1) return false;\n                            var pair1 = table.classRecords.get(class1).get(class2);\n                            this.applyPositionValue(0, pair1.value1);\n                            this.applyPositionValue(1, pair1.value2);\n                            return true;\n                    }\n                }\n            case 3:\n                {\n                    let nextIndex = this.glyphIterator.peekIndex();\n                    let nextGlyph = this.glyphs[nextIndex];\n                    if (!nextGlyph) return false;\n                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n                    if (!curRecord || !curRecord.exitAnchor) return false;\n                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n                    if (!nextRecord || !nextRecord.entryAnchor) return false;\n                    let entry = this.getAnchor(nextRecord.entryAnchor);\n                    let exit = this.getAnchor(curRecord.exitAnchor);\n                    let cur = this.positions[this.glyphIterator.index];\n                    let next = this.positions[nextIndex];\n                    let d;\n                    switch(this.direction){\n                        case \"ltr\":\n                            cur.xAdvance = exit.x + cur.xOffset;\n                            d = entry.x + next.xOffset;\n                            next.xAdvance -= d;\n                            next.xOffset -= d;\n                            break;\n                        case \"rtl\":\n                            d = exit.x + cur.xOffset;\n                            cur.xAdvance -= d;\n                            cur.xOffset -= d;\n                            next.xAdvance = entry.x + next.xOffset;\n                            break;\n                    }\n                    if (this.glyphIterator.flags.rightToLeft) {\n                        this.glyphIterator.cur.cursiveAttachment = nextIndex;\n                        cur.yOffset = entry.y - exit.y;\n                    } else {\n                        nextGlyph.cursiveAttachment = this.glyphIterator.index;\n                        cur.yOffset = exit.y - entry.y;\n                    }\n                    return true;\n                }\n            case 4:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n                    if (baseGlyphIndex < 0) return false;\n                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (baseIndex === -1) return false;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 5:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n                    if (baseGlyphIndex < 0) return false;\n                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (ligIndex === -1) return false;\n                    let ligAttach = table.ligatureArray[ligIndex];\n                    let markGlyph = this.glyphIterator.cur;\n                    let ligGlyph = this.glyphs[baseGlyphIndex];\n                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = ligAttach[compIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 6:\n                {\n                    let mark1Index = this.coverageIndex(table.mark1Coverage);\n                    if (mark1Index === -1) return false;\n                    // get the previous mark to attach to\n                    let prevIndex = this.glyphIterator.peekIndex(-1);\n                    let prev = this.glyphs[prevIndex];\n                    if (!prev || !prev.isMark) return false;\n                    let cur = this.glyphIterator.cur;\n                    // The following logic was borrowed from Harfbuzz\n                    let good = false;\n                    if (cur.ligatureID === prev.ligatureID) {\n                        if (!cur.ligatureID) good = true;\n                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n                    } else // itself is a ligature, in which case match.\n                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n                    if (!good) return false;\n                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n                    if (mark2Index === -1) return false;\n                    let markRecord = table.mark1Array[mark1Index];\n                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, prevIndex);\n                    return true;\n                }\n            case 7:\n                return this.applyContext(table);\n            case 8:\n                return this.applyChainingContext(table);\n            case 9:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`Unsupported GPOS table: ${lookupType}`);\n        }\n    }\n    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n        let baseCoords = this.getAnchor(baseAnchor);\n        let markCoords = this.getAnchor(markRecord.markAnchor);\n        let basePos = this.positions[baseGlyphIndex];\n        let markPos = this.positions[this.glyphIterator.index];\n        markPos.xOffset = baseCoords.x - markCoords.x;\n        markPos.yOffset = baseCoords.y - markCoords.y;\n        this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n    getAnchor(anchor) {\n        // TODO: contour point, device tables\n        let x = anchor.xCoordinate;\n        let y = anchor.yCoordinate;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        super.applyFeatures(userFeatures, glyphs, advances);\n        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);\n        this.fixMarkAttachment();\n    }\n    fixCursiveAttachment(i) {\n        let glyph = this.glyphs[i];\n        if (glyph.cursiveAttachment != null) {\n            let j = glyph.cursiveAttachment;\n            glyph.cursiveAttachment = null;\n            this.fixCursiveAttachment(j);\n            this.positions[i].yOffset += this.positions[j].yOffset;\n        }\n    }\n    fixMarkAttachment() {\n        for(let i = 0; i < this.glyphs.length; i++){\n            let glyph = this.glyphs[i];\n            if (glyph.markAttachment != null) {\n                let j = glyph.markAttachment;\n                this.positions[i].xOffset += this.positions[j].xOffset;\n                this.positions[i].yOffset += this.positions[j].yOffset;\n                if (this.direction === \"ltr\") for(let k = j; k < i; k++){\n                    this.positions[i].xOffset -= this.positions[k].xAdvance;\n                    this.positions[i].yOffset -= this.positions[k].yAdvance;\n                }\n                else for(let k1 = j + 1; k1 < i + 1; k1++){\n                    this.positions[i].xOffset += this.positions[k1].xAdvance;\n                    this.positions[i].yOffset += this.positions[k1].yAdvance;\n                }\n            }\n        }\n    }\n}\nclass $f7a6899246d76dab$var$$b2f26a32cb9ab2fa$export$2e2bcd8739ae039 {\n    setup(glyphRun) {\n        // Map glyphs to GlyphInfo objects so data can be passed between\n        // GSUB and GPOS without mutating the real (shared) Glyph objects.\n        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new $f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039(this.font, glyph.id, [\n                ...glyph.codePoints\n            ]));\n        // Select a script based on what is available in GSUB/GPOS.\n        let script = null;\n        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        // Choose a shaper based on the script, and setup a shaping plan.\n        // This determines which features to apply to which glyphs.\n        this.shaper = $f7a6899246d76dab$var$$fdb4471fc82bc2c2$export$7877a478dd30fd3d(script);\n        this.plan = new $f7a6899246d76dab$var$$d7e93cca3cf8ce8a$export$2e2bcd8739ae039(this.font, script, glyphRun.direction);\n        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n        // Assign chosen features to output glyph run\n        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;\n    }\n    substitute(glyphRun) {\n        if (this.GSUBProcessor) {\n            this.plan.process(this.GSUBProcessor, this.glyphInfos);\n            // Map glyph infos back to normal Glyph objects\n            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n        }\n    }\n    position(glyphRun) {\n        if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n        if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        // Reverse the glyphs and positions if the script is right-to-left\n        if (glyphRun.direction === \"rtl\") {\n            glyphRun.glyphs.reverse();\n            glyphRun.positions.reverse();\n        }\n        return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n    zeroMarkAdvances(positions) {\n        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    cleanup() {\n        this.glyphInfos = null;\n        this.plan = null;\n        this.shaper = null;\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.GSUBProcessor) {\n            this.GSUBProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GSUBProcessor.features));\n        }\n        if (this.GPOSProcessor) {\n            this.GPOSProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GPOSProcessor.features));\n        }\n        return features;\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphInfos = null;\n        this.plan = null;\n        this.GSUBProcessor = null;\n        this.GPOSProcessor = null;\n        this.fallbackPosition = true;\n        if (font.GSUB) this.GSUBProcessor = new $f7a6899246d76dab$var$$86bc1883359e094a$export$2e2bcd8739ae039(font, font.GSUB);\n        if (font.GPOS) this.GPOSProcessor = new $f7a6899246d76dab$var$$79ea6270f0a90256$export$2e2bcd8739ae039(font, font.GPOS);\n    }\n}\nclass $f7a6899246d76dab$var$$9d641258c9d7180d$export$2e2bcd8739ae039 {\n    layout(string, features, script, language, direction) {\n        // Make the features parameter optional\n        if (typeof features === \"string\") {\n            direction = language;\n            language = script;\n            script = features;\n            features = [];\n        }\n        // Map string to glyphs if needed\n        if (typeof string === \"string\") {\n            // Attempt to detect the script from the string if not provided.\n            if (script == null) script = $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$e5cb25e204fb8450(string);\n            var glyphs = this.font.glyphsForString(string);\n        } else {\n            // Attempt to detect the script from the glyph code points if not provided.\n            if (script == null) {\n                let codePoints = [];\n                for (let glyph of string)codePoints.push(...glyph.codePoints);\n                script = $f7a6899246d76dab$var$$e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints);\n            }\n            var glyphs = string;\n        }\n        let glyphRun = new $f7a6899246d76dab$var$$b19c79ec7a94fa39$export$2e2bcd8739ae039(glyphs, features, script, language, direction);\n        // Return early if there are no glyphs\n        if (glyphs.length === 0) {\n            glyphRun.positions = [];\n            return glyphRun;\n        }\n        // Setup the advanced layout engine\n        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n        // Substitute and position the glyphs\n        this.substitute(glyphRun);\n        this.position(glyphRun);\n        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n        // Let the layout engine clean up any state it might have\n        if (this.engine && this.engine.cleanup) this.engine.cleanup();\n        return glyphRun;\n    }\n    substitute(glyphRun) {\n        // Call the advanced layout engine to make substitutions\n        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n    position(glyphRun) {\n        // Get initial glyph positions\n        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new $f7a6899246d76dab$var$$9195cf1266c12ea5$export$2e2bcd8739ae039(glyph.advanceWidth));\n        let positioned = null;\n        // Call the advanced layout engine. Returns the features applied.\n        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n        // if there is no GPOS table, use unicode properties to position marks.\n        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new $f7a6899246d76dab$var$$a57a26817cd35108$export$2e2bcd8739ae039(this.font);\n            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n        }\n        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n            if (!this.kernProcessor) this.kernProcessor = new $f7a6899246d76dab$var$$4646d52c2a559cdb$export$2e2bcd8739ae039(this.font);\n            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n            glyphRun.features.kern = true;\n        }\n    }\n    hideDefaultIgnorables(glyphs, positions) {\n        let space = this.font.glyphForCodePoint(0x20);\n        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n            glyphs[i] = space;\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    isDefaultIgnorable(ch) {\n        // From DerivedCoreProperties.txt in the Unicode database,\n        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n        // Harfbuzz and Uniscribe do.\n        let plane = ch >> 16;\n        if (plane === 0) switch(ch >> 8){\n            case 0x00:\n                return ch === 0x00AD;\n            case 0x03:\n                return ch === 0x034F;\n            case 0x06:\n                return ch === 0x061C;\n            case 0x17:\n                return 0x17B4 <= ch && ch <= 0x17B5;\n            case 0x18:\n                return 0x180B <= ch && ch <= 0x180E;\n            case 0x20:\n                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n            case 0xFE:\n                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n            case 0xFF:\n                return 0xFFF0 <= ch && ch <= 0xFFF8;\n            default:\n                return false;\n        }\n        else switch(plane){\n            case 0x01:\n                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n            case 0x0E:\n                return 0xE0000 <= ch && ch <= 0xE0FFF;\n            default:\n                return false;\n        }\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n        if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n        return features;\n    }\n    stringsForGlyph(gid) {\n        let result = new Set;\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));\n        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);\n        return Array.from(result);\n    }\n    constructor(font){\n        this.font = font;\n        this.unicodeLayoutEngine = null;\n        this.kernProcessor = null;\n        // Choose an advanced layout engine. We try the AAT morx table first since more\n        // scripts are currently supported because the shaping logic is built into the font.\n        if (this.font.morx) this.engine = new $f7a6899246d76dab$var$$860fcbd64bc12fbc$export$2e2bcd8739ae039(this.font);\n        else if (this.font.GSUB || this.font.GPOS) this.engine = new $f7a6899246d76dab$var$$b2f26a32cb9ab2fa$export$2e2bcd8739ae039(this.font);\n    }\n}\nconst $f7a6899246d76dab$var$$67ee4828d81adb28$var$SVG_COMMANDS = {\n    moveTo: \"M\",\n    lineTo: \"L\",\n    quadraticCurveTo: \"Q\",\n    bezierCurveTo: \"C\",\n    closePath: \"Z\"\n};\nclass $f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039 {\n    /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */ toFunction() {\n        return (ctx)=>{\n            this.commands.forEach((c)=>{\n                return ctx[c.command].apply(ctx, c.args);\n            });\n        };\n    }\n    /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */ toSVG() {\n        let cmds = this.commands.map((c)=>{\n            let args = c.args.map((arg)=>Math.round(arg * 100) / 100);\n            return `${$f7a6899246d76dab$var$$67ee4828d81adb28$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n        });\n        return cmds.join(\"\");\n    }\n    /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */ get cbox() {\n        if (!this._cbox) {\n            let cbox = new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039;\n            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);\n            this._cbox = Object.freeze(cbox);\n        }\n        return this._cbox;\n    }\n    /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */ get bbox() {\n        if (this._bbox) return this._bbox;\n        let bbox = new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039;\n        let cx = 0, cy = 0;\n        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        for (let c of this.commands)switch(c.command){\n            case \"moveTo\":\n            case \"lineTo\":\n                let [x, y] = c.args;\n                bbox.addPoint(x, y);\n                cx = x;\n                cy = y;\n                break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n                if (c.command === \"quadraticCurveTo\") {\n                    // http://fontforge.org/bezier.html\n                    var [qp1x, qp1y, p3x, p3y] = c.args;\n                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                    var cp1y = cy + 2 / 3 * (qp1y - cy);\n                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                bbox.addPoint(p3x, p3y);\n                var p0 = [\n                    cx,\n                    cy\n                ];\n                var p1 = [\n                    cp1x,\n                    cp1y\n                ];\n                var p2 = [\n                    cp2x,\n                    cp2y\n                ];\n                var p3 = [\n                    p3x,\n                    p3y\n                ];\n                for(var i = 0; i <= 1; i++){\n                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                    c = 3 * p1[i] - 3 * p0[i];\n                    if (a === 0) {\n                        if (b === 0) continue;\n                        let t = -c / b;\n                        if (0 < t && t < 1) {\n                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);\n                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n                        }\n                        continue;\n                    }\n                    let b2ac = Math.pow(b, 2) - 4 * c * a;\n                    if (b2ac < 0) continue;\n                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t1 && t1 < 1) {\n                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                    }\n                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t2 && t2 < 1) {\n                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                    }\n                }\n                cx = p3x;\n                cy = p3y;\n                break;\n        }\n        return this._bbox = Object.freeze(bbox);\n    }\n    /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */ mapPoints(fn) {\n        let path = new $f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039;\n        for (let c of this.commands){\n            let args = [];\n            for(let i = 0; i < c.args.length; i += 2){\n                let [x, y] = fn(c.args[i], c.args[i + 1]);\n                args.push(x, y);\n            }\n            path[c.command](...args);\n        }\n        return path;\n    }\n    /**\n   * Transforms the path by the given matrix.\n   */ transform(m0, m1, m2, m3, m4, m5) {\n        return this.mapPoints((x, y)=>{\n            const tx = m0 * x + m2 * y + m4;\n            const ty = m1 * x + m3 * y + m5;\n            return [\n                tx,\n                ty\n            ];\n        });\n    }\n    /**\n   * Translates the path by the given offset.\n   */ translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n   * Rotates the path by the given angle (in radians).\n   */ rotate(angle) {\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n   * Scales the path.\n   */ scale(scaleX, scaleY = scaleX) {\n        return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n    constructor(){\n        this.commands = [];\n        this._bbox = null;\n        this._cbox = null;\n    }\n}\nfor (let command of [\n    \"moveTo\",\n    \"lineTo\",\n    \"quadraticCurveTo\",\n    \"bezierCurveTo\",\n    \"closePath\"\n])$f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n        command: command,\n        args: args\n    });\n    return this;\n};\nvar $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \".null\",\n    \"nonmarkingreturn\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quotesingle\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"grave\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"Adieresis\",\n    \"Aring\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ntilde\",\n    \"Odieresis\",\n    \"Udieresis\",\n    \"aacute\",\n    \"agrave\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"atilde\",\n    \"aring\",\n    \"ccedilla\",\n    \"eacute\",\n    \"egrave\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"iacute\",\n    \"igrave\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"ntilde\",\n    \"oacute\",\n    \"ograve\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"otilde\",\n    \"uacute\",\n    \"ugrave\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"dagger\",\n    \"degree\",\n    \"cent\",\n    \"sterling\",\n    \"section\",\n    \"bullet\",\n    \"paragraph\",\n    \"germandbls\",\n    \"registered\",\n    \"copyright\",\n    \"trademark\",\n    \"acute\",\n    \"dieresis\",\n    \"notequal\",\n    \"AE\",\n    \"Oslash\",\n    \"infinity\",\n    \"plusminus\",\n    \"lessequal\",\n    \"greaterequal\",\n    \"yen\",\n    \"mu\",\n    \"partialdiff\",\n    \"summation\",\n    \"product\",\n    \"pi\",\n    \"integral\",\n    \"ordfeminine\",\n    \"ordmasculine\",\n    \"Omega\",\n    \"ae\",\n    \"oslash\",\n    \"questiondown\",\n    \"exclamdown\",\n    \"logicalnot\",\n    \"radical\",\n    \"florin\",\n    \"approxequal\",\n    \"Delta\",\n    \"guillemotleft\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"nonbreakingspace\",\n    \"Agrave\",\n    \"Atilde\",\n    \"Otilde\",\n    \"OE\",\n    \"oe\",\n    \"endash\",\n    \"emdash\",\n    \"quotedblleft\",\n    \"quotedblright\",\n    \"quoteleft\",\n    \"quoteright\",\n    \"divide\",\n    \"lozenge\",\n    \"ydieresis\",\n    \"Ydieresis\",\n    \"fraction\",\n    \"currency\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"perthousand\",\n    \"Acircumflex\",\n    \"Ecircumflex\",\n    \"Aacute\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"apple\",\n    \"Ograve\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Ugrave\",\n    \"dotlessi\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"Lslash\",\n    \"lslash\",\n    \"Scaron\",\n    \"scaron\",\n    \"Zcaron\",\n    \"zcaron\",\n    \"brokenbar\",\n    \"Eth\",\n    \"eth\",\n    \"Yacute\",\n    \"yacute\",\n    \"Thorn\",\n    \"thorn\",\n    \"minus\",\n    \"multiply\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"onehalf\",\n    \"onequarter\",\n    \"threequarters\",\n    \"franc\",\n    \"Gbreve\",\n    \"gbreve\",\n    \"Idotaccent\",\n    \"Scedilla\",\n    \"scedilla\",\n    \"Cacute\",\n    \"cacute\",\n    \"Ccaron\",\n    \"ccaron\",\n    \"dcroat\"\n];\nclass $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getPath() {\n        return new $f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039();\n    }\n    _getCBox() {\n        return this.path.cbox;\n    }\n    _getBBox() {\n        return this.path.bbox;\n    }\n    _getTableMetrics(table) {\n        if (this.id < table.metrics.length) return table.metrics.get(this.id);\n        let metric = table.metrics.get(table.metrics.length - 1);\n        let res = {\n            advance: metric ? metric.advance : 0,\n            bearing: table.bearings.get(this.id - table.metrics.length) || 0\n        };\n        return res;\n    }\n    _getMetrics(cbox) {\n        if (this._metrics) return this._metrics;\n        let { advance: advanceWidth, bearing: leftBearing } = this._getTableMetrics(this._font.hmtx);\n        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n        if (this._font.vmtx) var { advance: advanceHeight, bearing: topBearing } = this._getTableMetrics(this._font.vmtx);\n        else {\n            let os2;\n            if (typeof cbox === \"undefined\" || cbox === null) ({ cbox: cbox } = this);\n            if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n                var topBearing = os2.typoAscender - cbox.maxY;\n            } else {\n                let { hhea: hhea } = this._font;\n                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n                var topBearing = hhea.ascent - cbox.maxY;\n            }\n        }\n        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n        return this._metrics = {\n            advanceWidth: advanceWidth,\n            advanceHeight: advanceHeight,\n            leftBearing: leftBearing,\n            topBearing: topBearing\n        };\n    }\n    /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */ get cbox() {\n        return this._getCBox();\n    }\n    /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */ get bbox() {\n        return this._getBBox();\n    }\n    /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */ get path() {\n        // Cache the path so we only decode it once\n        // Decoding is actually performed by subclasses\n        return this._getPath();\n    }\n    /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */ getScaledPath(size) {\n        let scale = 1 / this._font.unitsPerEm * size;\n        return this.path.scale(scale);\n    }\n    /**\n   * The glyph's advance width.\n   * @type {number}\n   */ get advanceWidth() {\n        return this._getMetrics().advanceWidth;\n    }\n    /**\n   * The glyph's advance height.\n   * @type {number}\n   */ get advanceHeight() {\n        return this._getMetrics().advanceHeight;\n    }\n    get ligatureCaretPositions() {}\n    _getName() {\n        let { post: post } = this._font;\n        if (!post) return null;\n        switch(post.version){\n            case 1:\n                return $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039[this.id];\n            case 2:\n                let id = post.glyphNameIndex[this.id];\n                if (id < $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039.length) return $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039[id];\n                return post.names[id - $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039.length];\n            case 2.5:\n                return $f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039[this.id + post.offsets[this.id]];\n            case 4:\n                return String.fromCharCode(post.map[this.id]);\n        }\n    }\n    /**\n   * The glyph's name\n   * @type {string}\n   */ get name() {\n        return this._getName();\n    }\n    /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */ render(ctx, size) {\n        ctx.save();\n        let scale = 1 / this._font.head.unitsPerEm * size;\n        ctx.scale(scale, scale);\n        let fn = this.path.toFunction();\n        fn(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n    constructor(id, codePoints, font){\n        /**\n     * The glyph id in the font\n     * @type {number}\n     */ this.id = id;\n        /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */ this.codePoints = codePoints;\n        this._font = font;\n        // TODO: get this info from GDEF if available\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every($38e929d1b08c92d4$export$e33ad6871e762338);\n        this.isLigature = this.codePoints.length > 1;\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"path\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"name\", null);\n// The header for both simple and composite glyphs\nlet $f7a6899246d76dab$var$$f680320fa07ef53d$var$GlyfHeader = new $0b2a422743092498$export$eabc71f011df675a({\n    numberOfContours: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6\n});\n// Flags for simple glyphs\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$ON_CURVE = 1;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$X_SHORT_VECTOR = 2;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$Y_SHORT_VECTOR = 4;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$REPEAT = 8;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$SAME_X = 16;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$SAME_Y = 32;\n// Flags for composite glyphs\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$ARGS_ARE_XY_VALUES = 2;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$ROUND_XY_TO_GRID = 4;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_A_SCALE = 8;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$MORE_COMPONENTS = 32;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$USE_MY_METRICS = 512;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$OVERLAP_COMPOUND = 1024;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $f7a6899246d76dab$var$$f680320fa07ef53d$var$UNSCALED_COMPONENT_OFFSET = 4096;\nclass $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a {\n    copy() {\n        return new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n    constructor(onCurve, endContour, x = 0, y = 0){\n        this.onCurve = onCurve;\n        this.endContour = endContour;\n        this.x = x;\n        this.y = y;\n    }\n}\n// Represents a component in a composite glyph\nclass $f7a6899246d76dab$var$$f680320fa07ef53d$var$Component {\n    constructor(glyphID, dx, dy){\n        this.glyphID = glyphID;\n        this.dx = dx;\n        this.dy = dy;\n        this.pos = 0;\n        this.scaleX = this.scaleY = 1;\n        this.scale01 = this.scale10 = 0;\n    }\n}\nclass $f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    // Parses just the glyph header and returns the bounding box\n    _getCBox(internal) {\n        // We need to decode the glyph if variation processing is requested,\n        // so it's easier just to recompute the path's cbox after decoding.\n        if (this._font._variationProcessor && !internal) return this.path.cbox;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += this._font.loca.offsets[this.id];\n        let glyph = $f7a6899246d76dab$var$$f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        let cbox = new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n        return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n    _parseGlyphCoord(stream, prev, short, same) {\n        if (short) {\n            var val = stream.readUInt8();\n            if (!same) val = -val;\n            val += prev;\n        } else if (same) var val = prev;\n        else var val = prev + stream.readInt16BE();\n        return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n    _decode() {\n        let glyfPos = this._font.loca.offsets[this.id];\n        let nextPos = this._font.loca.offsets[this.id + 1];\n        // Nothing to do if there is no data for this glyph\n        if (glyfPos === nextPos) return null;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += glyfPos;\n        let startPos = stream.pos;\n        let glyph = $f7a6899246d76dab$var$$f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);\n        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n        return glyph;\n    }\n    _decodeSimple(glyph, stream) {\n        // this is a simple glyph\n        glyph.points = [];\n        let endPtsOfContours = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, glyph.numberOfContours).decode(stream);\n        glyph.instructions = new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, $83cea26e2678b6a9$export$56bd24b5a3ee8456).decode(stream);\n        let flags = [];\n        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n        while(flags.length < numCoords){\n            var flag = stream.readUInt8();\n            flags.push(flag);\n            // check for repeat flag\n            if (flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$REPEAT) {\n                let count = stream.readUInt8();\n                for(let j = 0; j < count; j++)flags.push(flag);\n            }\n        }\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            let point = new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(!!(flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n            glyph.points.push(point);\n        }\n        let px = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$X_SHORT_VECTOR, flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$SAME_X);\n        }\n        let py = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$Y_SHORT_VECTOR, flag & $f7a6899246d76dab$var$$f680320fa07ef53d$var$SAME_Y);\n        }\n        if (this._font._variationProcessor) {\n            let points = glyph.points.slice();\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.slice(-4);\n        }\n        return;\n    }\n    _decodeComposite(glyph, stream, offset = 0) {\n        // this is a composite glyph\n        glyph.components = [];\n        let haveInstructions = false;\n        let flags = $f7a6899246d76dab$var$$f680320fa07ef53d$var$MORE_COMPONENTS;\n        while(flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$MORE_COMPONENTS){\n            flags = stream.readUInt16BE();\n            let gPos = stream.pos - offset;\n            let glyphID = stream.readUInt16BE();\n            if (!haveInstructions) haveInstructions = (flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS) !== 0;\n            if (flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS) {\n                var dx = stream.readInt16BE();\n                var dy = stream.readInt16BE();\n            } else {\n                var dx = stream.readInt8();\n                var dy = stream.readInt8();\n            }\n            var component = new $f7a6899246d76dab$var$$f680320fa07ef53d$var$Component(glyphID, dx, dy);\n            component.pos = gPos;\n            if (flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_A_SCALE) component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            else if (flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            } else if (flags & $f7a6899246d76dab$var$$f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            }\n            glyph.components.push(component);\n        }\n        if (this._font._variationProcessor) {\n            let points = [];\n            for(let j = 0; j < glyph.components.length; j++){\n                var component = glyph.components[j];\n                points.push(new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(true, true, component.dx, component.dy));\n            }\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.splice(-4, 4);\n            for(let i = 0; i < points.length; i++){\n                let point = points[i];\n                glyph.components[i].dx = point.x;\n                glyph.components[i].dy = point.y;\n            }\n        }\n        return haveInstructions;\n    }\n    _getPhantomPoints(glyph) {\n        let cbox = this._getCBox(true);\n        if (this._metrics == null) this._metrics = $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039.prototype._getMetrics.call(this, cbox);\n        let { advanceWidth: advanceWidth, advanceHeight: advanceHeight, leftBearing: leftBearing, topBearing: topBearing } = this._metrics;\n        return [\n            new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),\n            new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n            new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),\n            new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n        ];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n    _getContours() {\n        let glyph = this._decode();\n        if (!glyph) return [];\n        let points = [];\n        if (glyph.numberOfContours < 0) for (let component of glyph.components){\n            let contours = this._font.getGlyph(component.glyphID)._getContours();\n            for(let i = 0; i < contours.length; i++){\n                let contour = contours[i];\n                for(let j = 0; j < contour.length; j++){\n                    let point = contour[j];\n                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n                    points.push(new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n                }\n            }\n        }\n        else points = glyph.points || [];\n        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n        }\n        let contours = [];\n        let cur = [];\n        for(let k = 0; k < points.length; k++){\n            var point = points[k];\n            cur.push(point);\n            if (point.endContour) {\n                contours.push(cur);\n                cur = [];\n            }\n        }\n        return contours;\n    }\n    _getMetrics() {\n        if (this._metrics) return this._metrics;\n        let cbox = this._getCBox(true);\n        super._getMetrics(cbox);\n        if (this._font._variationProcessor && !this._font.HVAR) this.path;\n        return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n    _getPath() {\n        let contours = this._getContours();\n        let path = new $f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039;\n        for(let i = 0; i < contours.length; i++){\n            let contour = contours[i];\n            let firstPt = contour[0];\n            let lastPt = contour[contour.length - 1];\n            let start = 0;\n            if (firstPt.onCurve) {\n                // The first point will be consumed by the moveTo command, so skip in the loop\n                var curvePt = null;\n                start = 1;\n            } else {\n                if (lastPt.onCurve) firstPt = lastPt;\n                else firstPt = new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n                var curvePt = firstPt;\n            }\n            path.moveTo(firstPt.x, firstPt.y);\n            for(let j = start; j < contour.length; j++){\n                let pt = contour[j];\n                let prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);\n                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;\n                else if (!prevPt.onCurve && !pt.onCurve) {\n                    let midX = (prevPt.x + pt.x) / 2;\n                    let midY = (prevPt.y + pt.y) / 2;\n                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n                    var curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    var curvePt = null;\n                } else throw new Error(\"Unknown TTF path state\");\n            }\n            // Connect the first and last points\n            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            path.closePath();\n        }\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"TTF\");\n    }\n}\nclass $f7a6899246d76dab$var$$7ee0705195f3b047$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getName() {\n        if (this._font.CFF2) return super._getName();\n        return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n    bias(s) {\n        if (s.length < 1240) return 107;\n        else if (s.length < 33900) return 1131;\n        else return 32768;\n    }\n    _getPath() {\n        let cff = this._font.CFF2 || this._font[\"CFF \"];\n        let { stream: stream } = cff;\n        let str = cff.topDict.CharStrings[this.id];\n        let end = str.offset + str.length;\n        stream.pos = str.offset;\n        let path = new $f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039;\n        let stack = [];\n        let trans = [];\n        let width = null;\n        let nStems = 0;\n        let x1 = 0, y1 = 0;\n        let usedGsubrs;\n        let usedSubrs;\n        let open = false;\n        this._usedGsubrs = usedGsubrs = {};\n        this._usedSubrs = usedSubrs = {};\n        let gsubrs = cff.globalSubrIndex || [];\n        let gsubrsBias = this.bias(gsubrs);\n        let privateDict = cff.privateDictForGlyph(this.id) || {};\n        let subrs = privateDict.Subrs || [];\n        let subrsBias = this.bias(subrs);\n        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n        let vsindex = privateDict.vsindex;\n        let variationProcessor = this._font._variationProcessor;\n        function checkWidth() {\n            if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n        }\n        function parseStems() {\n            if (stack.length % 2 !== 0) checkWidth();\n            nStems += stack.length >> 1;\n            return stack.length = 0;\n        }\n        function moveTo(x, y) {\n            if (open) path.closePath();\n            path.moveTo(x, y);\n            open = true;\n        }\n        let parse = function() {\n            while(stream.pos < end){\n                let op = stream.readUInt8();\n                if (op < 32) {\n                    let index, subr, phase;\n                    switch(op){\n                        case 1:\n                        case 3:\n                        case 18:\n                        case 23:\n                            parseStems();\n                            break;\n                        case 4:\n                            if (stack.length > 1) checkWidth();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 5:\n                            while(stack.length >= 2){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            break;\n                        case 6:\n                        case 7:\n                            phase = op === 6;\n                            while(stack.length >= 1){\n                                if (phase) x1 += stack.shift();\n                                else y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 8:\n                            while(stack.length > 0){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 10:\n                            index = stack.pop() + subrsBias;\n                            subr = subrs[index];\n                            if (subr) {\n                                usedSubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 11:\n                            if (cff.version >= 2) break;\n                            return;\n                        case 14:\n                            if (cff.version >= 2) break;\n                            if (stack.length > 0) checkWidth();\n                            if (open) {\n                                path.closePath();\n                                open = false;\n                            }\n                            break;\n                        case 15:\n                            if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                            vsindex = stack.pop();\n                            break;\n                        case 16:\n                            {\n                                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                                let numBlends = stack.pop();\n                                let numOperands = numBlends * blendVector.length;\n                                let delta = stack.length - numOperands;\n                                let base = delta - numBlends;\n                                for(let i = 0; i < numBlends; i++){\n                                    let sum = stack[base + i];\n                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];\n                                    stack[base + i] = sum;\n                                }\n                                while(numOperands--)stack.pop();\n                                break;\n                            }\n                        case 19:\n                        case 20:\n                            parseStems();\n                            stream.pos += nStems + 7 >> 3;\n                            break;\n                        case 21:\n                            if (stack.length > 2) checkWidth();\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 22:\n                            if (stack.length > 1) checkWidth();\n                            x1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 24:\n                            while(stack.length >= 8){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            path.lineTo(x1, y1);\n                            break;\n                        case 25:\n                            while(stack.length >= 8){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            var c1x = x1 + stack.shift();\n                            var c1y = y1 + stack.shift();\n                            var c2x = c1x + stack.shift();\n                            var c2y = c1y + stack.shift();\n                            x1 = c2x + stack.shift();\n                            y1 = c2y + stack.shift();\n                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            break;\n                        case 26:\n                            if (stack.length % 2) x1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1;\n                                c1y = y1 + stack.shift();\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x;\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 27:\n                            if (stack.length % 2) y1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1 + stack.shift();\n                                c1y = y1;\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y;\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 28:\n                            stack.push(stream.readInt16BE());\n                            break;\n                        case 29:\n                            index = stack.pop() + gsubrsBias;\n                            subr = gsubrs[index];\n                            if (subr) {\n                                usedGsubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 30:\n                        case 31:\n                            phase = op === 31;\n                            while(stack.length >= 4){\n                                if (phase) {\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    y1 = c2y + stack.shift();\n                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                                } else {\n                                    c1x = x1;\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    x1 = c2x + stack.shift();\n                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                                }\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 12:\n                            op = stream.readUInt8();\n                            switch(op){\n                                case 3:\n                                    let a = stack.pop();\n                                    let b = stack.pop();\n                                    stack.push(a && b ? 1 : 0);\n                                    break;\n                                case 4:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a || b ? 1 : 0);\n                                    break;\n                                case 5:\n                                    a = stack.pop();\n                                    stack.push(a ? 0 : 1);\n                                    break;\n                                case 9:\n                                    a = stack.pop();\n                                    stack.push(Math.abs(a));\n                                    break;\n                                case 10:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a + b);\n                                    break;\n                                case 11:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a - b);\n                                    break;\n                                case 12:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a / b);\n                                    break;\n                                case 14:\n                                    a = stack.pop();\n                                    stack.push(-a);\n                                    break;\n                                case 15:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a === b ? 1 : 0);\n                                    break;\n                                case 18:\n                                    stack.pop();\n                                    break;\n                                case 20:\n                                    let val = stack.pop();\n                                    let idx = stack.pop();\n                                    trans[idx] = val;\n                                    break;\n                                case 21:\n                                    idx = stack.pop();\n                                    stack.push(trans[idx] || 0);\n                                    break;\n                                case 22:\n                                    let s1 = stack.pop();\n                                    let s2 = stack.pop();\n                                    let v1 = stack.pop();\n                                    let v2 = stack.pop();\n                                    stack.push(v1 <= v2 ? s1 : s2);\n                                    break;\n                                case 23:\n                                    stack.push(Math.random());\n                                    break;\n                                case 24:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a * b);\n                                    break;\n                                case 26:\n                                    a = stack.pop();\n                                    stack.push(Math.sqrt(a));\n                                    break;\n                                case 27:\n                                    a = stack.pop();\n                                    stack.push(a, a);\n                                    break;\n                                case 28:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(b, a);\n                                    break;\n                                case 29:\n                                    idx = stack.pop();\n                                    if (idx < 0) idx = 0;\n                                    else if (idx > stack.length - 1) idx = stack.length - 1;\n                                    stack.push(stack[idx]);\n                                    break;\n                                case 30:\n                                    let n = stack.pop();\n                                    let j = stack.pop();\n                                    if (j >= 0) while(j > 0){\n                                        var t = stack[n - 1];\n                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];\n                                        stack[0] = t;\n                                        j--;\n                                    }\n                                    else while(j < 0){\n                                        var t = stack[0];\n                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];\n                                        stack[n - 1] = t;\n                                        j++;\n                                    }\n                                    break;\n                                case 34:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    let c3x = c2x + stack.shift();\n                                    let c3y = c2y;\n                                    let c4x = c3x + stack.shift();\n                                    let c4y = c3y;\n                                    let c5x = c4x + stack.shift();\n                                    let c5y = c4y;\n                                    let c6x = c5x + stack.shift();\n                                    let c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 35:\n                                    let pts = [];\n                                    for(let i = 0; i <= 5; i++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    stack.shift(); // fd\n                                    break;\n                                case 36:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    c3x = c2x + stack.shift();\n                                    c3y = c2y;\n                                    c4x = c3x + stack.shift();\n                                    c4y = c3y;\n                                    c5x = c4x + stack.shift();\n                                    c5y = c4y + stack.shift();\n                                    c6x = c5x + stack.shift();\n                                    c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 37:\n                                    let startx = x1;\n                                    let starty = y1;\n                                    pts = [];\n                                    for(let i1 = 0; i1 <= 4; i1++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                                        x1 += stack.shift();\n                                        y1 = starty;\n                                    } else {\n                                        x1 = startx;\n                                        y1 += stack.shift();\n                                    }\n                                    pts.push(x1, y1);\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    break;\n                                default:\n                                    throw new Error(`Unknown op: 12 ${op}`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown op: ${op}`);\n                    }\n                } else if (op < 247) stack.push(op - 139);\n                else if (op < 251) {\n                    var b1 = stream.readUInt8();\n                    stack.push((op - 247) * 256 + b1 + 108);\n                } else if (op < 255) {\n                    var b1 = stream.readUInt8();\n                    stack.push(-(op - 251) * 256 - b1 - 108);\n                } else stack.push(stream.readInt32BE() / 65536);\n            }\n        };\n        parse();\n        if (open) path.closePath();\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"CFF\");\n    }\n}\nlet $f7a6899246d76dab$var$$55855d6d316b015e$var$SBIXImage = new $0b2a422743092498$export$eabc71f011df675a({\n    originX: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    originY: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    type: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    data: new $ce1900e78ba28923$export$7d22a0eea6656474((t)=>t.parent.buflen - t._currentOffset)\n});\nclass $f7a6899246d76dab$var$$55855d6d316b015e$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039 {\n    /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */ getImageForSize(size) {\n        for(let i = 0; i < this._font.sbix.imageTables.length; i++){\n            var table = this._font.sbix.imageTables[i];\n            if (table.ppem >= size) break;\n        }\n        let offsets = table.imageOffsets;\n        let start = offsets[this.id];\n        let end = offsets[this.id + 1];\n        if (start === end) return null;\n        this._font.stream.pos = start;\n        return $f7a6899246d76dab$var$$55855d6d316b015e$var$SBIXImage.decode(this._font.stream, {\n            buflen: end - start\n        });\n    }\n    render(ctx, size) {\n        let img = this.getImageForSize(size);\n        if (img != null) {\n            let scale = size / this._font.unitsPerEm;\n            ctx.image(img.data, {\n                height: size,\n                x: img.originX,\n                y: (this.bbox.minY - img.originY) * scale\n            });\n        }\n        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"SBIX\");\n    }\n}\nclass $f7a6899246d76dab$var$$42d9dbd2de9ee2d8$var$COLRLayer {\n    constructor(glyph, color){\n        this.glyph = glyph;\n        this.color = color;\n    }\n}\nclass $f7a6899246d76dab$var$$42d9dbd2de9ee2d8$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getBBox() {\n        let bbox = new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039;\n        for(let i = 0; i < this.layers.length; i++){\n            let layer = this.layers[i];\n            let b = layer.glyph.bbox;\n            bbox.addPoint(b.minX, b.minY);\n            bbox.addPoint(b.maxX, b.maxY);\n        }\n        return bbox;\n    }\n    /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */ get layers() {\n        let cpal = this._font.CPAL;\n        let colr = this._font.COLR;\n        let low = 0;\n        let high = colr.baseGlyphRecord.length - 1;\n        while(low <= high){\n            let mid = low + high >> 1;\n            var rec = colr.baseGlyphRecord[mid];\n            if (this.id < rec.gid) high = mid - 1;\n            else if (this.id > rec.gid) low = mid + 1;\n            else {\n                var baseLayer = rec;\n                break;\n            }\n        }\n        // if base glyph not found in COLR table,\n        // default to normal glyph from glyf or CFF\n        if (baseLayer == null) {\n            var g = this._font._getBaseGlyph(this.id);\n            var color = {\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 255\n            };\n            return [\n                new $f7a6899246d76dab$var$$42d9dbd2de9ee2d8$var$COLRLayer(g, color)\n            ];\n        }\n        // otherwise, return an array of all the layers\n        let layers = [];\n        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){\n            var rec = colr.layerRecords[i];\n            var color = cpal.colorRecords[rec.paletteIndex];\n            var g = this._font._getBaseGlyph(rec.gid);\n            layers.push(new $f7a6899246d76dab$var$$42d9dbd2de9ee2d8$var$COLRLayer(g, color));\n        }\n        return layers;\n    }\n    render(ctx, size) {\n        for (let { glyph: glyph, color: color } of this.layers){\n            ctx.fillColor([\n                color.red,\n                color.green,\n                color.blue\n            ], color.alpha / 255 * 100);\n            glyph.render(ctx, size);\n        }\n        return;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"COLR\");\n    }\n}\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINTS_ARE_WORDS = 0x80;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTAS_ARE_ZERO = 0x80;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTAS_ARE_WORDS = 0x40;\nconst $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK = 0x3f;\nclass $f7a6899246d76dab$var$$7586bb9ea67c41d8$export$2e2bcd8739ae039 {\n    normalizeCoords(coords) {\n        // the default mapping is linear along each axis, in two segments:\n        // from the minValue to defaultValue, and from defaultValue to maxValue.\n        let normalized = [];\n        for(var i = 0; i < this.font.fvar.axis.length; i++){\n            let axis = this.font.fvar.axis[i];\n            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n        }\n        // if there is an avar table, the normalized value is calculated\n        // by interpolating between the two nearest mapped values.\n        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){\n            let segment = this.font.avar.segment[i];\n            for(let j = 0; j < segment.correspondence.length; j++){\n                let pair = segment.correspondence[j];\n                if (j >= 1 && normalized[i] < pair.fromCoord) {\n                    let prev = segment.correspondence[j - 1];\n                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n                    break;\n                }\n            }\n        }\n        return normalized;\n    }\n    transformPoints(gid, glyphPoints) {\n        if (!this.font.fvar || !this.font.gvar) return;\n        let { gvar: gvar } = this.font;\n        if (gid >= gvar.glyphCount) return;\n        let offset = gvar.offsets[gid];\n        if (offset === gvar.offsets[gid + 1]) return;\n        // Read the gvar data for this glyph\n        let { stream: stream } = this.font;\n        stream.pos = offset;\n        if (stream.pos >= stream.length) return;\n        let tupleCount = stream.readUInt16BE();\n        let offsetToData = offset + stream.readUInt16BE();\n        if (tupleCount & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS) {\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            var sharedPoints = this.decodePoints();\n            offsetToData = stream.pos;\n            stream.pos = here;\n        }\n        let origPoints = glyphPoints.map((pt)=>pt.copy());\n        tupleCount &= $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLE_COUNT_MASK;\n        for(let i = 0; i < tupleCount; i++){\n            let tupleDataSize = stream.readUInt16BE();\n            let tupleIndex = stream.readUInt16BE();\n            if (tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD) {\n                var tupleCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);\n            } else {\n                if ((tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n                var tupleCoords = gvar.globalCoords[tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$TUPLE_INDEX_MASK];\n            }\n            if (tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) {\n                var startCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);\n                var endCoords = [];\n                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);\n            }\n            // Get the factor at which to apply this tuple\n            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n            if (factor === 0) {\n                offsetToData += tupleDataSize;\n                continue;\n            }\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            if (tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();\n            else var points = sharedPoints;\n            // points.length = 0 means there are deltas for all points\n            let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n            let xDeltas = this.decodeDeltas(nPoints);\n            let yDeltas = this.decodeDeltas(nPoints);\n            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){\n                var point = glyphPoints[i];\n                point.x += Math.round(xDeltas[i] * factor);\n                point.y += Math.round(yDeltas[i] * factor);\n            }\n            else {\n                let outPoints = origPoints.map((pt)=>pt.copy());\n                let hasDelta = glyphPoints.map(()=>false);\n                for(let i = 0; i < points.length; i++){\n                    let idx = points[i];\n                    if (idx < glyphPoints.length) {\n                        let point = outPoints[idx];\n                        hasDelta[idx] = true;\n                        point.x += Math.round(xDeltas[i] * factor);\n                        point.y += Math.round(yDeltas[i] * factor);\n                    }\n                }\n                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n                for(let i1 = 0; i1 < glyphPoints.length; i1++){\n                    let deltaX = outPoints[i1].x - origPoints[i1].x;\n                    let deltaY = outPoints[i1].y - origPoints[i1].y;\n                    glyphPoints[i1].x += deltaX;\n                    glyphPoints[i1].y += deltaY;\n                }\n            }\n            offsetToData += tupleDataSize;\n            stream.pos = here;\n        }\n    }\n    decodePoints() {\n        let stream = this.font.stream;\n        let count = stream.readUInt8();\n        if (count & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINTS_ARE_WORDS) count = (count & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n        let points = new Uint16Array(count);\n        let i = 0;\n        let point = 0;\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) + 1;\n            let fn = run & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n            for(let j = 0; j < runCount && i < count; j++){\n                point += fn.call(stream);\n                points[i++] = point;\n            }\n        }\n        return points;\n    }\n    decodeDeltas(count) {\n        let stream = this.font.stream;\n        let i = 0;\n        let deltas = new Int16Array(count);\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK) + 1;\n            if (run & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTAS_ARE_ZERO) i += runCount;\n            else {\n                let fn = run & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);\n            }\n        }\n        return deltas;\n    }\n    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n        let normalized = this.normalizedCoords;\n        let { gvar: gvar } = this.font;\n        let factor = 1;\n        for(let i = 0; i < gvar.axisCount; i++){\n            if (tupleCoords[i] === 0) continue;\n            if (normalized[i] === 0) return 0;\n            if ((tupleIndex & $f7a6899246d76dab$var$$7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) === 0) {\n                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n            } else {\n                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;\n                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n            }\n        }\n        return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n    interpolateMissingDeltas(points, inPoints, hasDelta) {\n        if (points.length === 0) return;\n        let point = 0;\n        while(point < points.length){\n            let firstPoint = point;\n            // find the end point of the contour\n            let endPoint = point;\n            let pt = points[endPoint];\n            while(!pt.endContour)pt = points[++endPoint];\n            // find the first point that has a delta\n            while(point <= endPoint && !hasDelta[point])point++;\n            if (point > endPoint) continue;\n            let firstDelta = point;\n            let curDelta = point;\n            point++;\n            while(point <= endPoint){\n                // find the next point with a delta, and interpolate intermediate points\n                if (hasDelta[point]) {\n                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n                    curDelta = point;\n                }\n                point++;\n            }\n            // shift contour if we only have a single delta\n            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n            else {\n                // otherwise, handle the remaining points at the end and beginning of the contour\n                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n            }\n            point = endPoint + 1;\n        }\n    }\n    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n        if (p1 > p2) return;\n        let iterable = [\n            \"x\",\n            \"y\"\n        ];\n        for(let i = 0; i < iterable.length; i++){\n            let k = iterable[i];\n            if (inPoints[ref1][k] > inPoints[ref2][k]) {\n                var p = ref1;\n                ref1 = ref2;\n                ref2 = p;\n            }\n            let in1 = inPoints[ref1][k];\n            let in2 = inPoints[ref2][k];\n            let out1 = outPoints[ref1][k];\n            let out2 = outPoints[ref2][k];\n            // If the reference points have the same coordinate but different\n            // delta, inferred delta is zero.  Otherwise interpolate.\n            if (in1 !== in2 || out1 === out2) {\n                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n                for(let p = p1; p <= p2; p++){\n                    let out = inPoints[p][k];\n                    if (out <= in1) out += out1 - in1;\n                    else if (out >= in2) out += out2 - in2;\n                    else out = out1 + (out - in1) * scale;\n                    outPoints[p][k] = out;\n                }\n            }\n        }\n    }\n    deltaShift(p1, p2, ref, inPoints, outPoints) {\n        let deltaX = outPoints[ref].x - inPoints[ref].x;\n        let deltaY = outPoints[ref].y - inPoints[ref].y;\n        if (deltaX === 0 && deltaY === 0) return;\n        for(let p = p1; p <= p2; p++)if (p !== ref) {\n            outPoints[p].x += deltaX;\n            outPoints[p].y += deltaY;\n        }\n    }\n    getAdvanceAdjustment(gid, table) {\n        let outerIndex, innerIndex;\n        if (table.advanceWidthMapping) {\n            let idx = gid;\n            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n            let entryFormat = table.advanceWidthMapping.entryFormat;\n            ({ outerIndex: outerIndex, innerIndex: innerIndex } = table.advanceWidthMapping.mapData[idx]);\n        } else {\n            outerIndex = 0;\n            innerIndex = gid;\n        }\n        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n    getDelta(itemStore, outerIndex, innerIndex) {\n        if (outerIndex >= itemStore.itemVariationData.length) return 0;\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (innerIndex >= varData.deltaSets.length) return 0;\n        let deltaSet = varData.deltaSets[innerIndex];\n        let blendVector = this.getBlendVector(itemStore, outerIndex);\n        let netAdjustment = 0;\n        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];\n        return netAdjustment;\n    }\n    getBlendVector(itemStore, outerIndex) {\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n        let normalizedCoords = this.normalizedCoords;\n        let blendVector = [];\n        // outer loop steps through master designs to be blended\n        for(let master = 0; master < varData.regionIndexCount; master++){\n            let scalar = 1;\n            let regionIndex = varData.regionIndexes[master];\n            let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n            // inner loop steps through axes in this region\n            for(let j = 0; j < axes.length; j++){\n                let axis = axes[j];\n                let axisScalar;\n                // compute the scalar contribution of this axis\n                // ignore invalid ranges\n                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;\n                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;\n                else if (axis.peakCoord === 0) axisScalar = 1;\n                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;\n                else {\n                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;\n                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n                }\n                // take product of all the axis scalars\n                scalar *= axisScalar;\n            }\n            blendVector[master] = scalar;\n        }\n        this.blendVectors.set(varData, blendVector);\n        return blendVector;\n    }\n    constructor(font, coords){\n        this.font = font;\n        this.normalizedCoords = this.normalizeCoords(coords);\n        this.blendVectors = new Map;\n    }\n}\nconst $f7a6899246d76dab$var$$a8ac370803cb82cf$var$resolved = Promise.resolve();\nclass $f7a6899246d76dab$var$$a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    includeGlyph(glyph) {\n        if (typeof glyph === \"object\") glyph = glyph.id;\n        if (this.mapping[glyph] == null) {\n            this.glyphs.push(glyph);\n            this.mapping[glyph] = this.glyphs.length - 1;\n        }\n        return this.mapping[glyph];\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphs = [];\n        this.mapping = {};\n        // always include the missing glyph\n        this.includeGlyph(0);\n    }\n}\n// Flags for simple glyphs\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$ON_CURVE = 1;\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$X_SHORT_VECTOR = 2;\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$Y_SHORT_VECTOR = 4;\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$REPEAT = 8;\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$SAME_X = 16;\nconst $f7a6899246d76dab$var$$2784eedf0b35a048$var$SAME_Y = 32;\nclass $f7a6899246d76dab$var$$2784eedf0b35a048$var$Point {\n    static size(val) {\n        return val >= 0 && val <= 255 ? 1 : 2;\n    }\n    static encode(stream, value) {\n        if (value >= 0 && value <= 255) stream.writeUInt8(value);\n        else stream.writeInt16BE(value);\n    }\n}\nlet $f7a6899246d76dab$var$$2784eedf0b35a048$var$Glyf = new $0b2a422743092498$export$eabc71f011df675a({\n    numberOfContours: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMin: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    xMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    yMax: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    endPtsOfContours: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"numberOfContours\"),\n    instructions: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, $83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    flags: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$52e103c63c4e68cf, 0),\n    xPoints: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2784eedf0b35a048$var$Point, 0),\n    yPoints: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2784eedf0b35a048$var$Point, 0)\n});\nclass $f7a6899246d76dab$var$$2784eedf0b35a048$export$2e2bcd8739ae039 {\n    encodeSimple(path, instructions = []) {\n        let endPtsOfContours = [];\n        let xPoints = [];\n        let yPoints = [];\n        let flags = [];\n        let same = 0;\n        let lastX = 0, lastY = 0, lastFlag = 0;\n        let pointCount = 0;\n        for(let i = 0; i < path.commands.length; i++){\n            let c = path.commands[i];\n            for(let j = 0; j < c.args.length; j += 2){\n                let x = c.args[j];\n                let y = c.args[j + 1];\n                let flag = 0;\n                // If the ending point of a quadratic curve is the midpoint\n                // between the control point and the control point of the next\n                // quadratic curve, we can omit the ending point.\n                if (c.command === \"quadraticCurveTo\" && j === 2) {\n                    let next = path.commands[i + 1];\n                    if (next && next.command === \"quadraticCurveTo\") {\n                        let midX = (lastX + next.args[0]) / 2;\n                        let midY = (lastY + next.args[1]) / 2;\n                        if (x === midX && y === midY) continue;\n                    }\n                }\n                // All points except control points are on curve.\n                if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $f7a6899246d76dab$var$$2784eedf0b35a048$var$ON_CURVE;\n                flag = this._encodePoint(x, lastX, xPoints, flag, $f7a6899246d76dab$var$$2784eedf0b35a048$var$X_SHORT_VECTOR, $f7a6899246d76dab$var$$2784eedf0b35a048$var$SAME_X);\n                flag = this._encodePoint(y, lastY, yPoints, flag, $f7a6899246d76dab$var$$2784eedf0b35a048$var$Y_SHORT_VECTOR, $f7a6899246d76dab$var$$2784eedf0b35a048$var$SAME_Y);\n                if (flag === lastFlag && same < 255) {\n                    flags[flags.length - 1] |= $f7a6899246d76dab$var$$2784eedf0b35a048$var$REPEAT;\n                    same++;\n                } else {\n                    if (same > 0) {\n                        flags.push(same);\n                        same = 0;\n                    }\n                    flags.push(flag);\n                    lastFlag = flag;\n                }\n                lastX = x;\n                lastY = y;\n                pointCount++;\n            }\n            if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n        }\n        // Close the path if the last command didn't already\n        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n        let bbox = path.bbox;\n        let glyf = {\n            numberOfContours: endPtsOfContours.length,\n            xMin: bbox.minX,\n            yMin: bbox.minY,\n            xMax: bbox.maxX,\n            yMax: bbox.maxY,\n            endPtsOfContours: endPtsOfContours,\n            instructions: instructions,\n            flags: flags,\n            xPoints: xPoints,\n            yPoints: yPoints\n        };\n        let size = $f7a6899246d76dab$var$$2784eedf0b35a048$var$Glyf.size(glyf);\n        let tail = 4 - size % 4;\n        let stream = new $c207eaab05273912$export$9b4f661deaa36c3e(size + tail);\n        $f7a6899246d76dab$var$$2784eedf0b35a048$var$Glyf.encode(stream, glyf);\n        // Align to 4-byte length\n        if (tail !== 0) stream.fill(0, tail);\n        return stream.buffer;\n    }\n    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n        let diff = value - last;\n        if (value === last) flag |= sameFlag;\n        else {\n            if (-255 <= diff && diff <= 255) {\n                flag |= shortFlag;\n                if (diff < 0) diff = -diff;\n                else flag |= sameFlag;\n            }\n            points.push(diff);\n        }\n        return flag;\n    }\n}\nclass $f7a6899246d76dab$var$$fe042f4b88f46896$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    _addGlyph(gid) {\n        let glyph = this.font.getGlyph(gid);\n        let glyf = glyph._decode();\n        // get the offset to the glyph from the loca table\n        let curOffset = this.font.loca.offsets[gid];\n        let nextOffset = this.font.loca.offsets[gid + 1];\n        let stream = this.font._getTableStream(\"glyf\");\n        stream.pos += curOffset;\n        let buffer = stream.readBuffer(nextOffset - curOffset);\n        // if it is a compound glyph, include its components\n        if (glyf && glyf.numberOfContours < 0) {\n            buffer = new Uint8Array(buffer);\n            let view = new DataView(buffer.buffer);\n            for (let component of glyf.components){\n                gid = this.includeGlyph(component.glyphID);\n                view.setUint16(component.pos, gid);\n            }\n        } else if (glyf && this.font._variationProcessor) buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n        this.glyf.push(buffer);\n        this.loca.offsets.push(this.offset);\n        this.hmtx.metrics.push({\n            advance: glyph.advanceWidth,\n            bearing: glyph._getMetrics().leftBearing\n        });\n        this.offset += buffer.length;\n        return this.glyf.length - 1;\n    }\n    encode() {\n        // tables required by PDF spec:\n        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n        //\n        // additional tables required for standalone fonts:\n        //   name, cmap, OS/2, post\n        this.glyf = [];\n        this.offset = 0;\n        this.loca = {\n            offsets: [],\n            version: this.font.loca.version\n        };\n        this.hmtx = {\n            metrics: [],\n            bearings: []\n        };\n        // include all the glyphs\n        // not using a for loop because we need to support adding more\n        // glyphs to the array as we go, and CoffeeScript caches the length.\n        let i = 0;\n        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);\n        let maxp = $f7a6899246d76dab$var$$parcel$interopDefault($610eece7e795b354$exports)(this.font.maxp);\n        maxp.numGlyphs = this.glyf.length;\n        this.loca.offsets.push(this.offset);\n        let head = $f7a6899246d76dab$var$$parcel$interopDefault($610eece7e795b354$exports)(this.font.head);\n        head.indexToLocFormat = this.loca.version;\n        let hhea = $f7a6899246d76dab$var$$parcel$interopDefault($610eece7e795b354$exports)(this.font.hhea);\n        hhea.numberOfMetrics = this.hmtx.metrics.length;\n        // map = []\n        // for index in [0...256]\n        //     if index < @numGlyphs\n        //         map[index] = index\n        //     else\n        //         map[index] = 0\n        //\n        // cmapTable =\n        //     version: 0\n        //     length: 262\n        //     language: 0\n        //     codeMap: map\n        //\n        // cmap =\n        //     version: 0\n        //     numSubtables: 1\n        //     tables: [\n        //         platformID: 1\n        //         encodingID: 0\n        //         table: cmapTable\n        //     ]\n        // TODO: subset prep, cvt, fpgm?\n        return $f7a6899246d76dab$var$$df50e1efe10a1247$export$2e2bcd8739ae039.toBuffer({\n            tables: {\n                head: head,\n                hhea: hhea,\n                loca: this.loca,\n                maxp: maxp,\n                \"cvt \": this.font[\"cvt \"],\n                prep: this.font.prep,\n                glyf: this.glyf,\n                hmtx: this.hmtx,\n                fpgm: this.font.fpgm\n            }\n        });\n    }\n    constructor(font){\n        super(font);\n        this.glyphEncoder = new $f7a6899246d76dab$var$$2784eedf0b35a048$export$2e2bcd8739ae039;\n    }\n}\nclass $f7a6899246d76dab$var$$ec40f80c07a4e08a$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    subsetCharstrings() {\n        this.charstrings = [];\n        let gsubrs = {};\n        for (let gid of this.glyphs){\n            this.charstrings.push(this.cff.getCharString(gid));\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;\n        }\n        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n    subsetSubrs(subrs, used) {\n        let res = [];\n        for(let i = 0; i < subrs.length; i++){\n            let subr = subrs[i];\n            if (used[i]) {\n                this.cff.stream.pos = subr.offset;\n                res.push(this.cff.stream.readBuffer(subr.length));\n            } else res.push(new Uint8Array([\n                11\n            ])); // return\n        }\n        return res;\n    }\n    subsetFontdict(topDict) {\n        topDict.FDArray = [];\n        topDict.FDSelect = {\n            version: 0,\n            fds: []\n        };\n        let used_fds = {};\n        let used_subrs = [];\n        let fd_select = {};\n        for (let gid of this.glyphs){\n            let fd = this.cff.fdForGlyph(gid);\n            if (fd == null) continue;\n            if (!used_fds[fd]) {\n                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n                used_subrs.push({});\n                fd_select[fd] = topDict.FDArray.length - 1;\n            }\n            used_fds[fd] = true;\n            topDict.FDSelect.fds.push(fd_select[fd]);\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;\n        }\n        for(let i = 0; i < topDict.FDArray.length; i++){\n            let dict = topDict.FDArray[i];\n            delete dict.FontName;\n            if (dict.Private && dict.Private.Subrs) {\n                dict.Private = Object.assign({}, dict.Private);\n                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n            }\n        }\n        return;\n    }\n    createCIDFontdict(topDict) {\n        let used_subrs = {};\n        for (let gid of this.glyphs){\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;\n        }\n        let privateDict = Object.assign({}, this.cff.topDict.Private);\n        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n        topDict.FDArray = [\n            {\n                Private: privateDict\n            }\n        ];\n        return topDict.FDSelect = {\n            version: 3,\n            nRanges: 1,\n            ranges: [\n                {\n                    first: 0,\n                    fd: 0\n                }\n            ],\n            sentinel: this.charstrings.length\n        };\n    }\n    addString(string) {\n        if (!string) return null;\n        if (!this.strings) this.strings = [];\n        this.strings.push(string);\n        return $f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039.length + this.strings.length - 1;\n    }\n    encode() {\n        this.subsetCharstrings();\n        let charset = {\n            version: this.charstrings.length > 255 ? 2 : 1,\n            ranges: [\n                {\n                    first: 1,\n                    nLeft: this.charstrings.length - 2\n                }\n            ]\n        };\n        let topDict = Object.assign({}, this.cff.topDict);\n        topDict.Private = null;\n        topDict.charset = charset;\n        topDict.Encoding = null;\n        topDict.CharStrings = this.charstrings;\n        for (let key of [\n            \"version\",\n            \"Notice\",\n            \"Copyright\",\n            \"FullName\",\n            \"FamilyName\",\n            \"Weight\",\n            \"PostScript\",\n            \"BaseFontName\",\n            \"FontName\"\n        ])topDict[key] = this.addString(this.cff.string(topDict[key]));\n        topDict.ROS = [\n            this.addString(\"Adobe\"),\n            this.addString(\"Identity\"),\n            0\n        ];\n        topDict.CIDCount = this.charstrings.length;\n        if (this.cff.isCIDFont) this.subsetFontdict(topDict);\n        else this.createCIDFontdict(topDict);\n        let top = {\n            version: 1,\n            hdrSize: this.cff.hdrSize,\n            offSize: 4,\n            header: this.cff.header,\n            nameIndex: [\n                this.cff.postscriptName\n            ],\n            topDictIndex: [\n                topDict\n            ],\n            stringIndex: this.strings,\n            globalSubrIndex: this.gsubrs\n        };\n        return $f7a6899246d76dab$var$$5b547cf9e5da519b$export$2e2bcd8739ae039.toBuffer(top);\n    }\n    constructor(font){\n        super(font);\n        this.cff = this.font[\"CFF \"];\n        if (!this.cff) throw new Error(\"Not a CFF Font\");\n    }\n}\nclass $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let format = $f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14.decode(buffer.slice(0, 4));\n        return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n    setDefaultLanguage(lang = null) {\n        this.defaultLanguage = lang;\n    }\n    _getTable(table) {\n        if (!(table.tag in this._tables)) try {\n            this._tables[table.tag] = this._decodeTable(table);\n        } catch (e) {\n            if ($f7a6899246d76dab$var$$59aa4ed98453e1d4$export$bd5c5d8b8dcafd78) {\n                console.error(`Error decoding table ${table.tag}`);\n                console.error(e.stack);\n            }\n        }\n        return this._tables[table.tag];\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            return this.stream;\n        }\n        return null;\n    }\n    _decodeDirectory() {\n        return this.directory = $f7a6899246d76dab$var$$df50e1efe10a1247$export$2e2bcd8739ae039.decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _decodeTable(table) {\n        let pos = this.stream.pos;\n        let stream = this._getTableStream(table.tag);\n        let result = $f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039[table.tag].decode(stream, this, table.length);\n        this.stream.pos = pos;\n        return result;\n    }\n    /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */ getName(key, lang = this.defaultLanguage || $f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940) {\n        let record = this.name && this.name.records[key];\n        if (record) return record[lang] || record[this.defaultLanguage] || record[$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n         || null;\n        return null;\n    }\n    /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */ get postscriptName() {\n        return this.getName(\"postscriptName\");\n    }\n    /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */ get fullName() {\n        return this.getName(\"fullName\");\n    }\n    /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */ get familyName() {\n        return this.getName(\"fontFamily\");\n    }\n    /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */ get subfamilyName() {\n        return this.getName(\"fontSubfamily\");\n    }\n    /**\n   * The font's copyright information\n   * @type {string}\n   */ get copyright() {\n        return this.getName(\"copyright\");\n    }\n    /**\n   * The font's version number\n   * @type {string}\n   */ get version() {\n        return this.getName(\"version\");\n    }\n    /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */ get ascent() {\n        return this.hhea.ascent;\n    }\n    /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */ get descent() {\n        return this.hhea.descent;\n    }\n    /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */ get lineGap() {\n        return this.hhea.lineGap;\n    }\n    /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */ get underlinePosition() {\n        return this.post.underlinePosition;\n    }\n    /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */ get underlineThickness() {\n        return this.post.underlineThickness;\n    }\n    /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */ get italicAngle() {\n        return this.post.italicAngle;\n    }\n    /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */ get capHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */ get xHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.xHeight : 0;\n    }\n    /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */ get numGlyphs() {\n        return this.maxp.numGlyphs;\n    }\n    /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */ get unitsPerEm() {\n        return this.head.unitsPerEm;\n    }\n    /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */ get bbox() {\n        return Object.freeze(new $f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n    get _cmapProcessor() {\n        return new $f7a6899246d76dab$var$$0d6e160064c86e50$export$2e2bcd8739ae039(this.cmap);\n    }\n    /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */ get characterSet() {\n        return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */ hasGlyphForCodePoint(codePoint) {\n        return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */ glyphForCodePoint(codePoint) {\n        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [\n            codePoint\n        ]);\n    }\n    /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */ glyphsForString(string) {\n        let glyphs = [];\n        let len = string.length;\n        let idx = 0;\n        let last = -1;\n        let state = -1;\n        while(idx <= len){\n            let code = 0;\n            let nextState = 0;\n            if (idx < len) {\n                // Decode the next codepoint from UTF 16\n                code = string.charCodeAt(idx++);\n                if (0xd800 <= code && code <= 0xdbff && idx < len) {\n                    let next = string.charCodeAt(idx);\n                    if (0xdc00 <= next && next <= 0xdfff) {\n                        idx++;\n                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n                    }\n                }\n                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n            } else idx++;\n            if (state === 0 && nextState === 1) glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [\n                last,\n                code\n            ]));\n            else if (state === 0 && nextState === 0) glyphs.push(this.glyphForCodePoint(last));\n            last = code;\n            state = nextState;\n        }\n        return glyphs;\n    }\n    get _layoutEngine() {\n        return new $f7a6899246d76dab$var$$9d641258c9d7180d$export$2e2bcd8739ae039(this);\n    }\n    /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */ layout(string, userFeatures, script, language, direction) {\n        return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */ stringsForGlyph(gid) {\n        return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */ get availableFeatures() {\n        return this._layoutEngine.getAvailableFeatures();\n    }\n    getAvailableFeatures(script, language) {\n        return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf) this._glyphs[glyph] = new $f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039(glyph, characters, this);\n            else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new $f7a6899246d76dab$var$$7ee0705195f3b047$export$2e2bcd8739ae039(glyph, characters, this);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */ getGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.sbix) this._glyphs[glyph] = new $f7a6899246d76dab$var$$55855d6d316b015e$export$2e2bcd8739ae039(glyph, characters, this);\n            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new $f7a6899246d76dab$var$$42d9dbd2de9ee2d8$export$2e2bcd8739ae039(glyph, characters, this);\n            else this._getBaseGlyph(glyph, characters);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */ createSubset() {\n        if (this.directory.tables[\"CFF \"]) return new $f7a6899246d76dab$var$$ec40f80c07a4e08a$export$2e2bcd8739ae039(this);\n        return new $f7a6899246d76dab$var$$fe042f4b88f46896$export$2e2bcd8739ae039(this);\n    }\n    /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */ get variationAxes() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n        };\n        return res;\n    }\n    /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */ get namedVariations() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let instance of this.fvar.instance){\n            let settings = {};\n            for(let i = 0; i < this.fvar.axis.length; i++){\n                let axis = this.fvar.axis[i];\n                settings[axis.axisTag.trim()] = instance.coord[i];\n            }\n            res[instance.name.en] = settings;\n        }\n        return res;\n    }\n    /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */ getVariation(settings) {\n        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n        if (typeof settings === \"string\") settings = this.namedVariations[settings];\n        if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n        // normalize the coordinates\n        let coords = this.fvar.axis.map((axis, i)=>{\n            let axisTag = axis.axisTag.trim();\n            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n            else return axis.defaultValue;\n        });\n        let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(this.stream.buffer);\n        stream.pos = this._directoryPos;\n        let font = new $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream, coords);\n        font._tables = this._tables;\n        return font;\n    }\n    get _variationProcessor() {\n        if (!this.fvar) return null;\n        let variationCoords = this.variationCoords;\n        // Ignore if no variation coords and not CFF2\n        if (!variationCoords && !this.CFF2) return null;\n        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue);\n        return new $f7a6899246d76dab$var$$7586bb9ea67c41d8$export$2e2bcd8739ae039(this, variationCoords);\n    }\n    // Standardized format plugin API\n    getFont(name) {\n        return this.getVariation(name);\n    }\n    constructor(stream, variationCoords = null){\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"TTF\");\n        this.defaultLanguage = null;\n        this.stream = stream;\n        this.variationCoords = variationCoords;\n        this._directoryPos = this.stream.pos;\n        this._tables = {};\n        this._glyphs = {};\n        this._decodeDirectory();\n        // define properties for each table to lazily parse\n        for(let tag in this.directory.tables){\n            let table = this.directory.tables[tag];\n            if ($f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039[tag] && table.length > 0) Object.defineProperty(this, tag, {\n                get: this._getTable.bind(this, table)\n            });\n        }\n    }\n}\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n$f7a6899246d76dab$var$$parcel$interopDefault($17039aff9b7a4ae1$exports)([\n    $f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d\n], $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\nlet $f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectoryEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    offset: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"void\", {\n        type: \"global\"\n    }),\n    compLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    origChecksum: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectory = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    flavor: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    numTables: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    totalSfntSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    majorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    metaOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    metaLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    metaOrigLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    privOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    privLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectoryEntry, \"numTables\")\n});\n$f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectory.process = function() {\n    let tables1 = {};\n    for (let table of this.tables)tables1[table.tag] = table;\n    this.tables = tables1;\n};\nvar $f7a6899246d76dab$var$$89f72d2d7c9afc0d$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectory;\nclass $f7a6899246d76dab$var$$8a0a49baaf5d834d$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return $f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14.decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n    _decodeDirectory() {\n        this.directory = $f7a6899246d76dab$var$$89f72d2d7c9afc0d$export$2e2bcd8739ae039.decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            if (table.compLength < table.length) {\n                this.stream.pos += 2; // skip deflate header\n                let outBuffer = new Uint8Array(table.length);\n                let buf = $f7a6899246d76dab$var$$parcel$interopDefault($9f97e41f2448bce6$exports)(this.stream.readBuffer(table.compLength - 2), outBuffer);\n                return new $d28c261f9dc3f39e$export$c18b354bac7948e9(buf);\n            } else return this.stream;\n        }\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"WOFF\");\n    }\n}\nclass $f7a6899246d76dab$var$$44b9edca0e403d6d$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039 {\n    _decode() {\n        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n        return this._font._transformedGlyphs[this.id];\n    }\n    _getCBox() {\n        return this.path.bbox;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"WOFF2\");\n    }\n}\nconst $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$Base128 = {\n    decode (stream) {\n        let result = 0;\n        let iterable = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        for(let j = 0; j < iterable.length; j++){\n            let i = iterable[j];\n            let code = stream.readUInt8();\n            // If any of the top seven bits are set then we're about to overflow.\n            if (result & 0xe0000000) throw new Error(\"Overflow\");\n            result = result << 7 | code & 0x7f;\n            if ((code & 0x80) === 0) return result;\n        }\n        throw new Error(\"Bad base 128 number\");\n    }\n};\nlet $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$knownTags = [\n    \"cmap\",\n    \"head\",\n    \"hhea\",\n    \"hmtx\",\n    \"maxp\",\n    \"name\",\n    \"OS/2\",\n    \"post\",\n    \"cvt \",\n    \"fpgm\",\n    \"glyf\",\n    \"loca\",\n    \"prep\",\n    \"CFF \",\n    \"VORG\",\n    \"EBDT\",\n    \"EBLC\",\n    \"gasp\",\n    \"hdmx\",\n    \"kern\",\n    \"LTSH\",\n    \"PCLT\",\n    \"VDMX\",\n    \"vhea\",\n    \"vmtx\",\n    \"BASE\",\n    \"GDEF\",\n    \"GPOS\",\n    \"GSUB\",\n    \"EBSC\",\n    \"JSTF\",\n    \"MATH\",\n    \"CBDT\",\n    \"CBLC\",\n    \"COLR\",\n    \"CPAL\",\n    \"SVG \",\n    \"sbix\",\n    \"acnt\",\n    \"avar\",\n    \"bdat\",\n    \"bloc\",\n    \"bsln\",\n    \"cvar\",\n    \"fdsc\",\n    \"feat\",\n    \"fmtx\",\n    \"fvar\",\n    \"gvar\",\n    \"hsty\",\n    \"just\",\n    \"lcar\",\n    \"mort\",\n    \"morx\",\n    \"opbd\",\n    \"prop\",\n    \"trak\",\n    \"Zapf\",\n    \"Silf\",\n    \"Glat\",\n    \"Gloc\",\n    \"Feat\",\n    \"Sill\"\n];\nlet $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry = new $0b2a422743092498$export$eabc71f011df675a({\n    flags: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    customTag: new $e3298619df00705e$export$7acb7b24c478f9c6(new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4), (t)=>(t.flags & 0x3f) === 0x3f),\n    tag: (t)=>t.customTag || $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$knownTags[t.flags & 0x3f],\n    length: $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$Base128,\n    transformVersion: (t)=>t.flags >>> 6 & 0x03,\n    transformed: (t)=>t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n    transformLength: new $e3298619df00705e$export$7acb7b24c478f9c6($f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$Base128, (t)=>t.transformed)\n});\nlet $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2Directory = new $0b2a422743092498$export$eabc71f011df675a({\n    tag: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    flavor: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    length: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    numTables: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$56bd24b5a3ee8456),\n    totalSfntSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    totalCompressedSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    majorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    minorVersion: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    metaOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    metaLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    metaOrigLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    privOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    privLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    tables: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2Directory.process = function() {\n    let tables = {};\n    for(let i = 0; i < this.tables.length; i++){\n        let table = this.tables[i];\n        tables[table.tag] = table;\n    }\n    return this.tables = tables;\n};\nvar $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$export$2e2bcd8739ae039 = $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2Directory;\nclass $f7a6899246d76dab$var$$333fb94547d9fb5c$export$2e2bcd8739ae039 extends $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return $f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14.decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n    _decodeDirectory() {\n        this.directory = $f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$export$2e2bcd8739ae039.decode(this.stream);\n        this._dataPos = this.stream.pos;\n    }\n    _decompress() {\n        // decompress data and setup table offsets if we haven't already\n        if (!this._decompressed) {\n            this.stream.pos = this._dataPos;\n            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n            let decompressedSize = 0;\n            for(let tag in this.directory.tables){\n                let entry = this.directory.tables[tag];\n                entry.offset = decompressedSize;\n                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n            }\n            let decompressed = $f7a6899246d76dab$var$$parcel$interopDefault($ded8ee29b9370409$exports)(buffer, decompressedSize);\n            if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n            this.stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(decompressed);\n            this._decompressed = true;\n        }\n    }\n    _decodeTable(table) {\n        this._decompress();\n        return super._decodeTable(table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n                if (!this._transformedGlyphs) this._transformGlyfTable();\n                return this._glyphs[glyph] = new $f7a6899246d76dab$var$$44b9edca0e403d6d$export$2e2bcd8739ae039(glyph, characters, this);\n            } else return super._getBaseGlyph(glyph, characters);\n        }\n    }\n    _transformGlyfTable() {\n        this._decompress();\n        this.stream.pos = this.directory.tables.glyf.offset;\n        let table = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$GlyfTable.decode(this.stream);\n        let glyphs = [];\n        for(let index = 0; index < table.numGlyphs; index++){\n            let glyph = {};\n            let nContours = table.nContours.readInt16BE();\n            glyph.numberOfContours = nContours;\n            if (nContours > 0) {\n                let nPoints = [];\n                let totalPoints = 0;\n                for(let i = 0; i < nContours; i++){\n                    let r1 = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$read255UInt16(table.nPoints);\n                    totalPoints += r1;\n                    nPoints.push(totalPoints);\n                }\n                glyph.points = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;\n                var instructionSize = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            } else if (nContours < 0) {\n                let haveInstructions = $f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039.prototype._decodeComposite.call({\n                    _font: this\n                }, glyph, table.composites);\n                if (haveInstructions) var instructionSize = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            }\n            glyphs.push(glyph);\n        }\n        this._transformedGlyphs = glyphs;\n    }\n    constructor(...args){\n        super(...args);\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"WOFF2\");\n    }\n}\n// Special class that accepts a length and returns a sub-stream for that data\nclass $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream {\n    decode(stream, parent) {\n        return new $d28c261f9dc3f39e$export$c18b354bac7948e9(this._buf.decode(stream, parent));\n    }\n    constructor(length){\n        this.length = length;\n        this._buf = new $ce1900e78ba28923$export$7d22a0eea6656474(length);\n    }\n}\n// This struct represents the entire glyf table\nlet $f7a6899246d76dab$var$$333fb94547d9fb5c$var$GlyfTable = new $0b2a422743092498$export$eabc71f011df675a({\n    version: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    numGlyphs: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    indexFormat: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nContourStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    nPointsStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    flagStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    glyphStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    compositeStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    bboxStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    instructionStreamSize: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    nContours: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"nContourStreamSize\"),\n    nPoints: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"nPointsStreamSize\"),\n    flags: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"flagStreamSize\"),\n    glyphs: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"glyphStreamSize\"),\n    composites: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"compositeStreamSize\"),\n    bboxes: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"bboxStreamSize\"),\n    instructions: new $f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream(\"instructionStreamSize\")\n});\nconst $f7a6899246d76dab$var$$333fb94547d9fb5c$var$WORD_CODE = 253;\nconst $f7a6899246d76dab$var$$333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $f7a6899246d76dab$var$$333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $f7a6899246d76dab$var$$333fb94547d9fb5c$var$LOWEST_U_CODE = 253;\nfunction $f7a6899246d76dab$var$$333fb94547d9fb5c$var$read255UInt16(stream) {\n    let code = stream.readUInt8();\n    if (code === $f7a6899246d76dab$var$$333fb94547d9fb5c$var$WORD_CODE) return stream.readUInt16BE();\n    if (code === $f7a6899246d76dab$var$$333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $f7a6899246d76dab$var$$333fb94547d9fb5c$var$LOWEST_U_CODE;\n    if (code === $f7a6899246d76dab$var$$333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $f7a6899246d76dab$var$$333fb94547d9fb5c$var$LOWEST_U_CODE * 2;\n    return code;\n}\nfunction $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, baseval) {\n    return flag & 1 ? baseval : -baseval;\n}\nfunction $f7a6899246d76dab$var$$333fb94547d9fb5c$var$decodeTriplet(flags, glyphs, nPoints) {\n    let y;\n    let x = y = 0;\n    let res = [];\n    for(let i = 0; i < nPoints; i++){\n        let dx = 0, dy = 0;\n        let flag = flags.readUInt8();\n        let onCurve = !(flag >> 7);\n        flag &= 0x7f;\n        if (flag < 10) {\n            dx = 0;\n            dy = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n        } else if (flag < 20) {\n            dx = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n            dy = 0;\n        } else if (flag < 84) {\n            var b0 = flag - 20;\n            var b1 = glyphs.readUInt8();\n            dx = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n            dy = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n        } else if (flag < 120) {\n            var b0 = flag - 84;\n            dx = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n            dy = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n        } else if (flag < 124) {\n            var b1 = glyphs.readUInt8();\n            let b2 = glyphs.readUInt8();\n            dx = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n            dy = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n        } else {\n            dx = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag, glyphs.readUInt16BE());\n            dy = $f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign(flag >> 1, glyphs.readUInt16BE());\n        }\n        x += dx;\n        y += dy;\n        res.push(new $f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a(onCurve, false, x, y));\n    }\n    return res;\n}\nlet $f7a6899246d76dab$var$$e0b2de9958441c02$var$TTCHeader = new $bf686a5101131396$export$95a8b60f4da7dec8($83cea26e2678b6a9$export$de9ffb9418dd7d0d, {\n    0x00010000: {\n        numFonts: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"numFonts\")\n    },\n    0x00020000: {\n        numFonts: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        offsets: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($83cea26e2678b6a9$export$de9ffb9418dd7d0d, \"numFonts\"),\n        dsigTag: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        dsigLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n        dsigOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n    }\n});\nclass $f7a6899246d76dab$var$$e0b2de9958441c02$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return $f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14.decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n    getFont(name) {\n        for (let offset of this.header.offsets){\n            let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(this.stream.buffer);\n            stream.pos = offset;\n            let font = new $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let offset of this.header.offsets){\n            let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(this.stream.buffer);\n            stream.pos = offset;\n            fonts.push(new $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"TTC\");\n        this.stream = stream;\n        if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n        this.header = $f7a6899246d76dab$var$$e0b2de9958441c02$var$TTCHeader.decode(stream);\n    }\n}\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontName = new $16be2d98cb6bced0$export$89b8e0fa65f6a914($83cea26e2678b6a9$export$52e103c63c4e68cf);\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontData = new $0b2a422743092498$export$eabc71f011df675a({\n    len: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    buf: new $ce1900e78ba28923$export$7d22a0eea6656474(\"len\")\n});\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$Ref = new $0b2a422743092498$export$eabc71f011df675a({\n    id: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    nameOffset: $83cea26e2678b6a9$export$c35c15c7caeff2b6,\n    attr: $83cea26e2678b6a9$export$52e103c63c4e68cf,\n    dataOffset: $83cea26e2678b6a9$export$1925298fbd719b21,\n    handle: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$Type = new $0b2a422743092498$export$eabc71f011df675a({\n    name: new $16be2d98cb6bced0$export$89b8e0fa65f6a914(4),\n    maxTypeIndex: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    refList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$d0fe640dc6c78783$var$Ref, (t)=>t.maxTypeIndex + 1), {\n        type: \"parent\"\n    })\n});\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$TypeList = new $0b2a422743092498$export$eabc71f011df675a({\n    length: $83cea26e2678b6a9$export$56bd24b5a3ee8456,\n    types: new $c2a7f92f159a8c91$export$c4be6576ca6fe4aa($f7a6899246d76dab$var$$d0fe640dc6c78783$var$Type, (t)=>t.length + 1)\n});\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontMap = new $0b2a422743092498$export$eabc71f011df675a({\n    reserved: new $30e179fcc799e217$export$da9b5fe187a9aa1($83cea26e2678b6a9$export$52e103c63c4e68cf, 24),\n    typeList: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, $f7a6899246d76dab$var$$d0fe640dc6c78783$var$TypeList),\n    nameListOffset: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$56bd24b5a3ee8456, \"void\")\n});\nlet $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontHeader = new $0b2a422743092498$export$eabc71f011df675a({\n    dataOffset: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    map: new $a835a1cb0586c20c$export$b56007f12edf0c17($83cea26e2678b6a9$export$de9ffb9418dd7d0d, $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontMap),\n    dataLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d,\n    mapLength: $83cea26e2678b6a9$export$de9ffb9418dd7d0d\n});\nclass $f7a6899246d76dab$var$$d0fe640dc6c78783$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(buffer);\n        try {\n            var header = $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontHeader.decode(stream);\n        } catch (e) {\n            return false;\n        }\n        for (let type of header.map.typeList.types){\n            if (type.name === \"sfnt\") return true;\n        }\n        return false;\n    }\n    getFont(name) {\n        if (!this.sfnt) return null;\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(this.stream.buffer.slice(pos));\n            let font = new $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $d28c261f9dc3f39e$export$c18b354bac7948e9(this.stream.buffer.slice(pos));\n            fonts.push(new $f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        $f7a6899246d76dab$var$$parcel$interopDefault($5110215535661f7a$exports)(this, \"type\", \"DFont\");\n        this.stream = stream;\n        this.header = $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontHeader.decode(this.stream);\n        for (let type of this.header.map.typeList.types){\n            for (let ref of type.refList)if (ref.nameOffset >= 0) {\n                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n                ref.name = $f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n            if (type.name === \"sfnt\") this.sfnt = type;\n        }\n    }\n}\n$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be($f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039);\n$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be($f7a6899246d76dab$var$$8a0a49baaf5d834d$export$2e2bcd8739ae039);\n$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be($f7a6899246d76dab$var$$333fb94547d9fb5c$export$2e2bcd8739ae039);\n$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be($f7a6899246d76dab$var$$e0b2de9958441c02$export$2e2bcd8739ae039);\n$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be($f7a6899246d76dab$var$$d0fe640dc6c78783$export$2e2bcd8739ae039);\n$f7a6899246d76dab$var$$parcel$exportWildcard($f7a6899246d76dab$exports, $f7a6899246d76dab$var$$59aa4ed98453e1d4$exports); //# sourceMappingURL=browser.cjs.map\n\n\nvar $388b617130f03bd4$var$originalPalette = [];\nvar $388b617130f03bd4$var$customizedPalette = [];\nvar $388b617130f03bd4$var$paletteCode = \"\";\nvar $388b617130f03bd4$var$shareURL = window.location.href;\nvar $388b617130f03bd4$var$tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nvar $388b617130f03bd4$var$tooltipList = $388b617130f03bd4$var$tooltipTriggerList.map(function(tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n// For example, converter rgba(67, 255, 100, 255) to #43ff64\nfunction $388b617130f03bd4$var$rgbaToHexColor(rgbaColorArray) {\n    return \"#\" + rgbaColorArray.slice(0, 3).map((ele)=>ele.toString(16)).map((ele)=>ele.length == 1 ? \"0\" + ele : ele) // Padding zero to two digits\n    .join(\"\");\n}\nfunction $388b617130f03bd4$var$emojiToUnicode(emoji) {\n    var comp;\n    if (emoji.length === 1) comp = emoji.charCodeAt(0);\n    comp = (emoji.charCodeAt(0) - 0xD800) * 0x400 + (emoji.charCodeAt(1) - 0xDC00) + 0x10000;\n    if (comp < 0) comp = emoji.charCodeAt(0);\n    return `U+${comp.toString(\"16\").toUpperCase()}`;\n}\nfunction $388b617130f03bd4$var$unicodeToEmoji(unicode) {\n    const codePoint = unicode.replace(\"U+\", \"\");\n    const intCodePoint = parseInt(codePoint, 16);\n    const character = String.fromCodePoint(intCodePoint);\n    return character;\n}\n// Check if two RGBA colors are equal\nfunction $388b617130f03bd4$var$areColorsEqual(rgba1, rgba2) {\n    return rgba1.every((component, index)=>component === rgba2[index]);\n}\nfunction $388b617130f03bd4$var$encodeURL(url) {\n    return url.replaceAll(\" \", \"\").replaceAll(\"rgba\", \"\").replaceAll(\",\", \"*\");\n}\nfunction $388b617130f03bd4$var$decodeURL(url) {\n    return url.replaceAll(\"*\", \", \").replaceAll(\"(\", \" rgba(\");\n}\n// Get the CSS override colors\nfunction $388b617130f03bd4$var$getOverrideStyleString() {\n    // Format Example:\n    // override-colors:\n    // 0 rgba(184, 126, 50, 255),\n    // 1 rgba(120, 8, 150, 255),\n    // ...\n    return $388b617130f03bd4$var$customizedPalette.map((rgbaColorArray, idx)=>`${idx} rgba(${rgbaColorArray.join(\", \")})`)// If customize colors are different from default colors, record them into overrides \n    .filter((_, idx)=>!$388b617130f03bd4$var$areColorsEqual($388b617130f03bd4$var$customizedPalette[idx], $388b617130f03bd4$var$originalPalette[idx])).join(\", \");\n}\n// Update the CSS palette\nfunction $388b617130f03bd4$var$setOverridePaletteStyle(overrideColors) {\n    document.getElementById(\"palette-overrides-style\").innerHTML = `\n\t\t@font-palette-values --palette {\n\t\t\tfont-family: \"Noto Color Emoji\";\n\t\t\tbase-palette: 0;\n\t\t\toverride-colors: ${overrideColors};\n\t\t}\n\t\t`;\n}\nfunction $388b617130f03bd4$var$getRGBAFromPicker(paletteIndex, rgbColor) {\n    [\n        0,\n        1,\n        2\n    ].forEach((idx)=>{\n        $388b617130f03bd4$var$customizedPalette[paletteIndex][idx] = parseInt(rgbColor.substring(idx * 2, idx * 2 + 2), 16);\n    });\n}\n// Update a palette from input entry\nfunction $388b617130f03bd4$var$updateEmojiAndURL() {\n    const overrideColors = $388b617130f03bd4$var$getOverrideStyleString();\n    const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n    $388b617130f03bd4$var$setOverridePaletteStyle(overrideColors);\n    window.location.hash = `${$388b617130f03bd4$var$emojiToUnicode(thisEmoji)}-${encodeURIComponent($388b617130f03bd4$var$encodeURL(overrideColors))}`;\n    $388b617130f03bd4$var$shareURL = window.location.href;\n}\nasync function $388b617130f03bd4$var$updateEmoji(thisEmoji, keepPalette) {\n    // Fetch Google Font Noto Sans Emoji CSS\n    const fontResponse = await fetch(\"https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&text=\" + encodeURIComponent(thisEmoji));\n    const fontStyle = await fontResponse.text();\n    // Reset CSS style\n    document.getElementById(\"emoji-style\").innerHTML = fontStyle;\n    document.getElementById(\"customized-emoji\").innerHTML = thisEmoji;\n    if (!keepPalette) document.getElementById(\"palette-overrides-style\").innerHTML = \"\";\n    // Get the URL of the woff2 file and convert to binary\n    const fontURL = fontStyle.split(\"\\n\").filter((ele)=>ele.indexOf(\"src:\") != -1)[0].match(/src:\\s+url\\(([^)]+)\\)/)[1];\n    const fontBinary = await (await fetch(fontURL)).arrayBuffer();\n    const fontBuffer = new $388b617130f03bd4$require$Buffer.from(fontBinary);\n    const thisFont = $f7a6899246d76dab$exports.create(fontBuffer);\n    // Copy default palette to customized palette\n    $388b617130f03bd4$var$originalPalette = thisFont.CPAL.colorRecords.slice(thisFont.CPAL.colorRecordIndices[0], thisFont.CPAL.colorRecordIndices[0] + thisFont.CPAL.numPaletteEntries).map((ele)=>[\n            ele.red,\n            ele.green,\n            ele.blue,\n            ele.alpha\n        ]);\n    $388b617130f03bd4$var$customizedPalette = $388b617130f03bd4$var$originalPalette.map((rgbaColorArray)=>[\n            ...rgbaColorArray\n        ]);\n    // Reset color color-pickers\n    const colorPickers = document.getElementById(\"color-pickers\");\n    while(colorPickers.firstChild)colorPickers.removeChild(colorPickers.firstChild);\n    // Check if color picker should be override\n    var modifiedColorPickers = {};\n    if ($388b617130f03bd4$var$paletteCode.length !== 0) $388b617130f03bd4$var$paletteCode.split(\"), \").forEach((rgbColor, _)=>{\n        const match = rgbColor.match(/\\d+/g).map((str)=>parseInt(str));\n        modifiedColorPickers[match[0]] = [\n            match[1],\n            match[2],\n            match[3],\n            match[4]\n        ];\n    });\n    // Add each color picker under color-picker DOM\n    $388b617130f03bd4$var$customizedPalette.forEach((rgbaColorArray, idx)=>{\n        const picker = document.createElement(\"input\");\n        picker.setAttribute(\"class\", \"color-block\");\n        picker.setAttribute(\"id\", `color-block-${idx}`);\n        picker.type = \"color\";\n        if (idx in modifiedColorPickers && keepPalette) picker.value = $388b617130f03bd4$var$rgbaToHexColor(modifiedColorPickers[idx]);\n        else picker.value = $388b617130f03bd4$var$rgbaToHexColor(rgbaColorArray);\n        colorPickers.appendChild(picker);\n        picker.addEventListener(\"input\", (event)=>{\n            $388b617130f03bd4$var$getRGBAFromPicker(idx, event.target.value.substring(1));\n            $388b617130f03bd4$var$updateEmojiAndURL();\n        });\n    });\n    const loadPromises = Array.from(document.fonts.values()).map((fontFace)=>fontFace.load());\n    await Promise.all(loadPromises);\n    if (!keepPalette) window.location.hash = $388b617130f03bd4$var$emojiToUnicode(thisEmoji);\n    $388b617130f03bd4$var$updateCanvas(\"reference-canvas\", thisEmoji);\n}\nfunction $388b617130f03bd4$var$updateCanvas(domIdName, thisEmoji) {\n    const canvas = document.getElementById(domIdName);\n    const ctx = canvas.getContext(\"2d\");\n    const scaleProp = 10;\n    if (domIdName == \"result-canvas\") {\n        canvas.width = document.getElementById(\"customized-emoji\").clientWidth * scaleProp;\n        canvas.height = document.getElementById(\"customized-emoji\").clientHeight * scaleProp;\n        ctx.scale(scaleProp, scaleProp);\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // Get font size from px to em\n    const childFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\")).getPropertyValue(\"font-size\"));\n    const parentFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\").parentElement).getPropertyValue(\"font-size\"));\n    const realFontSizeEm = childFontSizePx / parentFontSizePx;\n    // Set canvas\n    ctx.font = `${realFontSizeEm}em \"Noto Color Emoji\"`;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    if (domIdName == \"result-canvas\") ctx.fillText(thisEmoji, canvas.width / (2 * scaleProp), canvas.height / (2 * scaleProp));\n    else ctx.fillText(thisEmoji, canvas.width / 2, canvas.height / 2);\n}\nfunction $388b617130f03bd4$var$selectRandomColor() {\n    function getRandomColor() {\n        const minVal = 0;\n        const maxVal = 255;\n        return Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\n    }\n    numPicker = document.querySelectorAll(\".color-block\").length;\n    $388b617130f03bd4$var$customizedPalette.forEach((_, idx)=>{\n        $388b617130f03bd4$var$customizedPalette[idx] = [\n            getRandomColor(),\n            getRandomColor(),\n            getRandomColor(),\n            255\n        ];\n        document.getElementById(`color-block-${idx}`).value = $388b617130f03bd4$var$rgbaToHexColor($388b617130f03bd4$var$customizedPalette[idx]);\n    });\n    $388b617130f03bd4$var$updateEmojiAndURL();\n}\nfunction $388b617130f03bd4$var$selectedFromPicker(thisEmoji) {\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    if (emojiPickerContainer.style.display === \"none\") emojiPickerContainer.style.display = \"block\";\n    else emojiPickerContainer.style.display = \"none\";\n    $388b617130f03bd4$var$updateEmoji(thisEmoji, false);\n}\n// See https://github.com/missive/emoji-mart for more info and settings\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const emojiPickerOptionsDesktop = {\n        onEmojiSelect: (res, _)=>$388b617130f03bd4$var$selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8\n    };\n    const emojiPickerDesktop = new EmojiMart.Picker(emojiPickerOptionsDesktop);\n    document.getElementById(\"emoji-picker\").appendChild(emojiPickerDesktop);\n    // Mobile size\n    const emojiPickerButton = document.getElementById(\"emoji-picker-button\");\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    const emojiPickerOptionsMobile = {\n        onEmojiSelect: (res, _)=>$388b617130f03bd4$var$selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8\n    };\n    const emojiPickerMobile = new EmojiMart.Picker(emojiPickerOptionsMobile);\n    emojiPickerContainer.appendChild(emojiPickerMobile);\n    emojiPickerButton.addEventListener(\"click\", function() {\n        if (emojiPickerContainer.style.display === \"none\") emojiPickerContainer.style.display = \"block\";\n        else emojiPickerContainer.style.display = \"none\";\n    });\n});\nArray.from(document.getElementsByClassName(\"random-emoji-button\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        console.log(\"...\\uD83C\\uDFB2 Random Select an Emoji \\uD83C\\uDFB2...\");\n        $388b617130f03bd4$var$updateEmoji($388b617130f03bd4$var$getRandomEmoji(), false);\n    });\n});\nArray.from(document.getElementsByClassName(\"random-color-button\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        console.log(\"...\\uD83C\\uDFA8 Random Set Colors \\uD83C\\uDFA8...\");\n        $388b617130f03bd4$var$selectRandomColor();\n    });\n});\nArray.from(document.getElementsByClassName(\"reset-button\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        console.log(\"...\\uD83E\\uDE84 Restore Palette \\uD83E\\uDE84...\");\n        const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n        $388b617130f03bd4$var$updateEmoji(thisEmoji, false);\n    });\n});\nArray.from(document.getElementsByClassName(\"download-button\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        const resultCanvas = document.getElementById(\"result-canvas\");\n        $388b617130f03bd4$var$updateCanvas(\"result-canvas\", document.getElementById(\"customized-emoji\").innerHTML);\n        const dataURL = resultCanvas.toDataURL(\"image/png\");\n        // Create an anchor element to trigger the download\n        const downloadLink = document.createElement(\"a\");\n        console.log(`...💾 Now Downloading Your ${document.getElementById(\"customized-emoji\").innerHTML} 💾 ...`);\n        downloadLink.href = dataURL;\n        downloadLink.download = `${$388b617130f03bd4$var$emojiToUnicode(document.getElementById(\"customized-emoji\").innerHTML)}-EmojiSalon.png`;\n        downloadLink.click();\n    });\n});\nArray.from(document.getElementsByClassName(\"share-facebook\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        const facebookShareURL = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent($388b617130f03bd4$var$shareURL)}`;\n        window.open(facebookShareURL, \"_blank\");\n    });\n});\nArray.from(document.getElementsByClassName(\"share-twitter\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        const message = `#EmojiSalon ${$388b617130f03bd4$var$shareURL}`;\n        const twitterShareURL = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n        window.open(twitterShareURL, \"_blank\");\n    });\n});\nArray.from(document.getElementsByClassName(\"share-line\")).forEach(function(element) {\n    element.addEventListener(\"click\", function() {\n        const lineShareURL = `https://social-plugins.line.me/lineit/share?url=${encodeURIComponent($388b617130f03bd4$var$shareURL)}`;\n        window.open(lineShareURL, \"_blank\");\n    });\n});\nfunction $388b617130f03bd4$var$showSupportIssueModal() {\n    const modal = document.getElementById(\"supportIssue\");\n    const closeButton = modal.querySelector(\".close\");\n    modal.style.display = \"block\";\n    closeButton.onclick = function() {\n        modal.style.display = \"none\";\n    };\n    window.onclick = function(event) {\n        if (event.target === modal) modal.style.display = \"none\";\n    };\n}\n// Default Emoji List\nfunction $388b617130f03bd4$var$getRandomEmoji() {\n    const defaultEmojis = [\n        \"\\uD83D\\uDE00\",\n        \"\\uD83D\\uDE19\",\n        \"\\uD83D\\uDE0E\",\n        \"\\uD83D\\uDE2A\",\n        \"\\uD83E\\uDD24\",\n        \"\\uD83D\\uDE34\",\n        \"\\uD83D\\uDE30\",\n        \"\\uD83E\\uDEC1\",\n        \"\\uD83E\\uDDB7\",\n        \"\\uD83E\\uDDB4\",\n        \"\\uD83D\\uDC40\",\n        \"\\uD83D\\uDE80\",\n        \"\\uD83D\\uDC4D\",\n        \"\\uD83E\\uDD1F\",\n        \"\\uD83E\\uDD18\",\n        \"\\uD83E\\uDD19\",\n        \"\\uD83E\\uDDDA‍♀️\",\n        \"\\uD83E\\uDDDA\",\n        \"\\uD83E\\uDDDA‍♂️\",\n        \"\\uD83E\\uDDD1‍⚕️\",\n        \"\\uD83D\\uDC68‍⚕️\",\n        \"\\uD83D\\uDC69‍⚕️\",\n        \"\\uD83E\\uDDD1‍\\uD83C\\uDF93\",\n        \"\\uD83D\\uDC68‍\\uD83C\\uDF93\",\n        \"\\uD83D\\uDC69‍\\uD83C\\uDF93\",\n        \"\\uD83E\\uDDD1‍\\uD83C\\uDFEB\",\n        \"\\uD83D\\uDC68‍\\uD83C\\uDFEB\",\n        \"\\uD83D\\uDC69‍\\uD83C\\uDFEB\",\n        \"\\uD83E\\uDDD1‍⚖️\",\n        \"\\uD83D\\uDC68‍⚖️\",\n        \"\\uD83D\\uDC69‍⚖️\",\n        \"\\uD83C\\uDF1F\",\n        \"\\uD83E\\uDDE4\",\n        \"\\uD83C\\uDF63\",\n        \"\\uD83C\\uDF64\",\n        \"\\uD83C\\uDF65\",\n        \"\\uD83E\\uDD6E\",\n        \"\\uD83C\\uDF61\",\n        \"\\uD83E\\uDD5F\",\n        \"\\uD83C\\uDF54\",\n        \"\\uD83D\\uDC08\",\n        \"\\uD83D\\uDC08‍⬛\",\n        \"\\uD83D\\uDC1F\",\n        \"\\uD83C\\uDF55\",\n        \"\\uD83C\\uDF89\",\n        \"\\uD83D\\uDC13\",\n        \"\\uD83D\\uDC31\",\n        \"\\uD83C\\uDF3A\",\n        \"\\uD83C\\uDF4E\",\n        \"\\uD83C\\uDFDB\",\n        \"\\uD83D\\uDC2D\",\n        \"\\uD83D\\uDC2E\",\n        \"\\uD83D\\uDC2F\",\n        \"\\uD83D\\uDC30\",\n        \"\\uD83D\\uDC32\",\n        \"\\uD83D\\uDC0D\",\n        \"\\uD83D\\uDC34\",\n        \"\\uD83D\\uDC0F\",\n        \"\\uD83D\\uDC35\",\n        \"\\uD83D\\uDC14\",\n        \"\\uD83D\\uDC36\",\n        \"\\uD83D\\uDC37\",\n        \"\\uD83D\\uDC15\",\n        \"\\uD83D\\uDC11\",\n        \"\\uD83D\\uDC24\",\n        \"\\uD83E\\uDD95\",\n        \"\\uD83E\\uDD96\",\n        \"\\uD83D\\uDC33\",\n        \"\\uD83D\\uDC0B\",\n        \"\\uD83D\\uDC2C\",\n        \"\\uD83E\\uDD8B\",\n        \"\\uD83C\\uDF40\",\n        \"\\uD83C\\uDF52\",\n        \"\\uD83C\\uDF2D\",\n        \"\\uD83C\\uDF69\",\n        \"\\uD83C\\uDFC5\",\n        \"\\uD83D\\uDE82\",\n        \"\\uD83D\\uDE97\",\n        \"\\uD83C\\uDFCD️\",\n        \"\\uD83D\\uDEF3️\",\n        \"☃️\",\n        \"\\uD83E\\uDD7B\",\n        \"\\uD83E\\uDDE5\",\n        \"\\uD83D\\uDC5C\",\n        \"\\uD83D\\uDC62\",\n        \"\\uD83D\\uDCF1\",\n        \"\\uD83E\\uDDEE\",\n        \"\\uD83D\\uDDC3️\",\n        \"\\uD83D\\uDECB️\",\n        \"\\uD83E\\uDE74\",\n        \"\\uD83C\\uDFAE\",\n        \"\\uD83C\\uDFA0\",\n        \"\\uD83D\\uDEDD\",\n        \"\\uD83C\\uDFA1\",\n        \"\\uD83C\\uDFA2\",\n        \"\\uD83D\\uDC88\",\n        \"\\uD83C\\uDFAA\"\n    ];\n    const randomIndex = Math.floor(Math.random() * defaultEmojis.length);\n    return defaultEmojis[randomIndex];\n}\n// Reference: https://github.com/RoelN/ChromaCheck\nfunction $388b617130f03bd4$var$checkColorFontSupport() {\n    console.log(\"...\\uD83D\\uDD75️ Check the compatibility of your browser \\uD83D\\uDD75️...\");\n    var root = document.getElementById(\"opentype-support-detector\"), cls = \"chromacheck-\", runs = 20, loop;\n    // Stick SVG on canvas and check control glyph to see if font rendered\n    function checkFontLoad() {\n        context.drawImage(img, 0, 0);\n        // Check Control glyph.\n        if (context.getImageData(10, 110, 1, 1).data[1] === 0) {\n            clearInterval(loop);\n            colorGlyphTest();\n            return true;\n        } else if (--runs <= 0) {\n            clearInterval(loop);\n            checkFailed();\n        }\n    }\n    // Canvas has been drawn, check for which color glyphs we see\n    function colorGlyphTest() {\n        var res = {};\n        res.cbdt = context.getImageData(10, 10, 1, 1).data[0] === 100; // CBDT/CBLC\n        res.colr = context.getImageData(10, 30, 1, 1).data[0] === 200; // COLR\n        res.sbix = context.getImageData(10, 50, 1, 1).data[0] === 150; // SBIX\n        res.svg = context.getImageData(10, 70, 1, 1).data[0] === 50; // OpenType-SVG\n        res.colrv1 = context.getImageData(10, 90, 1, 1).data[0] === 250; // COLRv1\n        // Add class to HTML tag for each supported color format\n        for(var key in res)if (res.hasOwnProperty(key)) {\n            if (res[key]) root.className += \" \" + cls + key // success\n            ;\n            else root.className += \" \" + cls + key + \"-failed\" //failed   \n            ;\n        }\n    }\n    // Font, SVG, or canvas failed\n    function checkFailed() {\n        root.className += \" \" + cls + \"failed\";\n    }\n    // Draw color glyphs to a canvas through SVG\n    try {\n        var canvas = document.createElement(\"canvas\"), context = canvas.getContext(\"2d\"), img = new Image(), fontCBDT = \"d09GRgABAAAAAALkAAwAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQkRUAAACVAAAAGAAAABlKWauy0NCTEMAAAK0AAAALQAAAFDwVcDTT1MvMgAAAYAAAAA6AAAAYBf0J01jbWFwAAABxAAAACcAAAAsAAzpNmdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLx0hoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C3AsWcG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAA4bSjsh/j+W2+MkizMIDApQVMAiD6Wm2DNYhmYQCLczAwgSgAAJIHngB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXzS2YWMB9IogMFBgYAAI4IegAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvm//8hpNg/sDwDAFyDBygAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAPIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsp0YXBhCAHWIBft4AWNgZsALAAB9AAR4AWNgYmAICAAhBoaIzgA/d14uKS4gm9fTwyUISAeAMCMzkNxyP+EdkGIO8AlxTWFgeLEkTg3IFfB0cQypYExeIC3BujhBBChfwMB4Z+L7yQxA4Onq57LOKaEJAK3VFft4AWNgYgABRiC2AGIJKJshAAhhAMEGyzIGBCgASbA6DiApCKRZoLKJAGrOAtkAAAA=\", fontCOLR = \"d09GRgABAAAAAAKAAAwAAAAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACVAAAABYAAAAYAAIAJUNQQUwAAAJsAAAAEgAAABLJAAAQT1MvMgAAAYAAAAA6AAAAYBfxJ0pjbWFwAAABxAAAACcAAAAsAAzpM2dseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLumdoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C5wsecG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAAYQ5+qdB4fpuvDNIsDCBwaQGTAIi+VlscBaJZGMDiHAxMIAoAtjIF/QB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXDSwYWEBdIYgAFBgYA/8sIdAAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kuG//8hpDgjWJ4BAFVMBiYAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAEtxgUNgAAAAMHHIQTShTlOAty9/4bf7AARCwlBNhBw4L/43qXjYGUmf19TMuLcj/BJL3XfBg54AWNgZsALAAB9AAR4AWNgYGAEYj4gFgGygGwICQACOwAoAAAAAAABAAEAAQAAAA4AAAAAyP8AAA==\", fontSBIX = \"d09GRgABAAAAAALkAAsAAAAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABbAAAADoAAABgFxIli2NtYXAAAAGwAAAAJwAAACwADOk0Z2x5ZgAAAeAAAAAWAAAAFjdEBkBoZWFkAAABCAAAADAAAAA2C6KlkGhoZWEAAAE4AAAAFgAAACQGQQMiaG10eAAAAagAAAAGAAAABgMgAABsb2NhAAAB2AAAAAYAAAAGAAsAAG1heHAAAAFQAAAAGgAAACACDwAbbmFtZQAAAfgAAABDAAAATgSgDQdwb3N0AAACPAAAAAwAAAAgAAMAAHNiaXgAAAJIAAAAnAAAAQQlRrDFeAFjYGRgAGHhBIvaeH6brwzSzAoMQHBpAZMAiL62JcEZRDMrgMU5GJhAPADavQcJeAFjYGRgYFZgYECQQBFUwAgACqMAbQAAeAFjYGRgYGACQxBgBJNcDCCuBIgJAAHcAC0AAHgBY2BhVmCcwMDKwMA0k+kMAwNDP4RmfM1gzMjJgAoYBZA4CkDAcOAl40tGZgUQH0iiA6AIABEmCNMAAAMgAAAAAAAAeAFjYGBgZGAGYgYGHgYWBgUgzQKEQP5Lxv//IaQ4SA0QAABVYQYnAAAAAAAACwAAAAIAAAAAAyADIAAAAAEAADEBAyADIAAAeAEtxlUBgwAAQME3Q0IgEYiAFCAC7u7t0X3dAW9UPry+Mi8M+P993yVnI6bCoibAJyRjQsc5HWip8e/HhJQHAIYJsAB4AWNgZsALAAB9AAR4AWNgBEIGMOZh1GHwANICUPyDAQgK8tIVOgP83Hm5pLiAXF5PD5cgoHIdEOZgBor4La5zB1KSJa4RJcH5aSXliUWpDI4p+UmpCp65iempQamJKZWFJ1NtgIrYAnxCXKcxgEBehM9EkPGeLo4hFbfeHGQEuaBJ4f/6PA8HIJMW4EMeEw9DwmkGRotpVSIgAU9XP5d1TglNADtgJsU=\", fontSVG = \"d09GRgABAAAAAALoAAsAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABcAAAADoAAABgF/MnTlNWRyAAAAJQAAAAlwAAAKrSQDCHY21hcAAAAbQAAAAtAAAANOkY6T1nbHlmAAAB7AAAAB4AAAA0KkgqRmhlYWQAAAEIAAAALwAAADYMS9SPaGhlYQAAATgAAAAVAAAAJAgBBAJobXR4AAABrAAAAAgAAAAIBAAAAGxvY2EAAAHkAAAACAAAAAgADQAabWF4cAAAAVAAAAAdAAAAIAIPAB1uYW1lAAACDAAAADcAAAA8ApwLJXBvc3QAAAJEAAAADAAAACAAAwAAeAFjYGRgAGFZjs2Z8fw2XxmkWRhA4NICJgEQfa22twlEszCAxTkYmEAUANtlBvoAeAFjYGRgYGEAAjgJFEEFjAABkQAQAAAAeAFjYGRgYGBmYAHTDFCSi4GBiYFBAsQEAAISAC8AAAB4AWNgYWFgnMDAysDANJPpDAMDQz+EZnzNYMzIyYAKGAWQOApAwHDgJdNLoAkgACTRgQIDAwAAjAh6AAAEAAAAAAAAAHgBJcU5AYBADACw3NeJuRrw76oi+MkSNEPDZtoRpqZXr3ld/OeVpwbcs+wKIQAAAAAAAAAADQAaeAFjYGQAAhYgZGBmYBBUFFRkYfjDAMK4ZQBZhAThAAB4AWNgYGBikGNgZmBk4WRgBLIYoGwmMNuZIYOhiCGfIZchEcxOZUhmyGZQYAhmCGNwBwBp2QXKAHgBY2BmwAsAAH0ABHgBHUw1dsRQDHTK4Bn+U1qzHdwP1WaDVaA2M7N9jFzYNGJpRtyGiz2f7cZxN2v8YzakCercqg7zjIAiyoDczM6dMPMJ/P68CI/AKK47H63ErCYQNE3xLEl934u9JuaVL6myLEsrA1DoEPCTsQgUoLgwmwB5YZIQuNU2zvp6vX/JgiKrerClP/lV7vZxAoni7QldAG/3K6oA\", fontCOLRv1 = \"d09GRgABAAAAAAKMAAwAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACWAAAAB8AAAA3CmUCEUNQQUwAAAJ4AAAAEgAAABL7AAAQT1MvMgAAAYAAAAA6AAAAYBf2J09jbWFwAAABxAAAACcAAAAsAAzpOGdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANhOUtHxoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAPAAAAEIDGAuccG9zdAAAAkwAAAAMAAAAIAADAAB4AWNgZGAA4QZvhS/x/DZfGaRZGEDg0gImARB991huPohmYQCLczAwgSgA+bkHtQB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXrS1YWMB9IogMFBgYAAQYIfgAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvW//8hpNgfsDwDAFytByoAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAfIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsv0ZfBiCGMoYDAGREga9eAFjYGbACwAAfQAEeAFjYGRABUoMmIARrIqLi4GBjYGRiYHBgQEAB0EAgwAAAAABAAEAAQAAAA4AAAAA+v8AAA==\", svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"120\" style=\"background:#fff;fill:#000;\"><style type=\"text/css\">@font-face{font-family:\"chromacheck-cbdt\";src:url(data:application/x-font-woff;base64,' + fontCBDT + ') format(\"woff\");}' + '@font-face{font-family:\"chromacheck-colr\";src:url(data:application/x-font-woff;base64,' + fontCOLR + ') format(\"woff\");}' + '@font-face{font-family:\"chromacheck-sbix\";src:url(data:application/x-font-woff;base64,' + fontSBIX + ') format(\"woff\");}' + '@font-face{font-family:\"chromacheck-svg\";src:url(data:application/x-font-woff;base64,' + fontSVG + ') format(\"woff\");}' + '@font-face{font-family:\"chromacheck-colrv1\";src:url(data:application/x-font-woff;base64,' + fontCOLRv1 + ') format(\"woff\");}' + \"</style>\" + '<text x=\"0\" y=\"0\" font-size=\"20\">' + '<tspan font-family=\"chromacheck-cbdt\" x=\"0\" dy=\"20\">&#xe903;</tspan>' + // CBDT/CBLC\n        '<tspan font-family=\"chromacheck-colr\" x=\"0\" dy=\"20\">&#xe900;</tspan>' + // COLR\n        '<tspan font-family=\"chromacheck-sbix\" x=\"0\" dy=\"20\">&#xe901;</tspan>' + // SBIX\n        '<tspan font-family=\"chromacheck-svg\" x=\"0\" dy=\"20\">&#xe902;</tspan>' + // SVG\n        '<tspan font-family=\"chromacheck-colrv1\" x=\"0\" dy=\"20\">&#xe905;</tspan>' + // COLRv1\n        '<tspan font-family=\"chromacheck-svg\" x=\"0\" dy=\"20\">&#xe904;</tspan>' + // Control\n        \"</text>\" + \"</svg>\";\n        canvas.width = 20;\n        canvas.height = 120;\n        img.onload = function() {\n            if (!checkFontLoad()) // Repeat the test to give Safari time to load the font\n            loop = window.setInterval(checkFontLoad, 1);\n        };\n        img.src = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(svg);\n    } catch (ex) {\n        checkFailed();\n    }\n}\nasync function $388b617130f03bd4$var$main() {\n    // Listen opentype color font format support detector\n    $388b617130f03bd4$var$checkColorFontSupport();\n    const targetElement = document.getElementById(\"opentype-support-detector\");\n    const observer = new MutationObserver((mutationsList)=>{\n        for (const mutation of mutationsList){\n            if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n                if (targetElement.classList.contains(\"chromacheck-colrv1-failed\")) {\n                    $388b617130f03bd4$var$showSupportIssueModal();\n                    console.log(\"Oops, your browser seems to not support OpenType COLR/CPALv1 font, please change another browser such as Desktop Chrome or FireFox.\");\n                    observer.disconnect();\n                }\n            }\n        }\n    });\n    observer.observe(targetElement, {\n        attributes: true\n    });\n    // Set canvas dimensions based on customized-emoji size\n    const originalCanvas = document.getElementById(\"reference-canvas\");\n    originalCanvas.width = document.getElementById(\"customized-emoji\").clientWidth;\n    originalCanvas.height = document.getElementById(\"customized-emoji\").clientHeight;\n    if (window.location.hash) {\n        inputString = window.location.hash.substring(1);\n        const parts = inputString.split(\"-\");\n        // If url has Emoji info, use it\n        document.getElementById(\"customized-emoji\").innerHTML = $388b617130f03bd4$var$unicodeToEmoji(parts[0]);\n        $388b617130f03bd4$var$updateEmoji($388b617130f03bd4$var$unicodeToEmoji(parts[0]), true);\n        // If url has palette info, use it\n        if (parts.length > 1) {\n            $388b617130f03bd4$var$paletteCode = decodeURIComponent($388b617130f03bd4$var$decodeURL(parts[1]));\n            $388b617130f03bd4$var$setOverridePaletteStyle($388b617130f03bd4$var$paletteCode);\n        }\n    } else $388b617130f03bd4$var$updateEmoji($388b617130f03bd4$var$getRandomEmoji(), true);\n}\n$388b617130f03bd4$var$main();\n\n\n//# sourceMappingURL=index.b8b4d44c.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _defineProperty;\n    }\n});\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _tslib[\"__decorate\"];\n    }\n});\nvar _tslib = require(\"tslib\");\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n","function BrotliInput(buffer) {\n  this.buffer = buffer;\n  this.pos = 0;\n}\n\nBrotliInput.prototype.read = function(buf, i, count) {\n  if (this.pos + count > this.buffer.length) {\n    count = this.buffer.length - this.pos;\n  }\n  \n  for (var p = 0; p < count; p++)\n    buf[i + p] = this.buffer[this.pos + p];\n  \n  this.pos += count;\n  return count;\n}\n\nexports.BrotliInput = BrotliInput;\n\nfunction BrotliOutput(buf) {\n  this.buffer = buf;\n  this.pos = 0;\n}\n\nBrotliOutput.prototype.write = function(buf, count) {\n  if (this.pos + count > this.buffer.length)\n    throw new Error('Output buffer is not large enough');\n  \n  this.buffer.set(buf.subarray(0, count), this.pos);\n  this.pos += count;\n  return count;\n};\n\nexports.BrotliOutput = BrotliOutput;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Bit reading helpers\n*/\n\nvar BROTLI_READ_SIZE = 4096;\nvar BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);\nvar BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);\n\nvar kBitMask = new Uint32Array([\n  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,\n  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215\n]);\n\n/* Input byte buffer, consist of a ringbuffer and a \"slack\" region where */\n/* bytes from the start of the ringbuffer are copied. */\nfunction BrotliBitReader(input) {\n  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);\n  this.input_ = input;    /* input callback */\n  \n  this.reset();\n}\n\nBrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;\nBrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;\n\nBrotliBitReader.prototype.reset = function() {\n  this.buf_ptr_ = 0;      /* next input will write here */\n  this.val_ = 0;          /* pre-fetched bits */\n  this.pos_ = 0;          /* byte position in stream */\n  this.bit_pos_ = 0;      /* current bit-reading position in val_ */\n  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */\n  this.eos_ = 0;          /* input stream is finished */\n  \n  this.readMoreInput();\n  for (var i = 0; i < 4; i++) {\n    this.val_ |= this.buf_[this.pos_] << (8 * i);\n    ++this.pos_;\n  }\n  \n  return this.bit_end_pos_ > 0;\n};\n\n/* Fills up the input ringbuffer by calling the input callback.\n\n   Does nothing if there are at least 32 bytes present after current position.\n\n   Returns 0 if either:\n    - the input callback returned an error, or\n    - there is no more input and the position is past the end of the stream.\n\n   After encountering the end of the input stream, 32 additional zero bytes are\n   copied to the ringbuffer, therefore it is safe to call this function after\n   every 32 bytes of input is read.\n*/\nBrotliBitReader.prototype.readMoreInput = function() {\n  if (this.bit_end_pos_ > 256) {\n    return;\n  } else if (this.eos_) {\n    if (this.bit_pos_ > this.bit_end_pos_)\n      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);\n  } else {\n    var dst = this.buf_ptr_;\n    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);\n    if (bytes_read < 0) {\n      throw new Error('Unexpected end of input');\n    }\n    \n    if (bytes_read < BROTLI_READ_SIZE) {\n      this.eos_ = 1;\n      /* Store 32 bytes of zero after the stream end. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[dst + bytes_read + p] = 0;\n    }\n    \n    if (dst === 0) {\n      /* Copy the head of the ringbuffer to the slack region. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];\n\n      this.buf_ptr_ = BROTLI_READ_SIZE;\n    } else {\n      this.buf_ptr_ = 0;\n    }\n    \n    this.bit_end_pos_ += bytes_read << 3;\n  }\n};\n\n/* Guarantees that there are at least 24 bits in the buffer. */\nBrotliBitReader.prototype.fillBitWindow = function() {    \n  while (this.bit_pos_ >= 8) {\n    this.val_ >>>= 8;\n    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;\n    ++this.pos_;\n    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;\n    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;\n  }\n};\n\n/* Reads the specified number of bits from Read Buffer. */\nBrotliBitReader.prototype.readBits = function(n_bits) {\n  if (32 - this.bit_pos_ < n_bits) {\n    this.fillBitWindow();\n  }\n  \n  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);\n  this.bit_pos_ += n_bits;\n  return val;\n};\n\nmodule.exports = BrotliBitReader;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Collection of static dictionary words.\n*/\n\nvar data = require('./dictionary-data');\nexports.init = function() {\n  exports.dictionary = data.init();\n};\n\nexports.offsetsByLength = new Uint32Array([\n     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,\n 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,\n 115968, 118528, 119872, 121280, 122016,\n]);\n\nexports.sizeBitsByLength = new Uint8Array([\n  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,\n 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,\n  7,  6,  6,  5,  5,\n]);\n\nexports.minDictionaryWordLength = 4;\nexports.maxDictionaryWordLength = 24;\n","var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. 😜\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","module.exports=\"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\";\n","function HuffmanCode(bits, value) {\n  this.bits = bits;   /* number of bits used for this symbol */\n  this.value = value; /* symbol value or table offset */\n}\n\nexports.HuffmanCode = HuffmanCode;\n\nvar MAX_LENGTH = 15;\n\n/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the\n   bit-wise reversal of the len least significant bits of key. */\nfunction GetNextKey(key, len) {\n  var step = 1 << (len - 1);\n  while (key & step) {\n    step >>= 1;\n  }\n  return (key & (step - 1)) + step;\n}\n\n/* Stores code in table[0], table[step], table[2*step], ..., table[end] */\n/* Assumes that end is an integer multiple of step */\nfunction ReplicateValue(table, i, step, end, code) {\n  do {\n    end -= step;\n    table[i + end] = new HuffmanCode(code.bits, code.value);\n  } while (end > 0);\n}\n\n/* Returns the table width of the next 2nd level table. count is the histogram\n   of bit lengths for the remaining symbols, len is the code length of the next\n   processed symbol */\nfunction NextTableBitSize(count, len, root_bits) {\n  var left = 1 << (len - root_bits);\n  while (len < MAX_LENGTH) {\n    left -= count[len];\n    if (left <= 0) break;\n    ++len;\n    left <<= 1;\n  }\n  return len - root_bits;\n}\n\nexports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {\n  var start_table = table;\n  var code;            /* current table entry */\n  var len;             /* current code length */\n  var symbol;          /* symbol index in original or sorted table */\n  var key;             /* reversed prefix code */\n  var step;            /* step size to replicate values in current table */\n  var low;             /* low bits for current root entry */\n  var mask;            /* mask for low bits */\n  var table_bits;      /* key length of current table */\n  var table_size;      /* size of current table */\n  var total_size;      /* sum of root table size and 2nd level table sizes */\n  var sorted;          /* symbols sorted by code length */\n  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */\n  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */\n\n  sorted = new Int32Array(code_lengths_size);\n\n  /* build histogram of code lengths */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    count[code_lengths[symbol]]++;\n  }\n\n  /* generate offsets into sorted symbol table by code length */\n  offset[1] = 0;\n  for (len = 1; len < MAX_LENGTH; len++) {\n    offset[len + 1] = offset[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    if (code_lengths[symbol] !== 0) {\n      sorted[offset[code_lengths[symbol]]++] = symbol;\n    }\n  }\n  \n  table_bits = root_bits;\n  table_size = 1 << table_bits;\n  total_size = table_size;\n\n  /* special case code with only one value */\n  if (offset[MAX_LENGTH] === 1) {\n    for (key = 0; key < total_size; ++key) {\n      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);\n    }\n    \n    return total_size;\n  }\n\n  /* fill in root table */\n  key = 0;\n  symbol = 0;\n  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + key, step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n\n  /* fill in 2nd level tables and add pointers to root table */\n  mask = total_size - 1;\n  low = -1;\n  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      if ((key & mask) !== low) {\n        table += table_size;\n        table_bits = NextTableBitSize(count, len, root_bits);\n        table_size = 1 << table_bits;\n        total_size += table_size;\n        low = key & mask;\n        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);\n      }\n      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n  \n  return total_size;\n}\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\n\nvar CONTEXT_LSB6         = 0;\nvar CONTEXT_MSB6         = 1;\nvar CONTEXT_UTF8         = 2;\nvar CONTEXT_SIGNED       = 3;\n\n/* Common context lookup table for all context modes. */\nexports.lookup = new Uint8Array([\n  /* CONTEXT_UTF8, last byte. */\n  /* ASCII range. */\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,\n  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,\n  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,\n  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,\n  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,\n  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,\n  /* UTF8 continuation byte range. */\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  /* UTF8 lead byte range. */\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  /* CONTEXT_UTF8 second last byte. */\n  /* ASCII range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,\n  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n  /* UTF8 continuation byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  /* UTF8 lead byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  /* CONTEXT_SIGNED, second last byte. */\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n  /* CONTEXT_LSB6, last byte. */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  /* CONTEXT_MSB6, last byte. */\n   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,\n   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,\n   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,\n  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,\n  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,\n  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,\n  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,\n  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,\n  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,\n  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,\n  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,\n  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,\n  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,\n  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,\n  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,\n  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n  /* CONTEXT_{M,L}SB6, second last byte, */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n]);\n\nexports.lookupOffsets = new Uint16Array([\n  /* CONTEXT_LSB6 */\n  1024, 1536,\n  /* CONTEXT_MSB6 */\n  1280, 1536,\n  /* CONTEXT_UTF8 */\n  0, 256,\n  /* CONTEXT_SIGNED */\n  768, 512,\n]);\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup tables to map prefix codes to value ranges. This is used during\n   decoding of the block lengths, literal insertion lengths and copy lengths.\n*/\n\n/* Represents the range of values belonging to a prefix code: */\n/* [offset, offset + 2^nbits) */\nfunction PrefixCodeRange(offset, nbits) {\n  this.offset = offset;\n  this.nbits = nbits;\n}\n\nexports.kBlockLengthPrefixCode = [\n  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),\n  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),\n  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),\n  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),\n  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),\n  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),\n  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)\n];\n\nexports.kInsertLengthPrefixCode = [\n  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),\n  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),\n  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),\n  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),\n  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),\n  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),\n];\n\nexports.kCopyLengthPrefixCode = [\n  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),\n  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),\n  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),\n  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),\n  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),\n  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),\n];\n\nexports.kInsertRangeLut = [\n  0, 0, 8, 8, 0, 16, 8, 16, 16,\n];\n\nexports.kCopyRangeLut = [\n  0, 8, 0, 8, 16, 0, 16, 8, 16,\n];\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\n\nvar kIdentity       = 0;\nvar kOmitLast1      = 1;\nvar kOmitLast2      = 2;\nvar kOmitLast3      = 3;\nvar kOmitLast4      = 4;\nvar kOmitLast5      = 5;\nvar kOmitLast6      = 6;\nvar kOmitLast7      = 7;\nvar kOmitLast8      = 8;\nvar kOmitLast9      = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll   = 11;\nvar kOmitFirst1     = 12;\nvar kOmitFirst2     = 13;\nvar kOmitFirst3     = 14;\nvar kOmitFirst4     = 15;\nvar kOmitFirst5     = 16;\nvar kOmitFirst6     = 17;\nvar kOmitFirst7     = 18;\nvar kOmitFirst8     = 19;\nvar kOmitFirst9     = 20;\n\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  \n  for (var i = 0; i < prefix.length; i++)\n    this.prefix[i] = prefix.charCodeAt(i);\n  \n  for (var i = 0; i < suffix.length; i++)\n    this.suffix[i] = suffix.charCodeAt(i);\n}\n\nvar kTransforms = [\n     new Transform(         \"\", kIdentity,       \"\"           ),\n     new Transform(         \"\", kIdentity,       \" \"          ),\n     new Transform(        \" \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kOmitFirst1,     \"\"           ),\n     new Transform(         \"\", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" the \"      ),\n     new Transform(        \" \", kIdentity,       \"\"           ),\n     new Transform(       \"s \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \" and \"      ),\n     new Transform(         \"\", kOmitFirst2,     \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"\"           ),\n     new Transform(       \", \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \", \"         ),\n     new Transform(        \" \", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" in \"       ),\n     new Transform(         \"\", kIdentity,       \" to \"       ),\n     new Transform(       \"e \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \"\\\"\"         ),\n     new Transform(         \"\", kIdentity,       \".\"          ),\n     new Transform(         \"\", kIdentity,       \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"\\n\"         ),\n     new Transform(         \"\", kOmitLast3,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"]\"          ),\n     new Transform(         \"\", kIdentity,       \" for \"      ),\n     new Transform(         \"\", kOmitFirst3,     \"\"           ),\n     new Transform(         \"\", kOmitLast2,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" a \"        ),\n     new Transform(         \"\", kIdentity,       \" that \"     ),\n     new Transform(        \" \", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \". \"         ),\n     new Transform(        \".\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \", \"         ),\n     new Transform(         \"\", kOmitFirst4,     \"\"           ),\n     new Transform(         \"\", kIdentity,       \" with \"     ),\n     new Transform(         \"\", kIdentity,       \"'\"          ),\n     new Transform(         \"\", kIdentity,       \" from \"     ),\n     new Transform(         \"\", kIdentity,       \" by \"       ),\n     new Transform(         \"\", kOmitFirst5,     \"\"           ),\n     new Transform(         \"\", kOmitFirst6,     \"\"           ),\n     new Transform(    \" the \", kIdentity,       \"\"           ),\n     new Transform(         \"\", kOmitLast4,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \". The \"     ),\n     new Transform(         \"\", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \" on \"       ),\n     new Transform(         \"\", kIdentity,       \" as \"       ),\n     new Transform(         \"\", kIdentity,       \" is \"       ),\n     new Transform(         \"\", kOmitLast7,      \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"ing \"       ),\n     new Transform(         \"\", kIdentity,       \"\\n\\t\"       ),\n     new Transform(         \"\", kIdentity,       \":\"          ),\n     new Transform(        \" \", kIdentity,       \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ed \"        ),\n     new Transform(         \"\", kOmitFirst9,     \"\"           ),\n     new Transform(         \"\", kOmitFirst7,     \"\"           ),\n     new Transform(         \"\", kOmitLast6,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kOmitLast8,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" at \"       ),\n     new Transform(         \"\", kIdentity,       \"ly \"        ),\n     new Transform(    \" the \", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kOmitLast5,      \"\"           ),\n     new Transform(         \"\", kOmitLast9,      \"\"           ),\n     new Transform(        \" \", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\"\"         ),\n     new Transform(        \".\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"=\\\"\"        ),\n     new Transform(        \" \", kIdentity,       \".\"          ),\n     new Transform(    \".com/\", kIdentity,       \"\"           ),\n     new Transform(    \" the \", kIdentity,       \" of the \"   ),\n     new Transform(         \"\", kUppercaseFirst, \"'\"          ),\n     new Transform(         \"\", kIdentity,       \". This \"    ),\n     new Transform(         \"\", kIdentity,       \",\"          ),\n     new Transform(        \".\", kIdentity,       \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kIdentity,       \" not \"      ),\n     new Transform(        \" \", kIdentity,       \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"er \"        ),\n     new Transform(        \" \", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kIdentity,       \"al \"        ),\n     new Transform(        \" \", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\"\"         ),\n     new Transform(         \"\", kUppercaseFirst, \". \"         ),\n     new Transform(        \" \", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kIdentity,       \"ful \"       ),\n     new Transform(        \" \", kUppercaseFirst, \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ive \"       ),\n     new Transform(         \"\", kIdentity,       \"less \"      ),\n     new Transform(         \"\", kUppercaseAll,   \"'\"          ),\n     new Transform(         \"\", kIdentity,       \"est \"       ),\n     new Transform(        \" \", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\">\"        ),\n     new Transform(        \" \", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseFirst, \",\"          ),\n     new Transform(         \"\", kIdentity,       \"ize \"       ),\n     new Transform(         \"\", kUppercaseAll,   \".\"          ),\n     new Transform( \"\\xc2\\xa0\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \",\"          ),\n     new Transform(         \"\", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(         \"\", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"ous \"       ),\n     new Transform(         \"\", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \",\"          ),\n     new Transform(        \" \", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseAll,   \",\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseAll,   \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \"='\"         )\n];\n\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\n\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n  \n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n  \n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\n\nexports.transformDictionaryWord = function(dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  \n  if (skip > len) {\n    skip = len;\n  }\n  \n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  \n  word += skip;\n  len -= skip;\n  \n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  \n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  \n  uppercase = idx - len;\n  \n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  \n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  \n  return idx - start_idx;\n}\n","const fontkit = require(\"fontkit\");\nvar originalPalette = [];\nvar customizedPalette = [];\nvar paletteCode = \"\";\nvar shareURL = window.location.href;\n\n\n\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\nvar tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl)\n})\n\n\n\n\n// For example, converter rgba(67, 255, 100, 255) to #43ff64\nfunction rgbaToHexColor(rgbaColorArray) {\n    return \"#\" + rgbaColorArray.slice(0, 3)\n        .map(ele => ele.toString(16))\n        .map(ele => ele.length == 1 ? \"0\" + ele : ele) // Padding zero to two digits\n        .join(\"\");\n}\n\n\nfunction emojiToUnicode(emoji) {\n    var comp;\n    if (emoji.length === 1) {\n        comp = emoji.charCodeAt(0);\n    }\n    comp = (\n        (emoji.charCodeAt(0) - 0xD800) * 0x400 +\n        (emoji.charCodeAt(1) - 0xDC00) + 0x10000\n    );\n    if (comp < 0) {\n        comp = emoji.charCodeAt(0);\n    }\n    return `U+${comp.toString(\"16\").toUpperCase()}`;\n}\n\n\nfunction unicodeToEmoji(unicode) {\n    const codePoint = unicode.replace(\"U+\", \"\");\n    const intCodePoint = parseInt(codePoint, 16);\n    const character = String.fromCodePoint(intCodePoint);\n    return character\n}\n\n\n// Check if two RGBA colors are equal\nfunction areColorsEqual(rgba1, rgba2) {\n    return rgba1.every((component, index) => component === rgba2[index]);\n}\n\n\nfunction encodeURL(url) {\n    return (url.replaceAll(\" \", \"\").replaceAll(\"rgba\", \"\").replaceAll(\",\", \"*\"))\n}\n\n\nfunction decodeURL(url) {\n    return (url.replaceAll(\"*\", \", \").replaceAll(\"(\", \" rgba(\"))\n}\n\n\n// Get the CSS override colors\nfunction getOverrideStyleString() {\n    // Format Example:\n    // override-colors:\n    // 0 rgba(184, 126, 50, 255),\n    // 1 rgba(120, 8, 150, 255),\n    // ...\n    return customizedPalette\n        .map((rgbaColorArray, idx) => `${idx} rgba(${rgbaColorArray.join(\", \")})`)\n        // If customize colors are different from default colors, record them into overrides \n        .filter((_, idx) => !areColorsEqual(customizedPalette[idx], originalPalette[idx]))\n        .join(\", \");\n}\n\n\n\n// Update the CSS palette\nfunction setOverridePaletteStyle(overrideColors) {\n    document.getElementById(\"palette-overrides-style\").innerHTML = `\n\t\t@font-palette-values --palette {\n\t\t\tfont-family: \"Noto Color Emoji\";\n\t\t\tbase-palette: 0;\n\t\t\toverride-colors: ${overrideColors};\n\t\t}\n\t\t`;\n}\n\n\nfunction getRGBAFromPicker(paletteIndex, rgbColor) {\n    [0, 1, 2].forEach(idx => {\n        customizedPalette[paletteIndex][idx] = parseInt(rgbColor.substring(idx * 2, idx * 2 + 2), 16);\n    });\n}\n\n\n// Update a palette from input entry\nfunction updateEmojiAndURL() {\n    const overrideColors = getOverrideStyleString()\n    const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n    setOverridePaletteStyle(overrideColors);\n    window.location.hash = `${emojiToUnicode(thisEmoji)}-${encodeURIComponent(encodeURL(overrideColors))}`;\n    shareURL = window.location.href\n}\n\n\n\nasync function updateEmoji(thisEmoji, keepPalette) {\n    // Fetch Google Font Noto Sans Emoji CSS\n    const fontResponse = await fetch(\"https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&text=\" + encodeURIComponent(thisEmoji));\n    const fontStyle = await fontResponse.text();\n\n    // Reset CSS style\n    document.getElementById(\"emoji-style\").innerHTML = fontStyle;\n    document.getElementById(\"customized-emoji\").innerHTML = thisEmoji;\n    if (!keepPalette) {\n        document.getElementById(\"palette-overrides-style\").innerHTML = \"\";\n    }\n\n    // Get the URL of the woff2 file and convert to binary\n    const fontURL = fontStyle.split(\"\\n\").filter(ele => ele.indexOf(\"src:\") != -1)[0].match(/src:\\s+url\\(([^)]+)\\)/)[1];\n    const fontBinary = await (await fetch(fontURL)).arrayBuffer();\n    const fontBuffer = new Buffer.from(fontBinary);\n    const thisFont = fontkit.create(fontBuffer);\n\n    // Copy default palette to customized palette\n    originalPalette = thisFont.CPAL.colorRecords.slice(\n        thisFont.CPAL.colorRecordIndices[0],\n        thisFont.CPAL.colorRecordIndices[0] + thisFont.CPAL.numPaletteEntries\n    ).map(ele => [ele.red, ele.green, ele.blue, ele.alpha]);\n    customizedPalette = originalPalette.map(rgbaColorArray => [...rgbaColorArray]);\n\n    // Reset color color-pickers\n    const colorPickers = document.getElementById(\"color-pickers\");\n    while (colorPickers.firstChild) {\n        colorPickers.removeChild(colorPickers.firstChild);\n    }\n\n    // Check if color picker should be override\n    var modifiedColorPickers = {}\n    if (paletteCode.length !== 0) {\n        paletteCode.split(\"), \").forEach((rgbColor, _) => {\n            const match = rgbColor.match(/\\d+/g).map((str) => parseInt(str));\n            modifiedColorPickers[match[0]] = [match[1], match[2], match[3], match[4]]\n        })\n    }\n\n    // Add each color picker under color-picker DOM\n    customizedPalette.forEach((rgbaColorArray, idx) => {\n        const picker = document.createElement(\"input\");\n        picker.setAttribute(\"class\", \"color-block\");\n        picker.setAttribute(\"id\", `color-block-${idx}`);\n        picker.type = \"color\";\n\n        if (idx in modifiedColorPickers && keepPalette) {\n            picker.value = rgbaToHexColor(modifiedColorPickers[idx])\n        } else {\n            picker.value = rgbaToHexColor(rgbaColorArray)\n        };\n\n        colorPickers.appendChild(picker);\n        picker.addEventListener(\"input\", (event) => {\n            getRGBAFromPicker(idx, event.target.value.substring(1));\n            updateEmojiAndURL()\n        });\n    });\n\n    const loadPromises = Array.from(document.fonts.values()).map(fontFace => fontFace.load());\n    await Promise.all(loadPromises);\n\n    if (!keepPalette) {\n        window.location.hash = emojiToUnicode(thisEmoji);\n    }\n    updateCanvas(\"reference-canvas\", thisEmoji)\n}\n\n\nfunction updateCanvas(domIdName, thisEmoji) {\n    const canvas = document.getElementById(domIdName);\n    const ctx = canvas.getContext(\"2d\")\n    const scaleProp = 10\n    if (domIdName == \"result-canvas\") {\n        canvas.width = document.getElementById(\"customized-emoji\").clientWidth * scaleProp;\n        canvas.height = document.getElementById(\"customized-emoji\").clientHeight * scaleProp;\n        ctx.scale(scaleProp, scaleProp);\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get font size from px to em\n    const childFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\")).getPropertyValue(\"font-size\"));\n    const parentFontSizePx = parseFloat(window.getComputedStyle(document.getElementById(\"customized-emoji\").parentElement).getPropertyValue(\"font-size\"))\n    const realFontSizeEm = childFontSizePx / parentFontSizePx\n\n    // Set canvas\n    ctx.font = `${realFontSizeEm}em \"Noto Color Emoji\"`;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    if (domIdName == \"result-canvas\") {\n        ctx.fillText(thisEmoji, canvas.width / (2 * scaleProp), canvas.height / (2 * scaleProp));\n    } else {\n        ctx.fillText(thisEmoji, canvas.width / 2, canvas.height / 2);\n    }\n}\n\n\n\n\nfunction selectRandomColor() {\n\n    function getRandomColor() {\n        const minVal = 0\n        const maxVal = 255\n        return Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\n    }\n\n    numPicker = document.querySelectorAll(\".color-block\").length;\n    customizedPalette.forEach((_, idx) => {\n        customizedPalette[idx] = [getRandomColor(), getRandomColor(), getRandomColor(), 255]\n        document.getElementById(`color-block-${idx}`).value = rgbaToHexColor(customizedPalette[idx])\n    })\n    updateEmojiAndURL()\n}\n\n\nfunction selectedFromPicker(thisEmoji) {\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    if (emojiPickerContainer.style.display === \"none\") {\n        emojiPickerContainer.style.display = \"block\";\n    } else {\n        emojiPickerContainer.style.display = \"none\";\n    }\n    updateEmoji(thisEmoji, false)\n}\n\n\n// See https://github.com/missive/emoji-mart for more info and settings\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const emojiPickerOptionsDesktop = {\n        onEmojiSelect: (res, _) => selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8,\n    };\n    const emojiPickerDesktop = new EmojiMart.Picker(emojiPickerOptionsDesktop);\n    document.getElementById(\"emoji-picker\").appendChild(emojiPickerDesktop);\n\n    // Mobile size\n    const emojiPickerButton = document.getElementById(\"emoji-picker-button\");\n    const emojiPickerContainer = document.getElementById(\"emoji-picker-container\");\n    const emojiPickerOptionsMobile = {\n        onEmojiSelect: (res, _) => selectedFromPicker(res[\"native\"]),\n        set: \"google\",\n        emojiSize: 36,\n        perLine: 8,\n    };\n    const emojiPickerMobile = new EmojiMart.Picker(emojiPickerOptionsMobile);\n    emojiPickerContainer.appendChild(emojiPickerMobile);\n\n    emojiPickerButton.addEventListener(\"click\", function() {\n        if (emojiPickerContainer.style.display === \"none\") {\n            emojiPickerContainer.style.display = \"block\";\n        } else {\n            emojiPickerContainer.style.display = \"none\";\n        }\n    });\n});\n\n\nArray.from(document.getElementsByClassName(\"random-emoji-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🎲 Random Select an Emoji 🎲...\")\n            updateEmoji(getRandomEmoji(), false);\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"random-color-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🎨 Random Set Colors 🎨...\")\n            selectRandomColor();\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"reset-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            console.log(\"...🪄 Restore Palette 🪄...\")\n            const thisEmoji = document.getElementById(\"customized-emoji\").innerHTML;\n            updateEmoji(thisEmoji, false)\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"download-button\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const resultCanvas = document.getElementById(\"result-canvas\")\n            updateCanvas(\"result-canvas\", document.getElementById(\"customized-emoji\").innerHTML);\n            const dataURL = resultCanvas.toDataURL(\"image/png\");\n\n            // Create an anchor element to trigger the download\n            const downloadLink = document.createElement(\"a\");\n            console.log(`...💾 Now Downloading Your ${document.getElementById(\"customized-emoji\").innerHTML} 💾 ...`)\n            downloadLink.href = dataURL;\n            downloadLink.download = `${emojiToUnicode(document.getElementById(\"customized-emoji\").innerHTML)}-EmojiSalon.png`;\n            downloadLink.click();\n        });\n    });\n\n\nArray.from(document.getElementsByClassName(\"share-facebook\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const facebookShareURL = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareURL)}`;\n            window.open(facebookShareURL, \"_blank\");\n        });\n    });\n\nArray.from(document.getElementsByClassName(\"share-twitter\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const message = `#EmojiSalon ${shareURL}`\n            const twitterShareURL = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n            window.open(twitterShareURL, \"_blank\");\n        });\n    });\n\n\nArray.from(document.getElementsByClassName(\"share-line\"))\n    .forEach(function(element) {\n        element.addEventListener(\"click\", function() {\n            const lineShareURL = `https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(shareURL)}`;\n            window.open(lineShareURL, \"_blank\");\n        });\n    });\n\n\nfunction showSupportIssueModal() {\n    const modal = document.getElementById(\"supportIssue\");\n    const closeButton = modal.querySelector(\".close\");\n\n    modal.style.display = \"block\";\n\n    closeButton.onclick = function() {\n        modal.style.display = \"none\";\n    };\n\n    window.onclick = function(event) {\n        if (event.target === modal) {\n            modal.style.display = \"none\";\n        }\n    };\n}\n\n\n\n// Default Emoji List\nfunction getRandomEmoji() {\n    const defaultEmojis = [\"😀\", \"😙\", \"😎\", \"😪\", \"🤤\", \"😴\", \"😰\", \"🫁\", \"🦷\", \"🦴\", \"👀\", \"🚀\", \"👍\", \"🤟\", \"🤘\", \"🤙\", \"🧚‍♀️\", \"🧚\", \"🧚‍♂️\", \"🧑‍⚕️\", \"👨‍⚕️\", \"👩‍⚕️\", \"🧑‍🎓\", \"👨‍🎓\", \"👩‍🎓\", \"🧑‍🏫\", \"👨‍🏫\", \"👩‍🏫\", \"🧑‍⚖️\", \"👨‍⚖️\", \"👩‍⚖️\", \"🌟\", \"🧤\", \"🍣\", \"🍤\", \"🍥\", \"🥮\", \"🍡\", \"🥟\", \"🍔\", \"🐈\", \"🐈‍⬛\", \"🐟\", \"🍕\", \"🎉\", \"🐓\", \"🐱\", \"🌺\", \"🍎\", \"🏛\", \"🐭\", \"🐮\", \"🐯\", \"🐰\", \"🐲\", \"🐍\", \"🐴\", \"🐏\", \"🐵\", \"🐔\", \"🐶\", \"🐷\", \"🐕\", \"🐑\", \"🐤\", \"🦕\", \"🦖\", \"🐳\", \"🐋\", \"🐬\", \"🦋\", \"🍀\", \"🍒\", \"🌭\", \"🍩\", \"🏅\", \"🚂\", \"🚗\", \"🏍️\", \"🛳️\", \"☃️\", \"🥻\", \"🧥\", \"👜\", \"👢\", \"📱\", \"🧮\", \"🗃️\", \"🛋️\", \"🩴\", \"🎮\", \"🎠\", \"🛝\", \"🎡\", \"🎢\", \"💈\", \"🎪\"];\n    const randomIndex = Math.floor(Math.random() * defaultEmojis.length);\n    return defaultEmojis[randomIndex];\n}\n\n\n// Reference: https://github.com/RoelN/ChromaCheck\nfunction checkColorFontSupport() {\n    console.log(\"...🕵️ Check the compatibility of your browser 🕵️...\")\n    var root = document.getElementById(\"opentype-support-detector\"),\n        cls = 'chromacheck-',\n        runs = 20,\n        loop;\n\n    // Stick SVG on canvas and check control glyph to see if font rendered\n    function checkFontLoad() {\n        context.drawImage(img, 0, 0);\n\n        // Check Control glyph.\n        if (context.getImageData(10, 110, 1, 1).data[1] === 0) {\n            clearInterval(loop);\n            colorGlyphTest();\n            return true;\n        } else if (--runs <= 0) {\n            clearInterval(loop);\n            checkFailed();\n        }\n    }\n\n    // Canvas has been drawn, check for which color glyphs we see\n    function colorGlyphTest() {\n        var res = {};\n        res.cbdt = context.getImageData(10, 10, 1, 1).data[0] === 100; // CBDT/CBLC\n        res.colr = context.getImageData(10, 30, 1, 1).data[0] === 200; // COLR\n        res.sbix = context.getImageData(10, 50, 1, 1).data[0] === 150; // SBIX\n        res.svg = context.getImageData(10, 70, 1, 1).data[0] === 50; // OpenType-SVG\n        res.colrv1 = context.getImageData(10, 90, 1, 1).data[0] === 250; // COLRv1\n\n        // Add class to HTML tag for each supported color format\n        for (var key in res) {\n            if (res.hasOwnProperty(key)) {\n                if (res[key]) {\n                    root.className += ' ' + cls + key // success\n                } else {\n                    root.className += ' ' + cls + key + \"-failed\" //failed   \n                }\n            }\n        }\n    }\n\n    // Font, SVG, or canvas failed\n    function checkFailed() {\n        root.className += ' ' + cls + 'failed';\n    }\n\n    // Draw color glyphs to a canvas through SVG\n    try {\n        var canvas = document.createElement('canvas'),\n            context = canvas.getContext('2d'),\n            img = new Image(),\n            fontCBDT = 'd09GRgABAAAAAALkAAwAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQkRUAAACVAAAAGAAAABlKWauy0NCTEMAAAK0AAAALQAAAFDwVcDTT1MvMgAAAYAAAAA6AAAAYBf0J01jbWFwAAABxAAAACcAAAAsAAzpNmdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLx0hoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C3AsWcG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAA4bSjsh/j+W2+MkizMIDApQVMAiD6Wm2DNYhmYQCLczAwgSgAAJIHngB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXzS2YWMB9IogMFBgYAAI4IegAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvm//8hpNg/sDwDAFyDBygAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAPIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsp0YXBhCAHWIBft4AWNgZsALAAB9AAR4AWNgYmAICAAhBoaIzgA/d14uKS4gm9fTwyUISAeAMCMzkNxyP+EdkGIO8AlxTWFgeLEkTg3IFfB0cQypYExeIC3BujhBBChfwMB4Z+L7yQxA4Onq57LOKaEJAK3VFft4AWNgYgABRiC2AGIJKJshAAhhAMEGyzIGBCgASbA6DiApCKRZoLKJAGrOAtkAAAA=',\n            fontCOLR = 'd09GRgABAAAAAAKAAAwAAAAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACVAAAABYAAAAYAAIAJUNQQUwAAAJsAAAAEgAAABLJAAAQT1MvMgAAAYAAAAA6AAAAYBfxJ0pjbWFwAAABxAAAACcAAAAsAAzpM2dseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANgxLumdoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAOAAAAD4C5wsecG9zdAAAAkgAAAAMAAAAIAADAAB4AWNgZGAAYQ5+qdB4fpuvDNIsDCBwaQGTAIi+VlscBaJZGMDiHAxMIAoAtjIF/QB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXDSwYWEBdIYgAFBgYA/8sIdAAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kuG//8hpDgjWJ4BAFVMBiYAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAEtxgUNgAAAAMHHIQTShTlOAty9/4bf7AARCwlBNhBw4L/43qXjYGUmf19TMuLcj/BJL3XfBg54AWNgZsALAAB9AAR4AWNgYGAEYj4gFgGygGwICQACOwAoAAAAAAABAAEAAQAAAA4AAAAAyP8AAA==',\n            fontSBIX = 'd09GRgABAAAAAALkAAsAAAAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABbAAAADoAAABgFxIli2NtYXAAAAGwAAAAJwAAACwADOk0Z2x5ZgAAAeAAAAAWAAAAFjdEBkBoZWFkAAABCAAAADAAAAA2C6KlkGhoZWEAAAE4AAAAFgAAACQGQQMiaG10eAAAAagAAAAGAAAABgMgAABsb2NhAAAB2AAAAAYAAAAGAAsAAG1heHAAAAFQAAAAGgAAACACDwAbbmFtZQAAAfgAAABDAAAATgSgDQdwb3N0AAACPAAAAAwAAAAgAAMAAHNiaXgAAAJIAAAAnAAAAQQlRrDFeAFjYGRgAGHhBIvaeH6brwzSzAoMQHBpAZMAiL62JcEZRDMrgMU5GJhAPADavQcJeAFjYGRgYFZgYECQQBFUwAgACqMAbQAAeAFjYGRgYGACQxBgBJNcDCCuBIgJAAHcAC0AAHgBY2BhVmCcwMDKwMA0k+kMAwNDP4RmfM1gzMjJgAoYBZA4CkDAcOAl40tGZgUQH0iiA6AIABEmCNMAAAMgAAAAAAAAeAFjYGBgZGAGYgYGHgYWBgUgzQKEQP5Lxv//IaQ4SA0QAABVYQYnAAAAAAAACwAAAAIAAAAAAyADIAAAAAEAADEBAyADIAAAeAEtxlUBgwAAQME3Q0IgEYiAFCAC7u7t0X3dAW9UPry+Mi8M+P993yVnI6bCoibAJyRjQsc5HWip8e/HhJQHAIYJsAB4AWNgZsALAAB9AAR4AWNgBEIGMOZh1GHwANICUPyDAQgK8tIVOgP83Hm5pLiAXF5PD5cgoHIdEOZgBor4La5zB1KSJa4RJcH5aSXliUWpDI4p+UmpCp65iempQamJKZWFJ1NtgIrYAnxCXKcxgEBehM9EkPGeLo4hFbfeHGQEuaBJ4f/6PA8HIJMW4EMeEw9DwmkGRotpVSIgAU9XP5d1TglNADtgJsU=',\n            fontSVG = 'd09GRgABAAAAAALoAAsAAAAAAxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABcAAAADoAAABgF/MnTlNWRyAAAAJQAAAAlwAAAKrSQDCHY21hcAAAAbQAAAAtAAAANOkY6T1nbHlmAAAB7AAAAB4AAAA0KkgqRmhlYWQAAAEIAAAALwAAADYMS9SPaGhlYQAAATgAAAAVAAAAJAgBBAJobXR4AAABrAAAAAgAAAAIBAAAAGxvY2EAAAHkAAAACAAAAAgADQAabWF4cAAAAVAAAAAdAAAAIAIPAB1uYW1lAAACDAAAADcAAAA8ApwLJXBvc3QAAAJEAAAADAAAACAAAwAAeAFjYGRgAGFZjs2Z8fw2XxmkWRhA4NICJgEQfa22twlEszCAxTkYmEAUANtlBvoAeAFjYGRgYGEAAjgJFEEFjAABkQAQAAAAeAFjYGRgYGBmYAHTDFCSi4GBiYFBAsQEAAISAC8AAAB4AWNgYWFgnMDAysDANJPpDAMDQz+EZnzNYMzIyYAKGAWQOApAwHDgJdNLoAkgACTRgQIDAwAAjAh6AAAEAAAAAAAAAHgBJcU5AYBADACw3NeJuRrw76oi+MkSNEPDZtoRpqZXr3ld/OeVpwbcs+wKIQAAAAAAAAAADQAaeAFjYGQAAhYgZGBmYBBUFFRkYfjDAMK4ZQBZhAThAAB4AWNgYGBikGNgZmBk4WRgBLIYoGwmMNuZIYOhiCGfIZchEcxOZUhmyGZQYAhmCGNwBwBp2QXKAHgBY2BmwAsAAH0ABHgBHUw1dsRQDHTK4Bn+U1qzHdwP1WaDVaA2M7N9jFzYNGJpRtyGiz2f7cZxN2v8YzakCercqg7zjIAiyoDczM6dMPMJ/P68CI/AKK47H63ErCYQNE3xLEl934u9JuaVL6myLEsrA1DoEPCTsQgUoLgwmwB5YZIQuNU2zvp6vX/JgiKrerClP/lV7vZxAoni7QldAG/3K6oA',\n            fontCOLRv1 = 'd09GRgABAAAAAAKMAAwAAAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDT0xSAAACWAAAAB8AAAA3CmUCEUNQQUwAAAJ4AAAAEgAAABL7AAAQT1MvMgAAAYAAAAA6AAAAYBf2J09jbWFwAAABxAAAACcAAAAsAAzpOGdseWYAAAH0AAAAGgAAABoNIh0kaGVhZAAAARwAAAAvAAAANhOUtHxoaGVhAAABTAAAABUAAAAkCAEEAmhtdHgAAAG8AAAABgAAAAYEAAAAbG9jYQAAAewAAAAGAAAABgANAABtYXhwAAABZAAAABsAAAAgAg4AHW5hbWUAAAIQAAAAPAAAAEIDGAuccG9zdAAAAkwAAAAMAAAAIAADAAB4AWNgZGAA4QZvhS/x/DZfGaRZGEDg0gImARB991huPohmYQCLczAwgSgA+bkHtQB4AWNgZGBgYQACOAkUQQWMAAGRABAAAAB4AWNgZGBgYGJgAdMMUJILJMQgAWICAAH3AC4AeAFjYGFhYJzAwMrAwDST6QwDA0M/hGZ8zWDMyMmAChgFkDgKQMBw4CXrS1YWMB9IogMFBgYAAQYIfgAABAAAAAAAAAB4AWNgYGBkYAZiBgYeBhYGBSDNAoRA/kvW//8hpNgfsDwDAFytByoAAAAAAAANAAAAAQAAAAAEAAQAAAMAABEhESEEAPwABAD8AAAAeAFjYGBgYpBjYGZgZOFkYGRQAfIhbCYw25khg6GIIZ8hlyERzE5lSGbIZlAAsv0ZfBiCGMoYDAGREga9eAFjYGbACwAAfQAEeAFjYGRABUoMmIARrIqLi4GBjYGRiYHBgQEAB0EAgwAAAAABAAEAAQAAAA4AAAAA+v8AAA==',\n            svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"120\" style=\"background:#fff;fill:#000;\">' +\n            '<style type=\"text/css\">' +\n            '@font-face{font-family:\"chromacheck-cbdt\";src:url(data:application/x-font-woff;base64,' + fontCBDT + ') format(\"woff\");}' +\n            '@font-face{font-family:\"chromacheck-colr\";src:url(data:application/x-font-woff;base64,' + fontCOLR + ') format(\"woff\");}' +\n            '@font-face{font-family:\"chromacheck-sbix\";src:url(data:application/x-font-woff;base64,' + fontSBIX + ') format(\"woff\");}' +\n            '@font-face{font-family:\"chromacheck-svg\";src:url(data:application/x-font-woff;base64,' + fontSVG + ') format(\"woff\");}' +\n            '@font-face{font-family:\"chromacheck-colrv1\";src:url(data:application/x-font-woff;base64,' + fontCOLRv1 + ') format(\"woff\");}' +\n            '</style>' +\n            '<text x=\"0\" y=\"0\" font-size=\"20\">' +\n            '<tspan font-family=\"chromacheck-cbdt\" x=\"0\" dy=\"20\">&#xe903;</tspan>' + // CBDT/CBLC\n            '<tspan font-family=\"chromacheck-colr\" x=\"0\" dy=\"20\">&#xe900;</tspan>' + // COLR\n            '<tspan font-family=\"chromacheck-sbix\" x=\"0\" dy=\"20\">&#xe901;</tspan>' + // SBIX\n            '<tspan font-family=\"chromacheck-svg\" x=\"0\" dy=\"20\">&#xe902;</tspan>' + // SVG\n            '<tspan font-family=\"chromacheck-colrv1\" x=\"0\" dy=\"20\">&#xe905;</tspan>' + // COLRv1\n            '<tspan font-family=\"chromacheck-svg\" x=\"0\" dy=\"20\">&#xe904;</tspan>' + // Control\n            '</text>' +\n            '</svg>';\n        canvas.width = 20;\n        canvas.height = 120;\n\n        img.onload = function() {\n            if (!checkFontLoad()) {\n                // Repeat the test to give Safari time to load the font\n                loop = window.setInterval(checkFontLoad, 1);\n            }\n        }\n\n        img.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n    } catch (ex) {\n        checkFailed();\n    }\n}\n\n\nasync function main() {\n    // Listen opentype color font format support detector\n    checkColorFontSupport()\n    const targetElement = document.getElementById(\"opentype-support-detector\");\n    const observer = new MutationObserver((mutationsList) => {\n        for (const mutation of mutationsList) {\n            if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n                if (targetElement.classList.contains(\"chromacheck-colrv1-failed\")) {\n                    showSupportIssueModal();\n                    console.log(\"Oops, your browser seems to not support OpenType COLR/CPALv1 font, please change another browser such as Desktop Chrome or FireFox.\")\n                    observer.disconnect();\n                }\n            }\n        }\n    });\n    observer.observe(targetElement, {\n        attributes: true\n    });\n\n    // Set canvas dimensions based on customized-emoji size\n    const originalCanvas = document.getElementById(\"reference-canvas\");\n    originalCanvas.width = document.getElementById(\"customized-emoji\").clientWidth;\n    originalCanvas.height = document.getElementById(\"customized-emoji\").clientHeight;\n\n\n    if (window.location.hash) {\n        inputString = window.location.hash.substring(1)\n        const parts = inputString.split(\"-\");\n        // If url has Emoji info, use it\n        document.getElementById(\"customized-emoji\").innerHTML = unicodeToEmoji(parts[0])\n        updateEmoji(unicodeToEmoji(parts[0]), true);\n\n        // If url has palette info, use it\n        if (parts.length > 1) {\n            paletteCode = decodeURIComponent(decodeURL(parts[1]));\n            setOverridePaletteStyle(paletteCode)\n        }\n    } else {\n        updateEmoji(getRandomEmoji(), true);\n    }\n}\n\nmain()\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var $gfJaN$restructure = require(\"restructure\");\nvar $gfJaN$swchelperslib_define_propertyjs = require(\"@swc/helpers/lib/_define_property.js\");\nvar $gfJaN$swchelperslib_ts_decoratejs = require(\"@swc/helpers/lib/_ts_decorate.js\");\nvar $gfJaN$fastdeepequal = require(\"fast-deep-equal\");\nvar $gfJaN$unicodeproperties = require(\"unicode-properties\");\nvar $gfJaN$unicodetrie = require(\"unicode-trie\");\nvar $gfJaN$dfa = require(\"dfa\");\nvar $gfJaN$clone = require(\"clone\");\nvar $gfJaN$tinyinflate = require(\"tiny-inflate\");\nvar $gfJaN$brotlidecompressjs = require(\"brotli/decompress.js\");\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $59aa4ed98453e1d4$exports = {};\n\n$parcel$export($59aa4ed98453e1d4$exports, \"logErrors\", () => $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78);\n$parcel$export($59aa4ed98453e1d4$exports, \"registerFormat\", () => $59aa4ed98453e1d4$export$36b2f24e97d43be);\n$parcel$export($59aa4ed98453e1d4$exports, \"create\", () => $59aa4ed98453e1d4$export$185802fd694ee1f5);\n$parcel$export($59aa4ed98453e1d4$exports, \"defaultLanguage\", () => $59aa4ed98453e1d4$export$42940898df819940);\n$parcel$export($59aa4ed98453e1d4$exports, \"setDefaultLanguage\", () => $59aa4ed98453e1d4$export$5157e7780d44cc36);\n\nlet $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78 = false;\nlet $59aa4ed98453e1d4$var$formats = [];\nfunction $59aa4ed98453e1d4$export$36b2f24e97d43be(format) {\n    $59aa4ed98453e1d4$var$formats.push(format);\n}\nfunction $59aa4ed98453e1d4$export$185802fd694ee1f5(buffer, postscriptName) {\n    for(let i = 0; i < $59aa4ed98453e1d4$var$formats.length; i++){\n        let format = $59aa4ed98453e1d4$var$formats[i];\n        if (format.probe(buffer)) {\n            let font = new format(new (0, $gfJaN$restructure.DecodeStream)(buffer));\n            if (postscriptName) return font.getFont(postscriptName);\n            return font;\n        }\n    }\n    throw new Error(\"Unknown font format\");\n}\nlet $59aa4ed98453e1d4$export$42940898df819940 = \"en\";\nfunction $59aa4ed98453e1d4$export$5157e7780d44cc36(lang = \"en\") {\n    $59aa4ed98453e1d4$export$42940898df819940 = lang;\n}\n\n\n\n\n\nfunction $3bda6911913b43f0$export$69a3209f1a06c04d(target, key1, descriptor) {\n    if (descriptor.get) {\n        let get = descriptor.get;\n        descriptor.get = function() {\n            let value = get.call(this);\n            Object.defineProperty(this, key1, {\n                value: value\n            });\n            return value;\n        };\n    } else if (typeof descriptor.value === \"function\") {\n        let fn = descriptor.value;\n        return {\n            get () {\n                let cache1 = new Map;\n                function memoized(...args) {\n                    let key = args.length > 0 ? args[0] : \"value\";\n                    if (cache1.has(key)) return cache1.get(key);\n                    let result = fn.apply(this, args);\n                    cache1.set(key, result);\n                    return result;\n                }\n                Object.defineProperty(this, key1, {\n                    value: memoized\n                });\n                return memoized;\n            }\n        };\n    }\n}\n\n\n\n\n\nlet $e4ae0436c91af89f$var$SubHeader = new $gfJaN$restructure.Struct({\n    firstCode: $gfJaN$restructure.uint16,\n    entryCount: $gfJaN$restructure.uint16,\n    idDelta: $gfJaN$restructure.int16,\n    idRangeOffset: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$CmapGroup = new $gfJaN$restructure.Struct({\n    startCharCode: $gfJaN$restructure.uint32,\n    endCharCode: $gfJaN$restructure.uint32,\n    glyphID: $gfJaN$restructure.uint32\n});\nlet $e4ae0436c91af89f$var$UnicodeValueRange = new $gfJaN$restructure.Struct({\n    startUnicodeValue: $gfJaN$restructure.uint24,\n    additionalCount: $gfJaN$restructure.uint8\n});\nlet $e4ae0436c91af89f$var$UVSMapping = new $gfJaN$restructure.Struct({\n    unicodeValue: $gfJaN$restructure.uint24,\n    glyphID: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$DefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UnicodeValueRange, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$NonDefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UVSMapping, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$VarSelectorRecord = new $gfJaN$restructure.Struct({\n    varSelector: $gfJaN$restructure.uint24,\n    defaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$DefaultUVS, {\n        type: \"parent\"\n    }),\n    nonDefaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$NonDefaultUVS, {\n        type: \"parent\"\n    })\n});\nlet $e4ae0436c91af89f$var$CmapSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        codeMap: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 256)\n    },\n    2: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        subHeaderKeys: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 256),\n        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys),\n        subHeaders: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$SubHeader, \"subHeaderCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"subHeaderCount\")\n    },\n    4: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        segCountX2: $gfJaN$restructure.uint16,\n        segCount: (t)=>t.segCountX2 >> 1,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        endCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        reservedPad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        startCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        idDelta: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"segCount\"),\n        idRangeOffset: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, (t)=>(t.length - t._currentOffset) / 2)\n    },\n    6: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        firstCode: $gfJaN$restructure.uint16,\n        entryCount: $gfJaN$restructure.uint16,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"entryCount\")\n    },\n    8: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint16,\n        is32: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 8192),\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    10: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        firstCode: $gfJaN$restructure.uint32,\n        entryCount: $gfJaN$restructure.uint32,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"numChars\")\n    },\n    12: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    13: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    14: {\n        length: $gfJaN$restructure.uint32,\n        numRecords: $gfJaN$restructure.uint32,\n        varSelectors: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$VarSelectorRecord, \"numRecords\")\n    }\n});\nlet $e4ae0436c91af89f$var$CmapEntry = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    table: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$CmapSubtable, {\n        type: \"parent\",\n        lazy: true\n    })\n});\nvar // character to glyph mapping\n$e4ae0436c91af89f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numSubtables: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($e4ae0436c91af89f$var$CmapEntry, \"numSubtables\")\n});\n\n\n\nvar // font header\n$55a60976afb7c261$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    revision: $gfJaN$restructure.int32,\n    checkSumAdjustment: $gfJaN$restructure.uint32,\n    magicNumber: $gfJaN$restructure.uint32,\n    flags: $gfJaN$restructure.uint16,\n    unitsPerEm: $gfJaN$restructure.uint16,\n    created: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    modified: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    macStyle: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"outline\",\n        \"shadow\",\n        \"condensed\",\n        \"extended\"\n    ]),\n    lowestRecPPEM: $gfJaN$restructure.uint16,\n    fontDirectionHint: $gfJaN$restructure.int16,\n    indexToLocFormat: $gfJaN$restructure.int16,\n    glyphDataFormat: $gfJaN$restructure.int16 // 0 for current format\n});\n\n\n\nvar // horizontal header\n$dde72b7b5b650596$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceWidthMax: $gfJaN$restructure.uint16,\n    minLeftSideBearing: $gfJaN$restructure.int16,\n    minRightSideBearing: $gfJaN$restructure.int16,\n    xMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance widths in 'hmtx' table\n});\n\n\n\nlet $a7c40184072c9a5b$var$HmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16\n});\nvar $a7c40184072c9a5b$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($a7c40184072c9a5b$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n\n\n\nvar // maxiumum profile\n$521197722369f691$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    maxPoints: $gfJaN$restructure.uint16,\n    maxContours: $gfJaN$restructure.uint16,\n    maxComponentPoints: $gfJaN$restructure.uint16,\n    maxComponentContours: $gfJaN$restructure.uint16,\n    maxZones: $gfJaN$restructure.uint16,\n    maxTwilightPoints: $gfJaN$restructure.uint16,\n    maxStorage: $gfJaN$restructure.uint16,\n    maxFunctionDefs: $gfJaN$restructure.uint16,\n    maxInstructionDefs: $gfJaN$restructure.uint16,\n    maxStackElements: $gfJaN$restructure.uint16,\n    maxSizeOfInstructions: $gfJaN$restructure.uint16,\n    maxComponentElements: $gfJaN$restructure.uint16,\n    maxComponentDepth: $gfJaN$restructure.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n\n\nfunction $e2613b812f052cbe$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {\n    if (platformID === 1 && $e2613b812f052cbe$export$479e671907f486d1[languageID]) return $e2613b812f052cbe$export$479e671907f486d1[languageID];\n    return $e2613b812f052cbe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nconst $e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS = new Set([\n    \"x-mac-roman\",\n    \"x-mac-cyrillic\",\n    \"iso-8859-6\",\n    \"iso-8859-8\"\n]);\nconst $e2613b812f052cbe$var$MAC_ENCODINGS = {\n    \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\u0160\\u2122\\xb4\\xa8\\u2260\\u017D\\xd8\\u221E\\xb1\\u2264\\u2265\\u2206\\xb5\\u2202\\u2211\\u220F\\u0161\\u222B\\xaa\\xba\\u03A9\\u017E\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u0106\\xab\\u010C\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\uF8FF\\xa9\\u2044\\u20AC\\u2039\\u203A\\xc6\\xbb\\u2013\\xb7\\u201A\\u201E\\u2030\\xc2\\u0107\\xc1\\u010D\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u0111\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u03C0\\xcb\\u02DA\\xb8\\xca\\xe6\\u02C7\",\n    \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u1E02\\xb1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xe6\\xf8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xff\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xb7\\u1EF2\\u1EF3\\u204A\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u2663\\xd2\\xda\\xdb\\xd9\\u0131\\xdd\\xfd\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n    \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc\\u0385\\xe0\\xe2\\xe4\\u0384\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3\\u2122\\xee\\xef\\u2022\\xbd\\u2030\\xf4\\xf6\\xa6\\u20AC\\xf9\\xfb\\xfc\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xdf\\xae\\xa9\\u03A3\\u03AA\\xa7\\u2260\\xb0\\xb7\\u0391\\xb1\\u2264\\u2265\\xa5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xac\\u039F\\u03A1\\u2248\\u03A4\\xab\\xbb\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xf7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xad\",\n    \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\xd0\\xf0\\xde\\xfe\\xfd\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xb0\\u14A1\\u14A5\\u14A6\\u2022\\xb6\\u14A7\\xae\\xa9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n    \"x-mac-ce\": \"\\xc4\\u0100\\u0101\\xc9\\u0104\\xd6\\xdc\\xe1\\u0105\\u010C\\xe4\\u010D\\u0106\\u0107\\xe9\\u0179\\u017A\\u010E\\xed\\u010F\\u0112\\u0113\\u0116\\xf3\\u0117\\xf4\\xf6\\xf5\\xfa\\u011A\\u011B\\xfc\\u2020\\xb0\\u0118\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\u0119\\xa8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xac\\u221A\\u0144\\u0147\\u2206\\xab\\xbb\\u2026 \\u0148\\u0150\\xd5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xc1\\u0164\\u0165\\xcd\\u017D\\u017E\\u016A\\xd3\\xd4\\u016B\\u016E\\xda\\u016F\\u0170\\u0171\\u0172\\u0173\\xdd\\xfd\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n    \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\u0102\\u0218\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\u0103\\u0219\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\uF8A0\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\"\n};\nconst $e2613b812f052cbe$var$encodingCache = new Map();\nfunction $e2613b812f052cbe$export$1dceb3c14ed68bee(encoding) {\n    let cached = $e2613b812f052cbe$var$encodingCache.get(encoding);\n    if (cached) return cached;\n    // These encodings aren't supported by TextDecoder.\n    let mapping = $e2613b812f052cbe$var$MAC_ENCODINGS[encoding];\n    if (mapping) {\n        let res = new Map();\n        for(let i = 0; i < mapping.length; i++)res.set(mapping.charCodeAt(i), 0x80 + i);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n    // Only single byte encodings can be mapped 1:1.\n    if ($e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n        // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n        // Use this to create a mapping of code points.\n        let decoder = new TextDecoder(encoding);\n        let mapping = new Uint8Array(0x80);\n        for(let i = 0; i < 0x80; i++)mapping[i] = 0x80 + i;\n        let res = new Map();\n        let s = decoder.decode(mapping);\n        for(let i1 = 0; i1 < 0x80; i1++)res.set(s.charCodeAt(i1), 0x80 + i1);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n}\nconst $e2613b812f052cbe$export$6fef87b7618bdf0b = [\n    // unicode\n    [\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\"\n    ],\n    // macintosh\n    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n    // 0\tRoman                 17\tMalayalam\n    // 1\tJapanese\t            18\tSinhalese\n    // 2\tTraditional Chinese\t  19\tBurmese\n    // 3\tKorean\t              20\tKhmer\n    // 4\tArabic\t              21\tThai\n    // 5\tHebrew\t              22\tLaotian\n    // 6\tGreek\t                23\tGeorgian\n    // 7\tRussian\t              24\tArmenian\n    // 8\tRSymbol\t              25\tSimplified Chinese\n    // 9\tDevanagari\t          26\tTibetan\n    // 10\tGurmukhi\t            27\tMongolian\n    // 11\tGujarati\t            28\tGeez\n    // 12\tOriya\t                29\tSlavic\n    // 13\tBengali\t              30\tVietnamese\n    // 14\tTamil\t                31\tSindhi\n    // 15\tTelugu\t              32\t(Uninterpreted)\n    // 16\tKannada\n    [\n        \"x-mac-roman\",\n        \"shift-jis\",\n        \"big5\",\n        \"euc-kr\",\n        \"iso-8859-6\",\n        \"iso-8859-8\",\n        \"x-mac-greek\",\n        \"x-mac-cyrillic\",\n        \"x-mac-symbol\",\n        \"x-mac-devanagari\",\n        \"x-mac-gurmukhi\",\n        \"x-mac-gujarati\",\n        \"Oriya\",\n        \"Bengali\",\n        \"Tamil\",\n        \"Telugu\",\n        \"Kannada\",\n        \"Malayalam\",\n        \"Sinhalese\",\n        \"Burmese\",\n        \"Khmer\",\n        \"iso-8859-11\",\n        \"Laotian\",\n        \"Georgian\",\n        \"Armenian\",\n        \"hz-gb-2312\",\n        \"Tibetan\",\n        \"Mongolian\",\n        \"Geez\",\n        \"x-mac-ce\",\n        \"Vietnamese\",\n        \"Sindhi\"\n    ],\n    // ISO (deprecated)\n    [\n        \"ascii\"\n    ],\n    // windows\n    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n    [\n        \"symbol\",\n        \"utf16be\",\n        \"shift-jis\",\n        \"gb18030\",\n        \"big5\",\n        \"x-cp20949\",\n        \"johab\",\n        null,\n        null,\n        null,\n        \"utf16be\"\n    ]\n];\nconst $e2613b812f052cbe$export$479e671907f486d1 = {\n    15: \"x-mac-icelandic\",\n    17: \"x-mac-turkish\",\n    18: \"x-mac-croatian\",\n    24: \"x-mac-ce\",\n    25: \"x-mac-ce\",\n    26: \"x-mac-ce\",\n    27: \"x-mac-ce\",\n    28: \"x-mac-ce\",\n    30: \"x-mac-icelandic\",\n    37: \"x-mac-romanian\",\n    38: \"x-mac-ce\",\n    39: \"x-mac-ce\",\n    40: \"x-mac-ce\",\n    143: \"x-mac-inuit\",\n    146: \"x-mac-gaelic\"\n};\nconst $e2613b812f052cbe$export$2092376fd002e13 = [\n    // unicode\n    [],\n    {\n        0: \"en\",\n        30: \"fo\",\n        60: \"ks\",\n        90: \"rw\",\n        1: \"fr\",\n        31: \"fa\",\n        61: \"ku\",\n        91: \"rn\",\n        2: \"de\",\n        32: \"ru\",\n        62: \"sd\",\n        92: \"ny\",\n        3: \"it\",\n        33: \"zh\",\n        63: \"bo\",\n        93: \"mg\",\n        4: \"nl\",\n        34: \"nl-BE\",\n        64: \"ne\",\n        94: \"eo\",\n        5: \"sv\",\n        35: \"ga\",\n        65: \"sa\",\n        128: \"cy\",\n        6: \"es\",\n        36: \"sq\",\n        66: \"mr\",\n        129: \"eu\",\n        7: \"da\",\n        37: \"ro\",\n        67: \"bn\",\n        130: \"ca\",\n        8: \"pt\",\n        38: \"cz\",\n        68: \"as\",\n        131: \"la\",\n        9: \"no\",\n        39: \"sk\",\n        69: \"gu\",\n        132: \"qu\",\n        10: \"he\",\n        40: \"si\",\n        70: \"pa\",\n        133: \"gn\",\n        11: \"ja\",\n        41: \"yi\",\n        71: \"or\",\n        134: \"ay\",\n        12: \"ar\",\n        42: \"sr\",\n        72: \"ml\",\n        135: \"tt\",\n        13: \"fi\",\n        43: \"mk\",\n        73: \"kn\",\n        136: \"ug\",\n        14: \"el\",\n        44: \"bg\",\n        74: \"ta\",\n        137: \"dz\",\n        15: \"is\",\n        45: \"uk\",\n        75: \"te\",\n        138: \"jv\",\n        16: \"mt\",\n        46: \"be\",\n        76: \"si\",\n        139: \"su\",\n        17: \"tr\",\n        47: \"uz\",\n        77: \"my\",\n        140: \"gl\",\n        18: \"hr\",\n        48: \"kk\",\n        78: \"km\",\n        141: \"af\",\n        19: \"zh-Hant\",\n        49: \"az-Cyrl\",\n        79: \"lo\",\n        142: \"br\",\n        20: \"ur\",\n        50: \"az-Arab\",\n        80: \"vi\",\n        143: \"iu\",\n        21: \"hi\",\n        51: \"hy\",\n        81: \"id\",\n        144: \"gd\",\n        22: \"th\",\n        52: \"ka\",\n        82: \"tl\",\n        145: \"gv\",\n        23: \"ko\",\n        53: \"mo\",\n        83: \"ms\",\n        146: \"ga\",\n        24: \"lt\",\n        54: \"ky\",\n        84: \"ms-Arab\",\n        147: \"to\",\n        25: \"pl\",\n        55: \"tg\",\n        85: \"am\",\n        148: \"el-polyton\",\n        26: \"hu\",\n        56: \"tk\",\n        86: \"ti\",\n        149: \"kl\",\n        27: \"es\",\n        57: \"mn-CN\",\n        87: \"om\",\n        150: \"az\",\n        28: \"lv\",\n        58: \"mn\",\n        88: \"so\",\n        151: \"nn\",\n        29: \"se\",\n        59: \"ps\",\n        89: \"sw\"\n    },\n    // ISO (deprecated)\n    [],\n    {\n        0x0436: \"af\",\n        0x4009: \"en-IN\",\n        0x0487: \"rw\",\n        0x0432: \"tn\",\n        0x041C: \"sq\",\n        0x1809: \"en-IE\",\n        0x0441: \"sw\",\n        0x045B: \"si\",\n        0x0484: \"gsw\",\n        0x2009: \"en-JM\",\n        0x0457: \"kok\",\n        0x041B: \"sk\",\n        0x045E: \"am\",\n        0x4409: \"en-MY\",\n        0x0412: \"ko\",\n        0x0424: \"sl\",\n        0x1401: \"ar-DZ\",\n        0x1409: \"en-NZ\",\n        0x0440: \"ky\",\n        0x2C0A: \"es-AR\",\n        0x3C01: \"ar-BH\",\n        0x3409: \"en-PH\",\n        0x0454: \"lo\",\n        0x400A: \"es-BO\",\n        0x0C01: \"ar\",\n        0x4809: \"en-SG\",\n        0x0426: \"lv\",\n        0x340A: \"es-CL\",\n        0x0801: \"ar-IQ\",\n        0x1C09: \"en-ZA\",\n        0x0427: \"lt\",\n        0x240A: \"es-CO\",\n        0x2C01: \"ar-JO\",\n        0x2C09: \"en-TT\",\n        0x082E: \"dsb\",\n        0x140A: \"es-CR\",\n        0x3401: \"ar-KW\",\n        0x0809: \"en-GB\",\n        0x046E: \"lb\",\n        0x1C0A: \"es-DO\",\n        0x3001: \"ar-LB\",\n        0x0409: \"en\",\n        0x042F: \"mk\",\n        0x300A: \"es-EC\",\n        0x1001: \"ar-LY\",\n        0x3009: \"en-ZW\",\n        0x083E: \"ms-BN\",\n        0x440A: \"es-SV\",\n        0x1801: \"ary\",\n        0x0425: \"et\",\n        0x043E: \"ms\",\n        0x100A: \"es-GT\",\n        0x2001: \"ar-OM\",\n        0x0438: \"fo\",\n        0x044C: \"ml\",\n        0x480A: \"es-HN\",\n        0x4001: \"ar-QA\",\n        0x0464: \"fil\",\n        0x043A: \"mt\",\n        0x080A: \"es-MX\",\n        0x0401: \"ar-SA\",\n        0x040B: \"fi\",\n        0x0481: \"mi\",\n        0x4C0A: \"es-NI\",\n        0x2801: \"ar-SY\",\n        0x080C: \"fr-BE\",\n        0x047A: \"arn\",\n        0x180A: \"es-PA\",\n        0x1C01: \"aeb\",\n        0x0C0C: \"fr-CA\",\n        0x044E: \"mr\",\n        0x3C0A: \"es-PY\",\n        0x3801: \"ar-AE\",\n        0x040C: \"fr\",\n        0x047C: \"moh\",\n        0x280A: \"es-PE\",\n        0x2401: \"ar-YE\",\n        0x140C: \"fr-LU\",\n        0x0450: \"mn\",\n        0x500A: \"es-PR\",\n        0x042B: \"hy\",\n        0x180C: \"fr-MC\",\n        0x0850: \"mn-CN\",\n        0x0C0A: \"es\",\n        0x044D: \"as\",\n        0x100C: \"fr-CH\",\n        0x0461: \"ne\",\n        0x040A: \"es\",\n        0x082C: \"az-Cyrl\",\n        0x0462: \"fy\",\n        0x0414: \"nb\",\n        0x540A: \"es-US\",\n        0x042C: \"az\",\n        0x0456: \"gl\",\n        0x0814: \"nn\",\n        0x380A: \"es-UY\",\n        0x046D: \"ba\",\n        0x0437: \"ka\",\n        0x0482: \"oc\",\n        0x200A: \"es-VE\",\n        0x042D: \"eu\",\n        0x0C07: \"de-AT\",\n        0x0448: \"or\",\n        0x081D: \"sv-FI\",\n        0x0423: \"be\",\n        0x0407: \"de\",\n        0x0463: \"ps\",\n        0x041D: \"sv\",\n        0x0845: \"bn\",\n        0x1407: \"de-LI\",\n        0x0415: \"pl\",\n        0x045A: \"syr\",\n        0x0445: \"bn-IN\",\n        0x1007: \"de-LU\",\n        0x0416: \"pt\",\n        0x0428: \"tg\",\n        0x201A: \"bs-Cyrl\",\n        0x0807: \"de-CH\",\n        0x0816: \"pt-PT\",\n        0x085F: \"tzm\",\n        0x141A: \"bs\",\n        0x0408: \"el\",\n        0x0446: \"pa\",\n        0x0449: \"ta\",\n        0x047E: \"br\",\n        0x046F: \"kl\",\n        0x046B: \"qu-BO\",\n        0x0444: \"tt\",\n        0x0402: \"bg\",\n        0x0447: \"gu\",\n        0x086B: \"qu-EC\",\n        0x044A: \"te\",\n        0x0403: \"ca\",\n        0x0468: \"ha\",\n        0x0C6B: \"qu\",\n        0x041E: \"th\",\n        0x0C04: \"zh-HK\",\n        0x040D: \"he\",\n        0x0418: \"ro\",\n        0x0451: \"bo\",\n        0x1404: \"zh-MO\",\n        0x0439: \"hi\",\n        0x0417: \"rm\",\n        0x041F: \"tr\",\n        0x0804: \"zh\",\n        0x040E: \"hu\",\n        0x0419: \"ru\",\n        0x0442: \"tk\",\n        0x1004: \"zh-SG\",\n        0x040F: \"is\",\n        0x243B: \"smn\",\n        0x0480: \"ug\",\n        0x0404: \"zh-TW\",\n        0x0470: \"ig\",\n        0x103B: \"smj-NO\",\n        0x0422: \"uk\",\n        0x0483: \"co\",\n        0x0421: \"id\",\n        0x143B: \"smj\",\n        0x042E: \"hsb\",\n        0x041A: \"hr\",\n        0x045D: \"iu\",\n        0x0C3B: \"se-FI\",\n        0x0420: \"ur\",\n        0x101A: \"hr-BA\",\n        0x085D: \"iu-Latn\",\n        0x043B: \"se\",\n        0x0843: \"uz-Cyrl\",\n        0x0405: \"cs\",\n        0x083C: \"ga\",\n        0x083B: \"se-SE\",\n        0x0443: \"uz\",\n        0x0406: \"da\",\n        0x0434: \"xh\",\n        0x203B: \"sms\",\n        0x042A: \"vi\",\n        0x048C: \"prs\",\n        0x0435: \"zu\",\n        0x183B: \"sma-NO\",\n        0x0452: \"cy\",\n        0x0465: \"dv\",\n        0x0410: \"it\",\n        0x1C3B: \"sms\",\n        0x0488: \"wo\",\n        0x0813: \"nl-BE\",\n        0x0810: \"it-CH\",\n        0x044F: \"sa\",\n        0x0485: \"sah\",\n        0x0413: \"nl\",\n        0x0411: \"ja\",\n        0x1C1A: \"sr-Cyrl-BA\",\n        0x0478: \"ii\",\n        0x0C09: \"en-AU\",\n        0x044B: \"kn\",\n        0x0C1A: \"sr\",\n        0x046A: \"yo\",\n        0x2809: \"en-BZ\",\n        0x043F: \"kk\",\n        0x181A: \"sr-Latn-BA\",\n        0x1009: \"en-CA\",\n        0x0453: \"km\",\n        0x081A: \"sr-Latn\",\n        0x2409: \"en-029\",\n        0x0486: \"quc\",\n        0x046C: \"nso\"\n    }\n];\n\n\nlet $51a9f4feb3a3b2b1$var$NameRecord = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    languageID: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    length: $gfJaN$restructure.uint16,\n    string: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", (t)=>(0, $e2613b812f052cbe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID)), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.parent.stringOffset,\n        allowNull: false\n    })\n});\nlet $51a9f4feb3a3b2b1$var$LangTagRecord = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    tag: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", \"utf16be\"), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.stringOffset\n    })\n});\nvar $51a9f4feb3a3b2b1$var$NameTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\")\n    },\n    1: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\"),\n        langTagCount: $gfJaN$restructure.uint16,\n        langTags: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$LangTagRecord, \"langTagCount\")\n    }\n});\nvar $51a9f4feb3a3b2b1$export$2e2bcd8739ae039 = $51a9f4feb3a3b2b1$var$NameTable;\nconst $51a9f4feb3a3b2b1$var$NAMES = [\n    \"copyright\",\n    \"fontFamily\",\n    \"fontSubfamily\",\n    \"uniqueSubfamily\",\n    \"fullName\",\n    \"version\",\n    \"postscriptName\",\n    \"trademark\",\n    \"manufacturer\",\n    \"designer\",\n    \"description\",\n    \"vendorURL\",\n    \"designerURL\",\n    \"license\",\n    \"licenseURL\",\n    null,\n    \"preferredFamily\",\n    \"preferredSubfamily\",\n    \"compatibleFull\",\n    \"sampleText\",\n    \"postscriptCIDFontName\",\n    \"wwsFamilyName\",\n    \"wwsSubfamilyName\"\n];\n$51a9f4feb3a3b2b1$var$NameTable.process = function(stream) {\n    var records = {};\n    for (let record of this.records){\n        // find out what language this is for\n        let language = (0, $e2613b812f052cbe$export$2092376fd002e13)[record.platformID][record.languageID];\n        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n        if (language == null) language = record.platformID + \"-\" + record.languageID;\n        // if the nameID is >= 256, it is a font feature record (AAT)\n        let key = record.nameID >= 256 ? \"fontFeatures\" : $51a9f4feb3a3b2b1$var$NAMES[record.nameID] || record.nameID;\n        if (records[key] == null) records[key] = {};\n        let obj = records[key];\n        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n        if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n    this.records = records;\n};\n$51a9f4feb3a3b2b1$var$NameTable.preEncode = function() {\n    if (Array.isArray(this.records)) return;\n    this.version = 0;\n    let records = [];\n    for(let key in this.records){\n        let val = this.records[key];\n        if (key === \"fontFeatures\") continue;\n        records.push({\n            platformID: 3,\n            encodingID: 1,\n            languageID: 0x409,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length * 2,\n            string: val.en\n        });\n        if (key === \"postscriptName\") records.push({\n            platformID: 1,\n            encodingID: 0,\n            languageID: 0,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length,\n            string: val.en\n        });\n    }\n    this.records = records;\n    this.count = records.length;\n    this.stringOffset = $51a9f4feb3a3b2b1$var$NameTable.size(this, null, false);\n};\n\n\n\nvar $114ea85db469b435$var$OS2 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        xAvgCharWidth: $gfJaN$restructure.int16,\n        usWeightClass: $gfJaN$restructure.uint16,\n        usWidthClass: $gfJaN$restructure.uint16,\n        fsType: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            null,\n            \"noEmbedding\",\n            \"viewOnly\",\n            \"editable\",\n            null,\n            null,\n            null,\n            null,\n            \"noSubsetting\",\n            \"bitmapOnly\"\n        ]),\n        ySubscriptXSize: $gfJaN$restructure.int16,\n        ySubscriptYSize: $gfJaN$restructure.int16,\n        ySubscriptXOffset: $gfJaN$restructure.int16,\n        ySubscriptYOffset: $gfJaN$restructure.int16,\n        ySuperscriptXSize: $gfJaN$restructure.int16,\n        ySuperscriptYSize: $gfJaN$restructure.int16,\n        ySuperscriptXOffset: $gfJaN$restructure.int16,\n        ySuperscriptYOffset: $gfJaN$restructure.int16,\n        yStrikeoutSize: $gfJaN$restructure.int16,\n        yStrikeoutPosition: $gfJaN$restructure.int16,\n        sFamilyClass: $gfJaN$restructure.int16,\n        panose: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 10),\n        ulCharRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 4),\n        vendorID: new $gfJaN$restructure.String(4),\n        fsSelection: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            \"italic\",\n            \"underscore\",\n            \"negative\",\n            \"outlined\",\n            \"strikeout\",\n            \"bold\",\n            \"regular\",\n            \"useTypoMetrics\",\n            \"wws\",\n            \"oblique\"\n        ]),\n        usFirstCharIndex: $gfJaN$restructure.uint16,\n        usLastCharIndex: $gfJaN$restructure.uint16 // The maximum Unicode index in this font\n    },\n    // The Apple version of this table ends here, but the Microsoft one continues on...\n    0: {},\n    1: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2)\n    },\n    2: {\n        // these should be common with version 1 somehow\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16\n    },\n    5: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16,\n        usLowerOpticalPointSize: $gfJaN$restructure.uint16,\n        usUpperOpticalPointSize: $gfJaN$restructure.uint16\n    }\n});\nlet $114ea85db469b435$var$versions = $114ea85db469b435$var$OS2.versions;\n$114ea85db469b435$var$versions[3] = $114ea85db469b435$var$versions[4] = $114ea85db469b435$var$versions[2];\nvar $114ea85db469b435$export$2e2bcd8739ae039 = $114ea85db469b435$var$OS2;\n\n\n\nvar // PostScript information\n$f93b30299e1ea0f5$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed32, {\n    header: {\n        italicAngle: $gfJaN$restructure.fixed32,\n        underlinePosition: $gfJaN$restructure.int16,\n        underlineThickness: $gfJaN$restructure.int16,\n        isFixedPitch: $gfJaN$restructure.uint32,\n        minMemType42: $gfJaN$restructure.uint32,\n        maxMemType42: $gfJaN$restructure.uint32,\n        minMemType1: $gfJaN$restructure.uint32,\n        maxMemType1: $gfJaN$restructure.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n    },\n    1: {},\n    2: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        glyphNameIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfGlyphs\"),\n        names: new $gfJaN$restructure.Array(new $gfJaN$restructure.String($gfJaN$restructure.uint8))\n    },\n    2.5: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numberOfGlyphs\")\n    },\n    3: {},\n    4: {\n        map: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.maxp.numGlyphs)\n    }\n});\n\n\n\nvar // An array of predefined values accessible by instructions\n$8fb09b0f473d61a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValues: new $gfJaN$restructure.Array($gfJaN$restructure.int16)\n});\n\n\n\nvar // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$873d79fea57d3161$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nlet $83c4155666d50c37$var$loca = new $gfJaN$restructure.VersionedStruct(\"head.indexToLocFormat\", {\n    0: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16)\n    },\n    1: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32)\n    }\n});\n$83c4155666d50c37$var$loca.process = function() {\n    if (this.version === 0 && !this._processed) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;\n        this._processed = true;\n    }\n};\n$83c4155666d50c37$var$loca.preEncode = function() {\n    if (this.version === 0 && this._processed !== false) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;\n        this._processed = false;\n    }\n};\nvar $83c4155666d50c37$export$2e2bcd8739ae039 = $83c4155666d50c37$var$loca;\n\n\n\nvar // Set of instructions executed whenever the point size or font transformation change\n$b12598db7cdf7042$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValueProgram: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nvar // only used for encoding\n$7707bdf21a3d89cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Array(new $gfJaN$restructure.Buffer);\n\n\n\n\nclass $9eaea3754914a290$export$2e2bcd8739ae039 {\n    getCFFVersion(ctx) {\n        while(ctx && !ctx.hdrSize)ctx = ctx.parent;\n        return ctx ? ctx.version : -1;\n    }\n    decode(stream, parent) {\n        let version = this.getCFFVersion(parent);\n        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n        if (count === 0) return [];\n        let offSize = stream.readUInt8();\n        let offsetType;\n        if (offSize === 1) offsetType = $gfJaN$restructure.uint8;\n        else if (offSize === 2) offsetType = $gfJaN$restructure.uint16;\n        else if (offSize === 3) offsetType = $gfJaN$restructure.uint24;\n        else if (offSize === 4) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n        let ret = [];\n        let startPos = stream.pos + (count + 1) * offSize - 1;\n        let start = offsetType.decode(stream);\n        for(let i = 0; i < count; i++){\n            let end = offsetType.decode(stream);\n            if (this.type != null) {\n                let pos = stream.pos;\n                stream.pos = startPos + start;\n                parent.length = end - start;\n                ret.push(this.type.decode(stream, parent));\n                stream.pos = pos;\n            } else ret.push({\n                offset: startPos + start,\n                length: end - start\n            });\n            start = end;\n        }\n        stream.pos = startPos + start;\n        return ret;\n    }\n    size(arr, parent) {\n        let size = 2;\n        if (arr.length === 0) return size;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let offset = 1;\n        for(let i = 0; i < arr.length; i++){\n            let item = arr[i];\n            offset += type.size(item, parent);\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        size += 1 + offsetType.size() * (arr.length + 1);\n        size += offset - 1;\n        return size;\n    }\n    encode(stream, arr, parent) {\n        stream.writeUInt16BE(arr.length);\n        if (arr.length === 0) return;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let sizes = [];\n        let offset = 1;\n        for (let item of arr){\n            let s = type.size(item, parent);\n            sizes.push(s);\n            offset += s;\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        // write offset size\n        stream.writeUInt8(offsetType.size());\n        // write elements\n        offset = 1;\n        offsetType.encode(stream, offset);\n        for (let size of sizes){\n            offset += size;\n            offsetType.encode(stream, offset);\n        }\n        for (let item1 of arr)type.encode(stream, item1, parent);\n        return;\n    }\n    constructor(type){\n        this.type = type;\n    }\n}\n\n\n\n\n\n\nconst $f77b592c17132d70$var$FLOAT_EOF = 0xf;\nconst $f77b592c17132d70$var$FLOAT_LOOKUP = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \".\",\n    \"E\",\n    \"E-\",\n    null,\n    \"-\"\n];\nconst $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP = {\n    \".\": 10,\n    \"E\": 11,\n    \"E-\": 12,\n    \"-\": 14\n};\nclass $f77b592c17132d70$export$2e2bcd8739ae039 {\n    static decode(stream, value) {\n        if (32 <= value && value <= 246) return value - 139;\n        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n        if (value === 28) return stream.readInt16BE();\n        if (value === 29) return stream.readInt32BE();\n        if (value === 30) {\n            let str = \"\";\n            while(true){\n                let b = stream.readUInt8();\n                let n1 = b >> 4;\n                if (n1 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n1];\n                let n2 = b & 15;\n                if (n2 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n2];\n            }\n            return parseFloat(str);\n        }\n        return null;\n    }\n    static size(value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, set to 32768\n        if (value.forceLarge) value = 32768;\n        if ((value | 0) !== value) {\n            let str = \"\" + value;\n            return 1 + Math.ceil((str.length + 1) / 2);\n        } else if (-107 <= value && value <= 107) return 1;\n        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;\n        else if (-32768 <= value && value <= 32767) return 3;\n        else return 5;\n    }\n    static encode(stream, value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, save the old value and set to 32768\n        let val = Number(value);\n        if (value.forceLarge) {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        } else if ((val | 0) !== val) {\n            stream.writeUInt8(30);\n            let str = \"\" + val;\n            for(let i = 0; i < str.length; i += 2){\n                let c1 = str[i];\n                let n1 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n                if (i === str.length - 1) var n2 = $f77b592c17132d70$var$FLOAT_EOF;\n                else {\n                    let c2 = str[i + 1];\n                    var n2 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n                }\n                stream.writeUInt8(n1 << 4 | n2 & 15);\n            }\n            if (n2 !== $f77b592c17132d70$var$FLOAT_EOF) return stream.writeUInt8($f77b592c17132d70$var$FLOAT_EOF << 4);\n        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);\n        else if (108 <= val && val <= 1131) {\n            val -= 108;\n            stream.writeUInt8((val >> 8) + 247);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-1131 <= val && val <= -108) {\n            val = -val - 108;\n            stream.writeUInt8((val >> 8) + 251);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-32768 <= val && val <= 32767) {\n            stream.writeUInt8(28);\n            return stream.writeInt16BE(val);\n        } else {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        }\n    }\n}\n\n\n\nclass $efe622f40a9c35bd$export$2e2bcd8739ae039 {\n    decodeOperands(type, stream, ret, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [\n                op\n            ]));\n        else if (type.decode != null) return type.decode(stream, ret, operands);\n        else switch(type){\n            case \"number\":\n            case \"offset\":\n            case \"sid\":\n                return operands[0];\n            case \"boolean\":\n                return !!operands[0];\n            default:\n                return operands;\n        }\n    }\n    encodeOperands(type, stream, ctx, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]);\n        else if (type.encode != null) return type.encode(stream, operands, ctx);\n        else if (typeof operands === \"number\") return [\n            operands\n        ];\n        else if (typeof operands === \"boolean\") return [\n            +operands\n        ];\n        else if (Array.isArray(operands)) return operands;\n        else return [\n            operands\n        ];\n    }\n    decode(stream, parent) {\n        let end = stream.pos + parent.length;\n        let ret = {};\n        let operands = [];\n        // define hidden properties\n        Object.defineProperties(ret, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            }\n        });\n        // fill in defaults\n        for(let key in this.fields){\n            let field = this.fields[key];\n            ret[field[1]] = field[3];\n        }\n        while(stream.pos < end){\n            let b = stream.readUInt8();\n            if (b < 28) {\n                if (b === 12) b = b << 8 | stream.readUInt8();\n                let field = this.fields[b];\n                if (!field) throw new Error(`Unknown operator ${b}`);\n                let val = this.decodeOperands(field[2], stream, ret, operands);\n                if (val != null) {\n                    if (val instanceof (0, $gfJaN$restructure.PropertyDescriptor)) Object.defineProperty(ret, field[1], val);\n                    else ret[field[1]] = val;\n                }\n                operands = [];\n            } else operands.push((0, $f77b592c17132d70$export$2e2bcd8739ae039).decode(stream, b));\n        }\n        return ret;\n    }\n    size(dict, parent, includePointers = true) {\n        let ctx = {\n            parent: parent,\n            val: dict,\n            pointerSize: 0,\n            startOffset: parent.startOffset || 0\n        };\n        let len = 0;\n        for(let k in this.fields){\n            let field = this.fields[k];\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], null, ctx, val);\n            for (let op of operands)len += (0, $f77b592c17132d70$export$2e2bcd8739ae039).size(op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            len += key.length;\n        }\n        if (includePointers) len += ctx.pointerSize;\n        return len;\n    }\n    encode(stream, dict, parent) {\n        let ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: dict,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n        for (let field of this.ops){\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], stream, ctx, val);\n            for (let op of operands)(0, $f77b592c17132d70$export$2e2bcd8739ae039).encode(stream, op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            for (let op1 of key)stream.writeUInt8(op1);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            let ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n        return;\n    }\n    constructor(ops = []){\n        this.ops = ops;\n        this.fields = {};\n        for (let field of ops){\n            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n            this.fields[key] = field;\n        }\n    }\n}\n\n\n\n\nclass $4aa1b0749c2770f8$export$2e2bcd8739ae039 extends $gfJaN$restructure.Pointer {\n    decode(stream, parent, operands) {\n        this.offsetType = {\n            decode: ()=>operands[0]\n        };\n        return super.decode(stream, parent, operands);\n    }\n    encode(stream, value, ctx) {\n        if (!stream) {\n            // compute the size (so ctx.pointerSize is correct)\n            this.offsetType = {\n                size: ()=>0\n            };\n            this.size(value, ctx);\n            return [\n                new $4aa1b0749c2770f8$var$Ptr(0)\n            ];\n        }\n        let ptr = null;\n        this.offsetType = {\n            encode: (stream, val)=>ptr = val\n        };\n        super.encode(stream, value, ctx);\n        return [\n            new $4aa1b0749c2770f8$var$Ptr(ptr)\n        ];\n    }\n    constructor(type, options = {}){\n        if (options.type == null) options.type = \"global\";\n        super(null, type, options);\n    }\n}\nclass $4aa1b0749c2770f8$var$Ptr {\n    valueOf() {\n        return this.val;\n    }\n    constructor(val){\n        this.val = val;\n        this.forceLarge = true;\n    }\n}\n\n\n\n\n\nclass $15a0cbb3d09cf7ee$var$CFFBlendOp {\n    static decode(stream, parent, operands) {\n        let numBlends = operands.pop();\n        // TODO: actually blend. For now just consume the deltas\n        // since we don't use any of the values anyway.\n        while(operands.length > numBlends)operands.pop();\n    }\n}\nvar $15a0cbb3d09cf7ee$export$2e2bcd8739ae039 = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                    type                                          default\n    [\n        6,\n        \"BlueValues\",\n        \"delta\",\n        null\n    ],\n    [\n        7,\n        \"OtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        8,\n        \"FamilyBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        9,\n        \"FamilyOtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            9\n        ],\n        \"BlueScale\",\n        \"number\",\n        0.039625\n    ],\n    [\n        [\n            12,\n            10\n        ],\n        \"BlueShift\",\n        \"number\",\n        7\n    ],\n    [\n        [\n            12,\n            11\n        ],\n        \"BlueFuzz\",\n        \"number\",\n        1\n    ],\n    [\n        10,\n        \"StdHW\",\n        \"number\",\n        null\n    ],\n    [\n        11,\n        \"StdVW\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            12\n        ],\n        \"StemSnapH\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            13\n        ],\n        \"StemSnapV\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            14\n        ],\n        \"ForceBold\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            17\n        ],\n        \"LanguageGroup\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            18\n        ],\n        \"ExpansionFactor\",\n        \"number\",\n        0.06\n    ],\n    [\n        [\n            12,\n            19\n        ],\n        \"initialRandomSeed\",\n        \"number\",\n        0\n    ],\n    [\n        20,\n        \"defaultWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        21,\n        \"nominalWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        22,\n        \"vsindex\",\n        \"number\",\n        0\n    ],\n    [\n        23,\n        \"blend\",\n        $15a0cbb3d09cf7ee$var$CFFBlendOp,\n        null\n    ],\n    [\n        19,\n        \"Subrs\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039), {\n            type: \"local\"\n        }),\n        null\n    ]\n]);\n\n\nvar // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$860d3574d7fa3a51$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\",\n    \"001.000\",\n    \"001.001\",\n    \"001.002\",\n    \"001.003\",\n    \"Black\",\n    \"Bold\",\n    \"Book\",\n    \"Light\",\n    \"Medium\",\n    \"Regular\",\n    \"Roman\",\n    \"Semibold\"\n];\n\n\nlet $c4ffe47cba1d7f36$export$dee0027060fa13bd = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"\",\n    \"questiondown\",\n    \"\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"\",\n    \"ring\",\n    \"cedilla\",\n    \"\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"AE\",\n    \"\",\n    \"ordfeminine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"ae\",\n    \"\",\n    \"\",\n    \"\",\n    \"dotlessi\",\n    \"\",\n    \"\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\"\n];\nlet $c4ffe47cba1d7f36$export$4f58f497e14a53c3 = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"\",\n    \"\",\n    \"isuperior\",\n    \"\",\n    \"\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"\",\n    \"\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"\",\n    \"\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"\",\n    \"Dotaccentsmall\",\n    \"\",\n    \"\",\n    \"Macronsmall\",\n    \"\",\n    \"\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"\",\n    \"\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"\",\n    \"\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\n\n\nlet $1e7c7c16984e4427$export$c33b50336c234f16 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\"\n];\nlet $1e7c7c16984e4427$export$3ed0f9e1fee8d489 = [\n    \".notdef\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $1e7c7c16984e4427$export$dc28be11139d4120 = [\n    \".notdef\",\n    \"space\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"hyphensuperior\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"centoldstyle\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\"\n];\n\n\n\n//########################\n// Scripts and Languages #\n//########################\nlet $b6dd765146ad212a$var$LangSysTable = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reqFeatureIndex: $gfJaN$restructure.uint16,\n    featureCount: $gfJaN$restructure.uint16,\n    featureIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"featureCount\")\n});\nlet $b6dd765146ad212a$var$LangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    langSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$var$Script = new $gfJaN$restructure.Struct({\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable),\n    count: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LangSysRecord, \"count\")\n});\nlet $b6dd765146ad212a$var$ScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Script, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$3e15fc05ce864229 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$ScriptRecord, $gfJaN$restructure.uint16);\n//#######################\n// Features and Lookups #\n//#######################\nlet $b6dd765146ad212a$var$FeatureParams = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$6e91cf7616333d5 = new $gfJaN$restructure.Struct({\n    featureParams: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$FeatureParams),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupListIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$FeatureRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    feature: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$aa18130def4b6cb4 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$FeatureRecord, $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$LookupFlags = new $gfJaN$restructure.Struct({\n    markAttachmentType: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"rightToLeft\",\n        \"ignoreBaseGlyphs\",\n        \"ignoreLigatures\",\n        \"ignoreMarks\",\n        \"useMarkFilteringSet\"\n    ])\n});\nfunction $b6dd765146ad212a$export$df0008c6ff2da22a(SubTable) {\n    let Lookup = new $gfJaN$restructure.Struct({\n        lookupType: $gfJaN$restructure.uint16,\n        flags: $b6dd765146ad212a$var$LookupFlags,\n        subTableCount: $gfJaN$restructure.uint16,\n        subTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, SubTable), \"subTableCount\"),\n        markFilteringSet: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.flags.flags.useMarkFilteringSet)\n    });\n    return new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, Lookup), $gfJaN$restructure.uint16);\n}\n//#################\n// Coverage Table #\n//#################\nlet $b6dd765146ad212a$var$RangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    startCoverageIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$17608c3f81a6111 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        glyphCount: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        rangeCount: $gfJaN$restructure.uint16,\n        rangeRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$RangeRecord, \"rangeCount\")\n    }\n});\n//#########################\n// Class Definition Table #\n//#########################\nlet $b6dd765146ad212a$var$ClassRangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    class: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$843d551fbbafef71 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        startGlyph: $gfJaN$restructure.uint16,\n        glyphCount: $gfJaN$restructure.uint16,\n        classValueArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        classRangeCount: $gfJaN$restructure.uint16,\n        classRangeRecord: new $gfJaN$restructure.Array($b6dd765146ad212a$var$ClassRangeRecord, \"classRangeCount\")\n    }\n});\nlet $b6dd765146ad212a$export$8215d14a63d9fb10 = new $gfJaN$restructure.Struct({\n    a: $gfJaN$restructure.uint16,\n    b: $gfJaN$restructure.uint16,\n    deltaFormat: $gfJaN$restructure.uint16\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nlet $b6dd765146ad212a$var$LookupRecord = new $gfJaN$restructure.Struct({\n    sequenceIndex: $gfJaN$restructure.uint16,\n    lookupListIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$var$Rule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$RuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Rule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$ClassRule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    classes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ClassSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$841858b892ce1f4c = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        ruleSetCount: $gfJaN$restructure.uint16,\n        ruleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$RuleSet), \"ruleSetCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        classDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        classSetCnt: $gfJaN$restructure.uint16,\n        classSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassSet), \"classSetCnt\")\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        lookupCount: $gfJaN$restructure.uint16,\n        coverages: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"glyphCount\"),\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nlet $b6dd765146ad212a$var$ChainRule = new $gfJaN$restructure.Struct({\n    backtrackGlyphCount: $gfJaN$restructure.uint16,\n    backtrack: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"backtrackGlyphCount\"),\n    inputGlyphCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.inputGlyphCount - 1),\n    lookaheadGlyphCount: $gfJaN$restructure.uint16,\n    lookahead: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookaheadGlyphCount\"),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ChainRuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$5e6d09e6861162f6 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        chainCount: $gfJaN$restructure.uint16,\n        chainRuleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        backtrackClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        inputClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        lookaheadClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        chainCount: $gfJaN$restructure.uint16,\n        chainClassSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    3: {\n        backtrackGlyphCount: $gfJaN$restructure.uint16,\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        inputGlyphCount: $gfJaN$restructure.uint16,\n        inputCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"inputGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        lookupCount: $gfJaN$restructure.uint16,\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n\n\n\n/*******************\n * Variation Store *\n *******************/ let $2e4adcda047b3383$var$F2DOT14 = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $2e4adcda047b3383$var$RegionAxisCoordinates = new $gfJaN$restructure.Struct({\n    startCoord: $2e4adcda047b3383$var$F2DOT14,\n    peakCoord: $2e4adcda047b3383$var$F2DOT14,\n    endCoord: $2e4adcda047b3383$var$F2DOT14\n});\nlet $2e4adcda047b3383$var$VariationRegionList = new $gfJaN$restructure.Struct({\n    axisCount: $gfJaN$restructure.uint16,\n    regionCount: $gfJaN$restructure.uint16,\n    variationRegions: new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($2e4adcda047b3383$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $2e4adcda047b3383$var$DeltaSet = new $gfJaN$restructure.Struct({\n    shortDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, (t)=>t.parent.shortDeltaCount),\n    regionDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int8, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount),\n    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)\n});\nlet $2e4adcda047b3383$var$ItemVariationData = new $gfJaN$restructure.Struct({\n    itemCount: $gfJaN$restructure.uint16,\n    shortDeltaCount: $gfJaN$restructure.uint16,\n    regionIndexCount: $gfJaN$restructure.uint16,\n    regionIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"regionIndexCount\"),\n    deltaSets: new $gfJaN$restructure.Array($2e4adcda047b3383$var$DeltaSet, \"itemCount\")\n});\nlet $2e4adcda047b3383$export$fe1b122a2710f241 = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint16,\n    variationRegionList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$VariationRegionList),\n    variationDataCount: $gfJaN$restructure.uint16,\n    itemVariationData: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/ let $2e4adcda047b3383$var$ConditionTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        axisIndex: $gfJaN$restructure.uint16,\n        axisIndex: $gfJaN$restructure.uint16,\n        filterRangeMinValue: $2e4adcda047b3383$var$F2DOT14,\n        filterRangeMaxValue: $2e4adcda047b3383$var$F2DOT14\n    }\n});\nlet $2e4adcda047b3383$var$ConditionSet = new $gfJaN$restructure.Struct({\n    conditionCount: $gfJaN$restructure.uint16,\n    conditionTable: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionTable), \"conditionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitutionRecord = new $gfJaN$restructure.Struct({\n    featureIndex: $gfJaN$restructure.uint16,\n    alternateFeatureTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$6e91cf7616333d5), {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitution = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    substitutionCount: $gfJaN$restructure.uint16,\n    substitutions: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureVariationRecord = new $gfJaN$restructure.Struct({\n    conditionSet: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionSet, {\n        type: \"parent\"\n    }),\n    featureTableSubstitution: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$FeatureTableSubstitution, {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$export$441b70b7971dd419 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    featureVariationRecordCount: $gfJaN$restructure.uint32,\n    featureVariationRecords: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass $5b547cf9e5da519b$var$PredefinedOp {\n    decode(stream, parent, operands) {\n        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n        return this.type.decode(stream, parent, operands);\n    }\n    size(value, ctx) {\n        return this.type.size(value, ctx);\n    }\n    encode(stream, value, ctx) {\n        let index = this.predefinedOps.indexOf(value);\n        if (index !== -1) return index;\n        return this.type.encode(stream, value, ctx);\n    }\n    constructor(predefinedOps, type){\n        this.predefinedOps = predefinedOps;\n        this.type = type;\n    }\n}\nclass $5b547cf9e5da519b$var$CFFEncodingVersion extends $gfJaN$restructure.Number {\n    decode(stream) {\n        return $gfJaN$restructure.uint8.decode(stream) & 0x7f;\n    }\n    constructor(){\n        super(\"UInt8\");\n    }\n}\nlet $5b547cf9e5da519b$var$Range1 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$Range2 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$CFFCustomEncoding = new $gfJaN$restructure.VersionedStruct(new $5b547cf9e5da519b$var$CFFEncodingVersion(), {\n    0: {\n        nCodes: $gfJaN$restructure.uint8,\n        codes: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"nCodes\")\n    },\n    1: {\n        nRanges: $gfJaN$restructure.uint8,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$Range1, \"nRanges\")\n    }\n});\nlet $5b547cf9e5da519b$var$CFFEncoding = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd),\n    (0, $c4ffe47cba1d7f36$export$4f58f497e14a53c3)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomEncoding, {\n    lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass $5b547cf9e5da519b$var$RangeArray extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        let length = (0, $gfJaN$restructure.resolveLength)(this.length, stream, parent);\n        let count = 0;\n        let res = [];\n        while(count < length){\n            let range = this.type.decode(stream, parent);\n            range.offset = count;\n            count += range.nLeft + 1;\n            res.push(range);\n        }\n        return res;\n    }\n}\nlet $5b547cf9e5da519b$var$CFFCustomCharset = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.CharStrings.length - 1)\n    },\n    1: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range1, (t)=>t.parent.CharStrings.length - 1)\n    },\n    2: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range2, (t)=>t.parent.CharStrings.length - 1)\n    }\n});\nlet $5b547cf9e5da519b$var$CFFCharset = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $1e7c7c16984e4427$export$c33b50336c234f16),\n    (0, $1e7c7c16984e4427$export$3ed0f9e1fee8d489),\n    (0, $1e7c7c16984e4427$export$dc28be11139d4120)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomCharset, {\n    lazy: true\n}));\nlet $5b547cf9e5da519b$var$FDRange3 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    fd: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$FDRange4 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint32,\n    fd: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$FDSelect = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        fds: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.CharStrings.length)\n    },\n    3: {\n        nRanges: $gfJaN$restructure.uint16,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange3, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint16\n    },\n    4: {\n        nRanges: $gfJaN$restructure.uint32,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange4, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint32\n    }\n});\nlet $5b547cf9e5da519b$var$ptr = new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)((0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039));\nclass $5b547cf9e5da519b$var$CFFPrivateOp {\n    decode(stream, parent, operands) {\n        parent.length = operands[0];\n        return $5b547cf9e5da519b$var$ptr.decode(stream, parent, [\n            operands[1]\n        ]);\n    }\n    size(dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.size(dict, ctx)[0]\n        ];\n    }\n    encode(stream, dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.encode(stream, dict, ctx)[0]\n        ];\n    }\n}\nlet $5b547cf9e5da519b$var$FontDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ], \n]);\nlet $5b547cf9e5da519b$var$CFFTopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        [\n            12,\n            30\n        ],\n        \"ROS\",\n        [\n            \"sid\",\n            \"sid\",\n            \"number\"\n        ],\n        null\n    ],\n    [\n        0,\n        \"version\",\n        \"sid\",\n        null\n    ],\n    [\n        1,\n        \"Notice\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            0\n        ],\n        \"Copyright\",\n        \"sid\",\n        null\n    ],\n    [\n        2,\n        \"FullName\",\n        \"sid\",\n        null\n    ],\n    [\n        3,\n        \"FamilyName\",\n        \"sid\",\n        null\n    ],\n    [\n        4,\n        \"Weight\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            1\n        ],\n        \"isFixedPitch\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            2\n        ],\n        \"ItalicAngle\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            3\n        ],\n        \"UnderlinePosition\",\n        \"number\",\n        -100\n    ],\n    [\n        [\n            12,\n            4\n        ],\n        \"UnderlineThickness\",\n        \"number\",\n        50\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            6\n        ],\n        \"CharstringType\",\n        \"number\",\n        2\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        13,\n        \"UniqueID\",\n        \"number\",\n        null\n    ],\n    [\n        5,\n        \"FontBBox\",\n        \"array\",\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            8\n        ],\n        \"StrokeWidth\",\n        \"number\",\n        0\n    ],\n    [\n        14,\n        \"XUID\",\n        \"array\",\n        null\n    ],\n    [\n        15,\n        \"charset\",\n        $5b547cf9e5da519b$var$CFFCharset,\n        (0, $1e7c7c16984e4427$export$c33b50336c234f16)\n    ],\n    [\n        16,\n        \"Encoding\",\n        $5b547cf9e5da519b$var$CFFEncoding,\n        (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd)\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            20\n        ],\n        \"SyntheticBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            21\n        ],\n        \"PostScript\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            22\n        ],\n        \"BaseFontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            23\n        ],\n        \"BaseFontBlend\",\n        \"delta\",\n        null\n    ],\n    // CID font specific\n    [\n        [\n            12,\n            31\n        ],\n        \"CIDFontVersion\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            32\n        ],\n        \"CIDFontRevision\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            33\n        ],\n        \"CIDFontType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            34\n        ],\n        \"CIDCount\",\n        \"number\",\n        8720\n    ],\n    [\n        [\n            12,\n            35\n        ],\n        \"UIDBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ]\n]);\nlet $5b547cf9e5da519b$var$VariationStore = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    itemVariationStore: (0, $2e4adcda047b3383$export$fe1b122a2710f241)\n});\nlet $5b547cf9e5da519b$var$CFF2TopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        24,\n        \"vstore\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$VariationStore),\n        null\n    ],\n    [\n        25,\n        \"maxstack\",\n        \"number\",\n        193\n    ]\n]);\nlet $5b547cf9e5da519b$var$CFFTop = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed16, {\n    1: {\n        hdrSize: $gfJaN$restructure.uint8,\n        offSize: $gfJaN$restructure.uint8,\n        nameIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        topDictIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFTopDict),\n        stringIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    },\n    2: {\n        hdrSize: $gfJaN$restructure.uint8,\n        length: $gfJaN$restructure.uint16,\n        topDict: $5b547cf9e5da519b$var$CFF2TopDict,\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    }\n});\nvar $5b547cf9e5da519b$export$2e2bcd8739ae039 = $5b547cf9e5da519b$var$CFFTop;\n\n\n\n\nclass $f717432b360040c7$var$CFFFont {\n    static decode(stream) {\n        return new $f717432b360040c7$var$CFFFont(stream);\n    }\n    decode() {\n        let start = this.stream.pos;\n        let top = (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).decode(this.stream);\n        for(let key in top){\n            let val = top[key];\n            this[key] = val;\n        }\n        if (this.version < 2) {\n            if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n            this.topDict = this.topDictIndex[0];\n        }\n        this.isCIDFont = this.topDict.ROS != null;\n        return this;\n    }\n    string(sid) {\n        if (this.version >= 2) return null;\n        if (sid < (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length) return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039)[sid];\n        return this.stringIndex[sid - (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length];\n    }\n    get postscriptName() {\n        if (this.version < 2) return this.nameIndex[0];\n        return null;\n    }\n    get fullName() {\n        return this.string(this.topDict.FullName);\n    }\n    get familyName() {\n        return this.string(this.topDict.FamilyName);\n    }\n    getCharString(glyph) {\n        this.stream.pos = this.topDict.CharStrings[glyph].offset;\n        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n    getGlyphName(gid) {\n        // CFF2 glyph names are in the post table.\n        if (this.version >= 2) return null;\n        // CID-keyed fonts don't have glyph names\n        if (this.isCIDFont) return null;\n        let { charset: charset  } = this.topDict;\n        if (Array.isArray(charset)) return charset[gid];\n        if (gid === 0) return \".notdef\";\n        gid -= 1;\n        switch(charset.version){\n            case 0:\n                return this.string(charset.glyphs[gid]);\n            case 1:\n            case 2:\n                for(let i = 0; i < charset.ranges.length; i++){\n                    let range = charset.ranges[i];\n                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n                }\n                break;\n        }\n        return null;\n    }\n    fdForGlyph(gid) {\n        if (!this.topDict.FDSelect) return null;\n        switch(this.topDict.FDSelect.version){\n            case 0:\n                return this.topDict.FDSelect.fds[gid];\n            case 3:\n            case 4:\n                let { ranges: ranges  } = this.topDict.FDSelect;\n                let low = 0;\n                let high = ranges.length - 1;\n                while(low <= high){\n                    let mid = low + high >> 1;\n                    if (gid < ranges[mid].first) high = mid - 1;\n                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;\n                    else return ranges[mid].fd;\n                }\n            default:\n                throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n        }\n    }\n    privateDictForGlyph(gid) {\n        if (this.topDict.FDSelect) {\n            let fd = this.fdForGlyph(gid);\n            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n            return null;\n        }\n        if (this.version < 2) return this.topDict.Private;\n        return this.topDict.FDArray[0].Private;\n    }\n    constructor(stream){\n        this.stream = stream;\n        this.decode();\n    }\n}\nvar $f717432b360040c7$export$2e2bcd8739ae039 = $f717432b360040c7$var$CFFFont;\n\n\n\nlet $8cb7ae73ed7aa7d8$var$VerticalOrigin = new $gfJaN$restructure.Struct({\n    glyphIndex: $gfJaN$restructure.uint16,\n    vertOriginY: $gfJaN$restructure.int16\n});\nvar $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    defaultVertOriginY: $gfJaN$restructure.int16,\n    numVertOriginYMetrics: $gfJaN$restructure.uint16,\n    metrics: new $gfJaN$restructure.Array($8cb7ae73ed7aa7d8$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\n\n\n\n\nlet $20e0c7bbecb76d75$export$16b227cb15d716a0 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    horiBearingX: $gfJaN$restructure.int8,\n    horiBearingY: $gfJaN$restructure.int8,\n    horiAdvance: $gfJaN$restructure.uint8,\n    vertBearingX: $gfJaN$restructure.int8,\n    vertBearingY: $gfJaN$restructure.int8,\n    vertAdvance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$export$62c53e75f69bfe12 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    bearingX: $gfJaN$restructure.int8,\n    bearingY: $gfJaN$restructure.int8,\n    advance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$var$EBDTComponent = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    xOffset: $gfJaN$restructure.int8,\n    yOffset: $gfJaN$restructure.int8\n});\nclass $20e0c7bbecb76d75$var$ByteAligned {\n}\nclass $20e0c7bbecb76d75$var$BitAligned {\n}\nlet $20e0c7bbecb76d75$export$f1f5ddeb20d14f = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    1: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    2: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    // format 3 is deprecated\n    // format 4 is not supported by Microsoft\n    5: {\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    6: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    7: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    8: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    9: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    17: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    18: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    19: {\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    }\n});\n\n\nlet $035bb95c0cdb1f6d$var$SBitLineMetrics = new $gfJaN$restructure.Struct({\n    ascender: $gfJaN$restructure.int8,\n    descender: $gfJaN$restructure.int8,\n    widthMax: $gfJaN$restructure.uint8,\n    caretSlopeNumerator: $gfJaN$restructure.int8,\n    caretSlopeDenominator: $gfJaN$restructure.int8,\n    caretOffset: $gfJaN$restructure.int8,\n    minOriginSB: $gfJaN$restructure.int8,\n    minAdvanceSB: $gfJaN$restructure.int8,\n    maxBeforeBL: $gfJaN$restructure.int8,\n    minAfterBL: $gfJaN$restructure.int8,\n    pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.int8, 2)\n});\nlet $035bb95c0cdb1f6d$var$CodeOffsetPair = new $gfJaN$restructure.Struct({\n    glyphCode: $gfJaN$restructure.uint16,\n    offset: $gfJaN$restructure.uint16\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        imageFormat: $gfJaN$restructure.uint16,\n        imageDataOffset: $gfJaN$restructure.uint32\n    },\n    1: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    2: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0)\n    },\n    3: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    4: {\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphArray: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$CodeOffsetPair, (t)=>t.numGlyphs + 1)\n    },\n    5: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0),\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphCodeArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numGlyphs\")\n    }\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtableArray = new $gfJaN$restructure.Struct({\n    firstGlyphIndex: $gfJaN$restructure.uint16,\n    lastGlyphIndex: $gfJaN$restructure.uint16,\n    subtable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $035bb95c0cdb1f6d$var$IndexSubtable)\n});\nlet $035bb95c0cdb1f6d$var$BitmapSizeTable = new $gfJaN$restructure.Struct({\n    indexSubTableArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$IndexSubtableArray, 1), {\n        type: \"parent\"\n    }),\n    indexTablesSize: $gfJaN$restructure.uint32,\n    numberOfIndexSubTables: $gfJaN$restructure.uint32,\n    colorRef: $gfJaN$restructure.uint32,\n    hori: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    vert: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    startGlyphIndex: $gfJaN$restructure.uint16,\n    endGlyphIndex: $gfJaN$restructure.uint16,\n    ppemX: $gfJaN$restructure.uint8,\n    ppemY: $gfJaN$restructure.uint8,\n    bitDepth: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"horizontal\",\n        \"vertical\"\n    ])\n});\nvar $035bb95c0cdb1f6d$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numSizes: $gfJaN$restructure.uint32,\n    sizes: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$BitmapSizeTable, \"numSizes\")\n});\n\n\n\nlet $73d13900b55a3c0c$var$ImageTable = new $gfJaN$restructure.Struct({\n    ppem: $gfJaN$restructure.uint16,\n    resolution: $gfJaN$restructure.uint16,\n    imageOffsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\"), (t)=>t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$73d13900b55a3c0c$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"renderOutlines\"\n    ]),\n    numImgTables: $gfJaN$restructure.uint32,\n    imageTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $73d13900b55a3c0c$var$ImageTable), \"numImgTables\")\n});\n\n\n\nlet $97f6b8be3a347a8f$var$LayerRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    paletteIndex: $gfJaN$restructure.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nlet $97f6b8be3a347a8f$var$BaseGlyphRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    // and is not rendered for color.\n    firstLayerIndex: $gfJaN$restructure.uint16,\n    // There will be numLayers consecutive entries for this base glyph.\n    numLayers: $gfJaN$restructure.uint16\n});\nvar $97f6b8be3a347a8f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numBaseGlyphRecords: $gfJaN$restructure.uint16,\n    baseGlyphRecord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n    layerRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$LayerRecord, \"numLayerRecords\"), {\n        lazy: true\n    }),\n    numLayerRecords: $gfJaN$restructure.uint16\n});\n\n\n\nlet $16ca60ecbdee30ea$var$ColorRecord = new $gfJaN$restructure.Struct({\n    blue: $gfJaN$restructure.uint8,\n    green: $gfJaN$restructure.uint8,\n    red: $gfJaN$restructure.uint8,\n    alpha: $gfJaN$restructure.uint8\n});\nvar $16ca60ecbdee30ea$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        numPaletteEntries: $gfJaN$restructure.uint16,\n        numPalettes: $gfJaN$restructure.uint16,\n        numColorRecords: $gfJaN$restructure.uint16,\n        colorRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($16ca60ecbdee30ea$var$ColorRecord, \"numColorRecords\")),\n        colorRecordIndices: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")\n    },\n    0: {},\n    1: {\n        offsetPaletteTypeArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numPalettes\")),\n        offsetPaletteLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")),\n        offsetPaletteEntryLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPaletteEntries\"))\n    }\n});\n\n\n\n\n\nlet $7327e41706f9d5c7$var$BaseCoord = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16 // X or Y value, in design units\n    },\n    2: {\n        coordinate: $gfJaN$restructure.int16,\n        referenceGlyph: $gfJaN$restructure.uint16,\n        baseCoordPoint: $gfJaN$restructure.uint16 // Index of contour point on the referenceGlyph\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)) // Device table for X or Y value\n    }\n});\nlet $7327e41706f9d5c7$var$BaseValues = new $gfJaN$restructure.Struct({\n    defaultIndex: $gfJaN$restructure.uint16,\n    baseCoordCount: $gfJaN$restructure.uint16,\n    baseCoords: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord), \"baseCoordCount\")\n});\nlet $7327e41706f9d5c7$var$FeatMinMaxRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }) // May be NULL\n});\nlet $7327e41706f9d5c7$var$MinMax = new $gfJaN$restructure.Struct({\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    featMinMaxCount: $gfJaN$restructure.uint16,\n    featMinMaxRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\nlet $7327e41706f9d5c7$var$BaseLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScript = new $gfJaN$restructure.Struct({\n    baseValues: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseValues),\n    defaultMinMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax),\n    baseLangSysCount: $gfJaN$restructure.uint16,\n    baseLangSysRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\nlet $7327e41706f9d5c7$var$BaseScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScript, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScriptList = new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseScriptRecord, $gfJaN$restructure.uint16);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet $7327e41706f9d5c7$var$BaseTagList = new $gfJaN$restructure.Array(new $gfJaN$restructure.String(4), $gfJaN$restructure.uint16);\nlet $7327e41706f9d5c7$var$Axis = new $gfJaN$restructure.Struct({\n    baseTagList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseTagList),\n    baseScriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScriptList)\n});\nvar $7327e41706f9d5c7$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        horizAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis),\n        vertAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis) // May be NULL\n    },\n    0x00010000: {},\n    0x00010001: {\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $7e48bbe9e5345664$var$AttachPoint = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$AttachList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    glyphCount: $gfJaN$restructure.uint16,\n    attachPoints: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachPoint), \"glyphCount\")\n});\nlet $7e48bbe9e5345664$var$CaretValue = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        caretValuePoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $7e48bbe9e5345664$var$LigGlyph = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$CaretValue), $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$LigCaretList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    ligGlyphCount: $gfJaN$restructure.uint16,\n    ligGlyphs: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $7e48bbe9e5345664$var$MarkGlyphSetsDef = new $gfJaN$restructure.Struct({\n    markSetTableFormat: $gfJaN$restructure.uint16,\n    markSetCount: $gfJaN$restructure.uint16,\n    coverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $7e48bbe9e5345664$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        glyphClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n        attachList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachList),\n        ligCaretList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigCaretList),\n        markAttachClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71))\n    },\n    0x00010000: {},\n    0x00010002: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef)\n    },\n    0x00010003: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef),\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $b687332511a4da75$var$ValueFormat = new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n    \"xPlacement\",\n    \"yPlacement\",\n    \"xAdvance\",\n    \"yAdvance\",\n    \"xPlaDevice\",\n    \"yPlaDevice\",\n    \"xAdvDevice\",\n    \"yAdvDevice\"\n]);\nlet $b687332511a4da75$var$types = {\n    xPlacement: $gfJaN$restructure.int16,\n    yPlacement: $gfJaN$restructure.int16,\n    xAdvance: $gfJaN$restructure.int16,\n    yAdvance: $gfJaN$restructure.int16,\n    xPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    xAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    })\n};\nclass $b687332511a4da75$var$ValueRecord {\n    buildStruct(parent) {\n        let struct = parent;\n        while(!struct[this.key] && struct.parent)struct = struct.parent;\n        if (!struct[this.key]) return;\n        let fields = {};\n        fields.rel = ()=>struct._startOffset;\n        let format = struct[this.key];\n        for(let key in format)if (format[key]) fields[key] = $b687332511a4da75$var$types[key];\n        return new $gfJaN$restructure.Struct(fields);\n    }\n    size(val, ctx) {\n        return this.buildStruct(ctx).size(val, ctx);\n    }\n    decode(stream, parent) {\n        let res = this.buildStruct(parent).decode(stream, parent);\n        delete res.rel;\n        return res;\n    }\n    constructor(key = \"valueFormat\"){\n        this.key = key;\n    }\n}\nlet $b687332511a4da75$var$PairValueRecord = new $gfJaN$restructure.Struct({\n    secondGlyph: $gfJaN$restructure.uint16,\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$PairSet = new $gfJaN$restructure.Array($b687332511a4da75$var$PairValueRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$Class2Record = new $gfJaN$restructure.Struct({\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$Anchor = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        anchorPoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        xDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)),\n        yDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $b687332511a4da75$var$EntryExitRecord = new $gfJaN$restructure.Struct({\n    entryAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    }),\n    exitAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkRecord = new $gfJaN$restructure.Struct({\n    class: $gfJaN$restructure.uint16,\n    markAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkArray = new $gfJaN$restructure.Array($b687332511a4da75$var$MarkRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$BaseRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.classCount);\nlet $b687332511a4da75$var$BaseArray = new $gfJaN$restructure.Array($b687332511a4da75$var$BaseRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$ComponentRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.parent.classCount);\nlet $b687332511a4da75$var$LigatureAttach = new $gfJaN$restructure.Array($b687332511a4da75$var$ComponentRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$LigatureArray = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureAttach), $gfJaN$restructure.uint16);\nlet $b687332511a4da75$export$73a8cfb19cd43a0f = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            value: new $b687332511a4da75$var$ValueRecord()\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            valueCount: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.LazyArray(new $b687332511a4da75$var$ValueRecord(), \"valueCount\")\n        }\n    }),\n    2: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            pairSetCount: $gfJaN$restructure.uint16,\n            pairSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$PairSet), \"pairSetCount\")\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            classDef1: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            classDef2: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            class1Count: $gfJaN$restructure.uint16,\n            class2Count: $gfJaN$restructure.uint16,\n            classRecords: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.LazyArray($b687332511a4da75$var$Class2Record, \"class2Count\"), \"class1Count\")\n        }\n    }),\n    3: {\n        format: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        entryExitCount: $gfJaN$restructure.uint16,\n        entryExitRecords: new $gfJaN$restructure.Array($b687332511a4da75$var$EntryExitRecord, \"entryExitCount\")\n    },\n    4: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        baseCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        baseArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    5: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        ligatureCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        ligatureArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureArray)\n    },\n    6: {\n        format: $gfJaN$restructure.uint16,\n        mark1Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        mark2Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        mark1Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        mark2Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    7: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    8: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    9: {\n        posFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    }\n});\n// Fix circular reference\n$b687332511a4da75$export$73a8cfb19cd43a0f.versions[9].extension.type = $b687332511a4da75$export$73a8cfb19cd43a0f;\nvar $b687332511a4da75$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($b687332511a4da75$export$73a8cfb19cd43a0f))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $99ccad60b96f92fb$var$Sequence = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$AlternateSet = $99ccad60b96f92fb$var$Sequence;\nlet $99ccad60b96f92fb$var$Ligature = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    compCount: $gfJaN$restructure.uint16,\n    components: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.compCount - 1)\n});\nlet $99ccad60b96f92fb$var$LigatureSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Ligature), $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$GSUBLookup = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            deltaGlyphID: $gfJaN$restructure.int16\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            glyphCount: $gfJaN$restructure.uint16,\n            substitute: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"glyphCount\")\n        }\n    }),\n    2: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        sequences: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Sequence), \"count\")\n    },\n    3: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        alternateSet: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$AlternateSet), \"count\")\n    },\n    4: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        ligatureSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$LigatureSet), \"count\")\n    },\n    5: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    6: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    7: {\n        substFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    },\n    8: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n        glyphCount: $gfJaN$restructure.uint16,\n        substitutes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    }\n});\n// Fix circular reference\n$99ccad60b96f92fb$var$GSUBLookup.versions[7].extension.type = $99ccad60b96f92fb$var$GSUBLookup;\nvar $99ccad60b96f92fb$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($99ccad60b96f92fb$var$GSUBLookup))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $573d5042c76c4940$var$JstfGSUBModList = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfPriority = new $gfJaN$restructure.Struct({\n    shrinkageEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f))),\n    extensionEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f)))\n});\nlet $573d5042c76c4940$var$JstfLangSys = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfPriority), $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    jstfLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys)\n});\nlet $573d5042c76c4940$var$JstfScript = new $gfJaN$restructure.Struct({\n    extenderGlyphs: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)),\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys),\n    langSysCount: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $573d5042c76c4940$var$JstfScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfScript, {\n        type: \"parent\"\n    })\n});\nvar $573d5042c76c4940$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    scriptCount: $gfJaN$restructure.uint16,\n    scriptList: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfScriptRecord, \"scriptCount\")\n});\n\n\n\n\n\n// TODO: add this to restructure\nclass $a5875b80d6087f61$var$VariableSizeNumber {\n    decode(stream, parent) {\n        switch(this.size(0, parent)){\n            case 1:\n                return stream.readUInt8();\n            case 2:\n                return stream.readUInt16BE();\n            case 3:\n                return stream.readUInt24BE();\n            case 4:\n                return stream.readUInt32BE();\n        }\n    }\n    size(val, parent) {\n        return (0, $gfJaN$restructure.resolveLength)(this._size, null, parent);\n    }\n    constructor(size){\n        this._size = size;\n    }\n}\nlet $a5875b80d6087f61$var$MapDataEntry = new $gfJaN$restructure.Struct({\n    entry: new $a5875b80d6087f61$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1),\n    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $a5875b80d6087f61$var$DeltaSetIndexMap = new $gfJaN$restructure.Struct({\n    entryFormat: $gfJaN$restructure.uint16,\n    mapCount: $gfJaN$restructure.uint16,\n    mapData: new $gfJaN$restructure.Array($a5875b80d6087f61$var$MapDataEntry, \"mapCount\")\n});\nvar $a5875b80d6087f61$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241)),\n    advanceWidthMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    LSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    RSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap)\n});\n\n\n\nlet $4423bc1ac09bbbd1$var$Signature = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    offset: $gfJaN$restructure.uint32\n});\nlet $4423bc1ac09bbbd1$var$SignatureBlock = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16, 2),\n    cbSignature: $gfJaN$restructure.uint32,\n    signature: new $gfJaN$restructure.Buffer(\"cbSignature\")\n});\nvar $4423bc1ac09bbbd1$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    ulVersion: $gfJaN$restructure.uint32,\n    usNumSigs: $gfJaN$restructure.uint16,\n    usFlag: $gfJaN$restructure.uint16,\n    signatures: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$Signature, \"usNumSigs\"),\n    signatureBlocks: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$SignatureBlock, \"usNumSigs\")\n});\n\n\n\nlet $7b50e3f8d83263de$var$GaspRange = new $gfJaN$restructure.Struct({\n    rangeMaxPPEM: $gfJaN$restructure.uint16,\n    rangeGaspBehavior: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"grayscale\",\n        \"gridfit\",\n        \"symmetricSmoothing\",\n        \"symmetricGridfit\" // only in version 1, for ClearType\n    ])\n});\nvar $7b50e3f8d83263de$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRanges: $gfJaN$restructure.uint16,\n    gaspRanges: new $gfJaN$restructure.Array($7b50e3f8d83263de$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\n\n\n\nlet $7bf92ec372cd2307$var$DeviceRecord = new $gfJaN$restructure.Struct({\n    pixelSize: $gfJaN$restructure.uint8,\n    maximumWidth: $gfJaN$restructure.uint8,\n    widths: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.parent.maxp.numGlyphs)\n});\nvar // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$7bf92ec372cd2307$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecords: $gfJaN$restructure.int16,\n    sizeDeviceRecord: $gfJaN$restructure.int32,\n    records: new $gfJaN$restructure.Array($7bf92ec372cd2307$var$DeviceRecord, \"numRecords\")\n});\n\n\n\nlet $a3f544bcf76542d1$var$KernPair = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.uint16,\n    right: $gfJaN$restructure.uint16,\n    value: $gfJaN$restructure.int16\n});\nlet $a3f544bcf76542d1$var$ClassTable = new $gfJaN$restructure.Struct({\n    firstGlyph: $gfJaN$restructure.uint16,\n    nGlyphs: $gfJaN$restructure.uint16,\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"nGlyphs\"),\n    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $a3f544bcf76542d1$var$Kern2Array = new $gfJaN$restructure.Struct({\n    off: (t)=>t._startOffset - t.parent.parent._startOffset,\n    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n    values: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"len\")\n});\nlet $a3f544bcf76542d1$var$KernSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        nPairs: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        pairs: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernPair, \"nPairs\")\n    },\n    2: {\n        rowWidth: $gfJaN$restructure.uint16,\n        leftTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        rightTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$Kern2Array, {\n            type: \"parent\"\n        })\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        kernValueCount: $gfJaN$restructure.uint8,\n        leftClassCount: $gfJaN$restructure.uint8,\n        rightClassCount: $gfJaN$restructure.uint8,\n        flags: $gfJaN$restructure.uint8,\n        kernValue: new $gfJaN$restructure.Array($gfJaN$restructure.int16, \"kernValueCount\"),\n        leftClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        rightClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        kernIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.leftClassCount * t.rightClassCount)\n    }\n});\nlet $a3f544bcf76542d1$var$KernTable = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    0: {\n        subVersion: $gfJaN$restructure.uint16,\n        length: $gfJaN$restructure.uint16,\n        format: $gfJaN$restructure.uint8,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            \"horizontal\",\n            \"minimum\",\n            \"crossStream\",\n            \"override\" // If set to 1 the value in this table replaces the accumulated value\n        ]),\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    },\n    1: {\n        length: $gfJaN$restructure.uint32,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            null,\n            null,\n            null,\n            null,\n            null,\n            \"variation\",\n            \"crossStream\",\n            \"vertical\" // Set if table has vertical kerning values\n        ]),\n        format: $gfJaN$restructure.uint8,\n        tupleIndex: $gfJaN$restructure.uint16,\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    }\n});\nvar $a3f544bcf76542d1$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        nTables: $gfJaN$restructure.uint16,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    },\n    1: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        nTables: $gfJaN$restructure.uint32,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    }\n});\n\n\n\nvar // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$86687befb45925d0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numGlyphs: $gfJaN$restructure.uint16,\n    yPels: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numGlyphs\")\n});\n\n\n\nvar // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$91429006e51e0fe8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    fontNumber: $gfJaN$restructure.uint32,\n    pitch: $gfJaN$restructure.uint16,\n    xHeight: $gfJaN$restructure.uint16,\n    style: $gfJaN$restructure.uint16,\n    typeFamily: $gfJaN$restructure.uint16,\n    capHeight: $gfJaN$restructure.uint16,\n    symbolSet: $gfJaN$restructure.uint16,\n    typeface: new $gfJaN$restructure.String(16),\n    characterComplement: new $gfJaN$restructure.String(8),\n    fileName: new $gfJaN$restructure.String(6),\n    strokeWeight: new $gfJaN$restructure.String(1),\n    widthType: new $gfJaN$restructure.String(1),\n    serifStyle: $gfJaN$restructure.uint8,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8)\n});\n\n\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nlet $627850fc9deed59a$var$Ratio = new $gfJaN$restructure.Struct({\n    bCharSet: $gfJaN$restructure.uint8,\n    xRatio: $gfJaN$restructure.uint8,\n    yStartRatio: $gfJaN$restructure.uint8,\n    yEndRatio: $gfJaN$restructure.uint8 // Ending y-Ratio value\n});\nlet $627850fc9deed59a$var$vTable = new $gfJaN$restructure.Struct({\n    yPelHeight: $gfJaN$restructure.uint16,\n    yMax: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16 // Minimum value (in pels) for this yPelHeight\n});\nlet $627850fc9deed59a$var$VdmxGroup = new $gfJaN$restructure.Struct({\n    recs: $gfJaN$restructure.uint16,\n    startsz: $gfJaN$restructure.uint8,\n    endsz: $gfJaN$restructure.uint8,\n    entries: new $gfJaN$restructure.Array($627850fc9deed59a$var$vTable, \"recs\") // The VDMX records\n});\nvar $627850fc9deed59a$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecs: $gfJaN$restructure.uint16,\n    numRatios: $gfJaN$restructure.uint16,\n    ratioRanges: new $gfJaN$restructure.Array($627850fc9deed59a$var$Ratio, \"numRatios\"),\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numRatios\"),\n    groups: new $gfJaN$restructure.Array($627850fc9deed59a$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\n\n\n\nvar // Vertical Header Table\n$65c33f5f068fc77f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceHeightMax: $gfJaN$restructure.int16,\n    minTopSideBearing: $gfJaN$restructure.int16,\n    minBottomSideBearing: $gfJaN$restructure.int16,\n    yMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\n\n\nlet $597d739523b65bb3$var$VmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16 // The top sidebearing of the glyph\n});\nvar // Vertical Metrics Table\n$597d739523b65bb3$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($597d739523b65bb3$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n\n\n\nlet $35aa0c87d9c3d3a0$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $35aa0c87d9c3d3a0$var$Correspondence = new $gfJaN$restructure.Struct({\n    fromCoord: $35aa0c87d9c3d3a0$var$shortFrac,\n    toCoord: $35aa0c87d9c3d3a0$var$shortFrac\n});\nlet $35aa0c87d9c3d3a0$var$Segment = new $gfJaN$restructure.Struct({\n    pairCount: $gfJaN$restructure.uint16,\n    correspondence: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Correspondence, \"pairCount\")\n});\nvar $35aa0c87d9c3d3a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    axisCount: $gfJaN$restructure.uint32,\n    segment: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Segment, \"axisCount\")\n});\n\n\n\n\nclass $22801616bd931ca3$var$UnboundedArrayAccessor {\n    getItem(index) {\n        if (this._items[index] == null) {\n            let pos = this.stream.pos;\n            this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n            this._items[index] = this.type.decode(this.stream, this.parent);\n            this.stream.pos = pos;\n        }\n        return this._items[index];\n    }\n    inspect() {\n        return `[UnboundedArray ${this.type.constructor.name}]`;\n    }\n    constructor(type, stream, parent){\n        this.type = type;\n        this.stream = stream;\n        this.parent = parent;\n        this.base = this.stream.pos;\n        this._items = [];\n    }\n}\nclass $22801616bd931ca3$export$c5af1eebc882e39a extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        return new $22801616bd931ca3$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n    constructor(type){\n        super(type, 0);\n    }\n}\nlet $22801616bd931ca3$export$8351f8c2ae2f103c = function(ValueType = $gfJaN$restructure.uint16) {\n    // Helper class that makes internal structures invisible to pointers\n    class Shadow {\n        decode(stream, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.decode(stream, ctx);\n        }\n        size(val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.size(val, ctx);\n        }\n        encode(stream, val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.encode(stream, val, ctx);\n        }\n        constructor(type){\n            this.type = type;\n        }\n    }\n    ValueType = new Shadow(ValueType);\n    let BinarySearchHeader = new $gfJaN$restructure.Struct({\n        unitSize: $gfJaN$restructure.uint16,\n        nUnits: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16\n    });\n    let LookupSegmentSingle = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    let LookupSegmentArray = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1), {\n            type: \"parent\"\n        })\n    });\n    let LookupSingle = new $gfJaN$restructure.Struct({\n        glyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    return new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        0: {\n            values: new $22801616bd931ca3$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n        },\n        2: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        4: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits)\n        },\n        6: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        8: {\n            firstGlyph: $gfJaN$restructure.uint16,\n            count: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.Array(ValueType, \"count\")\n        }\n    });\n};\nfunction $22801616bd931ca3$export$79f7d93d790934ba(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let entry = Object.assign({\n        newState: $gfJaN$restructure.uint16,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.nClasses));\n    let StateHeader = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint32,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$8351f8c2ae2f103c(lookupType)),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader;\n}\nfunction $22801616bd931ca3$export$105027425199cc51(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let ClassLookupTable = new $gfJaN$restructure.Struct({\n        version () {\n            return 8;\n        },\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16)\n    });\n    let entry = Object.assign({\n        newStateOffset: $gfJaN$restructure.uint16,\n        // convert offset to stateArray index\n        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.nClasses));\n    let StateHeader1 = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint16,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, ClassLookupTable),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader1;\n}\n\n\nlet $3a5ca96d3e3aaf20$var$BslnSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32)\n    },\n    1: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    },\n    2: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32)\n    },\n    3: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    }\n});\nvar $3a5ca96d3e3aaf20$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    defaultBaseline: $gfJaN$restructure.uint16,\n    subtable: $3a5ca96d3e3aaf20$var$BslnSubtable\n});\n\n\n\nlet $8d4241d96b2b0589$var$Setting = new $gfJaN$restructure.Struct({\n    setting: $gfJaN$restructure.uint16,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $8d4241d96b2b0589$var$FeatureName = new $gfJaN$restructure.Struct({\n    feature: $gfJaN$restructure.uint16,\n    nSettings: $gfJaN$restructure.uint16,\n    settingTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($8d4241d96b2b0589$var$Setting, \"nSettings\"), {\n        type: \"parent\"\n    }),\n    featureFlags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"hasDefault\",\n        \"exclusive\"\n    ]),\n    defaultSetting: $gfJaN$restructure.uint8,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $8d4241d96b2b0589$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    featureNameCount: $gfJaN$restructure.uint16,\n    reserved1: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reserved2: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint32),\n    featureNames: new $gfJaN$restructure.Array($8d4241d96b2b0589$var$FeatureName, \"featureNameCount\")\n});\n\n\n\nlet $a79cd5132b1cf476$var$Axis = new $gfJaN$restructure.Struct({\n    axisTag: new $gfJaN$restructure.String(4),\n    minValue: $gfJaN$restructure.fixed32,\n    defaultValue: $gfJaN$restructure.fixed32,\n    maxValue: $gfJaN$restructure.fixed32,\n    flags: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $a79cd5132b1cf476$var$Instance = new $gfJaN$restructure.Struct({\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID],\n    flags: $gfJaN$restructure.uint16,\n    coord: new $gfJaN$restructure.Array($gfJaN$restructure.fixed32, (t)=>t.parent.axisCount),\n    postscriptNameID: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $a79cd5132b1cf476$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    offsetToData: $gfJaN$restructure.uint16,\n    countSizePairs: $gfJaN$restructure.uint16,\n    axisCount: $gfJaN$restructure.uint16,\n    axisSize: $gfJaN$restructure.uint16,\n    instanceCount: $gfJaN$restructure.uint16,\n    instanceSize: $gfJaN$restructure.uint16,\n    axis: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Axis, \"axisCount\"),\n    instance: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Instance, \"instanceCount\")\n});\n\n\n\nlet $3f36f1a5e6989457$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nclass $3f36f1a5e6989457$var$Offset {\n    static decode(stream, parent) {\n        // In short format, offsets are multiplied by 2.\n        // This doesn't seem to be documented by Apple, but it\n        // is implemented this way in Freetype.\n        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n}\nlet $3f36f1a5e6989457$var$gvar = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    axisCount: $gfJaN$restructure.uint16,\n    globalCoordCount: $gfJaN$restructure.uint16,\n    globalCoords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($3f36f1a5e6989457$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n    glyphCount: $gfJaN$restructure.uint16,\n    flags: $gfJaN$restructure.uint16,\n    offsetToData: $gfJaN$restructure.uint32,\n    offsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($3f36f1a5e6989457$var$Offset, \"void\", {\n        relativeTo: (ctx)=>ctx.offsetToData,\n        allowNull: false\n    }), (t)=>t.glyphCount + 1)\n});\nvar $3f36f1a5e6989457$export$2e2bcd8739ae039 = $3f36f1a5e6989457$var$gvar;\n\n\n\n\nlet $0bd8fe7a6d1d9fb4$var$ClassTable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    coverage: $gfJaN$restructure.uint16,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    stateTable: new (0, $22801616bd931ca3$export$105027425199cc51)\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaRecord = new $gfJaN$restructure.Struct({\n    justClass: $gfJaN$restructure.uint32,\n    beforeGrowLimit: $gfJaN$restructure.fixed32,\n    beforeShrinkLimit: $gfJaN$restructure.fixed32,\n    afterGrowLimit: $gfJaN$restructure.fixed32,\n    afterShrinkLimit: $gfJaN$restructure.fixed32,\n    growFlags: $gfJaN$restructure.uint16,\n    shrinkFlags: $gfJaN$restructure.uint16\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$WidthDeltaRecord, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$ActionData = new $gfJaN$restructure.VersionedStruct(\"actionType\", {\n    0: {\n        lowerLimit: $gfJaN$restructure.fixed32,\n        upperLimit: $gfJaN$restructure.fixed32,\n        order: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)\n    },\n    1: {\n        addGlyph: $gfJaN$restructure.uint16\n    },\n    2: {\n        substThreshold: $gfJaN$restructure.fixed32,\n        addGlyph: $gfJaN$restructure.uint16,\n        substGlyph: $gfJaN$restructure.uint16\n    },\n    3: {},\n    4: {\n        variationAxis: $gfJaN$restructure.uint32,\n        minimumLimit: $gfJaN$restructure.fixed32,\n        noStretchValue: $gfJaN$restructure.fixed32,\n        maximumLimit: $gfJaN$restructure.fixed32\n    },\n    5: {\n        flags: $gfJaN$restructure.uint16,\n        glyph: $gfJaN$restructure.uint16\n    }\n});\nlet $0bd8fe7a6d1d9fb4$var$Action = new $gfJaN$restructure.Struct({\n    actionClass: $gfJaN$restructure.uint16,\n    actionType: $gfJaN$restructure.uint16,\n    actionLength: $gfJaN$restructure.uint32,\n    actionData: $0bd8fe7a6d1d9fb4$var$ActionData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.actionLength - t._currentOffset)\n});\nlet $0bd8fe7a6d1d9fb4$var$PostcompensationAction = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$Action, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$PostCompensationTable = new $gfJaN$restructure.Struct({\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostcompensationAction))\n});\nlet $0bd8fe7a6d1d9fb4$var$JustificationTable = new $gfJaN$restructure.Struct({\n    classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$ClassTable, {\n        type: \"parent\"\n    }),\n    wdcOffset: $gfJaN$restructure.uint16,\n    postCompensationTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostCompensationTable, {\n        type: \"parent\"\n    }),\n    widthDeltaClusters: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster, {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.wdcOffset\n    }))\n});\nvar $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    format: $gfJaN$restructure.uint16,\n    horizontal: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable),\n    vertical: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable)\n});\n\n\n\n\nlet $ef40c6dc80fd50a2$var$LigatureData = {\n    action: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$ContextualData = {\n    markIndex: $gfJaN$restructure.uint16,\n    currentIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$InsertionData = {\n    currentInsertIndex: $gfJaN$restructure.uint16,\n    markedInsertIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$SubstitutionTable = new $gfJaN$restructure.Struct({\n    items: new (0, $22801616bd931ca3$export$c5af1eebc882e39a)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)))\n});\nlet $ef40c6dc80fd50a2$var$SubtableData = new $gfJaN$restructure.VersionedStruct(\"type\", {\n    0: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)\n    },\n    1: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$ContextualData),\n        substitutionTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $ef40c6dc80fd50a2$var$SubstitutionTable)\n    },\n    2: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$LigatureData),\n        ligatureActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint32)),\n        components: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16)),\n        ligatureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    },\n    4: {\n        lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)\n    },\n    5: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$InsertionData),\n        insertionActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    }\n});\nlet $ef40c6dc80fd50a2$var$Subtable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint32,\n    coverage: $gfJaN$restructure.uint24,\n    type: $gfJaN$restructure.uint8,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    table: $ef40c6dc80fd50a2$var$SubtableData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n});\nlet $ef40c6dc80fd50a2$var$FeatureEntry = new $gfJaN$restructure.Struct({\n    featureType: $gfJaN$restructure.uint16,\n    featureSetting: $gfJaN$restructure.uint16,\n    enableFlags: $gfJaN$restructure.uint32,\n    disableFlags: $gfJaN$restructure.uint32\n});\nlet $ef40c6dc80fd50a2$var$MorxChain = new $gfJaN$restructure.Struct({\n    defaultFlags: $gfJaN$restructure.uint32,\n    chainLength: $gfJaN$restructure.uint32,\n    nFeatureEntries: $gfJaN$restructure.uint32,\n    nSubtables: $gfJaN$restructure.uint32,\n    features: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$FeatureEntry, \"nFeatureEntries\"),\n    subtables: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$Subtable, \"nSubtables\")\n});\nvar $ef40c6dc80fd50a2$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    unused: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    nChains: $gfJaN$restructure.uint32,\n    chains: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$MorxChain, \"nChains\")\n});\n\n\n\n\nlet $ab24dea08b58a7cc$var$OpticalBounds = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.int16,\n    top: $gfJaN$restructure.int16,\n    right: $gfJaN$restructure.int16,\n    bottom: $gfJaN$restructure.int16\n});\nvar $ab24dea08b58a7cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($ab24dea08b58a7cc$var$OpticalBounds)\n});\n\n\nlet $5825c04ce8f7102d$var$tables = {};\nvar $5825c04ce8f7102d$export$2e2bcd8739ae039 = $5825c04ce8f7102d$var$tables;\n$5825c04ce8f7102d$var$tables.cmap = (0, $e4ae0436c91af89f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.head = (0, $55a60976afb7c261$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hhea = (0, $dde72b7b5b650596$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hmtx = (0, $a7c40184072c9a5b$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.maxp = (0, $521197722369f691$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.name = (0, $51a9f4feb3a3b2b1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"OS/2\"] = (0, $114ea85db469b435$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.post = (0, $f93b30299e1ea0f5$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fpgm = (0, $873d79fea57d3161$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.loca = (0, $83c4155666d50c37$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.prep = (0, $b12598db7cdf7042$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"cvt \"] = (0, $8fb09b0f473d61a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.glyf = (0, $7707bdf21a3d89cc$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF \"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF2\"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VORG = (0, $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.EBLC = (0, $035bb95c0cdb1f6d$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CBLC = $5825c04ce8f7102d$var$tables.EBLC;\n$5825c04ce8f7102d$var$tables.sbix = (0, $73d13900b55a3c0c$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.COLR = (0, $97f6b8be3a347a8f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CPAL = (0, $16ca60ecbdee30ea$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.BASE = (0, $7327e41706f9d5c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GDEF = (0, $7e48bbe9e5345664$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GPOS = (0, $b687332511a4da75$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GSUB = (0, $99ccad60b96f92fb$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.JSTF = (0, $573d5042c76c4940$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.HVAR = (0, $a5875b80d6087f61$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.DSIG = (0, $4423bc1ac09bbbd1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gasp = (0, $7b50e3f8d83263de$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hdmx = (0, $7bf92ec372cd2307$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.kern = (0, $a3f544bcf76542d1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.LTSH = (0, $86687befb45925d0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.PCLT = (0, $91429006e51e0fe8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VDMX = (0, $627850fc9deed59a$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vhea = (0, $65c33f5f068fc77f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vmtx = (0, $597d739523b65bb3$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.avar = (0, $35aa0c87d9c3d3a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.bsln = (0, $3a5ca96d3e3aaf20$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.feat = (0, $8d4241d96b2b0589$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fvar = (0, $a79cd5132b1cf476$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gvar = (0, $3f36f1a5e6989457$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.just = (0, $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.morx = (0, $ef40c6dc80fd50a2$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.opbd = (0, $ab24dea08b58a7cc$export$2e2bcd8739ae039);\n\n\nlet $df50e1efe10a1247$var$TableEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    checkSum: $gfJaN$restructure.uint32,\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    length: $gfJaN$restructure.uint32\n});\nlet $df50e1efe10a1247$var$Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    numTables: $gfJaN$restructure.uint16,\n    searchRange: $gfJaN$restructure.uint16,\n    entrySelector: $gfJaN$restructure.uint16,\n    rangeShift: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($df50e1efe10a1247$var$TableEntry, \"numTables\")\n});\n$df50e1efe10a1247$var$Directory.process = function() {\n    let tables = {};\n    for (let table of this.tables)tables[table.tag] = table;\n    this.tables = tables;\n};\n$df50e1efe10a1247$var$Directory.preEncode = function() {\n    if (!Array.isArray(this.tables)) {\n        let tables = [];\n        for(let tag in this.tables){\n            let table = this.tables[tag];\n            if (table) tables.push({\n                tag: tag,\n                checkSum: 0,\n                offset: new $gfJaN$restructure.VoidPointer((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag], table),\n                length: (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag].size(table)\n            });\n        }\n        this.tables = tables;\n    }\n    this.tag = \"true\";\n    this.numTables = this.tables.length;\n    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n    let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n    this.searchRange = maxPowerOf2 * 16;\n    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n    this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $df50e1efe10a1247$export$2e2bcd8739ae039 = $df50e1efe10a1247$var$Directory;\n\n\n\n\nfunction $66a5b9fb5318558a$export$2e0ae67339d5f1ac(arr, cmp) {\n    let min = 0;\n    let max = arr.length - 1;\n    while(min <= max){\n        let mid = min + max >> 1;\n        let res = cmp(arr[mid]);\n        if (res < 0) max = mid - 1;\n        else if (res > 0) min = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\nfunction $66a5b9fb5318558a$export$d02631cccf789723(index, end) {\n    let range1 = [];\n    while(index < end)range1.push(index++);\n    return range1;\n}\nconst $66a5b9fb5318558a$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst $66a5b9fb5318558a$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $66a5b9fb5318558a$var$LOOKUP = new Uint8Array(256);\nfor(let i = 0; i < $66a5b9fb5318558a$var$CHARS.length; i++)$66a5b9fb5318558a$var$LOOKUP[$66a5b9fb5318558a$var$CHARS.charCodeAt(i)] = i;\nfunction $66a5b9fb5318558a$export$94fdf11bafc8de6b(base64) {\n    let bufferLength = base64.length * 0.75;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    let bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i1 = 0, len = base64.length; i1 < len; i1 += 4){\n        let encoded1 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1)];\n        let encoded2 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n        let encoded3 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n        let encoded4 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return bytes;\n}\n\n\n\n\n\nclass $0d6e160064c86e50$export$2e2bcd8739ae039 {\n    findSubtable(cmapTable, pairs) {\n        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){\n            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n        }\n        return null;\n    }\n    lookup(codepoint, variationSelector) {\n        // If there is no Unicode cmap in this font, we need to re-encode\n        // the codepoint in the encoding that the cmap supports.\n        if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;\n        else if (variationSelector) {\n            let gid = this.getVariationSelector(codepoint, variationSelector);\n            if (gid) return gid;\n        }\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return cmap.codeMap.get(codepoint) || 0;\n            case 4:\n                {\n                    let min = 0;\n                    let max = cmap.segCount - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;\n                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;\n                        else {\n                            let rangeOffset = cmap.idRangeOffset.get(mid);\n                            let gid;\n                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);\n                            else {\n                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                                gid = cmap.glyphIndexArray.get(index) || 0;\n                                if (gid !== 0) gid += cmap.idDelta.get(mid);\n                            }\n                            return gid & 0xffff;\n                        }\n                    }\n                    return 0;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n            case 12:\n            case 13:\n                {\n                    let min = 0;\n                    let max = cmap.nGroups - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        let group = cmap.groups.get(mid);\n                        if (codepoint < group.startCharCode) max = mid - 1;\n                        else if (codepoint > group.endCharCode) min = mid + 1;\n                        else {\n                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);\n                            else return group.glyphID;\n                        }\n                    }\n                    return 0;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    getVariationSelector(codepoint, variationSelector) {\n        if (!this.uvs) return 0;\n        let selectors = this.uvs.varSelectors.toArray();\n        let i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(selectors, (x)=>variationSelector - x.varSelector);\n        let sel = selectors[i];\n        if (i !== -1 && sel.defaultUVS) i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n        if (i !== -1 && sel.nonDefaultUVS) {\n            i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue);\n            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n        }\n        return 0;\n    }\n    getCharacterSet() {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(0, cmap.codeMap.length);\n            case 4:\n                {\n                    let res = [];\n                    let endCodes = cmap.endCode.toArray();\n                    for(let i = 0; i < endCodes.length; i++){\n                        let tail = endCodes[i] + 1;\n                        let start = cmap.startCode.get(i);\n                        res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(start, tail));\n                    }\n                    return res;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n            case 12:\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    codePointsForGlyph(gid) {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                {\n                    let res = [];\n                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);\n                    return res;\n                }\n            case 4:\n                {\n                    let res = [];\n                    for(let i = 0; i < cmap.segCount; i++){\n                        let end = cmap.endCode.get(i);\n                        let start = cmap.startCode.get(i);\n                        let rangeOffset = cmap.idRangeOffset.get(i);\n                        let delta = cmap.idDelta.get(i);\n                        for(var c = start; c <= end; c++){\n                            let g = 0;\n                            if (rangeOffset === 0) g = c + delta;\n                            else {\n                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                                g = cmap.glyphIndexArray.get(index) || 0;\n                                if (g !== 0) g += delta;\n                            }\n                            if (g === gid) res.push(c);\n                        }\n                    }\n                    return res;\n                }\n            case 12:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n                    return res;\n                }\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    constructor(cmapTable){\n        // Attempt to find a Unicode cmap first\n        this.encoding = null;\n        this.cmap = this.findSubtable(cmapTable, [\n            // 32-bit subtables\n            [\n                3,\n                10\n            ],\n            [\n                0,\n                6\n            ],\n            [\n                0,\n                4\n            ],\n            // 16-bit subtables\n            [\n                3,\n                1\n            ],\n            [\n                0,\n                3\n            ],\n            [\n                0,\n                2\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        // If not unicode cmap was found, take the first table with a supported encoding.\n        if (!this.cmap) for (let cmap of cmapTable.tables){\n            let encoding = (0, $e2613b812f052cbe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n            let mapping = (0, $e2613b812f052cbe$export$1dceb3c14ed68bee)(encoding);\n            if (mapping) {\n                this.cmap = cmap.table;\n                this.encoding = mapping;\n            }\n        }\n        if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n        this.uvs = this.findSubtable(cmapTable, [\n            [\n                0,\n                5\n            ]\n        ]);\n        if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\n\n\n\nclass $4646d52c2a559cdb$export$2e2bcd8739ae039 {\n    process(glyphs, positions) {\n        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){\n            let left = glyphs[glyphIndex].id;\n            let right = glyphs[glyphIndex + 1].id;\n            positions[glyphIndex].xAdvance += this.getKerning(left, right);\n        }\n    }\n    getKerning(left, right) {\n        let res = 0;\n        for (let table of this.kern.tables){\n            if (table.coverage.crossStream) continue;\n            switch(table.version){\n                case 0:\n                    if (!table.coverage.horizontal) continue;\n                    break;\n                case 1:\n                    if (table.coverage.vertical || table.coverage.variation) continue;\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning table version ${table.version}`);\n            }\n            let val = 0;\n            let s = table.subtable;\n            switch(table.format){\n                case 0:\n                    let pairIdx = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(s.pairs, function(pair) {\n                        return left - pair.left || right - pair.right;\n                    });\n                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n                    break;\n                case 2:\n                    let leftOffset = 0, rightOffset = 0;\n                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n                    else leftOffset = s.array.off;\n                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n                    let index = (leftOffset + rightOffset - s.array.off) / 2;\n                    val = s.array.values.get(index);\n                    break;\n                case 3:\n                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n            }\n            // Microsoft supports the override flag, which resets the result\n            // Otherwise, the sum of the results from all subtables is returned\n            if (table.coverage.override) res = val;\n            else res += val;\n        }\n        return res;\n    }\n    constructor(font){\n        this.kern = font.kern;\n    }\n}\n\n\n\nclass $a57a26817cd35108$export$2e2bcd8739ae039 {\n    positionGlyphs(glyphs, positions) {\n        // find each base + mark cluster, and position the marks relative to the base\n        let clusterStart = 0;\n        let clusterEnd = 0;\n        for(let index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.isMark) clusterEnd = index;\n            else {\n                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n                clusterStart = clusterEnd = index;\n            }\n        }\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        return positions;\n    }\n    positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n        let base = glyphs[clusterStart];\n        let baseBox = base.cbox.copy();\n        // adjust bounding box for ligature glyphs\n        if (base.codePoints.length > 1) // LTR. TODO: RTL support.\n        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n        let xOffset = -positions[clusterStart].xAdvance;\n        let yOffset = 0;\n        let yGap = this.font.unitsPerEm / 16;\n        // position each of the mark glyphs relative to the base glyph\n        for(let index = clusterStart + 1; index <= clusterEnd; index++){\n            let mark = glyphs[index];\n            let markBox = mark.cbox;\n            let position = positions[index];\n            let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n            if (combiningClass !== \"Not_Reordered\") {\n                position.xOffset = position.yOffset = 0;\n                // x positioning\n                switch(combiningClass){\n                    case \"Double_Above\":\n                    case \"Double_Below\":\n                        // LTR. TODO: RTL support.\n                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n                        break;\n                    case \"Attached_Below_Left\":\n                    case \"Below_Left\":\n                    case \"Above_Left\":\n                        // left align\n                        position.xOffset += baseBox.minX - markBox.minX;\n                        break;\n                    case \"Attached_Above_Right\":\n                    case \"Below_Right\":\n                    case \"Above_Right\":\n                        // right align\n                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n                        break;\n                    default:\n                        // center align\n                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n                }\n                // y positioning\n                switch(combiningClass){\n                    case \"Double_Below\":\n                    case \"Below_Left\":\n                    case \"Below\":\n                    case \"Below_Right\":\n                    case \"Attached_Below_Left\":\n                    case \"Attached_Below\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n                        position.yOffset = -baseBox.minY - markBox.maxY;\n                        baseBox.minY += markBox.height;\n                        break;\n                    case \"Double_Above\":\n                    case \"Above_Left\":\n                    case \"Above\":\n                    case \"Above_Right\":\n                    case \"Attached_Above\":\n                    case \"Attached_Above_Right\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n                        position.yOffset = baseBox.maxY - markBox.minY;\n                        baseBox.maxY += markBox.height;\n                        break;\n                }\n                position.xAdvance = position.yAdvance = 0;\n                position.xOffset += xOffset;\n                position.yOffset += yOffset;\n            } else {\n                xOffset -= position.xAdvance;\n                yOffset -= position.yAdvance;\n            }\n        }\n        return;\n    }\n    getCombiningClass(codePoint) {\n        let combiningClass = (0, $gfJaN$unicodeproperties.getCombiningClass)(codePoint);\n        // Thai / Lao need some per-character work\n        if ((codePoint & -256) === 0x0e00) {\n            if (combiningClass === \"Not_Reordered\") switch(codePoint){\n                case 0x0e31:\n                case 0x0e34:\n                case 0x0e35:\n                case 0x0e36:\n                case 0x0e37:\n                case 0x0e47:\n                case 0x0e4c:\n                case 0x0e3d:\n                case 0x0e4e:\n                    return \"Above_Right\";\n                case 0x0eb1:\n                case 0x0eb4:\n                case 0x0eb5:\n                case 0x0eb6:\n                case 0x0eb7:\n                case 0x0ebb:\n                case 0x0ecc:\n                case 0x0ecd:\n                    return \"Above\";\n                case 0x0ebc:\n                    return \"Below\";\n            }\n            else if (codePoint === 0x0e3a) return \"Below_Right\";\n        }\n        switch(combiningClass){\n            // Hebrew\n            case \"CCC10\":\n            case \"CCC11\":\n            case \"CCC12\":\n            case \"CCC13\":\n            case \"CCC14\":\n            case \"CCC15\":\n            case \"CCC16\":\n            case \"CCC17\":\n            case \"CCC18\":\n            case \"CCC20\":\n            case \"CCC22\":\n                return \"Below\";\n            case \"CCC23\":\n                return \"Attached_Above\";\n            case \"CCC24\":\n                return \"Above_Right\";\n            case \"CCC25\":\n            case \"CCC19\":\n                return \"Above_Left\";\n            case \"CCC26\":\n                return \"Above\";\n            case \"CCC21\":\n                break;\n            // Arabic and Syriac\n            case \"CCC27\":\n            case \"CCC28\":\n            case \"CCC30\":\n            case \"CCC31\":\n            case \"CCC33\":\n            case \"CCC34\":\n            case \"CCC35\":\n            case \"CCC36\":\n                return \"Above\";\n            case \"CCC29\":\n            case \"CCC32\":\n                return \"Below\";\n            // Thai\n            case \"CCC103\":\n                return \"Below_Right\";\n            case \"CCC107\":\n                return \"Above_Right\";\n            // Lao\n            case \"CCC118\":\n                return \"Below\";\n            case \"CCC122\":\n                return \"Above\";\n            // Tibetan\n            case \"CCC129\":\n            case \"CCC132\":\n                return \"Below\";\n            case \"CCC130\":\n                return \"Above\";\n        }\n        return combiningClass;\n    }\n    constructor(font){\n        this.font = font;\n    }\n}\n\n\nclass $0e2da1c4ce69e8ad$export$2e2bcd8739ae039 {\n    /**\n   * The width of the bounding box\n   * @type {number}\n   */ get width() {\n        return this.maxX - this.minX;\n    }\n    /**\n   * The height of the bounding box\n   * @type {number}\n   */ get height() {\n        return this.maxY - this.minY;\n    }\n    addPoint(x, y) {\n        if (Math.abs(x) !== Infinity) {\n            if (x < this.minX) this.minX = x;\n            if (x > this.maxX) this.maxX = x;\n        }\n        if (Math.abs(y) !== Infinity) {\n            if (y < this.minY) this.minY = y;\n            if (y > this.maxY) this.maxY = y;\n        }\n    }\n    copy() {\n        return new $0e2da1c4ce69e8ad$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){\n        /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */ this.minX = minX;\n        /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */ this.minY = minY;\n        /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */ this.maxX = maxX;\n        /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */ this.maxY = maxY;\n    }\n}\n\n\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst $e38a1a895f6aeb54$var$UNICODE_SCRIPTS = {\n    Caucasian_Albanian: \"aghb\",\n    Arabic: \"arab\",\n    Imperial_Aramaic: \"armi\",\n    Armenian: \"armn\",\n    Avestan: \"avst\",\n    Balinese: \"bali\",\n    Bamum: \"bamu\",\n    Bassa_Vah: \"bass\",\n    Batak: \"batk\",\n    Bengali: [\n        \"bng2\",\n        \"beng\"\n    ],\n    Bopomofo: \"bopo\",\n    Brahmi: \"brah\",\n    Braille: \"brai\",\n    Buginese: \"bugi\",\n    Buhid: \"buhd\",\n    Chakma: \"cakm\",\n    Canadian_Aboriginal: \"cans\",\n    Carian: \"cari\",\n    Cham: \"cham\",\n    Cherokee: \"cher\",\n    Coptic: \"copt\",\n    Cypriot: \"cprt\",\n    Cyrillic: \"cyrl\",\n    Devanagari: [\n        \"dev2\",\n        \"deva\"\n    ],\n    Deseret: \"dsrt\",\n    Duployan: \"dupl\",\n    Egyptian_Hieroglyphs: \"egyp\",\n    Elbasan: \"elba\",\n    Ethiopic: \"ethi\",\n    Georgian: \"geor\",\n    Glagolitic: \"glag\",\n    Gothic: \"goth\",\n    Grantha: \"gran\",\n    Greek: \"grek\",\n    Gujarati: [\n        \"gjr2\",\n        \"gujr\"\n    ],\n    Gurmukhi: [\n        \"gur2\",\n        \"guru\"\n    ],\n    Hangul: \"hang\",\n    Han: \"hani\",\n    Hanunoo: \"hano\",\n    Hebrew: \"hebr\",\n    Hiragana: \"hira\",\n    Pahawh_Hmong: \"hmng\",\n    Katakana_Or_Hiragana: \"hrkt\",\n    Old_Italic: \"ital\",\n    Javanese: \"java\",\n    Kayah_Li: \"kali\",\n    Katakana: \"kana\",\n    Kharoshthi: \"khar\",\n    Khmer: \"khmr\",\n    Khojki: \"khoj\",\n    Kannada: [\n        \"knd2\",\n        \"knda\"\n    ],\n    Kaithi: \"kthi\",\n    Tai_Tham: \"lana\",\n    Lao: \"lao \",\n    Latin: \"latn\",\n    Lepcha: \"lepc\",\n    Limbu: \"limb\",\n    Linear_A: \"lina\",\n    Linear_B: \"linb\",\n    Lisu: \"lisu\",\n    Lycian: \"lyci\",\n    Lydian: \"lydi\",\n    Mahajani: \"mahj\",\n    Mandaic: \"mand\",\n    Manichaean: \"mani\",\n    Mende_Kikakui: \"mend\",\n    Meroitic_Cursive: \"merc\",\n    Meroitic_Hieroglyphs: \"mero\",\n    Malayalam: [\n        \"mlm2\",\n        \"mlym\"\n    ],\n    Modi: \"modi\",\n    Mongolian: \"mong\",\n    Mro: \"mroo\",\n    Meetei_Mayek: \"mtei\",\n    Myanmar: [\n        \"mym2\",\n        \"mymr\"\n    ],\n    Old_North_Arabian: \"narb\",\n    Nabataean: \"nbat\",\n    Nko: \"nko \",\n    Ogham: \"ogam\",\n    Ol_Chiki: \"olck\",\n    Old_Turkic: \"orkh\",\n    Oriya: [\n        \"ory2\",\n        \"orya\"\n    ],\n    Osmanya: \"osma\",\n    Palmyrene: \"palm\",\n    Pau_Cin_Hau: \"pauc\",\n    Old_Permic: \"perm\",\n    Phags_Pa: \"phag\",\n    Inscriptional_Pahlavi: \"phli\",\n    Psalter_Pahlavi: \"phlp\",\n    Phoenician: \"phnx\",\n    Miao: \"plrd\",\n    Inscriptional_Parthian: \"prti\",\n    Rejang: \"rjng\",\n    Runic: \"runr\",\n    Samaritan: \"samr\",\n    Old_South_Arabian: \"sarb\",\n    Saurashtra: \"saur\",\n    Shavian: \"shaw\",\n    Sharada: \"shrd\",\n    Siddham: \"sidd\",\n    Khudawadi: \"sind\",\n    Sinhala: \"sinh\",\n    Sora_Sompeng: \"sora\",\n    Sundanese: \"sund\",\n    Syloti_Nagri: \"sylo\",\n    Syriac: \"syrc\",\n    Tagbanwa: \"tagb\",\n    Takri: \"takr\",\n    Tai_Le: \"tale\",\n    New_Tai_Lue: \"talu\",\n    Tamil: [\n        \"tml2\",\n        \"taml\"\n    ],\n    Tai_Viet: \"tavt\",\n    Telugu: [\n        \"tel2\",\n        \"telu\"\n    ],\n    Tifinagh: \"tfng\",\n    Tagalog: \"tglg\",\n    Thaana: \"thaa\",\n    Thai: \"thai\",\n    Tibetan: \"tibt\",\n    Tirhuta: \"tirh\",\n    Ugaritic: \"ugar\",\n    Vai: \"vai \",\n    Warang_Citi: \"wara\",\n    Old_Persian: \"xpeo\",\n    Cuneiform: \"xsux\",\n    Yi: \"yi  \",\n    Inherited: \"zinh\",\n    Common: \"zyyy\",\n    Unknown: \"zzzz\"\n};\nconst $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS = {};\nfor(let script in $e38a1a895f6aeb54$var$UNICODE_SCRIPTS){\n    let tag = $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script];\n    if (Array.isArray(tag)) for (let t of tag)$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[t] = script;\n    else $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $e38a1a895f6aeb54$export$b32f0b5f69d65e51(script1) {\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script1];\n}\nfunction $e38a1a895f6aeb54$export$ce50e82f12a827a4(tag) {\n    return $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $e38a1a895f6aeb54$export$e5cb25e204fb8450(string) {\n    let len = string.length;\n    let idx = 0;\n    while(idx < len){\n        let code = string.charCodeAt(idx++);\n        // Check if this is a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            let next = string.charCodeAt(idx);\n            // Check if this is a low surrogate\n            if (0xdc00 <= next && next <= 0xdfff) {\n                idx++;\n                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n            }\n        }\n        let script2 = (0, $gfJaN$unicodeproperties.getScript)(code);\n        if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script2];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints) {\n    for(let i = 0; i < codePoints.length; i++){\n        let codePoint = codePoints[i];\n        let script3 = (0, $gfJaN$unicodeproperties.getScript)(codePoint);\n        if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script3];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nconst $e38a1a895f6aeb54$var$RTL = {\n    arab: true,\n    hebr: true,\n    syrc: true,\n    thaa: true,\n    cprt: true,\n    khar: true,\n    phnx: true,\n    \"nko \": true,\n    lydi: true,\n    avst: true,\n    armi: true,\n    phli: true,\n    prti: true,\n    sarb: true,\n    orkh: true,\n    samr: true,\n    mand: true,\n    merc: true,\n    mero: true,\n    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n    mani: true,\n    mend: true,\n    nbat: true,\n    narb: true,\n    palm: true,\n    phlp: true // Psalter Pahlavi\n};\nfunction $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script4) {\n    if ($e38a1a895f6aeb54$var$RTL[script4]) return \"rtl\";\n    return \"ltr\";\n}\n\n\nclass $b19c79ec7a94fa39$export$2e2bcd8739ae039 {\n    /**\n   * The total advance width of the run.\n   * @type {number}\n   */ get advanceWidth() {\n        let width = 0;\n        for (let position of this.positions)width += position.xAdvance;\n        return width;\n    }\n    /**\n  * The total advance height of the run.\n  * @type {number}\n  */ get advanceHeight() {\n        let height = 0;\n        for (let position of this.positions)height += position.yAdvance;\n        return height;\n    }\n    /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */ get bbox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let x = 0;\n        let y = 0;\n        for(let index = 0; index < this.glyphs.length; index++){\n            let glyph = this.glyphs[index];\n            let p = this.positions[index];\n            let b = glyph.bbox;\n            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n            x += p.xAdvance;\n            y += p.yAdvance;\n        }\n        return bbox;\n    }\n    constructor(glyphs, features, script, language, direction){\n        /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */ this.glyphs = glyphs;\n        /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */ this.positions = null;\n        /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */ this.script = script;\n        /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */ this.language = language || null;\n        /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */ this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */ this.features = {};\n        // Convert features to an object\n        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;\n        else if (typeof features === \"object\") this.features = features;\n    }\n}\n\n\nclass $9195cf1266c12ea5$export$2e2bcd8739ae039 {\n    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){\n        /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */ this.xAdvance = xAdvance;\n        /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */ this.yAdvance = yAdvance;\n        /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */ this.xOffset = xOffset;\n        /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */ this.yOffset = yOffset;\n    }\n}\n\n\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst $2b7f887ebcb5888a$var$features = {\n    allTypographicFeatures: {\n        code: 0,\n        exclusive: false,\n        allTypeFeatures: 0\n    },\n    ligatures: {\n        code: 1,\n        exclusive: false,\n        requiredLigatures: 0,\n        commonLigatures: 2,\n        rareLigatures: 4,\n        // logos: 6\n        rebusPictures: 8,\n        diphthongLigatures: 10,\n        squaredLigatures: 12,\n        abbrevSquaredLigatures: 14,\n        symbolLigatures: 16,\n        contextualLigatures: 18,\n        historicalLigatures: 20\n    },\n    cursiveConnection: {\n        code: 2,\n        exclusive: true,\n        unconnected: 0,\n        partiallyConnected: 1,\n        cursive: 2\n    },\n    letterCase: {\n        code: 3,\n        exclusive: true\n    },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n    verticalSubstitution: {\n        code: 4,\n        exclusive: false,\n        substituteVerticalForms: 0\n    },\n    linguisticRearrangement: {\n        code: 5,\n        exclusive: false,\n        linguisticRearrangement: 0\n    },\n    numberSpacing: {\n        code: 6,\n        exclusive: true,\n        monospacedNumbers: 0,\n        proportionalNumbers: 1,\n        thirdWidthNumbers: 2,\n        quarterWidthNumbers: 3\n    },\n    smartSwash: {\n        code: 8,\n        exclusive: false,\n        wordInitialSwashes: 0,\n        wordFinalSwashes: 2,\n        // lineInitialSwashes: 4\n        // lineFinalSwashes: 6\n        nonFinalSwashes: 8\n    },\n    diacritics: {\n        code: 9,\n        exclusive: true,\n        showDiacritics: 0,\n        hideDiacritics: 1,\n        decomposeDiacritics: 2\n    },\n    verticalPosition: {\n        code: 10,\n        exclusive: true,\n        normalPosition: 0,\n        superiors: 1,\n        inferiors: 2,\n        ordinals: 3,\n        scientificInferiors: 4\n    },\n    fractions: {\n        code: 11,\n        exclusive: true,\n        noFractions: 0,\n        verticalFractions: 1,\n        diagonalFractions: 2\n    },\n    overlappingCharacters: {\n        code: 13,\n        exclusive: false,\n        preventOverlap: 0\n    },\n    typographicExtras: {\n        code: 14,\n        exclusive: false,\n        // hyphensToEmDash: 0\n        // hyphenToEnDash: 2\n        slashedZero: 4\n    },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n    mathematicalExtras: {\n        code: 15,\n        exclusive: false,\n        // hyphenToMinus: 0\n        // asteristoMultiply: 2\n        // slashToDivide: 4\n        // inequalityLigatures: 6\n        // exponents: 8\n        mathematicalGreek: 10\n    },\n    ornamentSets: {\n        code: 16,\n        exclusive: true,\n        noOrnaments: 0,\n        dingbats: 1,\n        piCharacters: 2,\n        fleurons: 3,\n        decorativeBorders: 4,\n        internationalSymbols: 5,\n        mathSymbols: 6\n    },\n    characterAlternatives: {\n        code: 17,\n        exclusive: true,\n        noAlternates: 0\n    },\n    // user defined options\n    designComplexity: {\n        code: 18,\n        exclusive: true,\n        designLevel1: 0,\n        designLevel2: 1,\n        designLevel3: 2,\n        designLevel4: 3,\n        designLevel5: 4\n    },\n    styleOptions: {\n        code: 19,\n        exclusive: true,\n        noStyleOptions: 0,\n        displayText: 1,\n        engravedText: 2,\n        illuminatedCaps: 3,\n        titlingCaps: 4,\n        tallCaps: 5\n    },\n    characterShape: {\n        code: 20,\n        exclusive: true,\n        traditionalCharacters: 0,\n        simplifiedCharacters: 1,\n        JIS1978Characters: 2,\n        JIS1983Characters: 3,\n        JIS1990Characters: 4,\n        traditionalAltOne: 5,\n        traditionalAltTwo: 6,\n        traditionalAltThree: 7,\n        traditionalAltFour: 8,\n        traditionalAltFive: 9,\n        expertCharacters: 10,\n        JIS2004Characters: 11,\n        hojoCharacters: 12,\n        NLCCharacters: 13,\n        traditionalNamesCharacters: 14\n    },\n    numberCase: {\n        code: 21,\n        exclusive: true,\n        lowerCaseNumbers: 0,\n        upperCaseNumbers: 1\n    },\n    textSpacing: {\n        code: 22,\n        exclusive: true,\n        proportionalText: 0,\n        monospacedText: 1,\n        halfWidthText: 2,\n        thirdWidthText: 3,\n        quarterWidthText: 4,\n        altProportionalText: 5,\n        altHalfWidthText: 6\n    },\n    transliteration: {\n        code: 23,\n        exclusive: true,\n        noTransliteration: 0\n    },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n    annotation: {\n        code: 24,\n        exclusive: true,\n        noAnnotation: 0,\n        boxAnnotation: 1,\n        roundedBoxAnnotation: 2,\n        circleAnnotation: 3,\n        invertedCircleAnnotation: 4,\n        parenthesisAnnotation: 5,\n        periodAnnotation: 6,\n        romanNumeralAnnotation: 7,\n        diamondAnnotation: 8,\n        invertedBoxAnnotation: 9,\n        invertedRoundedBoxAnnotation: 10\n    },\n    kanaSpacing: {\n        code: 25,\n        exclusive: true,\n        fullWidthKana: 0,\n        proportionalKana: 1\n    },\n    ideographicSpacing: {\n        code: 26,\n        exclusive: true,\n        fullWidthIdeographs: 0,\n        proportionalIdeographs: 1,\n        halfWidthIdeographs: 2\n    },\n    unicodeDecomposition: {\n        code: 27,\n        exclusive: false,\n        canonicalComposition: 0,\n        compatibilityComposition: 2,\n        transcodingComposition: 4\n    },\n    rubyKana: {\n        code: 28,\n        exclusive: false,\n        // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n        // rubyKana: 1     # deprecated - use rubyKanaOn instead\n        rubyKana: 2\n    },\n    CJKSymbolAlternatives: {\n        code: 29,\n        exclusive: true,\n        noCJKSymbolAlternatives: 0,\n        CJKSymbolAltOne: 1,\n        CJKSymbolAltTwo: 2,\n        CJKSymbolAltThree: 3,\n        CJKSymbolAltFour: 4,\n        CJKSymbolAltFive: 5\n    },\n    ideographicAlternatives: {\n        code: 30,\n        exclusive: true,\n        noIdeographicAlternatives: 0,\n        ideographicAltOne: 1,\n        ideographicAltTwo: 2,\n        ideographicAltThree: 3,\n        ideographicAltFour: 4,\n        ideographicAltFive: 5\n    },\n    CJKVerticalRomanPlacement: {\n        code: 31,\n        exclusive: true,\n        CJKVerticalRomanCentered: 0,\n        CJKVerticalRomanHBaseline: 1\n    },\n    italicCJKRoman: {\n        code: 32,\n        exclusive: false,\n        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n        CJKItalicRoman: 2\n    },\n    caseSensitiveLayout: {\n        code: 33,\n        exclusive: false,\n        caseSensitiveLayout: 0,\n        caseSensitiveSpacing: 2\n    },\n    alternateKana: {\n        code: 34,\n        exclusive: false,\n        alternateHorizKana: 0,\n        alternateVertKana: 2\n    },\n    stylisticAlternatives: {\n        code: 35,\n        exclusive: false,\n        noStylisticAlternates: 0,\n        stylisticAltOne: 2,\n        stylisticAltTwo: 4,\n        stylisticAltThree: 6,\n        stylisticAltFour: 8,\n        stylisticAltFive: 10,\n        stylisticAltSix: 12,\n        stylisticAltSeven: 14,\n        stylisticAltEight: 16,\n        stylisticAltNine: 18,\n        stylisticAltTen: 20,\n        stylisticAltEleven: 22,\n        stylisticAltTwelve: 24,\n        stylisticAltThirteen: 26,\n        stylisticAltFourteen: 28,\n        stylisticAltFifteen: 30,\n        stylisticAltSixteen: 32,\n        stylisticAltSeventeen: 34,\n        stylisticAltEighteen: 36,\n        stylisticAltNineteen: 38,\n        stylisticAltTwenty: 40\n    },\n    contextualAlternates: {\n        code: 36,\n        exclusive: false,\n        contextualAlternates: 0,\n        swashAlternates: 2,\n        contextualSwashAlternates: 4\n    },\n    lowerCase: {\n        code: 37,\n        exclusive: true,\n        defaultLowerCase: 0,\n        lowerCaseSmallCaps: 1,\n        lowerCasePetiteCaps: 2\n    },\n    upperCase: {\n        code: 38,\n        exclusive: true,\n        defaultUpperCase: 0,\n        upperCaseSmallCaps: 1,\n        upperCasePetiteCaps: 2\n    },\n    languageTag: {\n        code: 39,\n        exclusive: true\n    },\n    CJKRomanSpacing: {\n        code: 103,\n        exclusive: true,\n        halfWidthCJKRoman: 0,\n        proportionalCJKRoman: 1,\n        defaultCJKRoman: 2,\n        fullWidthCJKRoman: 3\n    }\n};\nconst $2b7f887ebcb5888a$var$feature = (name, selector)=>[\n        $2b7f887ebcb5888a$var$features[name].code,\n        $2b7f887ebcb5888a$var$features[name][selector]\n    ];\nconst $2b7f887ebcb5888a$var$OTMapping = {\n    rlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"requiredLigatures\"),\n    clig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"contextualLigatures\"),\n    dlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"rareLigatures\"),\n    hlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    liga: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"commonLigatures\"),\n    hist: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    smcp: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n    pcap: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n    frac: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    dnom: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    numr: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    afrc: $2b7f887ebcb5888a$var$feature(\"fractions\", \"verticalFractions\"),\n    // aalt\n    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n    // unic, vatu, vhal, vjmo, vpal, vrt2\n    // dist -> trak table?\n    // kern, vkrn -> kern table\n    // lfbd + opbd + rtbd -> opbd table?\n    // mark, mkmk -> acnt table?\n    // locl -> languageTag + ltag table\n    case: $2b7f887ebcb5888a$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n    ccmp: $2b7f887ebcb5888a$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n    cpct: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    valt: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    swsh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n    cswh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n    curs: $2b7f887ebcb5888a$var$feature(\"cursiveConnection\", \"cursive\"),\n    c2pc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n    c2sc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n    init: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n    fin2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    medi: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    med2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    fin3: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    fina: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    pkna: $2b7f887ebcb5888a$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n    half: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    halt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n    hkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n    vkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateVertKana\"),\n    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n    ital: $2b7f887ebcb5888a$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n    lnum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n    onum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n    mgrk: $2b7f887ebcb5888a$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n    // nalt: not enough info. what type of annotation?\n    // ornm: ditto, which ornament style?\n    calt: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n    vrt2: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    vert: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    tnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n    pnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n    sups: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"superiors\"),\n    subs: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"inferiors\"),\n    ordn: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"ordinals\"),\n    pwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    hwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    qwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"quarterWidthText\"),\n    twid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"thirdWidthText\"),\n    fwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    palt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altProportionalText\"),\n    trad: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalCharacters\"),\n    smpl: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n    jp78: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1978Characters\"),\n    jp83: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1983Characters\"),\n    jp90: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1990Characters\"),\n    jp04: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS2004Characters\"),\n    expt: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"expertCharacters\"),\n    hojo: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"hojoCharacters\"),\n    nlck: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"NLCCharacters\"),\n    tnam: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n    ruby: $2b7f887ebcb5888a$var$feature(\"rubyKana\", \"rubyKana\"),\n    titl: $2b7f887ebcb5888a$var$feature(\"styleOptions\", \"titlingCaps\"),\n    zero: $2b7f887ebcb5888a$var$feature(\"typographicExtras\", \"slashedZero\"),\n    ss01: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n    ss02: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n    ss03: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n    ss04: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n    ss05: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n    ss06: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n    ss07: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n    ss08: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n    ss09: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n    ss10: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n    ss11: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n    ss12: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n    ss13: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n    ss14: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n    ss15: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n    ss16: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n    ss17: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n    ss18: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n    ss19: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n    ss20: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor(let i = 1; i <= 99; i++)$2b7f887ebcb5888a$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [\n    $2b7f887ebcb5888a$var$features.characterAlternatives.code,\n    i\n];\n// create inverse mapping\nlet $2b7f887ebcb5888a$var$AATMapping = {};\nfor(let ot in $2b7f887ebcb5888a$var$OTMapping){\n    let aat = $2b7f887ebcb5888a$var$OTMapping[ot];\n    if ($2b7f887ebcb5888a$var$AATMapping[aat[0]] == null) $2b7f887ebcb5888a$var$AATMapping[aat[0]] = {};\n    $2b7f887ebcb5888a$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $2b7f887ebcb5888a$export$b813f7d2a1677c16(features1) {\n    let res = {};\n    for(let k in features1){\n        let r;\n        if (r = $2b7f887ebcb5888a$var$OTMapping[k]) {\n            if (res[r[0]] == null) res[r[0]] = {};\n            res[r[0]][r[1]] = features1[k];\n        }\n    }\n    return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $2b7f887ebcb5888a$var$mapFeatureStrings(f) {\n    let [type, setting] = f;\n    if (isNaN(type)) var typeCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type].code;\n    else var typeCode = type;\n    if (isNaN(setting)) var settingCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type][setting];\n    else var settingCode = setting;\n    return [\n        typeCode,\n        settingCode\n    ];\n}\nfunction $2b7f887ebcb5888a$export$bd6df347a4f391c4(features2) {\n    let res = {};\n    if (Array.isArray(features2)) for(let k = 0; k < features2.length; k++){\n        let r;\n        let f = $2b7f887ebcb5888a$var$mapFeatureStrings(features2[k]);\n        if (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]]) res[r] = true;\n    }\n    else if (typeof features2 === \"object\") for(let type in features2){\n        let feature1 = features2[type];\n        for(let setting in feature1){\n            let r;\n            let f = $2b7f887ebcb5888a$var$mapFeatureStrings([\n                type,\n                setting\n            ]);\n            if (feature1[setting] && (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]])) res[r] = true;\n        }\n    }\n    return Object.keys(res);\n}\n\n\n\n\n\n\n\nclass $f3d63ae925545400$export$2e2bcd8739ae039 {\n    lookup(glyph) {\n        switch(this.table.version){\n            case 0:\n                return this.table.values.getItem(glyph);\n            case 2:\n            case 4:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.firstGlyph === 0xffff) return null;\n                        if (glyph < seg.firstGlyph) max = mid - 1;\n                        else if (glyph > seg.lastGlyph) min = mid + 1;\n                        else {\n                            if (this.table.version === 2) return seg.value;\n                            else return seg.values[glyph - seg.firstGlyph];\n                        }\n                    }\n                    return null;\n                }\n            case 6:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.glyph === 0xffff) return null;\n                        if (glyph < seg.glyph) max = mid - 1;\n                        else if (glyph > seg.glyph) min = mid + 1;\n                        else return seg.value;\n                    }\n                    return null;\n                }\n            case 8:\n                return this.table.values[glyph - this.table.firstGlyph];\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n    }\n    glyphsForValue(classValue) {\n        let res = [];\n        switch(this.table.version){\n            case 2:\n            case 4:\n                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1));\n                else {\n                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n                }\n                break;\n            case 6:\n                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);\n                break;\n            case 8:\n                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n                break;\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n        return res;\n    }\n    constructor(table){\n        this.table = table;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $f3d63ae925545400$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\n\n\nconst $860c6347bb941b91$var$START_OF_TEXT_STATE = 0;\nconst $860c6347bb941b91$var$START_OF_LINE_STATE = 1;\nconst $860c6347bb941b91$var$END_OF_TEXT_CLASS = 0;\nconst $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $860c6347bb941b91$var$DELETED_GLYPH_CLASS = 2;\nconst $860c6347bb941b91$var$END_OF_LINE_CLASS = 3;\nconst $860c6347bb941b91$var$DONT_ADVANCE = 0x4000;\nclass $860c6347bb941b91$export$2e2bcd8739ae039 {\n    process(glyphs, reverse, processEntry) {\n        let currentState = $860c6347bb941b91$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n        let index = reverse ? glyphs.length - 1 : 0;\n        let dir = reverse ? -1 : 1;\n        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){\n            let glyph = null;\n            let classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n            let shouldAdvance = true;\n            if (index === glyphs.length || index === -1) classCode = $860c6347bb941b91$var$END_OF_TEXT_CLASS;\n            else {\n                glyph = glyphs[index];\n                if (glyph.id === 0xffff) classCode = $860c6347bb941b91$var$DELETED_GLYPH_CLASS;\n                else {\n                    classCode = this.lookupTable.lookup(glyph.id);\n                    if (classCode == null) classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n                }\n            }\n            let row = this.stateTable.stateArray.getItem(currentState);\n            let entryIndex = row[classCode];\n            let entry = this.stateTable.entryTable.getItem(entryIndex);\n            if (classCode !== $860c6347bb941b91$var$END_OF_TEXT_CLASS && classCode !== $860c6347bb941b91$var$DELETED_GLYPH_CLASS) {\n                processEntry(glyph, entry, index);\n                shouldAdvance = !(entry.flags & $860c6347bb941b91$var$DONT_ADVANCE);\n            }\n            currentState = entry.newState;\n            if (shouldAdvance) index += dir;\n        }\n        return glyphs;\n    }\n    /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */ traverse(opts, state = 0, visited = new Set) {\n        if (visited.has(state)) return;\n        visited.add(state);\n        let { nClasses: nClasses , stateArray: stateArray , entryTable: entryTable  } = this.stateTable;\n        let row = stateArray.getItem(state);\n        // Skip predefined classes\n        for(let classCode = 4; classCode < nClasses; classCode++){\n            let entryIndex = row[classCode];\n            let entry = entryTable.getItem(entryIndex);\n            // Try all glyphs in the class\n            for (let glyph of this.lookupTable.glyphsForValue(classCode)){\n                if (opts.enter) opts.enter(glyph, entry);\n                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n                if (opts.exit) opts.exit(glyph, entry);\n            }\n        }\n    }\n    constructor(stateTable){\n        this.stateTable = stateTable;\n        this.lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(stateTable.classTable);\n    }\n}\n\n\n\n\n// indic replacement flags\nconst $99be642f82069918$var$MARK_FIRST = 0x8000;\nconst $99be642f82069918$var$MARK_LAST = 0x2000;\nconst $99be642f82069918$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nconst $99be642f82069918$var$SET_MARK = 0x8000;\n// ligature entry flags\nconst $99be642f82069918$var$SET_COMPONENT = 0x8000;\nconst $99be642f82069918$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nconst $99be642f82069918$var$LAST_MASK = 0x80000000;\nconst $99be642f82069918$var$STORE_MASK = 0x40000000;\nconst $99be642f82069918$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $99be642f82069918$var$VERTICAL_ONLY = 0x800000;\nconst $99be642f82069918$var$REVERSE_DIRECTION = 0x400000;\nconst $99be642f82069918$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nconst $99be642f82069918$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $99be642f82069918$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $99be642f82069918$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $99be642f82069918$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $99be642f82069918$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $99be642f82069918$var$MARKED_INSERT_COUNT = 0x001F;\nclass $99be642f82069918$export$2e2bcd8739ae039 {\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    process(glyphs, features = {}) {\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            // enable/disable the requested features\n            for (let feature of chain.features){\n                let f;\n                if (f = features[feature.featureType]) {\n                    if (f[feature.featureSetting]) {\n                        flags &= feature.disableFlags;\n                        flags |= feature.enableFlags;\n                    } else if (f[feature.featureSetting] === false) {\n                        flags |= ~feature.disableFlags;\n                        flags &= ~feature.enableFlags;\n                    }\n                }\n            }\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n        }\n        // remove deleted glyphs\n        let index = glyphs.length - 1;\n        while(index >= 0){\n            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n            index--;\n        }\n        return glyphs;\n    }\n    processSubtable(subtable, glyphs) {\n        this.subtable = subtable;\n        this.glyphs = glyphs;\n        if (this.subtable.type === 4) {\n            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n            return;\n        }\n        this.ligatureStack = [];\n        this.markedGlyph = null;\n        this.firstGlyph = null;\n        this.lastGlyph = null;\n        this.markedIndex = null;\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let reverse = !!(this.subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        return stateMachine.process(this.glyphs, reverse, process);\n    }\n    getStateMachine(subtable) {\n        return new (0, $860c6347bb941b91$export$2e2bcd8739ae039)(subtable.table.stateTable);\n    }\n    getProcessor() {\n        switch(this.subtable.type){\n            case 0:\n                return this.processIndicRearragement;\n            case 1:\n                return this.processContextualSubstitution;\n            case 2:\n                return this.processLigature;\n            case 4:\n                return this.processNoncontextualSubstitutions;\n            case 5:\n                return this.processGlyphInsertion;\n            default:\n                throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n        }\n    }\n    processIndicRearragement(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$MARK_FIRST) this.firstGlyph = index;\n        if (entry.flags & $99be642f82069918$var$MARK_LAST) this.lastGlyph = index;\n        $99be642f82069918$var$reorderGlyphs(this.glyphs, entry.flags & $99be642f82069918$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n    processContextualSubstitution(glyph, entry, index) {\n        let subsitutions = this.subtable.table.substitutionTable.items;\n        if (entry.markIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.markIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[this.markedGlyph];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.currentIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.currentIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[index];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedGlyph = index;\n    }\n    processLigature(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_COMPONENT) this.ligatureStack.push(index);\n        if (entry.flags & $99be642f82069918$var$PERFORM_ACTION) {\n            let actions = this.subtable.table.ligatureActions;\n            let components = this.subtable.table.components;\n            let ligatureList = this.subtable.table.ligatureList;\n            let actionIndex = entry.action;\n            let last = false;\n            let ligatureIndex = 0;\n            let codePoints = [];\n            let ligatureGlyphs = [];\n            while(!last){\n                let componentGlyph = this.ligatureStack.pop();\n                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n                let action = actions.getItem(actionIndex++);\n                last = !!(action & $99be642f82069918$var$LAST_MASK);\n                let store = !!(action & $99be642f82069918$var$STORE_MASK);\n                let offset = (action & $99be642f82069918$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n                offset += this.glyphs[componentGlyph].id;\n                let component = components.getItem(offset);\n                ligatureIndex += component;\n                if (last || store) {\n                    let ligatureEntry = ligatureList.getItem(ligatureIndex);\n                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n                    ligatureGlyphs.push(componentGlyph);\n                    ligatureIndex = 0;\n                    codePoints = [];\n                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n            }\n            // Put ligature glyph indexes back on the stack\n            this.ligatureStack.push(...ligatureGlyphs);\n        }\n    }\n    processNoncontextualSubstitutions(subtable, glyphs, index) {\n        let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n        for(index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.id !== 0xffff) {\n                let gid = lookupTable.lookup(glyph.id);\n                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n            }\n        }\n    }\n    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n        let insertions = [];\n        while(count--){\n            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n            insertions.push(this.font.getGlyph(gid));\n        }\n        if (!isBefore) glyphIndex++;\n        this.glyphs.splice(glyphIndex, 0, ...insertions);\n    }\n    processGlyphInsertion(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedIndex = index;\n        if (entry.markedInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$MARKED_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$MARKED_INSERT_BEFORE);\n            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n        }\n        if (entry.currentInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$CURRENT_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$CURRENT_INSERT_BEFORE);\n            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n        }\n    }\n    getSupportedFeatures() {\n        let features = [];\n        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([\n            feature.featureType,\n            feature.featureSetting\n        ]);\n        return features;\n    }\n    generateInputs(gid) {\n        if (!this.inputCache) this.generateInputCache();\n        return this.inputCache[gid] || [];\n    }\n    generateInputCache() {\n        this.inputCache = {};\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n        }\n    }\n    generateInputsForSubtable(subtable) {\n        // Currently, only supporting ligature subtables.\n        if (subtable.type !== 2) return;\n        let reverse = !!(subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n        this.subtable = subtable;\n        this.ligatureStack = [];\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let input = [];\n        let stack = [];\n        this.glyphs = [];\n        stateMachine.traverse({\n            enter: (glyph, entry)=>{\n                let glyphs = this.glyphs;\n                stack.push({\n                    glyphs: glyphs.slice(),\n                    ligatureStack: this.ligatureStack.slice()\n                });\n                // Add glyph to input and glyphs to process.\n                let g1 = this.font.getGlyph(glyph);\n                input.push(g1);\n                glyphs.push(input[input.length - 1]);\n                // Process ligature substitution\n                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n                // Add input to result if only one matching (non-deleted) glyph remains.\n                let count = 0;\n                let found = 0;\n                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {\n                    count++;\n                    found = glyphs[i].id;\n                }\n                if (count === 1) {\n                    let result = input.map((g)=>g.id);\n                    let cache1 = this.inputCache[found];\n                    if (cache1) cache1.push(result);\n                    else this.inputCache[found] = [\n                        result\n                    ];\n                }\n            },\n            exit: ()=>{\n                ({ glyphs: this.glyphs , ligatureStack: this.ligatureStack  } = stack.pop());\n                input.pop();\n            }\n        });\n    }\n    constructor(font){\n        this.processIndicRearragement = this.processIndicRearragement.bind(this);\n        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n        this.processLigature = this.processLigature.bind(this);\n        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n        this.font = font;\n        this.morx = font.morx;\n        this.inputCache = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $99be642f82069918$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $99be642f82069918$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n    if (reverseB) end.reverse();\n    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n    if (reverseA) start.reverse();\n    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n    return glyphs;\n}\nfunction $99be642f82069918$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n    let length = lastGlyph - firstGlyph + 1;\n    switch(verb){\n        case 0:\n            return glyphs;\n        case 1:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 2:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 3:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 4:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 5:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ], true, false);\n        case 6:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 7:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 8:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 9:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 10:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 11:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ], true, false);\n        case 12:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 13:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, false);\n        case 14:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 15:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, true);\n        default:\n            throw new Error(`Unknown verb: ${verb}`);\n    }\n}\n\n\nclass $860fcbd64bc12fbc$export$2e2bcd8739ae039 {\n    substitute(glyphRun) {\n        // AAT expects the glyphs to be in visual order prior to morx processing,\n        // so reverse the glyphs if the script is right-to-left.\n        if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n        this.morxProcessor.process(glyphRun.glyphs, $2b7f887ebcb5888a$export$b813f7d2a1677c16(glyphRun.features));\n    }\n    getAvailableFeatures(script, language) {\n        return $2b7f887ebcb5888a$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n    stringsForGlyph(gid) {\n        let glyphStrings = this.morxProcessor.generateInputs(gid);\n        let result = new Set;\n        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, \"\");\n        return result;\n    }\n    _addStrings(glyphs, index, strings, string) {\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n        for (let codePoint of codePoints){\n            let s = string + String.fromCodePoint(codePoint);\n            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);\n            else strings.add(s);\n        }\n    }\n    constructor(font){\n        this.font = font;\n        this.morxProcessor = new (0, $99be642f82069918$export$2e2bcd8739ae039)(font);\n        this.fallbackPosition = false;\n    }\n}\n\n\n\nclass $d7e93cca3cf8ce8a$export$2e2bcd8739ae039 {\n    /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */ _addFeatures(features, global) {\n        let stageIndex = this.stages.length - 1;\n        let stage = this.stages[stageIndex];\n        for (let feature of features)if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n        }\n    }\n    /**\n   * Add features to the last stage\n   */ add(arg, global = true) {\n        if (this.stages.length === 0) this.stages.push([]);\n        if (typeof arg === \"string\") arg = [\n            arg\n        ];\n        if (Array.isArray(arg)) this._addFeatures(arg, global);\n        else if (typeof arg === \"object\") {\n            this._addFeatures(arg.global || [], true);\n            this._addFeatures(arg.local || [], false);\n        } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n   * Add a new stage\n   */ addStage(arg, global) {\n        if (typeof arg === \"function\") this.stages.push(arg, []);\n        else {\n            this.stages.push([]);\n            this.add(arg, global);\n        }\n    }\n    setFeatureOverrides(features) {\n        if (Array.isArray(features)) this.add(features);\n        else if (typeof features === \"object\") for(let tag in features){\n            if (features[tag]) this.add(tag);\n            else if (this.allFeatures[tag] != null) {\n                let stage = this.stages[this.allFeatures[tag]];\n                stage.splice(stage.indexOf(tag), 1);\n                delete this.allFeatures[tag];\n                delete this.globalFeatures[tag];\n            }\n        }\n    }\n    /**\n   * Assigns the global features to the given glyphs\n   */ assignGlobalFeatures(glyphs) {\n        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;\n    }\n    /**\n   * Executes the planned stages using the given OTProcessor\n   */ process(processor, glyphs, positions) {\n        for (let stage of this.stages){\n            if (typeof stage === \"function\") {\n                if (!positions) stage(this.font, glyphs, this);\n            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n    }\n    constructor(font, script, direction){\n        this.font = font;\n        this.script = script;\n        this.direction = direction;\n        this.stages = [];\n        this.globalFeatures = {};\n        this.allFeatures = {};\n    }\n}\n\n\n\n\nconst $d28fb665ee343afc$var$VARIATION_FEATURES = [\n    \"rvrn\"\n];\nconst $d28fb665ee343afc$var$COMMON_FEATURES = [\n    \"ccmp\",\n    \"locl\",\n    \"rlig\",\n    \"mark\",\n    \"mkmk\"\n];\nconst $d28fb665ee343afc$var$FRACTIONAL_FEATURES = [\n    \"frac\",\n    \"numr\",\n    \"dnom\"\n];\nconst $d28fb665ee343afc$var$HORIZONTAL_FEATURES = [\n    \"calt\",\n    \"clig\",\n    \"liga\",\n    \"rclt\",\n    \"curs\",\n    \"kern\"\n];\nconst $d28fb665ee343afc$var$VERTICAL_FEATURES = [\n    \"vert\"\n];\nconst $d28fb665ee343afc$var$DIRECTIONAL_FEATURES = {\n    ltr: [\n        \"ltra\",\n        \"ltrm\"\n    ],\n    rtl: [\n        \"rtla\",\n        \"rtlm\"\n    ]\n};\nclass $d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static plan(plan, glyphs, features) {\n        // Plan the features we want to apply\n        this.planPreprocessing(plan);\n        this.planFeatures(plan);\n        this.planPostprocessing(plan, features);\n        // Assign the global features to all the glyphs\n        plan.assignGlobalFeatures(glyphs);\n        // Assign local features to glyphs\n        this.assignFeatures(plan, glyphs);\n    }\n    static planPreprocessing(plan) {\n        plan.add({\n            global: [\n                ...$d28fb665ee343afc$var$VARIATION_FEATURES,\n                ...$d28fb665ee343afc$var$DIRECTIONAL_FEATURES[plan.direction]\n            ],\n            local: $d28fb665ee343afc$var$FRACTIONAL_FEATURES\n        });\n    }\n    static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n    }\n    static planPostprocessing(plan, userFeatures) {\n        plan.add([\n            ...$d28fb665ee343afc$var$COMMON_FEATURES,\n            ...$d28fb665ee343afc$var$HORIZONTAL_FEATURES\n        ]);\n        plan.setFeatureOverrides(userFeatures);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Enable contextual fractions\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            if (glyph.codePoints[0] === 0x2044) {\n                let start = i;\n                let end = i + 1;\n                // Apply numerator\n                while(start > 0 && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[start - 1].codePoints[0])){\n                    glyphs[start - 1].features.numr = true;\n                    glyphs[start - 1].features.frac = true;\n                    start--;\n                }\n                // Apply denominator\n                while(end < glyphs.length && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[end].codePoints[0])){\n                    glyphs[end].features.dnom = true;\n                    glyphs[end].features.frac = true;\n                    end++;\n                }\n                // Apply fraction slash\n                glyph.features.frac = true;\n                i = end - 1;\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d28fb665ee343afc$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\n\n\n\n\n\n\nconst $17ba6019f27bfcf9$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $17ba6019f27bfcf9$var$FEATURES = [\n    \"isol\",\n    \"fina\",\n    \"fin2\",\n    \"fin3\",\n    \"medi\",\n    \"med2\",\n    \"init\"\n];\nconst $17ba6019f27bfcf9$var$ShapingClasses = {\n    Non_Joining: 0,\n    Left_Joining: 1,\n    Right_Joining: 2,\n    Dual_Joining: 3,\n    Join_Causing: 3,\n    ALAPH: 4,\n    \"DALATH RISH\": 5,\n    Transparent: 6\n};\nconst $17ba6019f27bfcf9$var$ISOL = \"isol\";\nconst $17ba6019f27bfcf9$var$FINA = \"fina\";\nconst $17ba6019f27bfcf9$var$FIN2 = \"fin2\";\nconst $17ba6019f27bfcf9$var$FIN3 = \"fin3\";\nconst $17ba6019f27bfcf9$var$MEDI = \"medi\";\nconst $17ba6019f27bfcf9$var$MED2 = \"med2\";\nconst $17ba6019f27bfcf9$var$INIT = \"init\";\nconst $17ba6019f27bfcf9$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nconst $17ba6019f27bfcf9$var$STATE_TABLE = [\n    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n    // State 0: prev was U,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 2: prev was D/L in ISOL form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 3: prev was D in FINA form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 4: prev was FINA ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 6: prev was DALATH/RISH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN3,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ]\n];\nclass $17ba6019f27bfcf9$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ccmp\",\n            \"locl\"\n        ]);\n        for(let i = 0; i < $17ba6019f27bfcf9$var$FEATURES.length; i++){\n            let feature = $17ba6019f27bfcf9$var$FEATURES[i];\n            plan.addStage(feature, false);\n        }\n        plan.addStage(\"mset\");\n    }\n    static assignFeatures(plan, glyphs) {\n        super.assignFeatures(plan, glyphs);\n        let prev = -1;\n        let state = 0;\n        let actions = [];\n        // Apply the state machine to map glyphs to features\n        for(let i = 0; i < glyphs.length; i++){\n            let curAction, prevAction;\n            var glyph = glyphs[i];\n            let type = $17ba6019f27bfcf9$var$getShapingClass(glyph.codePoints[0]);\n            if (type === $17ba6019f27bfcf9$var$ShapingClasses.Transparent) {\n                actions[i] = $17ba6019f27bfcf9$var$NONE;\n                continue;\n            }\n            [prevAction, curAction, state] = $17ba6019f27bfcf9$var$STATE_TABLE[state][type];\n            if (prevAction !== $17ba6019f27bfcf9$var$NONE && prev !== -1) actions[prev] = prevAction;\n            actions[i] = curAction;\n            prev = i;\n        }\n        // Apply the chosen features to their respective glyphs\n        for(let index = 0; index < glyphs.length; index++){\n            let feature;\n            var glyph = glyphs[index];\n            if (feature = actions[index]) glyph.features[feature] = true;\n        }\n    }\n}\nfunction $17ba6019f27bfcf9$var$getShapingClass(codePoint) {\n    let res = $17ba6019f27bfcf9$var$trie.get(codePoint);\n    if (res) return res - 1;\n    let category = (0, $gfJaN$unicodeproperties.getCategory)(codePoint);\n    if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $17ba6019f27bfcf9$var$ShapingClasses.Transparent;\n    return $17ba6019f27bfcf9$var$ShapingClasses.Non_Joining;\n}\n\n\n\n\n\nclass $d6368085223f631e$export$2e2bcd8739ae039 {\n    reset(options = {}, index = 0) {\n        this.options = options;\n        this.flags = options.flags || {};\n        this.markAttachmentType = options.markAttachmentType || 0;\n        this.index = index;\n    }\n    get cur() {\n        return this.glyphs[this.index] || null;\n    }\n    shouldIgnore(glyph) {\n        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n    move(dir) {\n        this.index += dir;\n        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;\n        if (0 > this.index || this.index >= this.glyphs.length) return null;\n        return this.glyphs[this.index];\n    }\n    next() {\n        return this.move(1);\n    }\n    prev() {\n        return this.move(-1);\n    }\n    peek(count = 1) {\n        let idx = this.index;\n        let res = this.increment(count);\n        this.index = idx;\n        return res;\n    }\n    peekIndex(count = 1) {\n        let idx = this.index;\n        this.increment(count);\n        let res = this.index;\n        this.index = idx;\n        return res;\n    }\n    increment(count = 1) {\n        let dir = count < 0 ? -1 : 1;\n        count = Math.abs(count);\n        while(count--)this.move(dir);\n        return this.glyphs[this.index];\n    }\n    constructor(glyphs, options){\n        this.glyphs = glyphs;\n        this.reset(options);\n    }\n}\n\n\n\nconst $7b226e6bbeadedeb$var$DEFAULT_SCRIPTS = [\n    \"DFLT\",\n    \"dflt\",\n    \"latn\"\n];\nclass $7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    findScript(script) {\n        if (this.table.scriptList == null) return null;\n        if (!Array.isArray(script)) script = [\n            script\n        ];\n        for (let s of script)for (let entry of this.table.scriptList){\n            if (entry.tag === s) return entry;\n        }\n        return null;\n    }\n    selectScript(script, language, direction) {\n        let changed = false;\n        let entry;\n        if (!this.script || script !== this.scriptTag) {\n            entry = this.findScript(script);\n            if (!entry) entry = this.findScript($7b226e6bbeadedeb$var$DEFAULT_SCRIPTS);\n            if (!entry) return this.scriptTag;\n            this.scriptTag = entry.tag;\n            this.script = entry.script;\n            this.language = null;\n            this.languageTag = null;\n            changed = true;\n        }\n        if (!direction || direction !== this.direction) this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n        if (!language || language !== this.languageTag) {\n            this.language = null;\n            for (let lang of this.script.langSysRecords)if (lang.tag === language) {\n                this.language = lang.langSys;\n                this.languageTag = lang.tag;\n                break;\n            }\n            if (!this.language) {\n                this.language = this.script.defaultLangSys;\n                this.languageTag = null;\n            }\n            changed = true;\n        }\n        // Build a feature lookup table\n        if (changed) {\n            this.features = {};\n            if (this.language) for (let featureIndex of this.language.featureIndexes){\n                let record = this.table.featureList[featureIndex];\n                let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n                this.features[record.tag] = substituteFeature || record.feature;\n            }\n        }\n        return this.scriptTag;\n    }\n    lookupsForFeatures(userFeatures = [], exclude) {\n        let lookups = [];\n        for (let tag of userFeatures){\n            let feature = this.features[tag];\n            if (!feature) continue;\n            for (let lookupIndex of feature.lookupListIndexes){\n                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n                lookups.push({\n                    feature: tag,\n                    index: lookupIndex,\n                    lookup: this.table.lookupList.get(lookupIndex)\n                });\n            }\n        }\n        lookups.sort((a, b)=>a.index - b.index);\n        return lookups;\n    }\n    substituteFeatureForVariations(featureIndex) {\n        if (this.variationsIndex === -1) return null;\n        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n        let substitutions = record.featureTableSubstitution.substitutions;\n        for (let substitution of substitutions){\n            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n        return null;\n    }\n    findVariationsIndex(coords) {\n        let variations = this.table.featureVariations;\n        if (!variations) return -1;\n        let records = variations.featureVariationRecords;\n        for(let i = 0; i < records.length; i++){\n            let conditions = records[i].conditionSet.conditionTable;\n            if (this.variationConditionsMatch(conditions, coords)) return i;\n        }\n        return -1;\n    }\n    variationConditionsMatch(conditions, coords) {\n        return conditions.every((condition)=>{\n            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n        });\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        let lookups = this.lookupsForFeatures(userFeatures);\n        this.applyLookups(lookups, glyphs, advances);\n    }\n    applyLookups(lookups, glyphs, positions) {\n        this.glyphs = glyphs;\n        this.positions = positions;\n        this.glyphIterator = new (0, $d6368085223f631e$export$2e2bcd8739ae039)(glyphs);\n        for (let { feature: feature , lookup: lookup  } of lookups){\n            this.currentFeature = feature;\n            this.glyphIterator.reset(lookup.flags);\n            while(this.glyphIterator.index < glyphs.length){\n                if (!(feature in this.glyphIterator.cur.features)) {\n                    this.glyphIterator.next();\n                    continue;\n                }\n                for (let table of lookup.subTables){\n                    let res = this.applyLookup(lookup.lookupType, table);\n                    if (res) break;\n                }\n                this.glyphIterator.next();\n            }\n        }\n    }\n    applyLookup(lookup, table) {\n        throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n    applyLookupList(lookupRecords) {\n        let options = this.glyphIterator.options;\n        let glyphIndex = this.glyphIterator.index;\n        for (let lookupRecord of lookupRecords){\n            // Reset flags and find glyph index for this lookup record\n            this.glyphIterator.reset(options, glyphIndex);\n            this.glyphIterator.increment(lookupRecord.sequenceIndex);\n            // Get the lookup and setup flags for subtables\n            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n            // Apply lookup subtables until one matches\n            for (let table of lookup.subTables){\n                if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n        }\n        this.glyphIterator.reset(options, glyphIndex);\n        return true;\n    }\n    coverageIndex(coverage, glyph) {\n        if (glyph == null) glyph = this.glyphIterator.cur.id;\n        switch(coverage.version){\n            case 1:\n                return coverage.glyphs.indexOf(glyph);\n            case 2:\n                for (let range of coverage.rangeRecords){\n                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n                }\n                break;\n        }\n        return -1;\n    }\n    match(sequenceIndex, sequence, fn, matched) {\n        let pos = this.glyphIterator.index;\n        let glyph = this.glyphIterator.increment(sequenceIndex);\n        let idx = 0;\n        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){\n            if (matched) matched.push(this.glyphIterator.index);\n            idx++;\n            glyph = this.glyphIterator.next();\n        }\n        this.glyphIterator.index = pos;\n        if (idx < sequence.length) return false;\n        return matched || true;\n    }\n    sequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id);\n    }\n    sequenceMatchIndices(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>{\n            // If the current feature doesn't apply to this glyph,\n            if (!(this.currentFeature in glyph.features)) return false;\n            return component === glyph.id;\n        }, []);\n    }\n    coverageSequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0);\n    }\n    getClassID(glyph, classDef) {\n        switch(classDef.version){\n            case 1:\n                let i = glyph - classDef.startGlyph;\n                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n                break;\n            case 2:\n                for (let range of classDef.classRangeRecord){\n                    if (range.start <= glyph && glyph <= range.end) return range.class;\n                }\n                break;\n        }\n        return 0;\n    }\n    classSequenceMatches(sequenceIndex, sequence, classDef) {\n        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef));\n    }\n    applyContext(table) {\n        let index, set;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                set = table.ruleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n                if (index === -1) return false;\n                set = table.classSet[index];\n                for (let rule1 of set){\n                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    applyChainingContext(table) {\n        let index;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                let set = table.chainRuleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n                let rules = table.chainClassSet[index];\n                if (!rules) return false;\n                for (let rule2 of rules){\n                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    constructor(font, table){\n        this.font = font;\n        this.table = table;\n        this.script = null;\n        this.scriptTag = null;\n        this.language = null;\n        this.languageTag = null;\n        this.features = {};\n        this.lookups = {};\n        // Setup variation substitutions\n        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n        // initialize to default script + language\n        this.selectScript();\n        // current context (set by applyFeatures)\n        this.glyphs = [];\n        this.positions = []; // only used by GPOS\n        this.ligatureID = 1;\n        this.currentFeature = null;\n    }\n}\n\n\nclass $f22bb23c9fd478d8$export$2e2bcd8739ae039 {\n    get id() {\n        return this._id;\n    }\n    set id(id) {\n        this._id = id;\n        this.substituted = true;\n        let GDEF = this._font.GDEF;\n        if (GDEF && GDEF.glyphClassDef) {\n            // TODO: clean this up\n            let classID = (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n            this.isBase = classID === 1;\n            this.isLigature = classID === 2;\n            this.isMark = classID === 3;\n            this.markAttachmentType = GDEF.markAttachClassDef ? (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n        } else {\n            this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n            this.isBase = !this.isMark;\n            this.isLigature = this.codePoints.length > 1;\n            this.markAttachmentType = 0;\n        }\n    }\n    copy() {\n        return new $f22bb23c9fd478d8$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n    constructor(font, id, codePoints = [], features){\n        this._font = font;\n        this.codePoints = codePoints;\n        this.id = id;\n        this.features = {};\n        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){\n            let feature = features[i];\n            this.features[feature] = true;\n        }\n        else if (typeof features === \"object\") Object.assign(this.features, features);\n        this.ligatureID = null;\n        this.ligatureComponent = null;\n        this.isLigated = false;\n        this.cursiveAttachment = null;\n        this.markAttachment = null;\n        this.shaperInfo = null;\n        this.substituted = false;\n        this.isMultiplied = false;\n    }\n}\n\n\nclass $fa1d9fd80dd7279e$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ljmo\",\n            \"vjmo\",\n            \"tjmo\"\n        ], false);\n    }\n    static assignFeatures(plan, glyphs) {\n        let state = 0;\n        let i = 0;\n        while(i < glyphs.length){\n            let action;\n            let glyph = glyphs[i];\n            let code = glyph.codePoints[0];\n            let type = $fa1d9fd80dd7279e$var$getType(code);\n            [action, state] = $fa1d9fd80dd7279e$var$STATE_TABLE[state][type];\n            switch(action){\n                case $fa1d9fd80dd7279e$var$DECOMPOSE:\n                    // Decompose the composed syllable if it is not supported by the font.\n                    if (!plan.font.hasGlyphForCodePoint(code)) i = $fa1d9fd80dd7279e$var$decompose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$COMPOSE:\n                    // Found a decomposed syllable. Try to compose if supported by the font.\n                    i = $fa1d9fd80dd7279e$var$compose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$TONE_MARK:\n                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n                    $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$INVALID:\n                    // Tone mark has no valid syllable to attach to, so insert a dotted circle\n                    i = $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, plan.font);\n                    break;\n            }\n            i++;\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($fa1d9fd80dd7279e$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $fa1d9fd80dd7279e$var$HANGUL_BASE = 0xac00;\nconst $fa1d9fd80dd7279e$var$HANGUL_END = 0xd7a4;\nconst $fa1d9fd80dd7279e$var$HANGUL_COUNT = $fa1d9fd80dd7279e$var$HANGUL_END - $fa1d9fd80dd7279e$var$HANGUL_BASE + 1;\nconst $fa1d9fd80dd7279e$var$L_BASE = 0x1100; // lead\nconst $fa1d9fd80dd7279e$var$V_BASE = 0x1161; // vowel\nconst $fa1d9fd80dd7279e$var$T_BASE = 0x11a7; // trail\nconst $fa1d9fd80dd7279e$var$L_COUNT = 19;\nconst $fa1d9fd80dd7279e$var$V_COUNT = 21;\nconst $fa1d9fd80dd7279e$var$T_COUNT = 28;\nconst $fa1d9fd80dd7279e$var$L_END = $fa1d9fd80dd7279e$var$L_BASE + $fa1d9fd80dd7279e$var$L_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$V_END = $fa1d9fd80dd7279e$var$V_BASE + $fa1d9fd80dd7279e$var$V_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$T_END = $fa1d9fd80dd7279e$var$T_BASE + $fa1d9fd80dd7279e$var$T_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$DOTTED_CIRCLE = 0x25cc;\nconst $fa1d9fd80dd7279e$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst $fa1d9fd80dd7279e$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst $fa1d9fd80dd7279e$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst $fa1d9fd80dd7279e$var$isTone = (code)=>0x302e <= code && code <= 0x302f;\nconst $fa1d9fd80dd7279e$var$isLVT = (code)=>$fa1d9fd80dd7279e$var$HANGUL_BASE <= code && code <= $fa1d9fd80dd7279e$var$HANGUL_END;\nconst $fa1d9fd80dd7279e$var$isLV = (code)=>code - $fa1d9fd80dd7279e$var$HANGUL_BASE < $fa1d9fd80dd7279e$var$HANGUL_COUNT && (code - $fa1d9fd80dd7279e$var$HANGUL_BASE) % $fa1d9fd80dd7279e$var$T_COUNT === 0;\nconst $fa1d9fd80dd7279e$var$isCombiningL = (code)=>$fa1d9fd80dd7279e$var$L_BASE <= code && code <= $fa1d9fd80dd7279e$var$L_END;\nconst $fa1d9fd80dd7279e$var$isCombiningV = (code)=>$fa1d9fd80dd7279e$var$V_BASE <= code && code <= $fa1d9fd80dd7279e$var$V_END;\nconst $fa1d9fd80dd7279e$var$isCombiningT = (code)=>$fa1d9fd80dd7279e$var$T_BASE + 1 && 1 <= code && code <= $fa1d9fd80dd7279e$var$T_END;\n// Character categories\nconst $fa1d9fd80dd7279e$var$X = 0; // Other character\nconst $fa1d9fd80dd7279e$var$L = 1; // Leading consonant\nconst $fa1d9fd80dd7279e$var$V = 2; // Medial vowel\nconst $fa1d9fd80dd7279e$var$T = 3; // Trailing consonant\nconst $fa1d9fd80dd7279e$var$LV = 4; // Composed <LV> syllable\nconst $fa1d9fd80dd7279e$var$LVT = 5; // Composed <LVT> syllable\nconst $fa1d9fd80dd7279e$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $fa1d9fd80dd7279e$var$getType(code) {\n    if ($fa1d9fd80dd7279e$var$isL(code)) return $fa1d9fd80dd7279e$var$L;\n    if ($fa1d9fd80dd7279e$var$isV(code)) return $fa1d9fd80dd7279e$var$V;\n    if ($fa1d9fd80dd7279e$var$isT(code)) return $fa1d9fd80dd7279e$var$T;\n    if ($fa1d9fd80dd7279e$var$isLV(code)) return $fa1d9fd80dd7279e$var$LV;\n    if ($fa1d9fd80dd7279e$var$isLVT(code)) return $fa1d9fd80dd7279e$var$LVT;\n    if ($fa1d9fd80dd7279e$var$isTone(code)) return $fa1d9fd80dd7279e$var$M;\n    return $fa1d9fd80dd7279e$var$X;\n}\n// State machine actions\nconst $fa1d9fd80dd7279e$var$NO_ACTION = 0;\nconst $fa1d9fd80dd7279e$var$DECOMPOSE = 1;\nconst $fa1d9fd80dd7279e$var$COMPOSE = 2;\nconst $fa1d9fd80dd7279e$var$TONE_MARK = 4;\nconst $fa1d9fd80dd7279e$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst $fa1d9fd80dd7279e$var$STATE_TABLE = [\n    //       X                 L                 V                T                  LV                LVT               M\n    // State 0: start state\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 1: <L>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 2: <L,V> or <LV>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ],\n    // State 3: <L,V,T> or <LVT>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ]\n];\nfunction $fa1d9fd80dd7279e$var$getGlyph(font, code, features) {\n    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [\n        code\n    ], features);\n}\nfunction $fa1d9fd80dd7279e$var$decompose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyph.codePoints[0];\n    let s = code - $fa1d9fd80dd7279e$var$HANGUL_BASE;\n    let t = $fa1d9fd80dd7279e$var$T_BASE + s % $fa1d9fd80dd7279e$var$T_COUNT;\n    s = s / $fa1d9fd80dd7279e$var$T_COUNT | 0;\n    let l = $fa1d9fd80dd7279e$var$L_BASE + s / $fa1d9fd80dd7279e$var$V_COUNT | 0;\n    let v = $fa1d9fd80dd7279e$var$V_BASE + s % $fa1d9fd80dd7279e$var$V_COUNT;\n    // Don't decompose if all of the components are not available\n    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $fa1d9fd80dd7279e$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n    // Replace the current glyph with decomposed L, V, and T glyphs,\n    // and apply the proper OpenType features to each component.\n    let ljmo = $fa1d9fd80dd7279e$var$getGlyph(font, l, glyph.features);\n    ljmo.features.ljmo = true;\n    let vjmo = $fa1d9fd80dd7279e$var$getGlyph(font, v, glyph.features);\n    vjmo.features.vjmo = true;\n    let insert = [\n        ljmo,\n        vjmo\n    ];\n    if (t > $fa1d9fd80dd7279e$var$T_BASE) {\n        let tjmo = $fa1d9fd80dd7279e$var$getGlyph(font, t, glyph.features);\n        tjmo.features.tjmo = true;\n        insert.push(tjmo);\n    }\n    glyphs.splice(i, 1, ...insert);\n    return i + insert.length - 1;\n}\nfunction $fa1d9fd80dd7279e$var$compose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    let type = $fa1d9fd80dd7279e$var$getType(code);\n    let prev = glyphs[i - 1].codePoints[0];\n    let prevType = $fa1d9fd80dd7279e$var$getType(prev);\n    // Figure out what type of syllable we're dealing with\n    let lv, ljmo, vjmo, tjmo;\n    if (prevType === $fa1d9fd80dd7279e$var$LV && type === $fa1d9fd80dd7279e$var$T) {\n        // <LV,T>\n        lv = prev;\n        tjmo = glyph;\n    } else {\n        if (type === $fa1d9fd80dd7279e$var$V) {\n            // <L,V>\n            ljmo = glyphs[i - 1];\n            vjmo = glyph;\n        } else {\n            // <L,V,T>\n            ljmo = glyphs[i - 2];\n            vjmo = glyphs[i - 1];\n            tjmo = glyph;\n        }\n        let l = ljmo.codePoints[0];\n        let v = vjmo.codePoints[0];\n        // Make sure L and V are combining characters\n        if ($fa1d9fd80dd7279e$var$isCombiningL(l) && $fa1d9fd80dd7279e$var$isCombiningV(v)) lv = $fa1d9fd80dd7279e$var$HANGUL_BASE + ((l - $fa1d9fd80dd7279e$var$L_BASE) * $fa1d9fd80dd7279e$var$V_COUNT + (v - $fa1d9fd80dd7279e$var$V_BASE)) * $fa1d9fd80dd7279e$var$T_COUNT;\n    }\n    let t = tjmo && tjmo.codePoints[0] || $fa1d9fd80dd7279e$var$T_BASE;\n    if (lv != null && (t === $fa1d9fd80dd7279e$var$T_BASE || $fa1d9fd80dd7279e$var$isCombiningT(t))) {\n        let s = lv + (t - $fa1d9fd80dd7279e$var$T_BASE);\n        // Replace with a composed glyph if supported by the font,\n        // otherwise apply the proper OpenType features to each component.\n        if (font.hasGlyphForCodePoint(s)) {\n            let del = prevType === $fa1d9fd80dd7279e$var$V ? 3 : 2;\n            glyphs.splice(i - del + 1, del, $fa1d9fd80dd7279e$var$getGlyph(font, s, glyph.features));\n            return i - del + 1;\n        }\n    }\n    // Didn't compose (either a non-combining component or unsupported by font).\n    if (ljmo) ljmo.features.ljmo = true;\n    if (vjmo) vjmo.features.vjmo = true;\n    if (tjmo) tjmo.features.tjmo = true;\n    if (prevType === $fa1d9fd80dd7279e$var$LV) {\n        // Sequence was originally <L,V>, which got combined earlier.\n        // Either the T was non-combining, or the LVT glyph wasn't supported.\n        // Decompose the glyph again and apply OT features.\n        $fa1d9fd80dd7279e$var$decompose(glyphs, i - 1, font);\n        return i + 1;\n    }\n    return i;\n}\nfunction $fa1d9fd80dd7279e$var$getLength(code) {\n    switch($fa1d9fd80dd7279e$var$getType(code)){\n        case $fa1d9fd80dd7279e$var$LV:\n        case $fa1d9fd80dd7279e$var$LVT:\n            return 1;\n        case $fa1d9fd80dd7279e$var$V:\n            return 2;\n        case $fa1d9fd80dd7279e$var$T:\n            return 3;\n    }\n}\nfunction $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    // Move tone mark to the beginning of the previous syllable, unless it is zero width\n    if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n    let prev = glyphs[i - 1].codePoints[0];\n    let len = $fa1d9fd80dd7279e$var$getLength(prev);\n    glyphs.splice(i, 1);\n    return glyphs.splice(i - len, 0, glyph);\n}\nfunction $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    if (font.hasGlyphForCodePoint($fa1d9fd80dd7279e$var$DOTTED_CIRCLE)) {\n        let dottedCircle = $fa1d9fd80dd7279e$var$getGlyph(font, $fa1d9fd80dd7279e$var$DOTTED_CIRCLE, glyph.features);\n        // If the tone mark is zero width, insert the dotted circle before, otherwise after\n        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n        glyphs.splice(idx, 0, dottedCircle);\n        i++;\n    }\n    return i;\n}\n\n\n\n\n\n\n\n\n\nvar $d22b56f2cf15e5ba$exports = {};\n$d22b56f2cf15e5ba$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\n\n\nvar $79781f8c452881c2$exports = {};\n$79781f8c452881c2$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\n\n\nconst $79e3b6f2c331d0bf$export$a513ea61a7bee91c = {\n    X: 1,\n    C: 2,\n    V: 4,\n    N: 8,\n    H: 16,\n    ZWNJ: 32,\n    ZWJ: 64,\n    M: 128,\n    SM: 256,\n    VD: 512,\n    A: 1024,\n    Placeholder: 2048,\n    Dotted_Circle: 4096,\n    RS: 8192,\n    Coeng: 16384,\n    Repha: 32768,\n    Ra: 65536,\n    CM: 131072,\n    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\nconst $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0 = {\n    Start: 1,\n    Ra_To_Become_Reph: 2,\n    Pre_M: 4,\n    Pre_C: 8,\n    Base_C: 16,\n    After_Main: 32,\n    Above_C: 64,\n    Before_Sub: 128,\n    Below_C: 256,\n    After_Sub: 512,\n    Before_Post: 1024,\n    Post_C: 2048,\n    After_Post: 4096,\n    Final_C: 8192,\n    SMVD: 16384,\n    End: 32768\n};\nconst $79e3b6f2c331d0bf$export$8519deaa7de2b07 = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.C | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Ra | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.CM | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.V | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Placeholder | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Dotted_Circle;\nconst $79e3b6f2c331d0bf$export$bbcd928767338e0d = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWNJ;\nconst $79e3b6f2c331d0bf$export$ca9599b2a300afc = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.H | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Coeng;\nconst $79e3b6f2c331d0bf$export$e99d119da76a0fc5 = {\n    Default: {\n        hasOldSpec: false,\n        virama: 0,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Devanagari: {\n        hasOldSpec: true,\n        virama: 0x094D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Bengali: {\n        hasOldSpec: true,\n        virama: 0x09CD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gurmukhi: {\n        hasOldSpec: true,\n        virama: 0x0A4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gujarati: {\n        hasOldSpec: true,\n        virama: 0x0ACD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Oriya: {\n        hasOldSpec: true,\n        virama: 0x0B4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Tamil: {\n        hasOldSpec: true,\n        virama: 0x0BCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Telugu: {\n        hasOldSpec: true,\n        virama: 0x0C4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Explicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Kannada: {\n        hasOldSpec: true,\n        virama: 0x0CCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Malayalam: {\n        hasOldSpec: true,\n        virama: 0x0D4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Log_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    // Handled by UniversalShaper\n    // Sinhala: {\n    //   hasOldSpec: false,\n    //   virama: 0x0DCA,\n    //   basePos: 'Last_Sinhala',\n    //   rephPos: POSITIONS.After_Main,\n    //   rephMode: 'Explicit',\n    //   blwfMode: 'Pre_And_Post'\n    // },\n    Khmer: {\n        hasOldSpec: false,\n        virama: 0x17D2,\n        basePos: \"First\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n        rephMode: \"Vis_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    }\n};\nconst $79e3b6f2c331d0bf$export$f647c9cfdd77d95a = {\n    // Khmer\n    0x17BE: [\n        0x17C1,\n        0x17BE\n    ],\n    0x17BF: [\n        0x17C1,\n        0x17BF\n    ],\n    0x17C0: [\n        0x17C1,\n        0x17C0\n    ],\n    0x17C4: [\n        0x17C1,\n        0x17C4\n    ],\n    0x17C5: [\n        0x17C1,\n        0x17C5\n    ]\n};\n\n\n\nconst { decompositions: $d203e6b9523d0071$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $d203e6b9523d0071$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"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\"));\nconst $d203e6b9523d0071$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($d22b56f2cf15e5ba$exports))));\nclass $d203e6b9523d0071$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($d203e6b9523d0071$var$setupSyllables);\n        plan.addStage([\n            \"locl\",\n            \"ccmp\"\n        ]);\n        plan.addStage($d203e6b9523d0071$var$initialReordering);\n        plan.addStage(\"nukt\");\n        plan.addStage(\"akhn\");\n        plan.addStage(\"rphf\", false);\n        plan.addStage(\"rkrf\");\n        plan.addStage(\"pref\", false);\n        plan.addStage(\"blwf\", false);\n        plan.addStage(\"abvf\", false);\n        plan.addStage(\"half\", false);\n        plan.addStage(\"pstf\", false);\n        plan.addStage(\"vatu\");\n        plan.addStage(\"cjct\");\n        plan.addStage(\"cfar\", false);\n        plan.addStage($d203e6b9523d0071$var$finalReordering);\n        plan.addStage({\n            local: [\n                \"init\"\n            ],\n            global: [\n                \"pres\",\n                \"abvs\",\n                \"blws\",\n                \"psts\",\n                \"haln\",\n                \"dist\",\n                \"abvm\",\n                \"blwm\",\n                \"calt\",\n                \"clig\"\n            ]\n        });\n        // Setup the indic config for the selected script\n        plan.unicodeScript = $e38a1a895f6aeb54$export$ce50e82f12a827a4(plan.script);\n        plan.indicConfig = (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5).Default;\n        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n    // TODO: turn off kern (Khmer) and liga features.\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split matras\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            let d = (0, $79e3b6f2c331d0bf$export$f647c9cfdd77d95a)[codepoint] || $d203e6b9523d0071$var$decompositions[codepoint];\n            if (d) {\n                let decomposed = d.map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d203e6b9523d0071$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $d203e6b9523d0071$var$indicCategory(glyph) {\n    return $d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $d203e6b9523d0071$var$indicPosition(glyph) {\n    return 1 << ($d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nclass $d203e6b9523d0071$var$IndicInfo {\n    constructor(category, position, syllableType, syllable){\n        this.category = category;\n        this.position = position;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $d203e6b9523d0071$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    let last = 0;\n    for (let [start, end, tags] of $d203e6b9523d0071$var$stateMachine.match(glyphs.map($d203e6b9523d0071$var$indicCategory))){\n        if (start > last) {\n            ++syllable;\n            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n        }\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(glyphs[i]), $d203e6b9523d0071$var$indicPosition(glyphs[i]), tags[0], syllable);\n        last = end + 1;\n    }\n    if (last < glyphs.length) {\n        ++syllable;\n        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n    }\n}\nfunction $d203e6b9523d0071$var$isConsonant(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$8519deaa7de2b07);\n}\nfunction $d203e6b9523d0071$var$isJoiner(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$bbcd928767338e0d);\n}\nfunction $d203e6b9523d0071$var$isHalantOrCoeng(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc);\n}\nfunction $d203e6b9523d0071$var$wouldSubstitute(glyphs, feature) {\n    for (let glyph of glyphs)glyph.features = {\n        [feature]: true\n    };\n    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n    GSUB.applyFeatures([\n        feature\n    ], glyphs);\n    return glyphs.length === 1;\n}\nfunction $d203e6b9523d0071$var$consonantPosition(font, consonant, virama) {\n    let glyphs = [\n        virama,\n        consonant,\n        virama\n    ];\n    if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n}\nfunction $d203e6b9523d0071$var$initialReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    let virama = font.glyphForCodePoint(indicConfig.virama).id;\n    if (virama) {\n        let info = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, virama, [\n            indicConfig.virama\n        ]);\n        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) glyphs[i].shaperInfo.position = $d203e6b9523d0071$var$consonantPosition(font, glyphs[i].copy(), info);\n    }\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        let { category: category , syllableType: syllableType  } = glyphs[start].shaperInfo;\n        if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n        if (syllableType === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(g), $d203e6b9523d0071$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n            // Insert after possible Repha.\n            let i = start;\n            while(i < end && glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha)i++;\n            glyphs.splice(i++, 0, g);\n            end++;\n        }\n        // 1. Find base consonant:\n        //\n        // The shaping engine finds the base consonant of the syllable, using the\n        // following algorithm: starting from the end of the syllable, move backwards\n        // until a consonant is found that does not have a below-base or post-base\n        // form (post-base forms have to follow below-base forms), or that is not a\n        // pre-base reordering Ra, or arrive at the first consonant. The consonant\n        // stopped at will be the base.\n        let base = end;\n        let limit = start;\n        let hasReph = false;\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        if (indicConfig.rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$d203e6b9523d0071$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n            // See if it matches the 'rphf' feature.\n            let g = [\n                glyphs[start].copy(),\n                glyphs[start + 1].copy(),\n                glyphs[start + 2].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $d203e6b9523d0071$var$wouldSubstitute(g, \"rphf\")) {\n                limit += 2;\n                while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n                base = start;\n                hasReph = true;\n            }\n        } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha) {\n            limit++;\n            while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n            base = start;\n            hasReph = true;\n        }\n        switch(indicConfig.basePos){\n            case \"Last\":\n                {\n                    // starting from the end of the syllable, move backwards\n                    let i = end;\n                    let seenBelow = false;\n                    do {\n                        let info = glyphs[--i].shaperInfo;\n                        // until a consonant is found\n                        if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) {\n                            // that does not have a below-base or post-base form\n                            // (post-base forms have to follow below-base forms),\n                            if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C && (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                                base = i;\n                                break;\n                            }\n                            // or that is not a pre-base reordering Ra,\n                            //\n                            // IMPLEMENTATION NOTES:\n                            //\n                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n                            // by the logic above already.\n                            //\n                            // or arrive at the first consonant. The consonant stopped at will\n                            // be the base.\n                            if (info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n                            base = i;\n                        } else if (start < i && info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ && glyphs[i - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                    }while (i > limit);\n                    break;\n                }\n            case \"First\":\n                // The first consonant is always the base.\n                base = start;\n                // Mark all subsequent consonants as below.\n                for(let i = base + 1; i < end; i++)if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n        }\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        //\n        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n        if (hasReph && base === start && limit - base <= 2) hasReph = false;\n        // 2. Decompose and reorder Matras:\n        //\n        // Each matra and any syllable modifier sign in the cluster are moved to the\n        // appropriate position relative to the consonant(s) in the cluster. The\n        // shaping engine decomposes two- or three-part matras into their constituent\n        // parts before any repositioning. Matra characters are classified by which\n        // consonant in a conjunct they have affinity for and are reordered to the\n        // following positions:\n        //\n        //   o Before first half form in the syllable\n        //   o After subjoined consonants\n        //   o After post-form consonant\n        //   o After main consonant (for above marks)\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // The normalize() routine has already decomposed matras for us, so we don't\n        // need to worry about that.\n        // 3.  Reorder marks to canonical order:\n        //\n        // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n        // if necessary, so that the nukta is first.\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // We don't need to do this: the normalize() routine already did this for us.\n        // Reorder characters\n        for(let i1 = start; i1 < base; i1++){\n            let info = glyphs[i1].shaperInfo;\n            info.position = Math.min((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_C, info.position);\n        }\n        if (base < end) glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n        // Mark final consonants.  A final consonant is one appearing after a matra,\n        // like in Khmer.\n        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n            for(let j = i2 + 1; j < end; j++)if ($d203e6b9523d0071$var$isConsonant(glyphs[j])) {\n                glyphs[j].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Final_C;\n                break;\n            }\n            break;\n        }\n        // Handle beginning Ra\n        if (hasReph) glyphs[start].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;\n        // For old-style Indic script tags, move the first post-base Halant after\n        // last consonant.\n        //\n        // Reports suggest that in some scripts Uniscribe does this only if there\n        // is *not* a Halant after last consonant already (eg. Kannada), while it\n        // does it unconditionally in other scripts (eg. Malayalam).  We don't\n        // currently know about other scripts, so we single out Malayalam for now.\n        //\n        // Kannada test case:\n        // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n        // With some versions of Lohit Kannada.\n        // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n        //\n        // Malayalam test case:\n        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n        // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n        if (plan.isOldSpec) {\n            let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) {\n                let j;\n                for(j = end - 1; j > i; j--){\n                    if ($d203e6b9523d0071$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                }\n                if (glyphs[j].shaperInfo.category !== (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && j > i) {\n                    // Move Halant to after last consonant.\n                    let t = glyphs[i];\n                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n                    glyphs[j] = t;\n                }\n                break;\n            }\n        }\n        // Attach misc marks to previous char to move with them.\n        let lastPos = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Start;\n        for(let i3 = start; i3 < end; i3++){\n            let info = glyphs[i3].shaperInfo;\n            if (info.category & ((0, $79e3b6f2c331d0bf$export$bbcd928767338e0d) | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).RS | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).CM | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc) & info.category)) {\n                info.position = lastPos;\n                if (info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    // Uniscribe doesn't move the Halant with Left Matra.\n                    // TEST: U+092B,U+093F,U+094DE\n                    // We follow.  This is important for the Sinhala\n                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n                    // where U+0DD9 is a left matra and U+0DCA is the virama.\n                    // We don't want to move the virama with the left matra.\n                    // TEST: U+0D9A,U+0DDA\n                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                        info.position = glyphs[j - 1].shaperInfo.position;\n                        break;\n                    }\n                }\n            } else if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) lastPos = info.position;\n        }\n        // For post-base consonants let them own anything before them\n        // since the last consonant or matra.\n        let last = base;\n        for(let i4 = base + 1; i4 < end; i4++){\n            if ($d203e6b9523d0071$var$isConsonant(glyphs[i4])) {\n                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n                last = i4;\n            } else if (glyphs[i4].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) last = i4;\n        }\n        let arr = glyphs.slice(start, end);\n        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position);\n        glyphs.splice(start, arr.length, ...arr);\n        // Find base again\n        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            base = i5;\n            break;\n        }\n        // Setup features now\n        // Reph\n        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;\n        // Pre-base\n        let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n        for(let i7 = start; i7 < base; i7++){\n            glyphs[i7].features.half = true;\n            if (blwf) glyphs[i7].features.blwf = true;\n        }\n        // Post-base\n        for(let i8 = base + 1; i8 < end; i8++){\n            glyphs[i8].features.abvf = true;\n            glyphs[i8].features.pstf = true;\n            glyphs[i8].features.blwf = true;\n        }\n        if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n            // Old-spec eye-lash Ra needs special handling.  From the\n            // spec:\n            //\n            // \"The feature 'below-base form' is applied to consonants\n            // having below-base forms and following the base consonant.\n            // The exception is vattu, which may appear below half forms\n            // as well as below the base glyph. The feature 'below-base\n            // form' will be applied to all such occurrences of Ra as well.\"\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n            // with Sanskrit 2003 font.\n            //\n            // However, note that Ra,Halant,ZWJ is the correct way to\n            // request eyelash form of Ra, so we wouldbn't inhibit it\n            // in that sequence.\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Ra && glyphs[i + 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n                glyphs[i].features.blwf = true;\n                glyphs[i + 1].features.blwf = true;\n            }\n        }\n        let prefLen = 2;\n        if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n        for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){\n            let g = [\n                glyphs[i9].copy(),\n                glyphs[i9 + 1].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g, \"pref\")) {\n                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;\n                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n                // Read the feature spec.\n                // This allows distinguishing the following cases with MS Khmer fonts:\n                // U+1784,U+17D2,U+179A,U+17D2,U+1782\n                // U+1784,U+17D2,U+1782,U+17D2,U+179A\n                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;\n                break;\n            }\n        }\n        // Apply ZWJ/ZWNJ effects\n        for(let i10 = start + 1; i10 < end; i10++)if ($d203e6b9523d0071$var$isJoiner(glyphs[i10])) {\n            let nonJoiner = glyphs[i10].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWNJ;\n            let j = i10;\n            do {\n                j--;\n                // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n                // being there, since we don't skip them for the CJCT\n                // feature (ie. F_MANUAL_ZWJ)\n                // A ZWNJ disables HALF.\n                if (nonJoiner) delete glyphs[j].features.half;\n            }while (j > start && !$d203e6b9523d0071$var$isConsonant(glyphs[j]));\n        }\n    }\n}\nfunction $d203e6b9523d0071$var$finalReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        // 4. Final reordering:\n        //\n        // After the localized forms and basic shaping forms GSUB features have been\n        // applied (see below), the shaping engine performs some final glyph\n        // reordering before applying all the remaining font features to the entire\n        // cluster.\n        let tryPref = !!features.pref;\n        // Find base again\n        let base = start;\n        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            if (tryPref && base + 1 < end) {\n                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                        // Ok, this was a 'pref' candidate but didn't form any.\n                        // Base is around here...\n                        base = i;\n                        while(base < end && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[base]))base++;\n                        glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).BASE_C;\n                        tryPref = false;\n                    }\n                    break;\n                }\n            }\n            // For Malayalam, skip over unformed below- (but NOT post-) forms.\n            if (plan.unicodeScript === \"Malayalam\") for(let i = base + 1; i < end; i++){\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i === end || !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[i])) break;\n                i++; // Skip halant.\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i < end && $d203e6b9523d0071$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) {\n                    base = i;\n                    glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n                }\n            }\n            if (start < base && glyphs[base].shaperInfo.position > (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) base--;\n            break;\n        }\n        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ) base--;\n        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc)))base--;\n        // o Reorder matras:\n        //\n        // If a pre-base matra character had been reordered before applying basic\n        // features, the glyph can be moved closer to the main consonant based on\n        // whether half-forms had been formed. Actual position for the matra is\n        // defined as “after last standalone halant glyph, after initial matra\n        // position and before the main consonant”. If ZWJ or ZWNJ follow this\n        // halant, position is moved after it.\n        //\n        if (start + 1 < end && start < base) {\n            // If we lost track of base, alas, position before last thingy.\n            let newPos = base === end ? base - 2 : base - 1;\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                // If we found no Halant we are done.\n                // Otherwise only proceed if the Halant does\n                // not belong to the Matra itself!\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.\n                {\n                    if (newPos + 1 < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos + 1])) newPos++;\n                } else newPos = start; // No move.\n            }\n            if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                // Now go see if there's actually any matras...\n                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    let oldPos = i - 1;\n                    if (oldPos < base && base <= newPos) base--;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n                    glyphs[newPos] = tmp;\n                    newPos--;\n                }\n            }\n        }\n        // o Reorder reph:\n        //\n        // Reph’s original position is always at the beginning of the syllable,\n        // (i.e. it is not reordered at the character reordering stage). However,\n        // it will be reordered according to the basic-forms shaping results.\n        // Possible positions for reph, depending on the script, are; after main,\n        // before post-base consonant forms, and after post-base consonant forms.\n        // Two cases:\n        //\n        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n        //   we should only move it if the sequence ligated to the repha form.\n        //\n        // - If repha is encoded separately and in the logical position, we should only\n        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n        //   to make it work without the reordering.\n        if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n            let newRephPos;\n            let rephPos = indicConfig.rephPos;\n            let found = false;\n            // 1. If reph should be positioned after post-base consonant forms,\n            //    proceed to step 5.\n            if (rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post) {\n                //  2. If the reph repositioning class is not after post-base: target\n                //     position is after the first explicit halant glyph between the\n                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n                //     are following this halant, position is moved after it. If such\n                //     position is found, this is the target position. Otherwise,\n                //     proceed to the next step.\n                //\n                //     Note: in old-implementation fonts, where classifications were\n                //     fixed in shaping engine, there was no case where reph position\n                //     will be found on this step.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n                // 3. If reph should be repositioned after the main consonant: find the\n                //    first consonant not ligated with main, or find the first\n                //    consonant that is not a potential pre-base reordering Ra.\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main)newRephPos++;\n                    found = newRephPos < end;\n                }\n                // 4. If reph should be positioned before post-base consonant, find\n                //    first post-base classified consonant not ligated with main. If no\n                //    consonant is found, the target position should be before the\n                //    first matra, syllable modifier sign or vedic sign.\n                //\n                // This is our take on what step 4 is trying to say (and failing, BADLY).\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Sub) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)))newRephPos++;\n                    found = newRephPos < end;\n                }\n            }\n            //  5. If no consonant is found in steps 3 or 4, move reph to a position\n            //     immediately before the first post-base matra, syllable modifier\n            //     sign or vedic sign that has a reordering class after the intended\n            //     reph position. For example, if the reordering position for reph\n            //     is post-main, it will skip above-base matras that also have a\n            //     post-main position.\n            if (!found) {\n                // Copied from step 2.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n            }\n            // 6. Otherwise, reorder reph to the end of the syllable.\n            if (!found) {\n                newRephPos = end - 1;\n                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)newRephPos--;\n                // If the Reph is to be ending up after a Matra,Halant sequence,\n                // position it before that Halant so it can interact with the Matra.\n                // However, if it's a plain Consonant,Halant we shouldn't do that.\n                // Uniscribe doesn't do this.\n                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) newRephPos--;\n                }\n            }\n            let reph = glyphs[start];\n            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n            glyphs[newRephPos] = reph;\n            if (start < base && base <= newRephPos) base--;\n        }\n        // o Reorder pre-base reordering consonants:\n        //\n        // If a pre-base reordering consonant is found, reorder it according to\n        // the following rules:\n        if (tryPref && base + 1 < end) {\n            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                // 1. Only reorder a glyph produced by substitution during application\n                //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n                //    the feature generally but block it in certain contexts.)\n                // Note: We just check that something got substituted.  We don't check that\n                // the <pref> feature actually did it...\n                //\n                // Reorder pref only if it ligated.\n                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n                    // 2. Try to find a target position the same way as for pre-base matra.\n                    //    If it is found, reorder pre-base consonant glyph.\n                    //\n                    // 3. If position is not found, reorder immediately before main\n                    //    consonant.\n                    let newPos = base;\n                    // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n                    // We want to position matra after them.\n                    if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n                        // split matra, it should be reordered to *before* the left part of such matra.\n                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                            let oldPos = i;\n                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                                newPos--;\n                                break;\n                            }\n                        }\n                    }\n                    if (newPos > start && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n                    {\n                        if (newPos < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos])) newPos++;\n                    }\n                    let oldPos = i;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n                    glyphs[newPos] = tmp;\n                    if (newPos <= base && base < oldPos) base++;\n                }\n                break;\n            }\n        }\n        // Apply 'init' to the Left Matra if it's a word start.\n        if (glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $gfJaN$unicodeproperties.getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n    }\n}\nfunction $d203e6b9523d0071$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\n\n\n\n\n\n\n\n\n\nconst { categories: $9b772791ccede8a5$var$categories , decompositions: $9b772791ccede8a5$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $9b772791ccede8a5$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"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\"));\nconst $9b772791ccede8a5$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports))));\nclass $9b772791ccede8a5$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($9b772791ccede8a5$var$setupSyllables);\n        // Default glyph pre-processing group\n        plan.addStage([\n            \"locl\",\n            \"ccmp\",\n            \"nukt\",\n            \"akhn\"\n        ]);\n        // Reordering group\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"rphf\"\n        ], false);\n        plan.addStage($9b772791ccede8a5$var$recordRphf);\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"pref\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$recordPref);\n        // Orthographic unit shaping group\n        plan.addStage([\n            \"rkrf\",\n            \"abvf\",\n            \"blwf\",\n            \"half\",\n            \"pstf\",\n            \"vatu\",\n            \"cjct\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$reorder);\n        // Topographical features\n        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n        // Standard topographic presentation and positional feature application\n        plan.addStage([\n            \"abvs\",\n            \"blws\",\n            \"pres\",\n            \"psts\",\n            \"dist\",\n            \"abvm\",\n            \"blwm\"\n        ]);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split vowels\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            if ($9b772791ccede8a5$var$decompositions[codepoint]) {\n                let decomposed = $9b772791ccede8a5$var$decompositions[codepoint].map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($9b772791ccede8a5$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $9b772791ccede8a5$var$useCategory(glyph) {\n    return $9b772791ccede8a5$var$trie.get(glyph.codePoints[0]);\n}\nclass $9b772791ccede8a5$var$USEInfo {\n    constructor(category, syllableType, syllable){\n        this.category = category;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $9b772791ccede8a5$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    for (let [start, end, tags] of $9b772791ccede8a5$var$stateMachine.match(glyphs.map($9b772791ccede8a5$var$useCategory))){\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $9b772791ccede8a5$var$USEInfo($9b772791ccede8a5$var$categories[$9b772791ccede8a5$var$useCategory(glyphs[i])], tags[0], syllable);\n        // Assign rphf feature\n        let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;\n    }\n}\nfunction $9b772791ccede8a5$var$clearSubstitutionFlags(font, glyphs) {\n    for (let glyph of glyphs)glyph.substituted = false;\n}\nfunction $9b772791ccede8a5$var$recordRphf(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.\n    glyph.shaperInfo.category = \"R\";\n}\nfunction $9b772791ccede8a5$var$recordPref(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.\n    glyph.shaperInfo.category = \"VPre\";\n}\nfunction $9b772791ccede8a5$var$reorder(font, glyphs) {\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    for(let start = 0, end = $9b772791ccede8a5$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $9b772791ccede8a5$var$nextSyllable(glyphs, start)){\n        let i, j;\n        let info = glyphs[start].shaperInfo;\n        let type = info.syllableType;\n        // Only a few syllable types need reordering.\n        if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n        // Insert a dotted circle glyph in broken clusters.\n        if (type === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = info;\n            // Insert after possible Repha.\n            for(i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n            glyphs.splice(++i, 0, g);\n            end++;\n        }\n        // Move things forward.\n        if (info.category === \"R\" && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.\n        for(i = start + 1; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) {\n                // If we hit a halant, move before it; otherwise it's a base: move to it's\n                // place, and shift things in between backward.\n                if ($9b772791ccede8a5$var$isHalant(glyphs[i])) i--;\n                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n                break;\n            }\n        }\n        // Move things back.\n        for(i = start, j = end; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's\n            // place, and shift things in between backward.\n            j = $9b772791ccede8a5$var$isHalant(glyphs[i]) ? i + 1 : i;\n            else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n        }\n    }\n}\nfunction $9b772791ccede8a5$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nfunction $9b772791ccede8a5$var$isHalant(glyph) {\n    return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $9b772791ccede8a5$var$isBase(info) {\n    return info.category === \"B\" || info.category === \"GB\";\n}\n\n\nconst $fdb4471fc82bc2c2$var$SHAPERS = {\n    arab: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mong: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    syrc: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    \"nko \": (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phag: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mand: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mani: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phlp: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    hang: (0, $fa1d9fd80dd7279e$export$2e2bcd8739ae039),\n    bng2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    beng: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    dev2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    deva: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gjr2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gujr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    guru: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gur2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knda: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knd2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlm2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlym: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    ory2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    orya: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    taml: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tml2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    telu: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tel2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    khmr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    bali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    batk: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    brah: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    bugi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    buhd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cakm: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cham: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    dupl: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    egyp: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    gran: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    hano: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    java: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kthi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khar: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khoj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sind: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lepc: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    limb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    mahj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mand: UniversalShaper, // Mandaic\n    // mani: UniversalShaper, // Manichaean\n    mtei: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    modi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mong: UniversalShaper, // Mongolian\n    // 'nko ': UniversalShaper, // N’Ko\n    hmng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // phag: UniversalShaper, // Phags-pa\n    // phlp: UniversalShaper, // Psalter Pahlavi\n    rjng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    saur: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    shrd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sidd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sinh: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    sund: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sylo: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tglg: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tagb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tale: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lana: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tavt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    takr: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tibt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tfng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tirh: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    latn: (0, $d28fb665ee343afc$export$2e2bcd8739ae039),\n    DFLT: (0, $d28fb665ee343afc$export$2e2bcd8739ae039 // Default\n    )\n};\nfunction $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script) {\n    if (!Array.isArray(script)) script = [\n        script\n    ];\n    for (let s of script){\n        let shaper = $fdb4471fc82bc2c2$var$SHAPERS[s];\n        if (shaper) return shaper;\n    }\n    return 0, $d28fb665ee343afc$export$2e2bcd8739ae039;\n}\n\n\n\n\n\nclass $86bc1883359e094a$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    let glyph = this.glyphIterator.cur;\n                    switch(table.version){\n                        case 1:\n                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                            break;\n                        case 2:\n                            glyph.id = table.substitute.get(index);\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let sequence = table.sequences.get(index);\n                        if (sequence.length === 0) {\n                            // If the sequence length is zero, delete the glyph.\n                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                            this.glyphs.splice(this.glyphIterator.index, 1);\n                            return true;\n                        }\n                        this.glyphIterator.cur.id = sequence[0];\n                        this.glyphIterator.cur.ligatureComponent = 0;\n                        let features = this.glyphIterator.cur.features;\n                        let curGlyph = this.glyphIterator.cur;\n                        let replacement = sequence.slice(1).map((gid, i)=>{\n                            let glyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, gid, undefined, features);\n                            glyph.shaperInfo = curGlyph.shaperInfo;\n                            glyph.isLigated = curGlyph.isLigated;\n                            glyph.ligatureComponent = i + 1;\n                            glyph.substituted = true;\n                            glyph.isMultiplied = true;\n                            return glyph;\n                        });\n                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n                        return true;\n                    }\n                    return false;\n                }\n            case 3:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let USER_INDEX = 0; // TODO\n                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n                        return true;\n                    }\n                    return false;\n                }\n            case 4:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    for (let ligature of table.ligatureSets.get(index)){\n                        let matched = this.sequenceMatchIndices(1, ligature.components);\n                        if (!matched) continue;\n                        let curGlyph = this.glyphIterator.cur;\n                        // Concatenate all of the characters the new ligature will represent\n                        let characters = curGlyph.codePoints.slice();\n                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);\n                        // Create the replacement ligature glyph\n                        let ligatureGlyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, curGlyph.features);\n                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n                        ligatureGlyph.isLigated = true;\n                        ligatureGlyph.substituted = true;\n                        // From Harfbuzz:\n                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                        //   the ligature to keep its old ligature id.  This will allow it to attach to\n                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                        //   later, we don't want them to lose their ligature id/component, otherwise\n                        //   GPOS will fail to correctly position the mark ligature on top of the\n                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                        //\n                        // - If a ligature is formed of components that some of which are also ligatures\n                        //   themselves, and those ligature components had marks attached to *their*\n                        //   components, we have to attach the marks to the new ligature component\n                        //   positions!  Now *that*'s tricky!  And these marks may be following the\n                        //   last component of the whole sequence, so we should loop forward looking\n                        //   for them and update them.\n                        //\n                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                        //   the new ligature with a component value of 2.\n                        //\n                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                        let isMarkLigature = curGlyph.isMark;\n                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;\n                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                        let lastLigID = curGlyph.ligatureID;\n                        let lastNumComps = curGlyph.codePoints.length;\n                        let curComps = lastNumComps;\n                        let idx = this.glyphIterator.index + 1;\n                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                        // This allows GPOS to attach marks to the correct ligature components.\n                        for (let matchIndex of matched){\n                            // Don't assign new ligature components for mark ligatures (see above)\n                            if (isMarkLigature) idx = matchIndex;\n                            else while(idx < matchIndex){\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                                idx++;\n                            }\n                            lastLigID = this.glyphs[idx].ligatureID;\n                            lastNumComps = this.glyphs[idx].codePoints.length;\n                            curComps += lastNumComps;\n                            idx++; // skip base glyph\n                        }\n                        // Adjust ligature components for any marks following\n                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){\n                            if (this.glyphs[i1].ligatureID === lastLigID) {\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[i1].ligatureComponent = ligatureComponent;\n                            } else break;\n                        }\n                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);\n                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                        return true;\n                    }\n                    return false;\n                }\n            case 5:\n                return this.applyContext(table);\n            case 6:\n                return this.applyChainingContext(table);\n            case 7:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n        }\n    }\n}\n\n\n\nclass $79ea6270f0a90256$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyPositionValue(sequenceIndex, value) {\n        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n        if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n        if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n        if (value.xPlacement != null) position.xOffset += value.xPlacement;\n        if (value.yPlacement != null) position.yOffset += value.yPlacement;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n        }\n    // TODO: device tables\n    }\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            this.applyPositionValue(0, table.value);\n                            break;\n                        case 2:\n                            this.applyPositionValue(0, table.values.get(index));\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let nextGlyph = this.glyphIterator.peek();\n                    if (!nextGlyph) return false;\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            let set = table.pairSets.get(index);\n                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {\n                                this.applyPositionValue(0, pair.value1);\n                                this.applyPositionValue(1, pair.value2);\n                                return true;\n                            }\n                            return false;\n                        case 2:\n                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                            if (class1 === -1 || class2 === -1) return false;\n                            var pair1 = table.classRecords.get(class1).get(class2);\n                            this.applyPositionValue(0, pair1.value1);\n                            this.applyPositionValue(1, pair1.value2);\n                            return true;\n                    }\n                }\n            case 3:\n                {\n                    let nextIndex = this.glyphIterator.peekIndex();\n                    let nextGlyph = this.glyphs[nextIndex];\n                    if (!nextGlyph) return false;\n                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n                    if (!curRecord || !curRecord.exitAnchor) return false;\n                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n                    if (!nextRecord || !nextRecord.entryAnchor) return false;\n                    let entry = this.getAnchor(nextRecord.entryAnchor);\n                    let exit = this.getAnchor(curRecord.exitAnchor);\n                    let cur = this.positions[this.glyphIterator.index];\n                    let next = this.positions[nextIndex];\n                    let d;\n                    switch(this.direction){\n                        case \"ltr\":\n                            cur.xAdvance = exit.x + cur.xOffset;\n                            d = entry.x + next.xOffset;\n                            next.xAdvance -= d;\n                            next.xOffset -= d;\n                            break;\n                        case \"rtl\":\n                            d = exit.x + cur.xOffset;\n                            cur.xAdvance -= d;\n                            cur.xOffset -= d;\n                            next.xAdvance = entry.x + next.xOffset;\n                            break;\n                    }\n                    if (this.glyphIterator.flags.rightToLeft) {\n                        this.glyphIterator.cur.cursiveAttachment = nextIndex;\n                        cur.yOffset = entry.y - exit.y;\n                    } else {\n                        nextGlyph.cursiveAttachment = this.glyphIterator.index;\n                        cur.yOffset = exit.y - entry.y;\n                    }\n                    return true;\n                }\n            case 4:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n                    if (baseGlyphIndex < 0) return false;\n                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (baseIndex === -1) return false;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 5:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n                    if (baseGlyphIndex < 0) return false;\n                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (ligIndex === -1) return false;\n                    let ligAttach = table.ligatureArray[ligIndex];\n                    let markGlyph = this.glyphIterator.cur;\n                    let ligGlyph = this.glyphs[baseGlyphIndex];\n                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = ligAttach[compIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 6:\n                {\n                    let mark1Index = this.coverageIndex(table.mark1Coverage);\n                    if (mark1Index === -1) return false;\n                    // get the previous mark to attach to\n                    let prevIndex = this.glyphIterator.peekIndex(-1);\n                    let prev = this.glyphs[prevIndex];\n                    if (!prev || !prev.isMark) return false;\n                    let cur = this.glyphIterator.cur;\n                    // The following logic was borrowed from Harfbuzz\n                    let good = false;\n                    if (cur.ligatureID === prev.ligatureID) {\n                        if (!cur.ligatureID) good = true;\n                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n                    } else // If ligature ids don't match, it may be the case that one of the marks\n                    // itself is a ligature, in which case match.\n                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n                    if (!good) return false;\n                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n                    if (mark2Index === -1) return false;\n                    let markRecord = table.mark1Array[mark1Index];\n                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, prevIndex);\n                    return true;\n                }\n            case 7:\n                return this.applyContext(table);\n            case 8:\n                return this.applyChainingContext(table);\n            case 9:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`Unsupported GPOS table: ${lookupType}`);\n        }\n    }\n    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n        let baseCoords = this.getAnchor(baseAnchor);\n        let markCoords = this.getAnchor(markRecord.markAnchor);\n        let basePos = this.positions[baseGlyphIndex];\n        let markPos = this.positions[this.glyphIterator.index];\n        markPos.xOffset = baseCoords.x - markCoords.x;\n        markPos.yOffset = baseCoords.y - markCoords.y;\n        this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n    getAnchor(anchor) {\n        // TODO: contour point, device tables\n        let x = anchor.xCoordinate;\n        let y = anchor.yCoordinate;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        super.applyFeatures(userFeatures, glyphs, advances);\n        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);\n        this.fixMarkAttachment();\n    }\n    fixCursiveAttachment(i) {\n        let glyph = this.glyphs[i];\n        if (glyph.cursiveAttachment != null) {\n            let j = glyph.cursiveAttachment;\n            glyph.cursiveAttachment = null;\n            this.fixCursiveAttachment(j);\n            this.positions[i].yOffset += this.positions[j].yOffset;\n        }\n    }\n    fixMarkAttachment() {\n        for(let i = 0; i < this.glyphs.length; i++){\n            let glyph = this.glyphs[i];\n            if (glyph.markAttachment != null) {\n                let j = glyph.markAttachment;\n                this.positions[i].xOffset += this.positions[j].xOffset;\n                this.positions[i].yOffset += this.positions[j].yOffset;\n                if (this.direction === \"ltr\") for(let k = j; k < i; k++){\n                    this.positions[i].xOffset -= this.positions[k].xAdvance;\n                    this.positions[i].yOffset -= this.positions[k].yAdvance;\n                }\n                else for(let k1 = j + 1; k1 < i + 1; k1++){\n                    this.positions[i].xOffset += this.positions[k1].xAdvance;\n                    this.positions[i].yOffset += this.positions[k1].yAdvance;\n                }\n            }\n        }\n    }\n}\n\n\nclass $b2f26a32cb9ab2fa$export$2e2bcd8739ae039 {\n    setup(glyphRun) {\n        // Map glyphs to GlyphInfo objects so data can be passed between\n        // GSUB and GPOS without mutating the real (shared) Glyph objects.\n        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, glyph.id, [\n                ...glyph.codePoints\n            ]));\n        // Select a script based on what is available in GSUB/GPOS.\n        let script = null;\n        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        // Choose a shaper based on the script, and setup a shaping plan.\n        // This determines which features to apply to which glyphs.\n        this.shaper = $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script);\n        this.plan = new (0, $d7e93cca3cf8ce8a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n        // Assign chosen features to output glyph run\n        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;\n    }\n    substitute(glyphRun) {\n        if (this.GSUBProcessor) {\n            this.plan.process(this.GSUBProcessor, this.glyphInfos);\n            // Map glyph infos back to normal Glyph objects\n            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n        }\n    }\n    position(glyphRun) {\n        if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n        if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        // Reverse the glyphs and positions if the script is right-to-left\n        if (glyphRun.direction === \"rtl\") {\n            glyphRun.glyphs.reverse();\n            glyphRun.positions.reverse();\n        }\n        return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n    zeroMarkAdvances(positions) {\n        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    cleanup() {\n        this.glyphInfos = null;\n        this.plan = null;\n        this.shaper = null;\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.GSUBProcessor) {\n            this.GSUBProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GSUBProcessor.features));\n        }\n        if (this.GPOSProcessor) {\n            this.GPOSProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GPOSProcessor.features));\n        }\n        return features;\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphInfos = null;\n        this.plan = null;\n        this.GSUBProcessor = null;\n        this.GPOSProcessor = null;\n        this.fallbackPosition = true;\n        if (font.GSUB) this.GSUBProcessor = new (0, $86bc1883359e094a$export$2e2bcd8739ae039)(font, font.GSUB);\n        if (font.GPOS) this.GPOSProcessor = new (0, $79ea6270f0a90256$export$2e2bcd8739ae039)(font, font.GPOS);\n    }\n}\n\n\nclass $9d641258c9d7180d$export$2e2bcd8739ae039 {\n    layout(string, features, script, language, direction) {\n        // Make the features parameter optional\n        if (typeof features === \"string\") {\n            direction = language;\n            language = script;\n            script = features;\n            features = [];\n        }\n        // Map string to glyphs if needed\n        if (typeof string === \"string\") {\n            // Attempt to detect the script from the string if not provided.\n            if (script == null) script = $e38a1a895f6aeb54$export$e5cb25e204fb8450(string);\n            var glyphs = this.font.glyphsForString(string);\n        } else {\n            // Attempt to detect the script from the glyph code points if not provided.\n            if (script == null) {\n                let codePoints = [];\n                for (let glyph of string)codePoints.push(...glyph.codePoints);\n                script = $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints);\n            }\n            var glyphs = string;\n        }\n        let glyphRun = new (0, $b19c79ec7a94fa39$export$2e2bcd8739ae039)(glyphs, features, script, language, direction);\n        // Return early if there are no glyphs\n        if (glyphs.length === 0) {\n            glyphRun.positions = [];\n            return glyphRun;\n        }\n        // Setup the advanced layout engine\n        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n        // Substitute and position the glyphs\n        this.substitute(glyphRun);\n        this.position(glyphRun);\n        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n        // Let the layout engine clean up any state it might have\n        if (this.engine && this.engine.cleanup) this.engine.cleanup();\n        return glyphRun;\n    }\n    substitute(glyphRun) {\n        // Call the advanced layout engine to make substitutions\n        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n    position(glyphRun) {\n        // Get initial glyph positions\n        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new (0, $9195cf1266c12ea5$export$2e2bcd8739ae039)(glyph.advanceWidth));\n        let positioned = null;\n        // Call the advanced layout engine. Returns the features applied.\n        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n        // if there is no GPOS table, use unicode properties to position marks.\n        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $a57a26817cd35108$export$2e2bcd8739ae039)(this.font);\n            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n        }\n        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n            if (!this.kernProcessor) this.kernProcessor = new (0, $4646d52c2a559cdb$export$2e2bcd8739ae039)(this.font);\n            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n            glyphRun.features.kern = true;\n        }\n    }\n    hideDefaultIgnorables(glyphs, positions) {\n        let space = this.font.glyphForCodePoint(0x20);\n        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n            glyphs[i] = space;\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    isDefaultIgnorable(ch) {\n        // From DerivedCoreProperties.txt in the Unicode database,\n        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n        // Harfbuzz and Uniscribe do.\n        let plane = ch >> 16;\n        if (plane === 0) // BMP\n        switch(ch >> 8){\n            case 0x00:\n                return ch === 0x00AD;\n            case 0x03:\n                return ch === 0x034F;\n            case 0x06:\n                return ch === 0x061C;\n            case 0x17:\n                return 0x17B4 <= ch && ch <= 0x17B5;\n            case 0x18:\n                return 0x180B <= ch && ch <= 0x180E;\n            case 0x20:\n                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n            case 0xFE:\n                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n            case 0xFF:\n                return 0xFFF0 <= ch && ch <= 0xFFF8;\n            default:\n                return false;\n        }\n        else // Other planes\n        switch(plane){\n            case 0x01:\n                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n            case 0x0E:\n                return 0xE0000 <= ch && ch <= 0xE0FFF;\n            default:\n                return false;\n        }\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n        if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n        return features;\n    }\n    stringsForGlyph(gid) {\n        let result = new Set;\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));\n        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);\n        return Array.from(result);\n    }\n    constructor(font){\n        this.font = font;\n        this.unicodeLayoutEngine = null;\n        this.kernProcessor = null;\n        // Choose an advanced layout engine. We try the AAT morx table first since more\n        // scripts are currently supported because the shaping logic is built into the font.\n        if (this.font.morx) this.engine = new (0, $860fcbd64bc12fbc$export$2e2bcd8739ae039)(this.font);\n        else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $b2f26a32cb9ab2fa$export$2e2bcd8739ae039)(this.font);\n    }\n}\n\n\n\n\n\n\nconst $67ee4828d81adb28$var$SVG_COMMANDS = {\n    moveTo: \"M\",\n    lineTo: \"L\",\n    quadraticCurveTo: \"Q\",\n    bezierCurveTo: \"C\",\n    closePath: \"Z\"\n};\nclass $67ee4828d81adb28$export$2e2bcd8739ae039 {\n    /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */ toFunction() {\n        return (ctx)=>{\n            this.commands.forEach((c)=>{\n                return ctx[c.command].apply(ctx, c.args);\n            });\n        };\n    }\n    /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */ toSVG() {\n        let cmds = this.commands.map((c)=>{\n            let args = c.args.map((arg)=>Math.round(arg * 100) / 100);\n            return `${$67ee4828d81adb28$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n        });\n        return cmds.join(\"\");\n    }\n    /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */ get cbox() {\n        if (!this._cbox) {\n            let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);\n            this._cbox = Object.freeze(cbox);\n        }\n        return this._cbox;\n    }\n    /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */ get bbox() {\n        if (this._bbox) return this._bbox;\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let cx = 0, cy = 0;\n        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        for (let c of this.commands)switch(c.command){\n            case \"moveTo\":\n            case \"lineTo\":\n                let [x, y] = c.args;\n                bbox.addPoint(x, y);\n                cx = x;\n                cy = y;\n                break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n                if (c.command === \"quadraticCurveTo\") {\n                    // http://fontforge.org/bezier.html\n                    var [qp1x, qp1y, p3x, p3y] = c.args;\n                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                    var cp1y = cy + 2 / 3 * (qp1y - cy);\n                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                bbox.addPoint(p3x, p3y);\n                var p0 = [\n                    cx,\n                    cy\n                ];\n                var p1 = [\n                    cp1x,\n                    cp1y\n                ];\n                var p2 = [\n                    cp2x,\n                    cp2y\n                ];\n                var p3 = [\n                    p3x,\n                    p3y\n                ];\n                for(var i = 0; i <= 1; i++){\n                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                    c = 3 * p1[i] - 3 * p0[i];\n                    if (a === 0) {\n                        if (b === 0) continue;\n                        let t = -c / b;\n                        if (0 < t && t < 1) {\n                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);\n                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n                        }\n                        continue;\n                    }\n                    let b2ac = Math.pow(b, 2) - 4 * c * a;\n                    if (b2ac < 0) continue;\n                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t1 && t1 < 1) {\n                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                    }\n                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t2 && t2 < 1) {\n                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                    }\n                }\n                cx = p3x;\n                cy = p3y;\n                break;\n        }\n        return this._bbox = Object.freeze(bbox);\n    }\n    /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */ mapPoints(fn) {\n        let path = new $67ee4828d81adb28$export$2e2bcd8739ae039;\n        for (let c of this.commands){\n            let args = [];\n            for(let i = 0; i < c.args.length; i += 2){\n                let [x, y] = fn(c.args[i], c.args[i + 1]);\n                args.push(x, y);\n            }\n            path[c.command](...args);\n        }\n        return path;\n    }\n    /**\n   * Transforms the path by the given matrix.\n   */ transform(m0, m1, m2, m3, m4, m5) {\n        return this.mapPoints((x, y)=>{\n            const tx = m0 * x + m2 * y + m4;\n            const ty = m1 * x + m3 * y + m5;\n            return [\n                tx,\n                ty\n            ];\n        });\n    }\n    /**\n   * Translates the path by the given offset.\n   */ translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n   * Rotates the path by the given angle (in radians).\n   */ rotate(angle) {\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n   * Scales the path.\n   */ scale(scaleX, scaleY = scaleX) {\n        return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n    constructor(){\n        this.commands = [];\n        this._bbox = null;\n        this._cbox = null;\n    }\n}\nfor (let command of [\n    \"moveTo\",\n    \"lineTo\",\n    \"quadraticCurveTo\",\n    \"bezierCurveTo\",\n    \"closePath\"\n])$67ee4828d81adb28$export$2e2bcd8739ae039.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n        command: command,\n        args: args\n    });\n    return this;\n};\n\n\n\nvar $85e16e40023cfb0f$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \".null\",\n    \"nonmarkingreturn\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quotesingle\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"grave\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"Adieresis\",\n    \"Aring\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ntilde\",\n    \"Odieresis\",\n    \"Udieresis\",\n    \"aacute\",\n    \"agrave\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"atilde\",\n    \"aring\",\n    \"ccedilla\",\n    \"eacute\",\n    \"egrave\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"iacute\",\n    \"igrave\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"ntilde\",\n    \"oacute\",\n    \"ograve\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"otilde\",\n    \"uacute\",\n    \"ugrave\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"dagger\",\n    \"degree\",\n    \"cent\",\n    \"sterling\",\n    \"section\",\n    \"bullet\",\n    \"paragraph\",\n    \"germandbls\",\n    \"registered\",\n    \"copyright\",\n    \"trademark\",\n    \"acute\",\n    \"dieresis\",\n    \"notequal\",\n    \"AE\",\n    \"Oslash\",\n    \"infinity\",\n    \"plusminus\",\n    \"lessequal\",\n    \"greaterequal\",\n    \"yen\",\n    \"mu\",\n    \"partialdiff\",\n    \"summation\",\n    \"product\",\n    \"pi\",\n    \"integral\",\n    \"ordfeminine\",\n    \"ordmasculine\",\n    \"Omega\",\n    \"ae\",\n    \"oslash\",\n    \"questiondown\",\n    \"exclamdown\",\n    \"logicalnot\",\n    \"radical\",\n    \"florin\",\n    \"approxequal\",\n    \"Delta\",\n    \"guillemotleft\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"nonbreakingspace\",\n    \"Agrave\",\n    \"Atilde\",\n    \"Otilde\",\n    \"OE\",\n    \"oe\",\n    \"endash\",\n    \"emdash\",\n    \"quotedblleft\",\n    \"quotedblright\",\n    \"quoteleft\",\n    \"quoteright\",\n    \"divide\",\n    \"lozenge\",\n    \"ydieresis\",\n    \"Ydieresis\",\n    \"fraction\",\n    \"currency\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"perthousand\",\n    \"Acircumflex\",\n    \"Ecircumflex\",\n    \"Aacute\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"apple\",\n    \"Ograve\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Ugrave\",\n    \"dotlessi\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"Lslash\",\n    \"lslash\",\n    \"Scaron\",\n    \"scaron\",\n    \"Zcaron\",\n    \"zcaron\",\n    \"brokenbar\",\n    \"Eth\",\n    \"eth\",\n    \"Yacute\",\n    \"yacute\",\n    \"Thorn\",\n    \"thorn\",\n    \"minus\",\n    \"multiply\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"onehalf\",\n    \"onequarter\",\n    \"threequarters\",\n    \"franc\",\n    \"Gbreve\",\n    \"gbreve\",\n    \"Idotaccent\",\n    \"Scedilla\",\n    \"scedilla\",\n    \"Cacute\",\n    \"cacute\",\n    \"Ccaron\",\n    \"ccaron\",\n    \"dcroat\"\n];\n\n\nclass $0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getPath() {\n        return new (0, $67ee4828d81adb28$export$2e2bcd8739ae039)();\n    }\n    _getCBox() {\n        return this.path.cbox;\n    }\n    _getBBox() {\n        return this.path.bbox;\n    }\n    _getTableMetrics(table) {\n        if (this.id < table.metrics.length) return table.metrics.get(this.id);\n        let metric = table.metrics.get(table.metrics.length - 1);\n        let res = {\n            advance: metric ? metric.advance : 0,\n            bearing: table.bearings.get(this.id - table.metrics.length) || 0\n        };\n        return res;\n    }\n    _getMetrics(cbox) {\n        if (this._metrics) return this._metrics;\n        let { advance: advanceWidth , bearing: leftBearing  } = this._getTableMetrics(this._font.hmtx);\n        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n        if (this._font.vmtx) var { advance: advanceHeight , bearing: topBearing  } = this._getTableMetrics(this._font.vmtx);\n        else {\n            let os2;\n            if (typeof cbox === \"undefined\" || cbox === null) ({ cbox: cbox  } = this);\n            if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n                var topBearing = os2.typoAscender - cbox.maxY;\n            } else {\n                let { hhea: hhea  } = this._font;\n                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n                var topBearing = hhea.ascent - cbox.maxY;\n            }\n        }\n        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n        return this._metrics = {\n            advanceWidth: advanceWidth,\n            advanceHeight: advanceHeight,\n            leftBearing: leftBearing,\n            topBearing: topBearing\n        };\n    }\n    /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */ get cbox() {\n        return this._getCBox();\n    }\n    /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */ get bbox() {\n        return this._getBBox();\n    }\n    /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */ get path() {\n        // Cache the path so we only decode it once\n        // Decoding is actually performed by subclasses\n        return this._getPath();\n    }\n    /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */ getScaledPath(size) {\n        let scale = 1 / this._font.unitsPerEm * size;\n        return this.path.scale(scale);\n    }\n    /**\n   * The glyph's advance width.\n   * @type {number}\n   */ get advanceWidth() {\n        return this._getMetrics().advanceWidth;\n    }\n    /**\n   * The glyph's advance height.\n   * @type {number}\n   */ get advanceHeight() {\n        return this._getMetrics().advanceHeight;\n    }\n    get ligatureCaretPositions() {}\n    _getName() {\n        let { post: post  } = this._font;\n        if (!post) return null;\n        switch(post.version){\n            case 1:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id];\n            case 2:\n                let id = post.glyphNameIndex[this.id];\n                if (id < (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length) return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[id];\n                return post.names[id - (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length];\n            case 2.5:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n            case 4:\n                return String.fromCharCode(post.map[this.id]);\n        }\n    }\n    /**\n   * The glyph's name\n   * @type {string}\n   */ get name() {\n        return this._getName();\n    }\n    /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */ render(ctx, size) {\n        ctx.save();\n        let scale = 1 / this._font.head.unitsPerEm * size;\n        ctx.scale(scale, scale);\n        let fn = this.path.toFunction();\n        fn(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n    constructor(id, codePoints, font){\n        /**\n     * The glyph id in the font\n     * @type {number}\n     */ this.id = id;\n        /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */ this.codePoints = codePoints;\n        this._font = font;\n        // TODO: get this info from GDEF if available\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n        this.isLigature = this.codePoints.length > 1;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"name\", null);\n\n\n\n\n\n// The header for both simple and composite glyphs\nlet $f680320fa07ef53d$var$GlyfHeader = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16\n});\n// Flags for simple glyphs\nconst $f680320fa07ef53d$var$ON_CURVE = 1;\nconst $f680320fa07ef53d$var$X_SHORT_VECTOR = 2;\nconst $f680320fa07ef53d$var$Y_SHORT_VECTOR = 4;\nconst $f680320fa07ef53d$var$REPEAT = 8;\nconst $f680320fa07ef53d$var$SAME_X = 16;\nconst $f680320fa07ef53d$var$SAME_Y = 32;\n// Flags for composite glyphs\nconst $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $f680320fa07ef53d$var$ARGS_ARE_XY_VALUES = 2;\nconst $f680320fa07ef53d$var$ROUND_XY_TO_GRID = 4;\nconst $f680320fa07ef53d$var$WE_HAVE_A_SCALE = 8;\nconst $f680320fa07ef53d$var$MORE_COMPONENTS = 32;\nconst $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $f680320fa07ef53d$var$USE_MY_METRICS = 512;\nconst $f680320fa07ef53d$var$OVERLAP_COMPOUND = 1024;\nconst $f680320fa07ef53d$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $f680320fa07ef53d$var$UNSCALED_COMPONENT_OFFSET = 4096;\nclass $f680320fa07ef53d$export$baf26146a414f24a {\n    copy() {\n        return new $f680320fa07ef53d$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n    constructor(onCurve, endContour, x = 0, y = 0){\n        this.onCurve = onCurve;\n        this.endContour = endContour;\n        this.x = x;\n        this.y = y;\n    }\n}\n// Represents a component in a composite glyph\nclass $f680320fa07ef53d$var$Component {\n    constructor(glyphID, dx, dy){\n        this.glyphID = glyphID;\n        this.dx = dx;\n        this.dy = dy;\n        this.pos = 0;\n        this.scaleX = this.scaleY = 1;\n        this.scale01 = this.scale10 = 0;\n    }\n}\nclass $f680320fa07ef53d$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    // Parses just the glyph header and returns the bounding box\n    _getCBox(internal) {\n        // We need to decode the glyph if variation processing is requested,\n        // so it's easier just to recompute the path's cbox after decoding.\n        if (this._font._variationProcessor && !internal) return this.path.cbox;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += this._font.loca.offsets[this.id];\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n        return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n    _parseGlyphCoord(stream, prev, short, same) {\n        if (short) {\n            var val = stream.readUInt8();\n            if (!same) val = -val;\n            val += prev;\n        } else if (same) var val = prev;\n        else var val = prev + stream.readInt16BE();\n        return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n    _decode() {\n        let glyfPos = this._font.loca.offsets[this.id];\n        let nextPos = this._font.loca.offsets[this.id + 1];\n        // Nothing to do if there is no data for this glyph\n        if (glyfPos === nextPos) return null;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += glyfPos;\n        let startPos = stream.pos;\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);\n        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n        return glyph;\n    }\n    _decodeSimple(glyph, stream) {\n        // this is a simple glyph\n        glyph.points = [];\n        let endPtsOfContours = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, glyph.numberOfContours).decode(stream);\n        glyph.instructions = new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16).decode(stream);\n        let flags = [];\n        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n        while(flags.length < numCoords){\n            var flag = stream.readUInt8();\n            flags.push(flag);\n            // check for repeat flag\n            if (flag & $f680320fa07ef53d$var$REPEAT) {\n                let count = stream.readUInt8();\n                for(let j = 0; j < count; j++)flags.push(flag);\n            }\n        }\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            let point = new $f680320fa07ef53d$export$baf26146a414f24a(!!(flag & $f680320fa07ef53d$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n            glyph.points.push(point);\n        }\n        let px = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $f680320fa07ef53d$var$X_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_X);\n        }\n        let py = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $f680320fa07ef53d$var$Y_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_Y);\n        }\n        if (this._font._variationProcessor) {\n            let points = glyph.points.slice();\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.slice(-4);\n        }\n        return;\n    }\n    _decodeComposite(glyph, stream, offset = 0) {\n        // this is a composite glyph\n        glyph.components = [];\n        let haveInstructions = false;\n        let flags = $f680320fa07ef53d$var$MORE_COMPONENTS;\n        while(flags & $f680320fa07ef53d$var$MORE_COMPONENTS){\n            flags = stream.readUInt16BE();\n            let gPos = stream.pos - offset;\n            let glyphID = stream.readUInt16BE();\n            if (!haveInstructions) haveInstructions = (flags & $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS) !== 0;\n            if (flags & $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS) {\n                var dx = stream.readInt16BE();\n                var dy = stream.readInt16BE();\n            } else {\n                var dx = stream.readInt8();\n                var dy = stream.readInt8();\n            }\n            var component = new $f680320fa07ef53d$var$Component(glyphID, dx, dy);\n            component.pos = gPos;\n            if (flags & $f680320fa07ef53d$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction\n            component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            else if (flags & $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            } else if (flags & $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            }\n            glyph.components.push(component);\n        }\n        if (this._font._variationProcessor) {\n            let points = [];\n            for(let j = 0; j < glyph.components.length; j++){\n                var component = glyph.components[j];\n                points.push(new $f680320fa07ef53d$export$baf26146a414f24a(true, true, component.dx, component.dy));\n            }\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.splice(-4, 4);\n            for(let i = 0; i < points.length; i++){\n                let point = points[i];\n                glyph.components[i].dx = point.x;\n                glyph.components[i].dy = point.y;\n            }\n        }\n        return haveInstructions;\n    }\n    _getPhantomPoints(glyph) {\n        let cbox = this._getCBox(true);\n        if (this._metrics == null) this._metrics = (0, $0e4f52d7996e478b$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n        let { advanceWidth: advanceWidth , advanceHeight: advanceHeight , leftBearing: leftBearing , topBearing: topBearing  } = this._metrics;\n        return [\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n        ];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n    _getContours() {\n        let glyph = this._decode();\n        if (!glyph) return [];\n        let points = [];\n        if (glyph.numberOfContours < 0) // resolve composite glyphs\n        for (let component of glyph.components){\n            let contours = this._font.getGlyph(component.glyphID)._getContours();\n            for(let i = 0; i < contours.length; i++){\n                let contour = contours[i];\n                for(let j = 0; j < contour.length; j++){\n                    let point = contour[j];\n                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n                    points.push(new $f680320fa07ef53d$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n                }\n            }\n        }\n        else points = glyph.points || [];\n        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n        }\n        let contours = [];\n        let cur = [];\n        for(let k = 0; k < points.length; k++){\n            var point = points[k];\n            cur.push(point);\n            if (point.endContour) {\n                contours.push(cur);\n                cur = [];\n            }\n        }\n        return contours;\n    }\n    _getMetrics() {\n        if (this._metrics) return this._metrics;\n        let cbox = this._getCBox(true);\n        super._getMetrics(cbox);\n        if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n        this.path;\n        return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n    _getPath() {\n        let contours = this._getContours();\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        for(let i = 0; i < contours.length; i++){\n            let contour = contours[i];\n            let firstPt = contour[0];\n            let lastPt = contour[contour.length - 1];\n            let start = 0;\n            if (firstPt.onCurve) {\n                // The first point will be consumed by the moveTo command, so skip in the loop\n                var curvePt = null;\n                start = 1;\n            } else {\n                if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve\n                firstPt = lastPt;\n                else // Start at the middle if both the first and last points are off curve\n                firstPt = new $f680320fa07ef53d$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n                var curvePt = firstPt;\n            }\n            path.moveTo(firstPt.x, firstPt.y);\n            for(let j = start; j < contour.length; j++){\n                let pt = contour[j];\n                let prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);\n                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;\n                else if (!prevPt.onCurve && !pt.onCurve) {\n                    let midX = (prevPt.x + pt.x) / 2;\n                    let midY = (prevPt.y + pt.y) / 2;\n                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n                    var curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    var curvePt = null;\n                } else throw new Error(\"Unknown TTF path state\");\n            }\n            // Connect the first and last points\n            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            path.closePath();\n        }\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n    }\n}\n\n\n\n\n\nclass $7ee0705195f3b047$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getName() {\n        if (this._font.CFF2) return super._getName();\n        return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n    bias(s) {\n        if (s.length < 1240) return 107;\n        else if (s.length < 33900) return 1131;\n        else return 32768;\n    }\n    _getPath() {\n        let cff = this._font.CFF2 || this._font[\"CFF \"];\n        let { stream: stream  } = cff;\n        let str = cff.topDict.CharStrings[this.id];\n        let end = str.offset + str.length;\n        stream.pos = str.offset;\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        let stack = [];\n        let trans = [];\n        let width = null;\n        let nStems = 0;\n        let x1 = 0, y1 = 0;\n        let usedGsubrs;\n        let usedSubrs;\n        let open = false;\n        this._usedGsubrs = usedGsubrs = {};\n        this._usedSubrs = usedSubrs = {};\n        let gsubrs = cff.globalSubrIndex || [];\n        let gsubrsBias = this.bias(gsubrs);\n        let privateDict = cff.privateDictForGlyph(this.id) || {};\n        let subrs = privateDict.Subrs || [];\n        let subrsBias = this.bias(subrs);\n        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n        let vsindex = privateDict.vsindex;\n        let variationProcessor = this._font._variationProcessor;\n        function checkWidth() {\n            if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n        }\n        function parseStems() {\n            if (stack.length % 2 !== 0) checkWidth();\n            nStems += stack.length >> 1;\n            return stack.length = 0;\n        }\n        function moveTo(x, y) {\n            if (open) path.closePath();\n            path.moveTo(x, y);\n            open = true;\n        }\n        let parse = function() {\n            while(stream.pos < end){\n                let op = stream.readUInt8();\n                if (op < 32) {\n                    let index, subr, phase;\n                    switch(op){\n                        case 1:\n                        case 3:\n                        case 18:\n                        case 23:\n                            parseStems();\n                            break;\n                        case 4:\n                            if (stack.length > 1) checkWidth();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 5:\n                            while(stack.length >= 2){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            break;\n                        case 6:\n                        case 7:\n                            phase = op === 6;\n                            while(stack.length >= 1){\n                                if (phase) x1 += stack.shift();\n                                else y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 8:\n                            while(stack.length > 0){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 10:\n                            index = stack.pop() + subrsBias;\n                            subr = subrs[index];\n                            if (subr) {\n                                usedSubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 11:\n                            if (cff.version >= 2) break;\n                            return;\n                        case 14:\n                            if (cff.version >= 2) break;\n                            if (stack.length > 0) checkWidth();\n                            if (open) {\n                                path.closePath();\n                                open = false;\n                            }\n                            break;\n                        case 15:\n                            if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                            vsindex = stack.pop();\n                            break;\n                        case 16:\n                            {\n                                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                                let numBlends = stack.pop();\n                                let numOperands = numBlends * blendVector.length;\n                                let delta = stack.length - numOperands;\n                                let base = delta - numBlends;\n                                for(let i = 0; i < numBlends; i++){\n                                    let sum = stack[base + i];\n                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];\n                                    stack[base + i] = sum;\n                                }\n                                while(numOperands--)stack.pop();\n                                break;\n                            }\n                        case 19:\n                        case 20:\n                            parseStems();\n                            stream.pos += nStems + 7 >> 3;\n                            break;\n                        case 21:\n                            if (stack.length > 2) checkWidth();\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 22:\n                            if (stack.length > 1) checkWidth();\n                            x1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 24:\n                            while(stack.length >= 8){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            path.lineTo(x1, y1);\n                            break;\n                        case 25:\n                            while(stack.length >= 8){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            var c1x = x1 + stack.shift();\n                            var c1y = y1 + stack.shift();\n                            var c2x = c1x + stack.shift();\n                            var c2y = c1y + stack.shift();\n                            x1 = c2x + stack.shift();\n                            y1 = c2y + stack.shift();\n                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            break;\n                        case 26:\n                            if (stack.length % 2) x1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1;\n                                c1y = y1 + stack.shift();\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x;\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 27:\n                            if (stack.length % 2) y1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1 + stack.shift();\n                                c1y = y1;\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y;\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 28:\n                            stack.push(stream.readInt16BE());\n                            break;\n                        case 29:\n                            index = stack.pop() + gsubrsBias;\n                            subr = gsubrs[index];\n                            if (subr) {\n                                usedGsubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 30:\n                        case 31:\n                            phase = op === 31;\n                            while(stack.length >= 4){\n                                if (phase) {\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    y1 = c2y + stack.shift();\n                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                                } else {\n                                    c1x = x1;\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    x1 = c2x + stack.shift();\n                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                                }\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 12:\n                            op = stream.readUInt8();\n                            switch(op){\n                                case 3:\n                                    let a = stack.pop();\n                                    let b = stack.pop();\n                                    stack.push(a && b ? 1 : 0);\n                                    break;\n                                case 4:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a || b ? 1 : 0);\n                                    break;\n                                case 5:\n                                    a = stack.pop();\n                                    stack.push(a ? 0 : 1);\n                                    break;\n                                case 9:\n                                    a = stack.pop();\n                                    stack.push(Math.abs(a));\n                                    break;\n                                case 10:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a + b);\n                                    break;\n                                case 11:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a - b);\n                                    break;\n                                case 12:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a / b);\n                                    break;\n                                case 14:\n                                    a = stack.pop();\n                                    stack.push(-a);\n                                    break;\n                                case 15:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a === b ? 1 : 0);\n                                    break;\n                                case 18:\n                                    stack.pop();\n                                    break;\n                                case 20:\n                                    let val = stack.pop();\n                                    let idx = stack.pop();\n                                    trans[idx] = val;\n                                    break;\n                                case 21:\n                                    idx = stack.pop();\n                                    stack.push(trans[idx] || 0);\n                                    break;\n                                case 22:\n                                    let s1 = stack.pop();\n                                    let s2 = stack.pop();\n                                    let v1 = stack.pop();\n                                    let v2 = stack.pop();\n                                    stack.push(v1 <= v2 ? s1 : s2);\n                                    break;\n                                case 23:\n                                    stack.push(Math.random());\n                                    break;\n                                case 24:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a * b);\n                                    break;\n                                case 26:\n                                    a = stack.pop();\n                                    stack.push(Math.sqrt(a));\n                                    break;\n                                case 27:\n                                    a = stack.pop();\n                                    stack.push(a, a);\n                                    break;\n                                case 28:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(b, a);\n                                    break;\n                                case 29:\n                                    idx = stack.pop();\n                                    if (idx < 0) idx = 0;\n                                    else if (idx > stack.length - 1) idx = stack.length - 1;\n                                    stack.push(stack[idx]);\n                                    break;\n                                case 30:\n                                    let n = stack.pop();\n                                    let j = stack.pop();\n                                    if (j >= 0) while(j > 0){\n                                        var t = stack[n - 1];\n                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];\n                                        stack[0] = t;\n                                        j--;\n                                    }\n                                    else while(j < 0){\n                                        var t = stack[0];\n                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];\n                                        stack[n - 1] = t;\n                                        j++;\n                                    }\n                                    break;\n                                case 34:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    let c3x = c2x + stack.shift();\n                                    let c3y = c2y;\n                                    let c4x = c3x + stack.shift();\n                                    let c4y = c3y;\n                                    let c5x = c4x + stack.shift();\n                                    let c5y = c4y;\n                                    let c6x = c5x + stack.shift();\n                                    let c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 35:\n                                    let pts = [];\n                                    for(let i = 0; i <= 5; i++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    stack.shift(); // fd\n                                    break;\n                                case 36:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    c3x = c2x + stack.shift();\n                                    c3y = c2y;\n                                    c4x = c3x + stack.shift();\n                                    c4y = c3y;\n                                    c5x = c4x + stack.shift();\n                                    c5y = c4y + stack.shift();\n                                    c6x = c5x + stack.shift();\n                                    c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 37:\n                                    let startx = x1;\n                                    let starty = y1;\n                                    pts = [];\n                                    for(let i1 = 0; i1 <= 4; i1++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                                        x1 += stack.shift();\n                                        y1 = starty;\n                                    } else {\n                                        x1 = startx;\n                                        y1 += stack.shift();\n                                    }\n                                    pts.push(x1, y1);\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    break;\n                                default:\n                                    throw new Error(`Unknown op: 12 ${op}`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown op: ${op}`);\n                    }\n                } else if (op < 247) stack.push(op - 139);\n                else if (op < 251) {\n                    var b1 = stream.readUInt8();\n                    stack.push((op - 247) * 256 + b1 + 108);\n                } else if (op < 255) {\n                    var b1 = stream.readUInt8();\n                    stack.push(-(op - 251) * 256 - b1 - 108);\n                } else stack.push(stream.readInt32BE() / 65536);\n            }\n        };\n        parse();\n        if (open) path.closePath();\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"CFF\");\n    }\n}\n\n\n\n\n\nlet $55855d6d316b015e$var$SBIXImage = new $gfJaN$restructure.Struct({\n    originX: $gfJaN$restructure.uint16,\n    originY: $gfJaN$restructure.uint16,\n    type: new $gfJaN$restructure.String(4),\n    data: new $gfJaN$restructure.Buffer((t)=>t.parent.buflen - t._currentOffset)\n});\nclass $55855d6d316b015e$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */ getImageForSize(size) {\n        for(let i = 0; i < this._font.sbix.imageTables.length; i++){\n            var table = this._font.sbix.imageTables[i];\n            if (table.ppem >= size) break;\n        }\n        let offsets = table.imageOffsets;\n        let start = offsets[this.id];\n        let end = offsets[this.id + 1];\n        if (start === end) return null;\n        this._font.stream.pos = start;\n        return $55855d6d316b015e$var$SBIXImage.decode(this._font.stream, {\n            buflen: end - start\n        });\n    }\n    render(ctx, size) {\n        let img = this.getImageForSize(size);\n        if (img != null) {\n            let scale = size / this._font.unitsPerEm;\n            ctx.image(img.data, {\n                height: size,\n                x: img.originX,\n                y: (this.bbox.minY - img.originY) * scale\n            });\n        }\n        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"SBIX\");\n    }\n}\n\n\n\n\n\nclass $42d9dbd2de9ee2d8$var$COLRLayer {\n    constructor(glyph, color){\n        this.glyph = glyph;\n        this.color = color;\n    }\n}\nclass $42d9dbd2de9ee2d8$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getBBox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        for(let i = 0; i < this.layers.length; i++){\n            let layer = this.layers[i];\n            let b = layer.glyph.bbox;\n            bbox.addPoint(b.minX, b.minY);\n            bbox.addPoint(b.maxX, b.maxY);\n        }\n        return bbox;\n    }\n    /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */ get layers() {\n        let cpal = this._font.CPAL;\n        let colr = this._font.COLR;\n        let low = 0;\n        let high = colr.baseGlyphRecord.length - 1;\n        while(low <= high){\n            let mid = low + high >> 1;\n            var rec = colr.baseGlyphRecord[mid];\n            if (this.id < rec.gid) high = mid - 1;\n            else if (this.id > rec.gid) low = mid + 1;\n            else {\n                var baseLayer = rec;\n                break;\n            }\n        }\n        // if base glyph not found in COLR table,\n        // default to normal glyph from glyf or CFF\n        if (baseLayer == null) {\n            var g = this._font._getBaseGlyph(this.id);\n            var color = {\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 255\n            };\n            return [\n                new $42d9dbd2de9ee2d8$var$COLRLayer(g, color)\n            ];\n        }\n        // otherwise, return an array of all the layers\n        let layers = [];\n        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){\n            var rec = colr.layerRecords[i];\n            var color = cpal.colorRecords[rec.paletteIndex];\n            var g = this._font._getBaseGlyph(rec.gid);\n            layers.push(new $42d9dbd2de9ee2d8$var$COLRLayer(g, color));\n        }\n        return layers;\n    }\n    render(ctx, size) {\n        for (let { glyph: glyph , color: color  } of this.layers){\n            ctx.fillColor([\n                color.red,\n                color.green,\n                color.blue\n            ], color.alpha / 255 * 100);\n            glyph.render(ctx, size);\n        }\n        return;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"COLR\");\n    }\n}\n\n\nconst $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$POINTS_ARE_WORDS = 0x80;\nconst $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO = 0x80;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS = 0x40;\nconst $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK = 0x3f;\nclass $7586bb9ea67c41d8$export$2e2bcd8739ae039 {\n    normalizeCoords(coords) {\n        // the default mapping is linear along each axis, in two segments:\n        // from the minValue to defaultValue, and from defaultValue to maxValue.\n        let normalized = [];\n        for(var i = 0; i < this.font.fvar.axis.length; i++){\n            let axis = this.font.fvar.axis[i];\n            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n        }\n        // if there is an avar table, the normalized value is calculated\n        // by interpolating between the two nearest mapped values.\n        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){\n            let segment = this.font.avar.segment[i];\n            for(let j = 0; j < segment.correspondence.length; j++){\n                let pair = segment.correspondence[j];\n                if (j >= 1 && normalized[i] < pair.fromCoord) {\n                    let prev = segment.correspondence[j - 1];\n                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n                    break;\n                }\n            }\n        }\n        return normalized;\n    }\n    transformPoints(gid, glyphPoints) {\n        if (!this.font.fvar || !this.font.gvar) return;\n        let { gvar: gvar  } = this.font;\n        if (gid >= gvar.glyphCount) return;\n        let offset = gvar.offsets[gid];\n        if (offset === gvar.offsets[gid + 1]) return;\n        // Read the gvar data for this glyph\n        let { stream: stream  } = this.font;\n        stream.pos = offset;\n        if (stream.pos >= stream.length) return;\n        let tupleCount = stream.readUInt16BE();\n        let offsetToData = offset + stream.readUInt16BE();\n        if (tupleCount & $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS) {\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            var sharedPoints = this.decodePoints();\n            offsetToData = stream.pos;\n            stream.pos = here;\n        }\n        let origPoints = glyphPoints.map((pt)=>pt.copy());\n        tupleCount &= $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK;\n        for(let i = 0; i < tupleCount; i++){\n            let tupleDataSize = stream.readUInt16BE();\n            let tupleIndex = stream.readUInt16BE();\n            if (tupleIndex & $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD) {\n                var tupleCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);\n            } else {\n                if ((tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n                var tupleCoords = gvar.globalCoords[tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK];\n            }\n            if (tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) {\n                var startCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);\n                var endCoords = [];\n                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);\n            }\n            // Get the factor at which to apply this tuple\n            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n            if (factor === 0) {\n                offsetToData += tupleDataSize;\n                continue;\n            }\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            if (tupleIndex & $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();\n            else var points = sharedPoints;\n            // points.length = 0 means there are deltas for all points\n            let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n            let xDeltas = this.decodeDeltas(nPoints);\n            let yDeltas = this.decodeDeltas(nPoints);\n            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){\n                var point = glyphPoints[i];\n                point.x += Math.round(xDeltas[i] * factor);\n                point.y += Math.round(yDeltas[i] * factor);\n            }\n            else {\n                let outPoints = origPoints.map((pt)=>pt.copy());\n                let hasDelta = glyphPoints.map(()=>false);\n                for(let i = 0; i < points.length; i++){\n                    let idx = points[i];\n                    if (idx < glyphPoints.length) {\n                        let point = outPoints[idx];\n                        hasDelta[idx] = true;\n                        point.x += Math.round(xDeltas[i] * factor);\n                        point.y += Math.round(yDeltas[i] * factor);\n                    }\n                }\n                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n                for(let i1 = 0; i1 < glyphPoints.length; i1++){\n                    let deltaX = outPoints[i1].x - origPoints[i1].x;\n                    let deltaY = outPoints[i1].y - origPoints[i1].y;\n                    glyphPoints[i1].x += deltaX;\n                    glyphPoints[i1].y += deltaY;\n                }\n            }\n            offsetToData += tupleDataSize;\n            stream.pos = here;\n        }\n    }\n    decodePoints() {\n        let stream = this.font.stream;\n        let count = stream.readUInt8();\n        if (count & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS) count = (count & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n        let points = new Uint16Array(count);\n        let i = 0;\n        let point = 0;\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) + 1;\n            let fn = run & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n            for(let j = 0; j < runCount && i < count; j++){\n                point += fn.call(stream);\n                points[i++] = point;\n            }\n        }\n        return points;\n    }\n    decodeDeltas(count) {\n        let stream = this.font.stream;\n        let i = 0;\n        let deltas = new Int16Array(count);\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK) + 1;\n            if (run & $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO) i += runCount;\n            else {\n                let fn = run & $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);\n            }\n        }\n        return deltas;\n    }\n    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n        let normalized = this.normalizedCoords;\n        let { gvar: gvar  } = this.font;\n        let factor = 1;\n        for(let i = 0; i < gvar.axisCount; i++){\n            if (tupleCoords[i] === 0) continue;\n            if (normalized[i] === 0) return 0;\n            if ((tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) === 0) {\n                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n            } else {\n                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;\n                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n            }\n        }\n        return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n    interpolateMissingDeltas(points, inPoints, hasDelta) {\n        if (points.length === 0) return;\n        let point = 0;\n        while(point < points.length){\n            let firstPoint = point;\n            // find the end point of the contour\n            let endPoint = point;\n            let pt = points[endPoint];\n            while(!pt.endContour)pt = points[++endPoint];\n            // find the first point that has a delta\n            while(point <= endPoint && !hasDelta[point])point++;\n            if (point > endPoint) continue;\n            let firstDelta = point;\n            let curDelta = point;\n            point++;\n            while(point <= endPoint){\n                // find the next point with a delta, and interpolate intermediate points\n                if (hasDelta[point]) {\n                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n                    curDelta = point;\n                }\n                point++;\n            }\n            // shift contour if we only have a single delta\n            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n            else {\n                // otherwise, handle the remaining points at the end and beginning of the contour\n                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n            }\n            point = endPoint + 1;\n        }\n    }\n    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n        if (p1 > p2) return;\n        let iterable = [\n            \"x\",\n            \"y\"\n        ];\n        for(let i = 0; i < iterable.length; i++){\n            let k = iterable[i];\n            if (inPoints[ref1][k] > inPoints[ref2][k]) {\n                var p = ref1;\n                ref1 = ref2;\n                ref2 = p;\n            }\n            let in1 = inPoints[ref1][k];\n            let in2 = inPoints[ref2][k];\n            let out1 = outPoints[ref1][k];\n            let out2 = outPoints[ref2][k];\n            // If the reference points have the same coordinate but different\n            // delta, inferred delta is zero.  Otherwise interpolate.\n            if (in1 !== in2 || out1 === out2) {\n                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n                for(let p = p1; p <= p2; p++){\n                    let out = inPoints[p][k];\n                    if (out <= in1) out += out1 - in1;\n                    else if (out >= in2) out += out2 - in2;\n                    else out = out1 + (out - in1) * scale;\n                    outPoints[p][k] = out;\n                }\n            }\n        }\n    }\n    deltaShift(p1, p2, ref, inPoints, outPoints) {\n        let deltaX = outPoints[ref].x - inPoints[ref].x;\n        let deltaY = outPoints[ref].y - inPoints[ref].y;\n        if (deltaX === 0 && deltaY === 0) return;\n        for(let p = p1; p <= p2; p++)if (p !== ref) {\n            outPoints[p].x += deltaX;\n            outPoints[p].y += deltaY;\n        }\n    }\n    getAdvanceAdjustment(gid, table) {\n        let outerIndex, innerIndex;\n        if (table.advanceWidthMapping) {\n            let idx = gid;\n            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n            let entryFormat = table.advanceWidthMapping.entryFormat;\n            ({ outerIndex: outerIndex , innerIndex: innerIndex  } = table.advanceWidthMapping.mapData[idx]);\n        } else {\n            outerIndex = 0;\n            innerIndex = gid;\n        }\n        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n    getDelta(itemStore, outerIndex, innerIndex) {\n        if (outerIndex >= itemStore.itemVariationData.length) return 0;\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (innerIndex >= varData.deltaSets.length) return 0;\n        let deltaSet = varData.deltaSets[innerIndex];\n        let blendVector = this.getBlendVector(itemStore, outerIndex);\n        let netAdjustment = 0;\n        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];\n        return netAdjustment;\n    }\n    getBlendVector(itemStore, outerIndex) {\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n        let normalizedCoords = this.normalizedCoords;\n        let blendVector = [];\n        // outer loop steps through master designs to be blended\n        for(let master = 0; master < varData.regionIndexCount; master++){\n            let scalar = 1;\n            let regionIndex = varData.regionIndexes[master];\n            let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n            // inner loop steps through axes in this region\n            for(let j = 0; j < axes.length; j++){\n                let axis = axes[j];\n                let axisScalar;\n                // compute the scalar contribution of this axis\n                // ignore invalid ranges\n                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;\n                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;\n                else if (axis.peakCoord === 0) axisScalar = 1;\n                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;\n                else {\n                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;\n                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n                }\n                // take product of all the axis scalars\n                scalar *= axisScalar;\n            }\n            blendVector[master] = scalar;\n        }\n        this.blendVectors.set(varData, blendVector);\n        return blendVector;\n    }\n    constructor(font, coords){\n        this.font = font;\n        this.normalizedCoords = this.normalizeCoords(coords);\n        this.blendVectors = new Map;\n    }\n}\n\n\n\n\nconst $a8ac370803cb82cf$var$resolved = Promise.resolve();\nclass $a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    includeGlyph(glyph) {\n        if (typeof glyph === \"object\") glyph = glyph.id;\n        if (this.mapping[glyph] == null) {\n            this.glyphs.push(glyph);\n            this.mapping[glyph] = this.glyphs.length - 1;\n        }\n        return this.mapping[glyph];\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphs = [];\n        this.mapping = {};\n        // always include the missing glyph\n        this.includeGlyph(0);\n    }\n}\n\n\n\n\n\n// Flags for simple glyphs\nconst $2784eedf0b35a048$var$ON_CURVE = 1;\nconst $2784eedf0b35a048$var$X_SHORT_VECTOR = 2;\nconst $2784eedf0b35a048$var$Y_SHORT_VECTOR = 4;\nconst $2784eedf0b35a048$var$REPEAT = 8;\nconst $2784eedf0b35a048$var$SAME_X = 16;\nconst $2784eedf0b35a048$var$SAME_Y = 32;\nclass $2784eedf0b35a048$var$Point {\n    static size(val) {\n        return val >= 0 && val <= 255 ? 1 : 2;\n    }\n    static encode(stream, value) {\n        if (value >= 0 && value <= 255) stream.writeUInt8(value);\n        else stream.writeInt16BE(value);\n    }\n}\nlet $2784eedf0b35a048$var$Glyf = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    endPtsOfContours: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfContours\"),\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16),\n    flags: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 0),\n    xPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0),\n    yPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0)\n});\nclass $2784eedf0b35a048$export$2e2bcd8739ae039 {\n    encodeSimple(path, instructions = []) {\n        let endPtsOfContours = [];\n        let xPoints = [];\n        let yPoints = [];\n        let flags = [];\n        let same = 0;\n        let lastX = 0, lastY = 0, lastFlag = 0;\n        let pointCount = 0;\n        for(let i = 0; i < path.commands.length; i++){\n            let c = path.commands[i];\n            for(let j = 0; j < c.args.length; j += 2){\n                let x = c.args[j];\n                let y = c.args[j + 1];\n                let flag = 0;\n                // If the ending point of a quadratic curve is the midpoint\n                // between the control point and the control point of the next\n                // quadratic curve, we can omit the ending point.\n                if (c.command === \"quadraticCurveTo\" && j === 2) {\n                    let next = path.commands[i + 1];\n                    if (next && next.command === \"quadraticCurveTo\") {\n                        let midX = (lastX + next.args[0]) / 2;\n                        let midY = (lastY + next.args[1]) / 2;\n                        if (x === midX && y === midY) continue;\n                    }\n                }\n                // All points except control points are on curve.\n                if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $2784eedf0b35a048$var$ON_CURVE;\n                flag = this._encodePoint(x, lastX, xPoints, flag, $2784eedf0b35a048$var$X_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_X);\n                flag = this._encodePoint(y, lastY, yPoints, flag, $2784eedf0b35a048$var$Y_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_Y);\n                if (flag === lastFlag && same < 255) {\n                    flags[flags.length - 1] |= $2784eedf0b35a048$var$REPEAT;\n                    same++;\n                } else {\n                    if (same > 0) {\n                        flags.push(same);\n                        same = 0;\n                    }\n                    flags.push(flag);\n                    lastFlag = flag;\n                }\n                lastX = x;\n                lastY = y;\n                pointCount++;\n            }\n            if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n        }\n        // Close the path if the last command didn't already\n        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n        let bbox = path.bbox;\n        let glyf = {\n            numberOfContours: endPtsOfContours.length,\n            xMin: bbox.minX,\n            yMin: bbox.minY,\n            xMax: bbox.maxX,\n            yMax: bbox.maxY,\n            endPtsOfContours: endPtsOfContours,\n            instructions: instructions,\n            flags: flags,\n            xPoints: xPoints,\n            yPoints: yPoints\n        };\n        let size = $2784eedf0b35a048$var$Glyf.size(glyf);\n        let tail = 4 - size % 4;\n        let stream = new $gfJaN$restructure.EncodeStream(size + tail);\n        $2784eedf0b35a048$var$Glyf.encode(stream, glyf);\n        // Align to 4-byte length\n        if (tail !== 0) stream.fill(0, tail);\n        return stream.buffer;\n    }\n    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n        let diff = value - last;\n        if (value === last) flag |= sameFlag;\n        else {\n            if (-255 <= diff && diff <= 255) {\n                flag |= shortFlag;\n                if (diff < 0) diff = -diff;\n                else flag |= sameFlag;\n            }\n            points.push(diff);\n        }\n        return flag;\n    }\n}\n\n\nclass $fe042f4b88f46896$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    _addGlyph(gid) {\n        let glyph = this.font.getGlyph(gid);\n        let glyf = glyph._decode();\n        // get the offset to the glyph from the loca table\n        let curOffset = this.font.loca.offsets[gid];\n        let nextOffset = this.font.loca.offsets[gid + 1];\n        let stream = this.font._getTableStream(\"glyf\");\n        stream.pos += curOffset;\n        let buffer = stream.readBuffer(nextOffset - curOffset);\n        // if it is a compound glyph, include its components\n        if (glyf && glyf.numberOfContours < 0) {\n            buffer = new Uint8Array(buffer);\n            let view = new DataView(buffer.buffer);\n            for (let component of glyf.components){\n                gid = this.includeGlyph(component.glyphID);\n                view.setUint16(component.pos, gid);\n            }\n        } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path\n        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n        this.glyf.push(buffer);\n        this.loca.offsets.push(this.offset);\n        this.hmtx.metrics.push({\n            advance: glyph.advanceWidth,\n            bearing: glyph._getMetrics().leftBearing\n        });\n        this.offset += buffer.length;\n        return this.glyf.length - 1;\n    }\n    encode() {\n        // tables required by PDF spec:\n        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n        //\n        // additional tables required for standalone fonts:\n        //   name, cmap, OS/2, post\n        this.glyf = [];\n        this.offset = 0;\n        this.loca = {\n            offsets: [],\n            version: this.font.loca.version\n        };\n        this.hmtx = {\n            metrics: [],\n            bearings: []\n        };\n        // include all the glyphs\n        // not using a for loop because we need to support adding more\n        // glyphs to the array as we go, and CoffeeScript caches the length.\n        let i = 0;\n        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);\n        let maxp = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.maxp);\n        maxp.numGlyphs = this.glyf.length;\n        this.loca.offsets.push(this.offset);\n        let head = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.head);\n        head.indexToLocFormat = this.loca.version;\n        let hhea = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.hhea);\n        hhea.numberOfMetrics = this.hmtx.metrics.length;\n        // map = []\n        // for index in [0...256]\n        //     if index < @numGlyphs\n        //         map[index] = index\n        //     else\n        //         map[index] = 0\n        //\n        // cmapTable =\n        //     version: 0\n        //     length: 262\n        //     language: 0\n        //     codeMap: map\n        //\n        // cmap =\n        //     version: 0\n        //     numSubtables: 1\n        //     tables: [\n        //         platformID: 1\n        //         encodingID: 0\n        //         table: cmapTable\n        //     ]\n        // TODO: subset prep, cvt, fpgm?\n        return (0, $df50e1efe10a1247$export$2e2bcd8739ae039).toBuffer({\n            tables: {\n                head: head,\n                hhea: hhea,\n                loca: this.loca,\n                maxp: maxp,\n                \"cvt \": this.font[\"cvt \"],\n                prep: this.font.prep,\n                glyf: this.glyf,\n                hmtx: this.hmtx,\n                fpgm: this.font.fpgm\n            }\n        });\n    }\n    constructor(font){\n        super(font);\n        this.glyphEncoder = new (0, $2784eedf0b35a048$export$2e2bcd8739ae039);\n    }\n}\n\n\n\n\n\n\nclass $ec40f80c07a4e08a$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    subsetCharstrings() {\n        this.charstrings = [];\n        let gsubrs = {};\n        for (let gid of this.glyphs){\n            this.charstrings.push(this.cff.getCharString(gid));\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;\n        }\n        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n    subsetSubrs(subrs, used) {\n        let res = [];\n        for(let i = 0; i < subrs.length; i++){\n            let subr = subrs[i];\n            if (used[i]) {\n                this.cff.stream.pos = subr.offset;\n                res.push(this.cff.stream.readBuffer(subr.length));\n            } else res.push(new Uint8Array([\n                11\n            ])); // return\n        }\n        return res;\n    }\n    subsetFontdict(topDict) {\n        topDict.FDArray = [];\n        topDict.FDSelect = {\n            version: 0,\n            fds: []\n        };\n        let used_fds = {};\n        let used_subrs = [];\n        let fd_select = {};\n        for (let gid of this.glyphs){\n            let fd = this.cff.fdForGlyph(gid);\n            if (fd == null) continue;\n            if (!used_fds[fd]) {\n                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n                used_subrs.push({});\n                fd_select[fd] = topDict.FDArray.length - 1;\n            }\n            used_fds[fd] = true;\n            topDict.FDSelect.fds.push(fd_select[fd]);\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;\n        }\n        for(let i = 0; i < topDict.FDArray.length; i++){\n            let dict = topDict.FDArray[i];\n            delete dict.FontName;\n            if (dict.Private && dict.Private.Subrs) {\n                dict.Private = Object.assign({}, dict.Private);\n                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n            }\n        }\n        return;\n    }\n    createCIDFontdict(topDict) {\n        let used_subrs = {};\n        for (let gid of this.glyphs){\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;\n        }\n        let privateDict = Object.assign({}, this.cff.topDict.Private);\n        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n        topDict.FDArray = [\n            {\n                Private: privateDict\n            }\n        ];\n        return topDict.FDSelect = {\n            version: 3,\n            nRanges: 1,\n            ranges: [\n                {\n                    first: 0,\n                    fd: 0\n                }\n            ],\n            sentinel: this.charstrings.length\n        };\n    }\n    addString(string) {\n        if (!string) return null;\n        if (!this.strings) this.strings = [];\n        this.strings.push(string);\n        return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length + this.strings.length - 1;\n    }\n    encode() {\n        this.subsetCharstrings();\n        let charset = {\n            version: this.charstrings.length > 255 ? 2 : 1,\n            ranges: [\n                {\n                    first: 1,\n                    nLeft: this.charstrings.length - 2\n                }\n            ]\n        };\n        let topDict = Object.assign({}, this.cff.topDict);\n        topDict.Private = null;\n        topDict.charset = charset;\n        topDict.Encoding = null;\n        topDict.CharStrings = this.charstrings;\n        for (let key of [\n            \"version\",\n            \"Notice\",\n            \"Copyright\",\n            \"FullName\",\n            \"FamilyName\",\n            \"Weight\",\n            \"PostScript\",\n            \"BaseFontName\",\n            \"FontName\"\n        ])topDict[key] = this.addString(this.cff.string(topDict[key]));\n        topDict.ROS = [\n            this.addString(\"Adobe\"),\n            this.addString(\"Identity\"),\n            0\n        ];\n        topDict.CIDCount = this.charstrings.length;\n        if (this.cff.isCIDFont) this.subsetFontdict(topDict);\n        else this.createCIDFontdict(topDict);\n        let top = {\n            version: 1,\n            hdrSize: this.cff.hdrSize,\n            offSize: 4,\n            header: this.cff.header,\n            nameIndex: [\n                this.cff.postscriptName\n            ],\n            topDictIndex: [\n                topDict\n            ],\n            stringIndex: this.strings,\n            globalSubrIndex: this.gsubrs\n        };\n        return (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).toBuffer(top);\n    }\n    constructor(font){\n        super(font);\n        this.cff = this.font[\"CFF \"];\n        if (!this.cff) throw new Error(\"Not a CFF Font\");\n    }\n}\n\n\n\n\nclass $0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let format = (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n        return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n    setDefaultLanguage(lang = null) {\n        this.defaultLanguage = lang;\n    }\n    _getTable(table) {\n        if (!(table.tag in this._tables)) try {\n            this._tables[table.tag] = this._decodeTable(table);\n        } catch (e) {\n            if ($59aa4ed98453e1d4$export$bd5c5d8b8dcafd78) {\n                console.error(`Error decoding table ${table.tag}`);\n                console.error(e.stack);\n            }\n        }\n        return this._tables[table.tag];\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            return this.stream;\n        }\n        return null;\n    }\n    _decodeDirectory() {\n        return this.directory = (0, $df50e1efe10a1247$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _decodeTable(table) {\n        let pos = this.stream.pos;\n        let stream = this._getTableStream(table.tag);\n        let result = (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n        this.stream.pos = pos;\n        return result;\n    }\n    /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */ getName(key, lang = this.defaultLanguage || $59aa4ed98453e1d4$export$42940898df819940) {\n        let record = this.name && this.name.records[key];\n        if (record) // Attempt to retrieve the entry, depending on which translation is available:\n        return record[lang] || record[this.defaultLanguage] || record[$59aa4ed98453e1d4$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n         || null;\n        return null;\n    }\n    /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */ get postscriptName() {\n        return this.getName(\"postscriptName\");\n    }\n    /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */ get fullName() {\n        return this.getName(\"fullName\");\n    }\n    /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */ get familyName() {\n        return this.getName(\"fontFamily\");\n    }\n    /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */ get subfamilyName() {\n        return this.getName(\"fontSubfamily\");\n    }\n    /**\n   * The font's copyright information\n   * @type {string}\n   */ get copyright() {\n        return this.getName(\"copyright\");\n    }\n    /**\n   * The font's version number\n   * @type {string}\n   */ get version() {\n        return this.getName(\"version\");\n    }\n    /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */ get ascent() {\n        return this.hhea.ascent;\n    }\n    /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */ get descent() {\n        return this.hhea.descent;\n    }\n    /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */ get lineGap() {\n        return this.hhea.lineGap;\n    }\n    /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */ get underlinePosition() {\n        return this.post.underlinePosition;\n    }\n    /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */ get underlineThickness() {\n        return this.post.underlineThickness;\n    }\n    /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */ get italicAngle() {\n        return this.post.italicAngle;\n    }\n    /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */ get capHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */ get xHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.xHeight : 0;\n    }\n    /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */ get numGlyphs() {\n        return this.maxp.numGlyphs;\n    }\n    /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */ get unitsPerEm() {\n        return this.head.unitsPerEm;\n    }\n    /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */ get bbox() {\n        return Object.freeze(new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n    get _cmapProcessor() {\n        return new (0, $0d6e160064c86e50$export$2e2bcd8739ae039)(this.cmap);\n    }\n    /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */ get characterSet() {\n        return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */ hasGlyphForCodePoint(codePoint) {\n        return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */ glyphForCodePoint(codePoint) {\n        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [\n            codePoint\n        ]);\n    }\n    /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */ glyphsForString(string) {\n        let glyphs = [];\n        let len = string.length;\n        let idx = 0;\n        let last = -1;\n        let state = -1;\n        while(idx <= len){\n            let code = 0;\n            let nextState = 0;\n            if (idx < len) {\n                // Decode the next codepoint from UTF 16\n                code = string.charCodeAt(idx++);\n                if (0xd800 <= code && code <= 0xdbff && idx < len) {\n                    let next = string.charCodeAt(idx);\n                    if (0xdc00 <= next && next <= 0xdfff) {\n                        idx++;\n                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n                    }\n                }\n                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n            } else idx++;\n            if (state === 0 && nextState === 1) // Variation selector following normal codepoint.\n            glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [\n                last,\n                code\n            ]));\n            else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.\n            glyphs.push(this.glyphForCodePoint(last));\n            last = code;\n            state = nextState;\n        }\n        return glyphs;\n    }\n    get _layoutEngine() {\n        return new (0, $9d641258c9d7180d$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */ layout(string, userFeatures, script, language, direction) {\n        return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */ stringsForGlyph(gid) {\n        return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */ get availableFeatures() {\n        return this._layoutEngine.getAvailableFeatures();\n    }\n    getAvailableFeatures(script, language) {\n        return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $f680320fa07ef53d$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $7ee0705195f3b047$export$2e2bcd8739ae039)(glyph, characters, this);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */ getGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $55855d6d316b015e$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $42d9dbd2de9ee2d8$export$2e2bcd8739ae039)(glyph, characters, this);\n            else this._getBaseGlyph(glyph, characters);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */ createSubset() {\n        if (this.directory.tables[\"CFF \"]) return new (0, $ec40f80c07a4e08a$export$2e2bcd8739ae039)(this);\n        return new (0, $fe042f4b88f46896$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */ get variationAxes() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n        };\n        return res;\n    }\n    /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */ get namedVariations() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let instance of this.fvar.instance){\n            let settings = {};\n            for(let i = 0; i < this.fvar.axis.length; i++){\n                let axis = this.fvar.axis[i];\n                settings[axis.axisTag.trim()] = instance.coord[i];\n            }\n            res[instance.name.en] = settings;\n        }\n        return res;\n    }\n    /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */ getVariation(settings) {\n        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n        if (typeof settings === \"string\") settings = this.namedVariations[settings];\n        if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n        // normalize the coordinates\n        let coords = this.fvar.axis.map((axis, i)=>{\n            let axisTag = axis.axisTag.trim();\n            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n            else return axis.defaultValue;\n        });\n        let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n        stream.pos = this._directoryPos;\n        let font = new $0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream, coords);\n        font._tables = this._tables;\n        return font;\n    }\n    get _variationProcessor() {\n        if (!this.fvar) return null;\n        let variationCoords = this.variationCoords;\n        // Ignore if no variation coords and not CFF2\n        if (!variationCoords && !this.CFF2) return null;\n        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue);\n        return new (0, $7586bb9ea67c41d8$export$2e2bcd8739ae039)(this, variationCoords);\n    }\n    // Standardized format plugin API\n    getFont(name) {\n        return this.getVariation(name);\n    }\n    constructor(stream, variationCoords = null){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n        this.defaultLanguage = null;\n        this.stream = stream;\n        this.variationCoords = variationCoords;\n        this._directoryPos = this.stream.pos;\n        this._tables = {};\n        this._glyphs = {};\n        this._decodeDirectory();\n        // define properties for each table to lazily parse\n        for(let tag in this.directory.tables){\n            let table = this.directory.tables[tag];\n            if ((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag] && table.length > 0) Object.defineProperty(this, tag, {\n                get: this._getTable.bind(this, table)\n            });\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\n\n\n\n\n\n\nlet $89f72d2d7c9afc0d$var$WOFFDirectoryEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    compLength: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    origChecksum: $gfJaN$restructure.uint32\n});\nlet $89f72d2d7c9afc0d$var$WOFFDirectory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($89f72d2d7c9afc0d$var$WOFFDirectoryEntry, \"numTables\")\n});\n$89f72d2d7c9afc0d$var$WOFFDirectory.process = function() {\n    let tables1 = {};\n    for (let table of this.tables)tables1[table.tag] = table;\n    this.tables = tables1;\n};\nvar $89f72d2d7c9afc0d$export$2e2bcd8739ae039 = $89f72d2d7c9afc0d$var$WOFFDirectory;\n\n\n\n\n\n\nclass $8a0a49baaf5d834d$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $89f72d2d7c9afc0d$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            if (table.compLength < table.length) {\n                this.stream.pos += 2; // skip deflate header\n                let outBuffer = new Uint8Array(table.length);\n                let buf = (0, ($parcel$interopDefault($gfJaN$tinyinflate)))(this.stream.readBuffer(table.compLength - 2), outBuffer);\n                return new $gfJaN$restructure.DecodeStream(buf);\n            } else return this.stream;\n        }\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF\");\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $44b9edca0e403d6d$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    _decode() {\n        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n        return this._font._transformedGlyphs[this.id];\n    }\n    _getCBox() {\n        return this.path.bbox;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n\n\n\nconst $2f0bfd9a5c1d7b58$var$Base128 = {\n    decode (stream) {\n        let result = 0;\n        let iterable = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        for(let j = 0; j < iterable.length; j++){\n            let i = iterable[j];\n            let code = stream.readUInt8();\n            // If any of the top seven bits are set then we're about to overflow.\n            if (result & 0xe0000000) throw new Error(\"Overflow\");\n            result = result << 7 | code & 0x7f;\n            if ((code & 0x80) === 0) return result;\n        }\n        throw new Error(\"Bad base 128 number\");\n    }\n};\nlet $2f0bfd9a5c1d7b58$var$knownTags = [\n    \"cmap\",\n    \"head\",\n    \"hhea\",\n    \"hmtx\",\n    \"maxp\",\n    \"name\",\n    \"OS/2\",\n    \"post\",\n    \"cvt \",\n    \"fpgm\",\n    \"glyf\",\n    \"loca\",\n    \"prep\",\n    \"CFF \",\n    \"VORG\",\n    \"EBDT\",\n    \"EBLC\",\n    \"gasp\",\n    \"hdmx\",\n    \"kern\",\n    \"LTSH\",\n    \"PCLT\",\n    \"VDMX\",\n    \"vhea\",\n    \"vmtx\",\n    \"BASE\",\n    \"GDEF\",\n    \"GPOS\",\n    \"GSUB\",\n    \"EBSC\",\n    \"JSTF\",\n    \"MATH\",\n    \"CBDT\",\n    \"CBLC\",\n    \"COLR\",\n    \"CPAL\",\n    \"SVG \",\n    \"sbix\",\n    \"acnt\",\n    \"avar\",\n    \"bdat\",\n    \"bloc\",\n    \"bsln\",\n    \"cvar\",\n    \"fdsc\",\n    \"feat\",\n    \"fmtx\",\n    \"fvar\",\n    \"gvar\",\n    \"hsty\",\n    \"just\",\n    \"lcar\",\n    \"mort\",\n    \"morx\",\n    \"opbd\",\n    \"prop\",\n    \"trak\",\n    \"Zapf\",\n    \"Silf\",\n    \"Glat\",\n    \"Gloc\",\n    \"Feat\",\n    \"Sill\"\n];\nlet $2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry = new $gfJaN$restructure.Struct({\n    flags: $gfJaN$restructure.uint8,\n    customTag: new $gfJaN$restructure.Optional(new $gfJaN$restructure.String(4), (t)=>(t.flags & 0x3f) === 0x3f),\n    tag: (t)=>t.customTag || $2f0bfd9a5c1d7b58$var$knownTags[t.flags & 0x3f],\n    length: $2f0bfd9a5c1d7b58$var$Base128,\n    transformVersion: (t)=>t.flags >>> 6 & 0x03,\n    transformed: (t)=>t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n    transformLength: new $gfJaN$restructure.Optional($2f0bfd9a5c1d7b58$var$Base128, (t)=>t.transformed)\n});\nlet $2f0bfd9a5c1d7b58$var$WOFF2Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    totalCompressedSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$2f0bfd9a5c1d7b58$var$WOFF2Directory.process = function() {\n    let tables = {};\n    for(let i = 0; i < this.tables.length; i++){\n        let table = this.tables[i];\n        tables[table.tag] = table;\n    }\n    return this.tables = tables;\n};\nvar $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039 = $2f0bfd9a5c1d7b58$var$WOFF2Directory;\n\n\n\nclass $333fb94547d9fb5c$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039).decode(this.stream);\n        this._dataPos = this.stream.pos;\n    }\n    _decompress() {\n        // decompress data and setup table offsets if we haven't already\n        if (!this._decompressed) {\n            this.stream.pos = this._dataPos;\n            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n            let decompressedSize = 0;\n            for(let tag in this.directory.tables){\n                let entry = this.directory.tables[tag];\n                entry.offset = decompressedSize;\n                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n            }\n            let decompressed = (0, ($parcel$interopDefault($gfJaN$brotlidecompressjs)))(buffer, decompressedSize);\n            if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n            this.stream = new $gfJaN$restructure.DecodeStream(decompressed);\n            this._decompressed = true;\n        }\n    }\n    _decodeTable(table) {\n        this._decompress();\n        return super._decodeTable(table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n                if (!this._transformedGlyphs) this._transformGlyfTable();\n                return this._glyphs[glyph] = new (0, $44b9edca0e403d6d$export$2e2bcd8739ae039)(glyph, characters, this);\n            } else return super._getBaseGlyph(glyph, characters);\n        }\n    }\n    _transformGlyfTable() {\n        this._decompress();\n        this.stream.pos = this.directory.tables.glyf.offset;\n        let table = $333fb94547d9fb5c$var$GlyfTable.decode(this.stream);\n        let glyphs = [];\n        for(let index = 0; index < table.numGlyphs; index++){\n            let glyph = {};\n            let nContours = table.nContours.readInt16BE();\n            glyph.numberOfContours = nContours;\n            if (nContours > 0) {\n                let nPoints = [];\n                let totalPoints = 0;\n                for(let i = 0; i < nContours; i++){\n                    let r1 = $333fb94547d9fb5c$var$read255UInt16(table.nPoints);\n                    totalPoints += r1;\n                    nPoints.push(totalPoints);\n                }\n                glyph.points = $333fb94547d9fb5c$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;\n                var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            } else if (nContours < 0) {\n                let haveInstructions = (0, $f680320fa07ef53d$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n                    _font: this\n                }, glyph, table.composites);\n                if (haveInstructions) var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            }\n            glyphs.push(glyph);\n        }\n        this._transformedGlyphs = glyphs;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n// Special class that accepts a length and returns a sub-stream for that data\nclass $333fb94547d9fb5c$var$Substream {\n    decode(stream, parent) {\n        return new $gfJaN$restructure.DecodeStream(this._buf.decode(stream, parent));\n    }\n    constructor(length){\n        this.length = length;\n        this._buf = new $gfJaN$restructure.Buffer(length);\n    }\n}\n// This struct represents the entire glyf table\nlet $333fb94547d9fb5c$var$GlyfTable = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    indexFormat: $gfJaN$restructure.uint16,\n    nContourStreamSize: $gfJaN$restructure.uint32,\n    nPointsStreamSize: $gfJaN$restructure.uint32,\n    flagStreamSize: $gfJaN$restructure.uint32,\n    glyphStreamSize: $gfJaN$restructure.uint32,\n    compositeStreamSize: $gfJaN$restructure.uint32,\n    bboxStreamSize: $gfJaN$restructure.uint32,\n    instructionStreamSize: $gfJaN$restructure.uint32,\n    nContours: new $333fb94547d9fb5c$var$Substream(\"nContourStreamSize\"),\n    nPoints: new $333fb94547d9fb5c$var$Substream(\"nPointsStreamSize\"),\n    flags: new $333fb94547d9fb5c$var$Substream(\"flagStreamSize\"),\n    glyphs: new $333fb94547d9fb5c$var$Substream(\"glyphStreamSize\"),\n    composites: new $333fb94547d9fb5c$var$Substream(\"compositeStreamSize\"),\n    bboxes: new $333fb94547d9fb5c$var$Substream(\"bboxStreamSize\"),\n    instructions: new $333fb94547d9fb5c$var$Substream(\"instructionStreamSize\")\n});\nconst $333fb94547d9fb5c$var$WORD_CODE = 253;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $333fb94547d9fb5c$var$LOWEST_U_CODE = 253;\nfunction $333fb94547d9fb5c$var$read255UInt16(stream) {\n    let code = stream.readUInt8();\n    if (code === $333fb94547d9fb5c$var$WORD_CODE) return stream.readUInt16BE();\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE;\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE * 2;\n    return code;\n}\nfunction $333fb94547d9fb5c$var$withSign(flag, baseval) {\n    return flag & 1 ? baseval : -baseval;\n}\nfunction $333fb94547d9fb5c$var$decodeTriplet(flags, glyphs, nPoints) {\n    let y;\n    let x = y = 0;\n    let res = [];\n    for(let i = 0; i < nPoints; i++){\n        let dx = 0, dy = 0;\n        let flag = flags.readUInt8();\n        let onCurve = !(flag >> 7);\n        flag &= 0x7f;\n        if (flag < 10) {\n            dx = 0;\n            dy = $333fb94547d9fb5c$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n        } else if (flag < 20) {\n            dx = $333fb94547d9fb5c$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n            dy = 0;\n        } else if (flag < 84) {\n            var b0 = flag - 20;\n            var b1 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n        } else if (flag < 120) {\n            var b0 = flag - 84;\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n        } else if (flag < 124) {\n            var b1 = glyphs.readUInt8();\n            let b2 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n        } else {\n            dx = $333fb94547d9fb5c$var$withSign(flag, glyphs.readUInt16BE());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, glyphs.readUInt16BE());\n        }\n        x += dx;\n        y += dy;\n        res.push(new (0, $f680320fa07ef53d$export$baf26146a414f24a)(onCurve, false, x, y));\n    }\n    return res;\n}\n\n\n\n\n\n\n\n\nlet $e0b2de9958441c02$var$TTCHeader = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    0x00010000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\")\n    },\n    0x00020000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\"),\n        dsigTag: $gfJaN$restructure.uint32,\n        dsigLength: $gfJaN$restructure.uint32,\n        dsigOffset: $gfJaN$restructure.uint32\n    }\n});\nclass $e0b2de9958441c02$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n    getFont(name) {\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTC\");\n        this.stream = stream;\n        if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n        this.header = $e0b2de9958441c02$var$TTCHeader.decode(stream);\n    }\n}\n\n\n\n\n\nlet $d0fe640dc6c78783$var$DFontName = new $gfJaN$restructure.String($gfJaN$restructure.uint8);\nlet $d0fe640dc6c78783$var$DFontData = new $gfJaN$restructure.Struct({\n    len: $gfJaN$restructure.uint32,\n    buf: new $gfJaN$restructure.Buffer(\"len\")\n});\nlet $d0fe640dc6c78783$var$Ref = new $gfJaN$restructure.Struct({\n    id: $gfJaN$restructure.uint16,\n    nameOffset: $gfJaN$restructure.int16,\n    attr: $gfJaN$restructure.uint8,\n    dataOffset: $gfJaN$restructure.uint24,\n    handle: $gfJaN$restructure.uint32\n});\nlet $d0fe640dc6c78783$var$Type = new $gfJaN$restructure.Struct({\n    name: new $gfJaN$restructure.String(4),\n    maxTypeIndex: $gfJaN$restructure.uint16,\n    refList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Ref, (t)=>t.maxTypeIndex + 1), {\n        type: \"parent\"\n    })\n});\nlet $d0fe640dc6c78783$var$TypeList = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    types: new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Type, (t)=>t.length + 1)\n});\nlet $d0fe640dc6c78783$var$DFontMap = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, 24),\n    typeList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $d0fe640dc6c78783$var$TypeList),\n    nameListOffset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, \"void\")\n});\nlet $d0fe640dc6c78783$var$DFontHeader = new $gfJaN$restructure.Struct({\n    dataOffset: $gfJaN$restructure.uint32,\n    map: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $d0fe640dc6c78783$var$DFontMap),\n    dataLength: $gfJaN$restructure.uint32,\n    mapLength: $gfJaN$restructure.uint32\n});\nclass $d0fe640dc6c78783$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let stream = new $gfJaN$restructure.DecodeStream(buffer);\n        try {\n            var header = $d0fe640dc6c78783$var$DFontHeader.decode(stream);\n        } catch (e) {\n            return false;\n        }\n        for (let type of header.map.typeList.types){\n            if (type.name === \"sfnt\") return true;\n        }\n        return false;\n    }\n    getFont(name) {\n        if (!this.sfnt) return null;\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"DFont\");\n        this.stream = stream;\n        this.header = $d0fe640dc6c78783$var$DFontHeader.decode(this.stream);\n        for (let type of this.header.map.typeList.types){\n            for (let ref of type.refList)if (ref.nameOffset >= 0) {\n                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n                ref.name = $d0fe640dc6c78783$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n            if (type.name === \"sfnt\") this.sfnt = type;\n        }\n    }\n}\n\n\n\n// Register font formats\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $8a0a49baaf5d834d$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $333fb94547d9fb5c$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $e0b2de9958441c02$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $d0fe640dc6c78783$export$2e2bcd8739ae039));\n$parcel$exportWildcard(module.exports, $59aa4ed98453e1d4$exports);\n\n\n//# sourceMappingURL=browser.cjs.map\n","export {EncodeStream} from './src/EncodeStream.js';\nexport {DecodeStream} from './src/DecodeStream.js';\nexport {Array} from './src/Array.js';\nexport {LazyArray} from './src/LazyArray.js';\nexport {Bitfield} from './src/Bitfield.js';\nexport {Boolean} from './src/Boolean.js';\nexport {Buffer} from './src/Buffer.js';\nexport {Enum} from './src/Enum.js';\nexport {Optional} from './src/Optional.js';\nexport {Reserved} from './src/Reserved.js';\nexport {String} from './src/String.js';\nexport {Struct} from './src/Struct.js';\nexport {VersionedStruct} from './src/VersionedStruct.js';\n\nexport * from './src/utils.js';\nexport * from './src/Number.js';\nexport * from './src/Pointer.js';\n","import {DecodeStream} from './DecodeStream.js';\n\nconst textEncoder = new TextEncoder();\nconst isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\n\nexport class EncodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  writeBuffer(buffer) {\n    this.buffer.set(buffer, this.pos);\n    this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    let buf;\n    switch (encoding) {\n      case 'utf16le':\n      case 'utf16-le':\n      case 'ucs2': // node treats this the same as utf16.\n        buf = stringToUtf16(string, isBigEndian);\n        break;\n\n      case 'utf16be':\n      case 'utf16-be':\n        buf = stringToUtf16(string, !isBigEndian);\n        break;\n\n      case 'utf8':\n        buf = textEncoder.encode(string);\n        break;\n\n      case 'ascii':\n        buf = stringToAscii(string);\n        break;\n\n      default:\n        throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n\n    this.writeBuffer(buf);\n  }\n\n  writeUInt24BE(val) {\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = val & 0xff;\n  }\n\n  writeUInt24LE(val) {\n    this.buffer[this.pos++] = val & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      this.writeUInt24BE(val);\n    } else {\n      this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      this.writeUInt24LE(val);\n    } else {\n      this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.buffer.fill(val, this.pos, this.pos + length);\n      this.pos += length;\n    } else {\n      const buf = new Uint8Array(length);\n      buf.fill(val);\n      this.writeBuffer(buf);\n    }\n  }\n}\n\nfunction stringToUtf16(string, swap) {\n  let buf = new Uint16Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i);\n    if (swap) {\n      code = (code >> 8) | ((code & 0xff) << 8);\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  let buf = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'set') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n      this.view[key](this.pos, value, false);\n      this.pos += bytes;\n    };\n\n    if (bytes !== 1) {\n      EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n      };\n    }\n  }\n}\n","// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n}\n\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass ArrayT extends Base {\n  constructor(type, length, lengthType = 'count') {\n    super();\n    this.type = type;\n    this.length = length;\n    this.lengthType = lengthType;\n  }\n\n  decode(stream, parent) {\n    let length;\n    const { pos } = stream;\n\n    const res = [];\n    let ctx = parent;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    }\n\n    if (this.length instanceof NumberT) {\n      // define hidden properties\n      Object.defineProperties(res, {\n        parent:         { value: parent },\n        _startOffset:   { value: pos },\n        _currentOffset: { value: 0, writable: true },\n        _length:        { value: length }\n      });\n\n      ctx = res;\n    }\n\n    if ((length == null) || (this.lengthType === 'bytes')) {\n      const target = (length != null) ?\n        stream.pos + length\n      : (parent != null ? parent._length : undefined) ?\n        parent._startOffset + parent._length\n      :\n        stream.length;\n\n      while (stream.pos < target) {\n        res.push(this.type.decode(stream, ctx));\n      }\n\n    } else {\n      for (let i = 0, end = length; i < end; i++) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    }\n\n    return res;\n  }\n\n  size(array, ctx, includePointers = true) {\n    if (!array) {\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n    }\n\n    let size = 0;\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n      ctx = {parent: ctx, pointerSize: 0};\n    }\n\n    for (let item of array) {\n      size += this.type.size(item, ctx);\n    }\n\n    if (ctx && includePointers && this.length instanceof NumberT) {\n      size += ctx.pointerSize;\n    }\n    \n    return size;\n  }\n\n  encode(stream, array, parent) {\n    let ctx = parent;\n    if (this.length instanceof NumberT) {\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent\n      };\n\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n      this.length.encode(stream, array.length);\n    }\n\n    for (let item of array) {\n      this.type.encode(stream, item, ctx);\n    }\n\n    if (this.length instanceof NumberT) {\n      let i = 0;\n      while (i < ctx.pointers.length) {\n        const ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }\n}\n\nexport {ArrayT as Array};\n","import {DecodeStream} from './DecodeStream.js';\nimport {EncodeStream} from './EncodeStream.js';\n\nexport class Base {\n  fromBuffer(buffer) {\n    let stream = new DecodeStream(buffer);\n    return this.decode(stream);\n  }\n\n  toBuffer(value) {\n    let size = this.size(value);\n    let buffer = new Uint8Array(size);\n    let stream = new EncodeStream(buffer);\n    this.encode(stream, value);\n    return buffer;\n  }\n}\n","import {DecodeStream} from './DecodeStream.js';\nimport {Base} from './Base.js';\n\nclass NumberT extends Base {\n  constructor(type, endian = 'BE') {\n    super();\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexport {NumberT as Number};\n\nexport const uint8 = new NumberT('UInt8');\nexport const uint16be = new NumberT('UInt16', 'BE');\nexport const uint16 = uint16be;\nexport const uint16le = new NumberT('UInt16', 'LE');\nexport const uint24be = new NumberT('UInt24', 'BE');\nexport const uint24 = uint24be;\nexport const uint24le = new NumberT('UInt24', 'LE');\nexport const uint32be = new NumberT('UInt32', 'BE');\nexport const uint32 = uint32be;\nexport const uint32le = new NumberT('UInt32', 'LE');\nexport const int8 = new NumberT('Int8');\nexport const int16be = new NumberT('Int16', 'BE');\nexport const int16 = int16be;\nexport const int16le = new NumberT('Int16', 'LE');\nexport const int24be = new NumberT('Int24', 'BE');\nexport const int24 = int24be;\nexport const int24le = new NumberT('Int24', 'LE');\nexport const int32be = new NumberT('Int32', 'BE');\nexport const int32 = int32be;\nexport const int32le = new NumberT('Int32', 'LE');\nexport const floatbe = new NumberT('Float', 'BE');\nexport const float = floatbe;\nexport const floatle = new NumberT('Float', 'LE');\nexport const doublebe = new NumberT('Double', 'BE');\nexport const double = doublebe;\nexport const doublele = new NumberT('Double', 'LE');\n\nexport class Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexport const fixed16be = new Fixed(16, 'BE');\nexport const fixed16 = fixed16be;\nexport const fixed16le = new Fixed(16, 'LE');\nexport const fixed32be = new Fixed(32, 'BE');\nexport const fixed32 = fixed32be;\nexport const fixed32le = new Fixed(32, 'LE');\n","import {Number as NumberT} from './Number.js';\n\nexport function resolveLength(length, stream, parent) {\n  let res;\n  if (typeof length === 'number') {\n    res = length;\n\n  } else if (typeof length === 'function') {\n    res = length.call(parent, parent);\n\n  } else if (parent && (typeof length === 'string')) {\n    res = parent[length];\n\n  } else if (stream && length instanceof NumberT) {\n    res = length.decode(stream);\n  }\n\n  if (isNaN(res)) {\n    throw new Error('Not a fixed size');\n  }\n\n  return res;\n};\n\nexport class PropertyDescriptor {\n  constructor(opts = {}) {\n    this.enumerable = true;\n    this.configurable = true;\n\n    for (let key in opts) {\n      const val = opts[key];\n      this[key] = val;\n    }\n  }\n}\n","import {Array as ArrayT} from './Array.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const { pos } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.size(val, ctx);\n  }\n\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.encode(stream, val, ctx);\n  }\n}\n\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n\n  get(index) {\n    if ((index < 0) || (index >= this.length)) {\n      return undefined;\n    }\n\n    if (this.items[index] == null) {\n      const { pos } = this.stream;\n      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n\n    return this.items[index];\n  }\n\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Bitfield extends Base {\n  constructor(type, flags = []) {\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & (1 << i));\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) { val |= (1 << i); }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class BooleanT extends Base {\n  constructor(type) {\n    super();\n    this.type = type;\n  }\n\n  decode(stream, parent) {\n    return !!this.type.decode(stream, parent);\n  }\n\n  size(val, parent) {\n    return this.type.size(val, parent);\n  }\n\n  encode(stream, val, parent) {\n    return this.type.encode(stream, +val, parent);\n  }\n}\n\nexport {BooleanT as Boolean};\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class BufferT extends Base {\n  constructor(length) {\n    super();\n    this.length = length;\n  }\n  \n  decode(stream, parent) {\n    const length = utils.resolveLength(this.length, stream, parent);\n    return stream.readBuffer(length);\n  }\n\n  size(val, parent) {\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let len = val.length;\n    if (this.length instanceof NumberT) {\n      len += this.length.size();\n    }\n\n    return len;\n  }\n\n  encode(stream, buf, parent) {\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, buf.length);\n    }\n\n    return stream.writeBuffer(buf);\n  }\n}\n\nexport {BufferT as Buffer};\n","import {Base} from './Base.js';\n\nexport class Enum extends Base {\n  constructor(type, options = []) {\n    super();\n    this.type = type;\n    this.options = options;\n  }\n  \n  decode(stream) {\n    const index = this.type.decode(stream);\n    return this.options[index] || index;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, val) {\n    const index = this.options.indexOf(val);\n    if (index === -1) {\n      throw new Error(`Unknown option in enum: ${val}`);\n    }\n\n    return this.type.encode(stream, index);\n  }\n}\n","import {Base} from './Base.js';\n\nexport class Optional extends Base {\n  constructor(type, condition = true) {\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n\n  decode(stream, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n\n  size(val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n\n  encode(stream, val, parent) {\n    let { condition } = this;\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n}\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Reserved extends Base {\n  constructor(type, count = 1) {\n    super();\n    this.type = type;\n    this.count = count;\n  }\n  decode(stream, parent) {\n    stream.pos += this.size(null, parent);\n    return undefined;\n  }\n\n  size(data, parent) {\n    const count = utils.resolveLength(this.count, null, parent);\n    return this.type.size() * count;\n  }\n\n  encode(stream, val, parent) {\n    return stream.fill(0, this.size(val, parent));\n  }\n}\n","import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length) && (buffer[pos] !== 0x00)) {\n        ++pos;\n      }\n\n      length = pos - stream.pos;\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos++;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size++;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n","import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Struct extends Base {\n  constructor(fields = {}) {\n    super();\n    this.fields = fields;\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n    this._parseFields(stream, res, this.fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  _setup(stream, parent, length) {\n    const res = {};\n\n    // define hidden properties\n    Object.defineProperties(res, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos },\n      _currentOffset: { value: 0, writable: true },\n      _length:        { value: length }\n    });\n\n    return res;\n  }\n\n  _parseFields(stream, res, fields) {\n    for (let key in fields) {\n      var val;\n      const type = fields[key];\n      if (typeof type === 'function') {\n        val = type.call(res, res);\n      } else {\n        val = type.decode(stream, res);\n      }\n\n      if (val !== undefined) {\n        if (val instanceof utils.PropertyDescriptor) {\n          Object.defineProperty(res, key, val);\n        } else {\n          res[key] = val;\n        }\n      }\n\n      res._currentOffset = stream.pos - res._startOffset;\n    }\n\n  }\n\n  size(val, parent, includePointers = true) {\n    if (val == null) { val = {}; }\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    let size = 0;\n    for (let key in this.fields) {\n      const type = this.fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    for (let key in this.fields) {\n      type = this.fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import {Struct} from './Struct.js';\n\nconst getPath = (object, pathArray) => {\n  return pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object);\n};\n\nexport class VersionedStruct extends Struct {\n  constructor(type, versions = {}) {\n    super();\n    this.type = type;\n    this.versions = versions;\n    if (typeof type === 'string') {\n      this.versionPath = type.split('.');\n    }\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n\n    if (typeof this.type === 'string') {\n      res.version = getPath(parent, this.versionPath);\n    } else {\n      res.version = this.type.decode(stream);\n    }\n\n    if (this.versions.header) {\n      this._parseFields(stream, res, this.versions.header);\n    }\n\n    const fields = this.versions[res.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${res.version}`);\n    }\n\n    if (fields instanceof VersionedStruct) {\n      return fields.decode(stream, parent);\n    }\n\n    this._parseFields(stream, res, fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  size(val, parent, includePointers = true) {\n    let key, type;\n    if (!val) {\n      throw new Error('Not a fixed size');\n    }\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    let size = 0;\n    if (typeof this.type !== 'string') {\n      size += this.type.size(val.version, ctx);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    if ((fields == null)) {\n      throw new Error(`Unknown version ${val.version}`);\n    }\n\n    for (key in fields) {\n      type = fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let key, type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    if (typeof this.type !== 'string') {\n      this.type.encode(stream, val.version);\n    }\n\n    if (this.versions.header) {\n      for (key in this.versions.header) {\n        type = this.versions.header[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n    }\n\n    const fields = this.versions[val.version];\n    for (key in fields) {\n      type = fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n","import * as utils from './utils.js';\nimport {Base} from './Base.js';\n\nexport class Pointer extends Base {\n  constructor(offsetType, type, options = {}) {\n    super();\n    this.offsetType = offsetType;\n    this.type = type;\n    this.options = options;\n    if (this.type === 'void') { this.type = null; }\n    if (this.options.type == null) { this.options.type = 'local'; }\n    if (this.options.allowNull == null) { this.options.allowNull = true; }\n    if (this.options.nullValue == null) { this.options.nullValue = 0; }\n    if (this.options.lazy == null) { this.options.lazy = false; }\n    if (this.options.relativeTo) {\n      if (typeof this.options.relativeTo !== 'function') {\n        throw new Error('relativeTo option must be a function');\n      }\n      this.relativeToGetter = options.relativeTo;\n    }\n  }\n\n  decode(stream, ctx) {\n    const offset = this.offsetType.decode(stream, ctx);\n\n    // handle NULL pointers\n    if ((offset === this.options.nullValue) && this.options.allowNull) {\n      return null;\n    }\n\n    let relative;\n    switch (this.options.type) {\n      case 'local':     relative = ctx._startOffset; break;\n      case 'immediate': relative = stream.pos - this.offsetType.size(); break;\n      case 'parent':    relative = ctx.parent._startOffset; break;\n      default:\n        var c = ctx;\n        while (c.parent) {\n          c = c.parent;\n        }\n\n        relative = c._startOffset || 0;\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(ctx);\n    }\n\n    const ptr = offset + relative;\n\n    if (this.type != null) {\n      let val = null;\n      const decodeValue = () => {\n        if (val != null) { return val; }\n\n        const { pos } = stream;\n        stream.pos = ptr;\n        val = this.type.decode(stream, ctx);\n        stream.pos = pos;\n        return val;\n      };\n\n      // If this is a lazy pointer, define a getter to decode only when needed.\n      // This obviously only works when the pointer is contained by a Struct.\n      if (this.options.lazy) {\n        return new utils.PropertyDescriptor({\n          get: decodeValue});\n      }\n\n      return decodeValue();\n    } else {\n      return ptr;\n    }\n  }\n\n  size(val, ctx) {\n    const parent = ctx;\n    switch (this.options.type) {\n      case 'local': case 'immediate':\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        break;\n      default: // global\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    if (val && ctx) {\n      // Must be written as two separate lines rather than += in case `type.size` mutates ctx.pointerSize.\n      let size = type.size(val, parent);\n      ctx.pointerSize += size;\n    }\n\n    return this.offsetType.size();\n  }\n\n  encode(stream, val, ctx) {\n    let relative;\n    const parent = ctx;\n    if ((val == null)) {\n      this.offsetType.encode(stream, this.options.nullValue);\n      return;\n    }\n\n    switch (this.options.type) {\n      case 'local':\n        relative = ctx.startOffset;\n        break;\n      case 'immediate':\n        relative = stream.pos + this.offsetType.size(val, parent);\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        relative = ctx.startOffset;\n        break;\n      default: // global\n        relative = 0;\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(parent.val);\n    }\n\n    this.offsetType.encode(stream, ctx.pointerOffset - relative);\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    ctx.pointers.push({\n      type,\n      val,\n      parent\n    });\n\n    return ctx.pointerOffset += type.size(val, parent);\n  }\n}\n\n// A pointer whose type is determined at decode time\nexport class VoidPointer {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n","module.exports = require(\"legacy-swc-helpers/lib/_define_property.js\")","module.exports = require(\"legacy-swc-helpers/lib/_ts_decorate.js\")","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import $bdjGp$base64js from \"base64-js\";\nimport $bdjGp$unicodetrie from \"unicode-trie\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n\nvar $f4087201da764553$exports = {};\n$f4087201da764553$exports = JSON.parse('{\"categories\":[\"Cc\",\"Zs\",\"Po\",\"Sc\",\"Ps\",\"Pe\",\"Sm\",\"Pd\",\"Nd\",\"Lu\",\"Sk\",\"Pc\",\"Ll\",\"So\",\"Lo\",\"Pi\",\"Cf\",\"No\",\"Pf\",\"Lt\",\"Lm\",\"Mn\",\"Me\",\"Mc\",\"Nl\",\"Zl\",\"Zp\",\"Cs\",\"Co\"],\"combiningClasses\":[\"Not_Reordered\",\"Above\",\"Above_Right\",\"Below\",\"Attached_Above_Right\",\"Attached_Below\",\"Overlay\",\"Iota_Subscript\",\"Double_Below\",\"Double_Above\",\"Below_Right\",\"Above_Left\",\"CCC10\",\"CCC11\",\"CCC12\",\"CCC13\",\"CCC14\",\"CCC15\",\"CCC16\",\"CCC17\",\"CCC18\",\"CCC19\",\"CCC20\",\"CCC21\",\"CCC22\",\"CCC23\",\"CCC24\",\"CCC25\",\"CCC30\",\"CCC31\",\"CCC32\",\"CCC27\",\"CCC28\",\"CCC29\",\"CCC33\",\"CCC34\",\"CCC35\",\"CCC36\",\"Nukta\",\"Virama\",\"CCC84\",\"CCC91\",\"CCC103\",\"CCC107\",\"CCC118\",\"CCC122\",\"CCC129\",\"CCC130\",\"CCC132\",\"Attached_Above\",\"Below_Left\",\"Left\",\"Kana_Voicing\",\"CCC26\",\"Right\"],\"scripts\":[\"Common\",\"Latin\",\"Bopomofo\",\"Inherited\",\"Greek\",\"Coptic\",\"Cyrillic\",\"Armenian\",\"Hebrew\",\"Arabic\",\"Syriac\",\"Thaana\",\"Nko\",\"Samaritan\",\"Mandaic\",\"Devanagari\",\"Bengali\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhala\",\"Thai\",\"Lao\",\"Tibetan\",\"Myanmar\",\"Georgian\",\"Hangul\",\"Ethiopic\",\"Cherokee\",\"Canadian_Aboriginal\",\"Ogham\",\"Runic\",\"Tagalog\",\"Hanunoo\",\"Buhid\",\"Tagbanwa\",\"Khmer\",\"Mongolian\",\"Limbu\",\"Tai_Le\",\"New_Tai_Lue\",\"Buginese\",\"Tai_Tham\",\"Balinese\",\"Sundanese\",\"Batak\",\"Lepcha\",\"Ol_Chiki\",\"Braille\",\"Glagolitic\",\"Tifinagh\",\"Han\",\"Hiragana\",\"Katakana\",\"Yi\",\"Lisu\",\"Vai\",\"Bamum\",\"Syloti_Nagri\",\"Phags_Pa\",\"Saurashtra\",\"Kayah_Li\",\"Rejang\",\"Javanese\",\"Cham\",\"Tai_Viet\",\"Meetei_Mayek\",\"null\",\"Linear_B\",\"Lycian\",\"Carian\",\"Old_Italic\",\"Gothic\",\"Old_Permic\",\"Ugaritic\",\"Old_Persian\",\"Deseret\",\"Shavian\",\"Osmanya\",\"Osage\",\"Elbasan\",\"Caucasian_Albanian\",\"Linear_A\",\"Cypriot\",\"Imperial_Aramaic\",\"Palmyrene\",\"Nabataean\",\"Hatran\",\"Phoenician\",\"Lydian\",\"Meroitic_Hieroglyphs\",\"Meroitic_Cursive\",\"Kharoshthi\",\"Old_South_Arabian\",\"Old_North_Arabian\",\"Manichaean\",\"Avestan\",\"Inscriptional_Parthian\",\"Inscriptional_Pahlavi\",\"Psalter_Pahlavi\",\"Old_Turkic\",\"Old_Hungarian\",\"Hanifi_Rohingya\",\"Old_Sogdian\",\"Sogdian\",\"Elymaic\",\"Brahmi\",\"Kaithi\",\"Sora_Sompeng\",\"Chakma\",\"Mahajani\",\"Sharada\",\"Khojki\",\"Multani\",\"Khudawadi\",\"Grantha\",\"Newa\",\"Tirhuta\",\"Siddham\",\"Modi\",\"Takri\",\"Ahom\",\"Dogra\",\"Warang_Citi\",\"Nandinagari\",\"Zanabazar_Square\",\"Soyombo\",\"Pau_Cin_Hau\",\"Bhaiksuki\",\"Marchen\",\"Masaram_Gondi\",\"Gunjala_Gondi\",\"Makasar\",\"Cuneiform\",\"Egyptian_Hieroglyphs\",\"Anatolian_Hieroglyphs\",\"Mro\",\"Bassa_Vah\",\"Pahawh_Hmong\",\"Medefaidrin\",\"Miao\",\"Tangut\",\"Nushu\",\"Duployan\",\"SignWriting\",\"Nyiakeng_Puachue_Hmong\",\"Wancho\",\"Mende_Kikakui\",\"Adlam\"],\"eaw\":[\"N\",\"Na\",\"A\",\"W\",\"H\",\"F\"]}');\n\n\nconst $747425b437e121da$var$trie = new (0, $bdjGp$unicodetrie)((0, $bdjGp$base64js).toByteArray(\"\"));\nconst $747425b437e121da$var$log2 = Math.log2 || ((n)=>Math.log(n) / Math.LN2);\nconst $747425b437e121da$var$bits = (n)=>$747425b437e121da$var$log2(n) + 1 | 0;\n// compute the number of bits stored for each field\nconst $747425b437e121da$var$CATEGORY_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).categories.length - 1);\nconst $747425b437e121da$var$COMBINING_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).combiningClasses.length - 1);\nconst $747425b437e121da$var$SCRIPT_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).scripts.length - 1);\nconst $747425b437e121da$var$EAW_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).eaw.length - 1);\nconst $747425b437e121da$var$NUMBER_BITS = 10;\n// compute shift and mask values for each field\nconst $747425b437e121da$var$CATEGORY_SHIFT = $747425b437e121da$var$COMBINING_BITS + $747425b437e121da$var$SCRIPT_BITS + $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;\nconst $747425b437e121da$var$COMBINING_SHIFT = $747425b437e121da$var$SCRIPT_BITS + $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;\nconst $747425b437e121da$var$SCRIPT_SHIFT = $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;\nconst $747425b437e121da$var$EAW_SHIFT = $747425b437e121da$var$NUMBER_BITS;\nconst $747425b437e121da$var$CATEGORY_MASK = (1 << $747425b437e121da$var$CATEGORY_BITS) - 1;\nconst $747425b437e121da$var$COMBINING_MASK = (1 << $747425b437e121da$var$COMBINING_BITS) - 1;\nconst $747425b437e121da$var$SCRIPT_MASK = (1 << $747425b437e121da$var$SCRIPT_BITS) - 1;\nconst $747425b437e121da$var$EAW_MASK = (1 << $747425b437e121da$var$EAW_BITS) - 1;\nconst $747425b437e121da$var$NUMBER_MASK = (1 << $747425b437e121da$var$NUMBER_BITS) - 1;\nfunction $747425b437e121da$export$410364bbb673ddbc(codePoint) {\n    const val = $747425b437e121da$var$trie.get(codePoint);\n    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).categories[val >> $747425b437e121da$var$CATEGORY_SHIFT & $747425b437e121da$var$CATEGORY_MASK];\n}\nfunction $747425b437e121da$export$c03b919c6651ed55(codePoint) {\n    const val = $747425b437e121da$var$trie.get(codePoint);\n    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).combiningClasses[val >> $747425b437e121da$var$COMBINING_SHIFT & $747425b437e121da$var$COMBINING_MASK];\n}\nfunction $747425b437e121da$export$941569448d136665(codePoint) {\n    const val = $747425b437e121da$var$trie.get(codePoint);\n    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).scripts[val >> $747425b437e121da$var$SCRIPT_SHIFT & $747425b437e121da$var$SCRIPT_MASK];\n}\nfunction $747425b437e121da$export$92f6187db8ca6d26(codePoint) {\n    const val = $747425b437e121da$var$trie.get(codePoint);\n    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).eaw[val >> $747425b437e121da$var$EAW_SHIFT & $747425b437e121da$var$EAW_MASK];\n}\nfunction $747425b437e121da$export$7d1258ebb7625a0d(codePoint) {\n    let val = $747425b437e121da$var$trie.get(codePoint);\n    let num = val & $747425b437e121da$var$NUMBER_MASK;\n    if (num === 0) return null;\n    else if (num <= 50) return num - 1;\n    else if (num < 0x1e0) {\n        const numerator = (num >> 4) - 12;\n        const denominator = (num & 0xf) + 1;\n        return numerator / denominator;\n    } else if (num < 0x300) {\n        val = (num >> 5) - 14;\n        let exp = (num & 0x1f) + 2;\n        while(exp > 0){\n            val *= 10;\n            exp--;\n        }\n        return val;\n    } else {\n        val = (num >> 2) - 0xbf;\n        let exp = (num & 3) + 1;\n        while(exp > 0){\n            val *= 60;\n            exp--;\n        }\n        return val;\n    }\n}\nfunction $747425b437e121da$export$52c8ea63abd07594(codePoint) {\n    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);\n    return category === \"Lu\" || category === \"Ll\" || category === \"Lt\" || category === \"Lm\" || category === \"Lo\" || category === \"Nl\";\n}\nfunction $747425b437e121da$export$727d9dbc4fbb948f(codePoint) {\n    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === \"Nd\";\n}\nfunction $747425b437e121da$export$a5b49f4dc6a07d2c(codePoint) {\n    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);\n    return category === \"Pc\" || category === \"Pd\" || category === \"Pe\" || category === \"Pf\" || category === \"Pi\" || category === \"Po\" || category === \"Ps\";\n}\nfunction $747425b437e121da$export$7b6804e8df61fcf5(codePoint) {\n    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === \"Ll\";\n}\nfunction $747425b437e121da$export$aebd617640818cda(codePoint) {\n    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === \"Lu\";\n}\nfunction $747425b437e121da$export$de8b4ee23b2cf823(codePoint) {\n    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === \"Lt\";\n}\nfunction $747425b437e121da$export$3c52dd84024ae72c(codePoint) {\n    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);\n    return category === \"Zs\" || category === \"Zl\" || category === \"Zp\";\n}\nfunction $747425b437e121da$export$a11bdcffe109e74b(codePoint) {\n    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);\n    return category === \"Nd\" || category === \"No\" || category === \"Nl\" || category === \"Lu\" || category === \"Ll\" || category === \"Lt\" || category === \"Lm\" || category === \"Lo\" || category === \"Me\" || category === \"Mc\";\n}\nfunction $747425b437e121da$export$e33ad6871e762338(codePoint) {\n    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);\n    return category === \"Mn\" || category === \"Me\" || category === \"Mc\";\n}\nvar // Backwards compatibility.\n$747425b437e121da$export$2e2bcd8739ae039 = {\n    getCategory: $747425b437e121da$export$410364bbb673ddbc,\n    getCombiningClass: $747425b437e121da$export$c03b919c6651ed55,\n    getScript: $747425b437e121da$export$941569448d136665,\n    getEastAsianWidth: $747425b437e121da$export$92f6187db8ca6d26,\n    getNumericValue: $747425b437e121da$export$7d1258ebb7625a0d,\n    isAlphabetic: $747425b437e121da$export$52c8ea63abd07594,\n    isDigit: $747425b437e121da$export$727d9dbc4fbb948f,\n    isPunctuation: $747425b437e121da$export$a5b49f4dc6a07d2c,\n    isLowerCase: $747425b437e121da$export$7b6804e8df61fcf5,\n    isUpperCase: $747425b437e121da$export$aebd617640818cda,\n    isTitleCase: $747425b437e121da$export$de8b4ee23b2cf823,\n    isWhiteSpace: $747425b437e121da$export$3c52dd84024ae72c,\n    isBaseForm: $747425b437e121da$export$a11bdcffe109e74b,\n    isMark: $747425b437e121da$export$e33ad6871e762338\n};\n\n\nexport {$747425b437e121da$export$410364bbb673ddbc as getCategory, $747425b437e121da$export$c03b919c6651ed55 as getCombiningClass, $747425b437e121da$export$941569448d136665 as getScript, $747425b437e121da$export$92f6187db8ca6d26 as getEastAsianWidth, $747425b437e121da$export$7d1258ebb7625a0d as getNumericValue, $747425b437e121da$export$52c8ea63abd07594 as isAlphabetic, $747425b437e121da$export$727d9dbc4fbb948f as isDigit, $747425b437e121da$export$a5b49f4dc6a07d2c as isPunctuation, $747425b437e121da$export$7b6804e8df61fcf5 as isLowerCase, $747425b437e121da$export$aebd617640818cda as isUpperCase, $747425b437e121da$export$de8b4ee23b2cf823 as isTitleCase, $747425b437e121da$export$3c52dd84024ae72c as isWhiteSpace, $747425b437e121da$export$a11bdcffe109e74b as isBaseForm, $747425b437e121da$export$e33ad6871e762338 as isMark, $747425b437e121da$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=module.mjs.map\n","import base64 from 'base64-js';\nimport UnicodeTrie from 'unicode-trie';\nimport data from './data.json';\n\nconst trie = new UnicodeTrie(base64.toByteArray(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\n\nconst log2 = Math.log2 || (n => Math.log(n) / Math.LN2);\nconst bits = (n) => ((log2(n) + 1) | 0);\n\n// compute the number of bits stored for each field\nconst CATEGORY_BITS = bits(data.categories.length - 1);\nconst COMBINING_BITS = bits(data.combiningClasses.length - 1);\nconst SCRIPT_BITS = bits(data.scripts.length - 1);\nconst EAW_BITS = bits(data.eaw.length - 1);\nconst NUMBER_BITS = 10;\n\n// compute shift and mask values for each field\nconst CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nconst SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\nconst EAW_SHIFT = NUMBER_BITS;\nconst CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\nconst COMBINING_MASK = (1 << COMBINING_BITS) - 1;\nconst SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\nconst EAW_MASK = (1 << EAW_BITS) - 1;\nconst NUMBER_MASK = (1 << NUMBER_BITS) - 1;\n\nexport function getCategory(codePoint) {\n  const val = trie.get(codePoint);\n  return data.categories[(val >> CATEGORY_SHIFT) & CATEGORY_MASK];\n}\n\nexport function getCombiningClass(codePoint) {\n  const val = trie.get(codePoint);\n  return data.combiningClasses[(val >> COMBINING_SHIFT) & COMBINING_MASK];\n}\n\nexport function getScript(codePoint) {\n  const val = trie.get(codePoint);\n  return data.scripts[(val >> SCRIPT_SHIFT) & SCRIPT_MASK];\n}\n\nexport function getEastAsianWidth(codePoint) {\n  const val = trie.get(codePoint);\n  return data.eaw[(val >> EAW_SHIFT) & EAW_MASK];\n}\n\nexport function getNumericValue(codePoint) {\n  let val = trie.get(codePoint);\n  let num = val & NUMBER_MASK;\n\n  if (num === 0) {\n    return null;\n  } else if (num <= 50) {\n    return num - 1;\n  } else if (num < 0x1e0) {\n    const numerator = (num >> 4) - 12;\n    const denominator = (num & 0xf) + 1;\n    return numerator / denominator;\n  } else if (num < 0x300) {\n    val = (num >> 5) - 14;\n    let exp = (num & 0x1f) + 2;\n\n    while (exp > 0) {\n      val *= 10;\n      exp--;\n    }\n    return val;\n  } else {\n    val = (num >> 2) - 0xbf;\n    let exp = (num & 3) + 1;\n    while (exp > 0) {\n      val *= 60;\n      exp--;\n    }\n    return val;\n  }\n}\n\nexport function isAlphabetic(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Nl'\n  )\n}\n\nexport function isDigit(codePoint) {\n  return getCategory(codePoint) === 'Nd'\n}\n\nexport function isPunctuation(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Pc' ||\n    category === 'Pd' ||\n    category === 'Pe' ||\n    category === 'Pf' ||\n    category === 'Pi' ||\n    category === 'Po' ||\n    category === 'Ps'\n  );\n}\n\nexport function isLowerCase(codePoint) {\n  return getCategory(codePoint) === 'Ll';\n}\n\nexport function isUpperCase(codePoint) {\n  return getCategory(codePoint) === 'Lu'\n}\n\nexport function isTitleCase(codePoint) {\n  return getCategory(codePoint) === 'Lt'\n}\n\nexport function isWhiteSpace(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Zs' ||\n    category === 'Zl' ||\n    category === 'Zp'\n  );\n}\n\nexport function isBaseForm(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Nd' ||\n    category === 'No' ||\n    category === 'Nl' ||\n    category === 'Lu' ||\n    category === 'Ll' ||\n    category === 'Lt' ||\n    category === 'Lm' ||\n    category === 'Lo' ||\n    category === 'Me' ||\n    category === 'Mc'\n  )\n}\n\nexport function isMark(codePoint) {\n  const category = getCategory(codePoint);\n  return (\n    category === 'Mn' ||\n    category === 'Me' ||\n    category === 'Mc'\n  );\n}\n\n// Backwards compatibility.\nexport default {\n  getCategory,\n  getCombiningClass,\n  getScript,\n  getEastAsianWidth,\n  getNumericValue,\n  isAlphabetic,\n  isDigit,\n  isPunctuation,\n  isLowerCase,\n  isUpperCase,\n  isTitleCase,\n  isWhiteSpace,\n  isBaseForm,\n  isMark\n};\n","{\"categories\":[\"Cc\",\"Zs\",\"Po\",\"Sc\",\"Ps\",\"Pe\",\"Sm\",\"Pd\",\"Nd\",\"Lu\",\"Sk\",\"Pc\",\"Ll\",\"So\",\"Lo\",\"Pi\",\"Cf\",\"No\",\"Pf\",\"Lt\",\"Lm\",\"Mn\",\"Me\",\"Mc\",\"Nl\",\"Zl\",\"Zp\",\"Cs\",\"Co\"],\"combiningClasses\":[\"Not_Reordered\",\"Above\",\"Above_Right\",\"Below\",\"Attached_Above_Right\",\"Attached_Below\",\"Overlay\",\"Iota_Subscript\",\"Double_Below\",\"Double_Above\",\"Below_Right\",\"Above_Left\",\"CCC10\",\"CCC11\",\"CCC12\",\"CCC13\",\"CCC14\",\"CCC15\",\"CCC16\",\"CCC17\",\"CCC18\",\"CCC19\",\"CCC20\",\"CCC21\",\"CCC22\",\"CCC23\",\"CCC24\",\"CCC25\",\"CCC30\",\"CCC31\",\"CCC32\",\"CCC27\",\"CCC28\",\"CCC29\",\"CCC33\",\"CCC34\",\"CCC35\",\"CCC36\",\"Nukta\",\"Virama\",\"CCC84\",\"CCC91\",\"CCC103\",\"CCC107\",\"CCC118\",\"CCC122\",\"CCC129\",\"CCC130\",\"CCC132\",\"Attached_Above\",\"Below_Left\",\"Left\",\"Kana_Voicing\",\"CCC26\",\"Right\"],\"scripts\":[\"Common\",\"Latin\",\"Bopomofo\",\"Inherited\",\"Greek\",\"Coptic\",\"Cyrillic\",\"Armenian\",\"Hebrew\",\"Arabic\",\"Syriac\",\"Thaana\",\"Nko\",\"Samaritan\",\"Mandaic\",\"Devanagari\",\"Bengali\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhala\",\"Thai\",\"Lao\",\"Tibetan\",\"Myanmar\",\"Georgian\",\"Hangul\",\"Ethiopic\",\"Cherokee\",\"Canadian_Aboriginal\",\"Ogham\",\"Runic\",\"Tagalog\",\"Hanunoo\",\"Buhid\",\"Tagbanwa\",\"Khmer\",\"Mongolian\",\"Limbu\",\"Tai_Le\",\"New_Tai_Lue\",\"Buginese\",\"Tai_Tham\",\"Balinese\",\"Sundanese\",\"Batak\",\"Lepcha\",\"Ol_Chiki\",\"Braille\",\"Glagolitic\",\"Tifinagh\",\"Han\",\"Hiragana\",\"Katakana\",\"Yi\",\"Lisu\",\"Vai\",\"Bamum\",\"Syloti_Nagri\",\"Phags_Pa\",\"Saurashtra\",\"Kayah_Li\",\"Rejang\",\"Javanese\",\"Cham\",\"Tai_Viet\",\"Meetei_Mayek\",\"null\",\"Linear_B\",\"Lycian\",\"Carian\",\"Old_Italic\",\"Gothic\",\"Old_Permic\",\"Ugaritic\",\"Old_Persian\",\"Deseret\",\"Shavian\",\"Osmanya\",\"Osage\",\"Elbasan\",\"Caucasian_Albanian\",\"Linear_A\",\"Cypriot\",\"Imperial_Aramaic\",\"Palmyrene\",\"Nabataean\",\"Hatran\",\"Phoenician\",\"Lydian\",\"Meroitic_Hieroglyphs\",\"Meroitic_Cursive\",\"Kharoshthi\",\"Old_South_Arabian\",\"Old_North_Arabian\",\"Manichaean\",\"Avestan\",\"Inscriptional_Parthian\",\"Inscriptional_Pahlavi\",\"Psalter_Pahlavi\",\"Old_Turkic\",\"Old_Hungarian\",\"Hanifi_Rohingya\",\"Old_Sogdian\",\"Sogdian\",\"Elymaic\",\"Brahmi\",\"Kaithi\",\"Sora_Sompeng\",\"Chakma\",\"Mahajani\",\"Sharada\",\"Khojki\",\"Multani\",\"Khudawadi\",\"Grantha\",\"Newa\",\"Tirhuta\",\"Siddham\",\"Modi\",\"Takri\",\"Ahom\",\"Dogra\",\"Warang_Citi\",\"Nandinagari\",\"Zanabazar_Square\",\"Soyombo\",\"Pau_Cin_Hau\",\"Bhaiksuki\",\"Marchen\",\"Masaram_Gondi\",\"Gunjala_Gondi\",\"Makasar\",\"Cuneiform\",\"Egyptian_Hieroglyphs\",\"Anatolian_Hieroglyphs\",\"Mro\",\"Bassa_Vah\",\"Pahawh_Hmong\",\"Medefaidrin\",\"Miao\",\"Tangut\",\"Nushu\",\"Duployan\",\"SignWriting\",\"Nyiakeng_Puachue_Hmong\",\"Wancho\",\"Mende_Kikakui\",\"Adlam\"],\"eaw\":[\"N\",\"Na\",\"A\",\"W\",\"H\",\"F\"]}","const inflate = require('tiny-inflate');\nconst { swap32LE } = require('./swap');\n\n// Shift size for getting the index-1 table offset.\nconst SHIFT_1 = 6 + 5;\n\n// Shift size for getting the index-2 table offset.\nconst SHIFT_2 = 5;\n\n// Difference between the two shift sizes,\n// for getting an index-1 offset from an index-2 offset. 6=11-5\nconst SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n// Number of index-1 entries for the BMP. 32=0x20\n// This part of the index-1 table is omitted from the serialized form.\nconst OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n// Number of entries in an index-2 block. 64=0x40\nconst INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n// Mask for getting the lower bits for the in-index-2-block offset. */\nconst INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n// Shift size for shifting left the index array values.\n// Increases possible data size with 16-bit index values at the cost\n// of compactability.\n// This requires data blocks to be aligned by DATA_GRANULARITY.\nconst INDEX_SHIFT = 2;\n\n// Number of entries in a data block. 32=0x20\nconst DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n// Mask for getting the lower bits for the in-data-block offset.\nconst DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n// The part of the index-2 table for U+D800..U+DBFF stores values for\n// lead surrogate code _units_ not code _points_.\n// Values for lead surrogate code _points_ are indexed with this portion of the table.\n// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)\nconst LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\nconst LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n// Count the lengths of both BMP pieces. 2080=0x820\nconst INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.\nconst UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\nconst UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;  // U+0800 is the first code point after 2-byte UTF-8\n\n// The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n// Variable length, for code points up to highStart, where the last single-value range starts.\n// Maximum length 512=0x200=0x100000>>SHIFT_1.\n// (For 0x100000 supplementary code points U+10000..U+10ffff.)\n//\n// The part of the index-2 table for supplementary code points starts\n// after this index-1 table.\n//\n// Both the index-1 table and the following part of the index-2 table\n// are omitted completely if there is only BMP data.\nconst INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n// The alignment size of a data block. Also the granularity for compaction.\nconst DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\nclass UnicodeTrie {\n  constructor(data) {\n    const isBuffer = (typeof data.readUInt32BE === 'function') && (typeof data.slice === 'function');\n\n    if (isBuffer || data instanceof Uint8Array) {\n      // read binary format\n      let uncompressedLength;\n      if (isBuffer) {\n        this.highStart = data.readUInt32LE(0);\n        this.errorValue = data.readUInt32LE(4);\n        uncompressedLength = data.readUInt32LE(8);\n        data = data.slice(12);\n      } else {\n        const view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0, true);\n        this.errorValue = view.getUint32(4, true);\n        uncompressedLength = view.getUint32(8, true);\n        data = data.subarray(12);\n      }\n\n      // double inflate the actual trie data\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n\n      // swap bytes from little-endian\n      swap32LE(data);\n\n      this.data = new Uint32Array(data.buffer);\n\n    } else {\n      // pre-parsed data\n      ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);\n    }\n  }\n\n  get(codePoint) {\n    let index;\n    if ((codePoint < 0) || (codePoint > 0x10ffff)) {\n      return this.errorValue;\n    }\n\n    if ((codePoint < 0xd800) || ((codePoint > 0xdbff) && (codePoint <= 0xffff))) {\n      // Ordinary BMP code point, excluding leading surrogates.\n      // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.\n      // data is stored in the index array itself.\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint <= 0xffff) {\n      // Lead Surrogate Code Point.  A Separate index section is stored for\n      // lead surrogate code units and code points.\n      //   The main index has the code unit data.\n      //   For this function, we need the code point data.\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint < this.highStart) {\n      // Supplemental code point, use two-level lookup.\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    return this.data[this.data.length - DATA_GRANULARITY];\n  }\n}\n\nmodule.exports = UnicodeTrie;","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n","'use strict';\n\nvar INITIAL_STATE = 1;\nvar FAIL_STATE = 0;\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\n\nclass StateMachine {\n  constructor(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n\n\n  match(str) {\n    var self = this;\n    return {\n      *[Symbol.iterator]() {\n        var state = INITIAL_STATE;\n        var startRun = null;\n        var lastAccepting = null;\n        var lastState = null;\n\n        for (var p = 0; p < str.length; p++) {\n          var c = str[p];\n          lastState = state;\n          state = self.stateTable[state][c];\n\n          if (state === FAIL_STATE) {\n            // yield the last match if any\n            if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n              yield [startRun, lastAccepting, self.tags[lastState]];\n            } // reset the state as if we started over from the initial state\n\n\n            state = self.stateTable[INITIAL_STATE][c];\n            startRun = null;\n          } // start a run if not in the failure state\n\n\n          if (state !== FAIL_STATE && startRun == null) {\n            startRun = p;\n          } // if accepting, mark the potential match end\n\n\n          if (self.accepting[state]) {\n            lastAccepting = p;\n          } // reset the state to the initial state if we get into the failure state\n\n\n          if (state === FAIL_STATE) {\n            state = INITIAL_STATE;\n          }\n        } // yield the last match if any\n\n\n        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n          yield [startRun, lastAccepting, self.tags[state]];\n        }\n      }\n\n    };\n  }\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */\n\n\n  apply(str, actions) {\n    for (var [start, end, tags] of this.match(str)) {\n      for (var tag of tags) {\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = StateMachine;\n//# sourceMappingURL=index.js.map\n","const INITIAL_STATE = 1;\nconst FAIL_STATE = 0;\n\n/**\n * A StateMachine represents a deterministic finite automaton.\n * It can perform matches over a sequence of values, similar to a regular expression.\n */\nexport default class StateMachine {\n  constructor(dfa) {\n    this.stateTable = dfa.stateTable;\n    this.accepting = dfa.accepting;\n    this.tags = dfa.tags;\n  }\n\n  /**\n   * Returns an iterable object that yields pattern matches over the input sequence.\n   * Matches are of the form [startIndex, endIndex, tags].\n   */\n  match(str) {\n    let self = this;\n    return {\n      *[Symbol.iterator]() {\n        let state = INITIAL_STATE;\n        let startRun = null;\n        let lastAccepting = null;\n        let lastState = null;\n\n        for (let p = 0; p < str.length; p++) {\n          let c = str[p];\n\n          lastState = state;\n          state = self.stateTable[state][c];\n\n          if (state === FAIL_STATE) {\n            // yield the last match if any\n            if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n              yield [startRun, lastAccepting, self.tags[lastState]];\n            }\n\n            // reset the state as if we started over from the initial state\n            state = self.stateTable[INITIAL_STATE][c];\n            startRun = null;\n          }\n\n          // start a run if not in the failure state\n          if (state !== FAIL_STATE && startRun == null) {\n            startRun = p;\n          }\n\n          // if accepting, mark the potential match end\n          if (self.accepting[state]) {\n            lastAccepting = p;\n          }\n\n          // reset the state to the initial state if we get into the failure state\n          if (state === FAIL_STATE) {\n            state = INITIAL_STATE;\n          }\n        }\n\n        // yield the last match if any\n        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {\n          yield [startRun, lastAccepting, self.tags[state]];\n        }\n      }\n    };\n  }\n\n  /**\n   * For each match over the input sequence, action functions matching\n   * the tag definitions in the input pattern are called with the startIndex,\n   * endIndex, and sub-match sequence.\n   */\n  apply(str, actions) {\n    for (let [start, end, tags] of this.match(str)) {\n      for (let tag of tags) {\n        if (typeof actions[tag] === 'function') {\n          actions[tag](start, end, str.slice(start, end + 1));\n        }\n      }\n    }\n  }\n}\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","module.exports = require('./dec/decode').BrotliDecompressBuffer;\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$81d573d37fc80f93$export$6100ba28696e12de","$6af26b3c18711748$export$aafa59e2e03f2942","$6af26b3c18711748$export$68d8715fc104d294","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$acfb5712519b8b56$var$_defineProperty","obj","key","value","writable","$7WQrb","__decorate","$5c96a02c592fcff1$export$29e00dfd3077644b","decorators","target","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","SuppressedError","$ee7f3d40128f729f$export$9840689580eff2f0","$j5sEj","$ee7f3d40128f729f$require$BrotliInput","BrotliInput","$ee7f3d40128f729f$require$BrotliOutput","BrotliOutput","$8JSYM","$fo1rr","$kls9x","$ee7f3d40128f729f$require$HuffmanCode","HuffmanCode","$ee7f3d40128f729f$require$BrotliBuildHuffmanTable","BrotliBuildHuffmanTable","$hX8C6","$7aaiK","$4zIc9","$ee7f3d40128f729f$var$kCodeLengthCodeOrder","Uint8Array","$ee7f3d40128f729f$var$kDistanceShortCodeIndexOffset","$ee7f3d40128f729f$var$kDistanceShortCodeValueOffset","Int8Array","$ee7f3d40128f729f$var$kMaxHuffmanTableSize","Uint16Array","$ee7f3d40128f729f$var$DecodeWindowBits","br","readBits","$ee7f3d40128f729f$var$DecodeVarLenUint8","nbits","$ee7f3d40128f729f$var$MetaBlockLength","meta_block_length","input_end","is_uncompressed","is_metadata","$ee7f3d40128f729f$var$DecodeMetaBlockLength","size_nibbles","size_bytes","out","next_byte","next_nibble","$ee7f3d40128f729f$var$ReadSymbol","table","index","fillBitWindow","val_","bit_pos_","bits","$ee7f3d40128f729f$var$ReadHuffmanCode","alphabet_size","tables","table_size","code_lengths","readMoreInput","simple_code_or_skip","max_bits_counter","max_bits","symbols","Int32Array","num_symbols","code_length_code_lengths","space","num_codes","huff","code_len_idx","p","$ee7f3d40128f729f$var$ReadHuffmanCodeLengths","symbol","prev_code_len","repeat","repeat_code_len","push","code_len","old_repeat","repeat_delta","extra_bits","new_len","x","$ee7f3d40128f729f$var$ReadBlockLength","kBlockLengthPrefixCode","offset","$ee7f3d40128f729f$var$HuffmanTreeGroup","num_htrees","codes","Array","htrees","Uint32Array","$ee7f3d40128f729f$var$DecodeContextMap","context_map_size","context_map","max_run_length_prefix","reps","$ee7f3d40128f729f$var$InverseMoveToFrontTransform","v_len","mtf","$ee7f3d40128f729f$var$MoveToFront","$ee7f3d40128f729f$var$DecodeBlockType","max_block_type","trees","tree_type","block_types","ringbuffers","indexes","block_type","ringbuffer","type_code","prototype","decode","next","buffer","output_size","input","output_buffer","output","$ee7f3d40128f729f$var$BrotliDecompress","pos","window_bits","max_distance","dist_rb","dist_rb_idx","prev_byte1","prev_byte2","hgroup","kRingBufferWriteAheadSlack","READ_SIZE","max_backward_distance","ringbuffer_mask","ringbuffer_size","maxDictionaryWordLength","block_type_trees","block_len_trees","meta_block_remaining_len","block_length","num_block_types","block_type_rb","block_type_rb_index","context_modes","dist_context_map","context_map_slice","literal_htree_index","dist_context_map_slice","dist_htree_index","context_lookup_offset1","context_lookup_offset2","_out","tmp","$ee7f3d40128f729f$var$JumpToByteBoundary","new_bit_pos","$ee7f3d40128f729f$var$CopyUncompressedBlockToOutput","len","nbytes","rb_size","rb_pos","br_pos","pos_","IBUF_MASK","bit_end_pos_","write","tail","buf_","input_","read","reset","distance_postfix_bits","num_direct_distance_codes","$ee7f3d40128f729f$var$NUM_DISTANCE_SHORT_CODES","distance_postfix_mask","num_distance_codes","_o1","num_literal_htrees","_o2","num_dist_htrees","context_mode","lookupOffsets","htree_command","range_idx","cmd_code","distance_code","insert_code","kInsertRangeLut","copy_code","kCopyRangeLut","insert_length","kInsertLengthPrefixCode","copy_length","kCopyLengthPrefixCode","j","lookup","postfix","distance","$ee7f3d40128f729f$var$TranslateShortCodes","val","copy_dst","minDictionaryWordLength","offsetsByLength","word_id","shift","sizeBitsByLength","word_idx","transform_idx","kNumTransforms","transformDictionaryWord","_x","ringbuffer_end","subarray","$de54b50f360309a7$export$a450e20310cb640a","$de54b50f360309a7$export$29d67bcb1d627ed0","$de54b50f360309a7$var$BrotliInput","$de54b50f360309a7$var$BrotliOutput","buf","count","$65cd2c782f23ca03$var$kBitMask","$65cd2c782f23ca03$var$BrotliBitReader","buf_ptr_","eos_","dst","bytes_read","$65cd2c782f23ca03$var$BROTLI_READ_SIZE","n_bits","$b33a37285e850206$export$2cd8252107eb640b","$b33a37285e850206$export$d3757880ed390b62","$b33a37285e850206$export$a94670ba663785a0","$b33a37285e850206$export$149ef025c336056f","$b33a37285e850206$export$66b25e7ba93e8824","$b33a37285e850206$export$2ce04c23045f1c32","$uI49e","$05c4fc06ecec7c4f$export$2cd8252107eb640b","$kuxul","BrotliDecompressBuffer","toByteArray","$eeb0961446aae8e3$export$a48f0734ac7c2329","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","b64","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","curByte","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","extraBytes","parts","len2","$eeb0961446aae8e3$var$encodeChunk","start","end","$eeb0961446aae8e3$var$lookup","num","join","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","indexOf","$ecfb9b5b3306a38a$export$209a3d84f3357583","$ecfb9b5b3306a38a$export$8a58ff2090e8dcda","$ecfb9b5b3306a38a$var$HuffmanCode","$ecfb9b5b3306a38a$var$GetNextKey","step","$ecfb9b5b3306a38a$var$ReplicateValue","root_table","root_bits","code_lengths_size","low","mask","table_bits","total_size","sorted","start_table","$ecfb9b5b3306a38a$var$MAX_LENGTH","$ecfb9b5b3306a38a$var$NextTableBitSize","left","$d11ea0ce95d3ac2c$export$dfc7155ac0343b8","$d11ea0ce95d3ac2c$export$cc8d42455ae4ca5e","$5371753d531ab78c$export$6e6a061a64eda771","$5371753d531ab78c$export$62ffb848600e90dd","$5371753d531ab78c$export$cc7c44d8afc93b69","$5371753d531ab78c$export$91c779240ecfdaca","$5371753d531ab78c$export$c243b934bf41e980","$5371753d531ab78c$var$PrefixCodeRange","$354cb680e66e788a$export$5d2d653c67838a2","$354cb680e66e788a$export$8cfa5a6f89d017bb","$354cb680e66e788a$var$Transform","prefix","transform","suffix","$354cb680e66e788a$var$kTransforms","$354cb680e66e788a$var$ToUpperCase","idx","word","uppercase","t","skip","$354cb680e66e788a$var$kOmitFirst1","start_idx","prefix_pos","dictionary","suffix_pos","$81d573d37fc80f93$var$encodeChunk","$81d573d37fc80f93$var$lookup","$81d573d37fc80f93$var$revLookup","$81d573d37fc80f93$var$Arr","$81d573d37fc80f93$var$code","$81d573d37fc80f93$var$i","$81d573d37fc80f93$var$len","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","rt","isNaN","abs","floor","log","LN2","$68d62278c0f02295$var$customInspectSymbol","Symbol","$68d62278c0f02295$var$createBuffer","RangeError","setPrototypeOf","$68d62278c0f02295$var$Buffer","arg","encodingOrOffset","TypeError","$68d62278c0f02295$var$allocUnsafe","$68d62278c0f02295$var$from","$68d62278c0f02295$var$fromString","string","encoding","isEncoding","$68d62278c0f02295$var$byteLength","actual","slice","ArrayBuffer","isView","$68d62278c0f02295$var$fromArrayView","arrayView","$68d62278c0f02295$var$isInstance","copy","$68d62278c0f02295$var$fromArrayBuffer","byteOffset","byteLength","$68d62278c0f02295$var$fromArrayLike","SharedArrayBuffer","valueOf","from","b","$68d62278c0f02295$var$fromObject","isBuffer","$68d62278c0f02295$var$checked","undefined","type","isArray","data","toPrimitive","$68d62278c0f02295$var$assertSize","size","array","mustMatch","loweredCase","$68d62278c0f02295$var$utf8ToBytes","$68d62278c0f02295$var$base64ToBytes","toLowerCase","$68d62278c0f02295$var$slowToString","$68d62278c0f02295$var$hexSlice","$68d62278c0f02295$var$hexSliceLookupTable","$68d62278c0f02295$var$utf8Slice","$68d62278c0f02295$var$asciiSlice","ret","min","String","fromCharCode","$68d62278c0f02295$var$latin1Slice","$68d62278c0f02295$var$utf16leSlice","bytes","res","$68d62278c0f02295$var$swap","$68d62278c0f02295$var$bidirectionalIndexOf","dir","$68d62278c0f02295$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","$68d62278c0f02295$var$decodeCodePointsArray","codePoints","apply","$68d62278c0f02295$var$checkOffset","ext","$68d62278c0f02295$var$checkInt","max","$68d62278c0f02295$var$wrtBigUInt64LE","$68d62278c0f02295$var$checkIntBI","lo","Number","BigInt","hi","$68d62278c0f02295$var$wrtBigUInt64BE","$68d62278c0f02295$var$checkIEEE754","$68d62278c0f02295$var$writeFloat","littleEndian","noAssert","$68d62278c0f02295$var$writeDouble","TYPED_ARRAY_SUPPORT","$68d62278c0f02295$var$typedArraySupport","proto","foo","console","error","poolSize","alloc","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","y","concat","list","swap16","swap32","swap64","toString","toLocaleString","equals","inspect","str","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","remaining","$68d62278c0f02295$var$hexWrite","strLen","parsed","parseInt","substr","$68d62278c0f02295$var$blitBuffer","$68d62278c0f02295$var$asciiToBytes","byteArray","$68d62278c0f02295$var$utf16leToBytes","units","toJSON","_arr","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$68d62278c0f02295$var$defineBigIntMethod","$68d62278c0f02295$var$validateNumber","first","last","$68d62278c0f02295$var$boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$68d62278c0f02295$var$errors","$68d62278c0f02295$var$E","sym","getMessage","Base","constructor","name","stack","message","$68d62278c0f02295$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","$68d62278c0f02295$var$INVALID_BASE64_RE","leadSurrogate","$81d573d37fc80f93$export$d622b2ad8d90c771","$81d573d37fc80f93$var$getLens","$68d62278c0f02295$var$base64clean","split","src","alphabet","i16","fn","$68d62278c0f02295$var$BufferBigIntNotDefined","$f7a6899246d76dab$exports","$d28c261f9dc3f39e$var$ENCODING_MAPPING","utf16le","ucs2","utf16be","$d28c261f9dc3f39e$export$c18b354bac7948e9","view","DataView","readString","readBuffer","decoder","TextDecoder","readUInt24BE","readUInt24LE","readInt24BE","readInt24LE","TYPES","UInt8","UInt16","UInt24","UInt32","Int8","Int16","Int24","Int32","Float","Double","getOwnPropertyNames","$c207eaab05273912$var$textEncoder","TextEncoder","$c207eaab05273912$var$isBigEndian","$c207eaab05273912$export$9b4f661deaa36c3e","writeBuffer","writeString","$c207eaab05273912$var$stringToUtf16","encode","$c207eaab05273912$var$stringToAscii","writeUInt24BE","writeUInt24LE","writeInt24BE","writeInt24LE","swap","$4c0d613e95890d04$export$ef88aa0d34c34520","fromBuffer","stream","toBuffer","$83cea26e2678b6a9$export$fffa67e515d04022","endian","$83cea26e2678b6a9$export$52e103c63c4e68cf","$83cea26e2678b6a9$export$60dfe43c8297a8f8","$83cea26e2678b6a9$export$255f45171f96b50c","$83cea26e2678b6a9$export$74c16dba6c885532","$83cea26e2678b6a9$export$5984f25eab09961f","$83cea26e2678b6a9$export$198ae7d10d26a900","$83cea26e2678b6a9$export$78a2ac3d09dd42d5","$83cea26e2678b6a9$export$13475bbd2a37a9b4","fracBits","_point","$83cea26e2678b6a9$export$f87b441e6bd90278","$83cea26e2678b6a9$export$dd71d8d9bc792632","$978b446018acf522$export$83b6dc3503c1fda6","parent","$978b446018acf522$export$41705b1d644e0f14","opts","$c2a7f92f159a8c91$export$c4be6576ca6fe4aa","lengthType","ctx","defineProperties","_startOffset","_currentOffset","_length","includePointers","item","pointerSize","pointers","startOffset","pointerOffset","ptr","$15242fe892221bcd$export$5576c026028d4983","$15242fe892221bcd$var$LazyArrayValue","toArray","base","items","result","$42b540cf7adee3c9$export$96b43b8a49f688ea","flags","flag","keys","$ce1900e78ba28923$export$7d22a0eea6656474","$e3298619df00705e$export$7acb7b24c478f9c6","condition","$30e179fcc799e217$export$da9b5fe187a9aa1","$16be2d98cb6bced0$export$89b8e0fa65f6a914","$16be2d98cb6bced0$var$byteLength","c2","$0b2a422743092498$export$eabc71f011df675a","fields","_setup","_parseFields","process","preEncode","$bf686a5101131396$var$getPath","object","pathArray","reduce","prevObj","$bf686a5101131396$export$95a8b60f4da7dec8","versions","versionPath","version","header","$a835a1cb0586c20c$export$b56007f12edf0c17","offsetType","options","allowNull","nullValue","lazy","relativeTo","relativeToGetter","relative","decodeValue","$a835a1cb0586c20c$export$df5cb1f3d04f5a0f","$5110215535661f7a$exports","$17039aff9b7a4ae1$exports","$54da56340462fe8a$exports","equal","RegExp","source","hasOwnProperty","$6b4db174c89ebdc9$exports","$9f97e41f2448bce6$exports","$9f97e41f2448bce6$var$Tree","trans","$9f97e41f2448bce6$var$Data","dest","sourceIndex","tag","bitcount","destLen","ltree","dtree","$9f97e41f2448bce6$var$sltree","$9f97e41f2448bce6$var$sdtree","$9f97e41f2448bce6$var$length_bits","$9f97e41f2448bce6$var$length_base","$9f97e41f2448bce6$var$dist_bits","$9f97e41f2448bce6$var$dist_base","$9f97e41f2448bce6$var$clcidx","$9f97e41f2448bce6$var$code_tree","$9f97e41f2448bce6$var$lengths","$9f97e41f2448bce6$var$tinf_build_bits_base","delta","sum","$9f97e41f2448bce6$var$offs","$9f97e41f2448bce6$var$tinf_build_tree","lengths","off","$9f97e41f2448bce6$var$tinf_read_bits","$9f97e41f2448bce6$var$tinf_decode_symbol","cur","$9f97e41f2448bce6$var$tinf_inflate_block_data","lt","dt","dist","offs","$9f97e41f2448bce6$var$tinf_build_fixed_trees","bfinal","$9f97e41f2448bce6$var$tinf_getbit","bit","$9f97e41f2448bce6$var$tinf_inflate_uncompressed_block","$9f97e41f2448bce6$var$tinf_decode_trees","hlit","hdist","hclen","clen","prev","$03c86720e418ebc3$var$isBigEndian","$03c86720e418ebc3$var$swap","$03c86720e418ebc3$var$swap32","$6b4db174c89ebdc9$require$swap32LE","$38e929d1b08c92d4$var$$parcel$interopDefault","uncompressedLength","highStart","errorValue","getUint32","$6b4db174c89ebdc9$var$DATA_BLOCK_LENGTH","$6b4db174c89ebdc9$var$LSCP_INDEX_2_OFFSET","$6b4db174c89ebdc9$var$INDEX_1_OFFSET","$6b4db174c89ebdc9$var$INDEX_2_BLOCK_LENGTH","$38e929d1b08c92d4$var$$f4087201da764553$exports","JSON","parse","$38e929d1b08c92d4$var$$747425b437e121da$var$trie","$38e929d1b08c92d4$var$$747425b437e121da$var$log2","log2","$38e929d1b08c92d4$var$$747425b437e121da$var$bits","$38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_BITS","categories","$38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_BITS","combiningClasses","$38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_BITS","scripts","$38e929d1b08c92d4$var$$747425b437e121da$var$EAW_BITS","eaw","$38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_SHIFT","$38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_SHIFT","$38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_SHIFT","$38e929d1b08c92d4$var$$747425b437e121da$var$CATEGORY_MASK","$38e929d1b08c92d4$var$$747425b437e121da$var$COMBINING_MASK","$38e929d1b08c92d4$var$$747425b437e121da$var$SCRIPT_MASK","$38e929d1b08c92d4$export$410364bbb673ddbc","$38e929d1b08c92d4$export$941569448d136665","$38e929d1b08c92d4$export$e33ad6871e762338","category","$b79de8adb8c1e088$exports","dfa","stateTable","accepting","tags","match","iterator","state","startRun","lastAccepting","lastState","actions","$610eece7e795b354$exports","$610eece7e795b354$var$clone","nativeMap","nativeSet","nativePromise","_instanceof","Map","_","Set","Promise","clone","circular","depth","includeNonEnumerable","allParents","allChildren","_clone","child","resolve","reject","then","__isArray","__isRegExp","__getRegExpFlags","lastIndex","__isDate","Date","getTime","$610eece7e795b354$require$Buffer","create","getPrototypeOf","attrs","forEach","keyChild","valueChild","entryChild","add","getOwnPropertySymbols","descriptor","allPropertyNames","propertyName","__objToStr","o","re","ignoreCase","multiline","clonePrototype","$ded8ee29b9370409$exports","$f7a6899246d76dab$var$$parcel$export","$f7a6899246d76dab$var$$parcel$interopDefault","$f7a6899246d76dab$var$$59aa4ed98453e1d4$exports","$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$bd5c5d8b8dcafd78","$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$36b2f24e97d43be","$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$185802fd694ee1f5","$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$42940898df819940","$f7a6899246d76dab$var$$59aa4ed98453e1d4$export$5157e7780d44cc36","$f7a6899246d76dab$var$$59aa4ed98453e1d4$var$formats","format","postscriptName","probe","font","getFont","lang","$f7a6899246d76dab$var$$3bda6911913b43f0$export$69a3209f1a06c04d","key1","cache1","memoized","args","has","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$SubHeader","firstCode","entryCount","idDelta","idRangeOffset","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapGroup","startCharCode","endCharCode","glyphID","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$UnicodeValueRange","startUnicodeValue","additionalCount","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$UVSMapping","unicodeValue","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$DefaultUVS","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$NonDefaultUVS","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$VarSelectorRecord","varSelector","defaultUVS","nonDefaultUVS","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapSubtable","language","codeMap","subHeaderKeys","subHeaderCount","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","startCode","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","$f7a6899246d76dab$var$$e4ae0436c91af89f$var$CmapEntry","platformID","encodingID","$f7a6899246d76dab$var$$e4ae0436c91af89f$export$2e2bcd8739ae039","numSubtables","$f7a6899246d76dab$var$$55a60976afb7c261$export$2e2bcd8739ae039","revision","checkSumAdjustment","magicNumber","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","$f7a6899246d76dab$var$$dde72b7b5b650596$export$2e2bcd8739ae039","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","$f7a6899246d76dab$var$$a7c40184072c9a5b$var$HmtxEntry","advance","bearing","$f7a6899246d76dab$var$$a7c40184072c9a5b$export$2e2bcd8739ae039","metrics","hhea","bearings","maxp","numGlyphs","$f7a6899246d76dab$var$$521197722369f691$export$2e2bcd8739ae039","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","$f7a6899246d76dab$var$$e2613b812f052cbe$export$badc544e0651b6b1","languageID","$f7a6899246d76dab$var$$e2613b812f052cbe$export$479e671907f486d1","$f7a6899246d76dab$var$$e2613b812f052cbe$export$6fef87b7618bdf0b","$f7a6899246d76dab$var$$e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS","$f7a6899246d76dab$var$$e2613b812f052cbe$var$MAC_ENCODINGS","$f7a6899246d76dab$var$$e2613b812f052cbe$var$encodingCache","$f7a6899246d76dab$var$$e2613b812f052cbe$export$2092376fd002e13","$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameRecord","nameID","stringOffset","$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$LangTagRecord","$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NameTable","records","langTagCount","langTags","$f7a6899246d76dab$var$$51a9f4feb3a3b2b1$var$NAMES","record","en","$f7a6899246d76dab$var$$114ea85db469b435$var$OS2","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","$f7a6899246d76dab$var$$114ea85db469b435$var$versions","$f7a6899246d76dab$var$$f93b30299e1ea0f5$export$2e2bcd8739ae039","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","$f7a6899246d76dab$var$$8fb09b0f473d61a0$export$2e2bcd8739ae039","controlValues","$f7a6899246d76dab$var$$873d79fea57d3161$export$2e2bcd8739ae039","instructions","$f7a6899246d76dab$var$$83c4155666d50c37$var$loca","_processed","$f7a6899246d76dab$var$$b12598db7cdf7042$export$2e2bcd8739ae039","controlValueProgram","$f7a6899246d76dab$var$$7707bdf21a3d89cc$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$9eaea3754914a290$export$2e2bcd8739ae039","getCFFVersion","hdrSize","offSize","startPos","sizes","item1","$f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_LOOKUP","$f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP","$f7a6899246d76dab$var$$f77b592c17132d70$export$2e2bcd8739ae039","n1","n2","parseFloat","forceLarge","ceil","c1","$f7a6899246d76dab$var$$f77b592c17132d70$var$FLOAT_EOF","$f7a6899246d76dab$var$$efe622f40a9c35bd$export$2e2bcd8739ae039","decodeOperands","operands","op","encodeOperands","field","dict","k","ops","op1","$f7a6899246d76dab$var$$4aa1b0749c2770f8$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$4aa1b0749c2770f8$var$Ptr","$f7a6899246d76dab$var$$15a0cbb3d09cf7ee$export$2e2bcd8739ae039","numBlends","pop","$f7a6899246d76dab$var$$860d3574d7fa3a51$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$c4ffe47cba1d7f36$export$dee0027060fa13bd","$f7a6899246d76dab$var$$1e7c7c16984e4427$export$c33b50336c234f16","$f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysTable","reqFeatureIndex","featureCount","featureIndexes","$f7a6899246d76dab$var$$b6dd765146ad212a$var$LangSysRecord","langSys","$f7a6899246d76dab$var$$b6dd765146ad212a$var$Script","defaultLangSys","langSysRecords","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ScriptRecord","script","$f7a6899246d76dab$var$$b6dd765146ad212a$export$3e15fc05ce864229","$f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureParams","$f7a6899246d76dab$var$$b6dd765146ad212a$export$6e91cf7616333d5","featureParams","lookupCount","lookupListIndexes","$f7a6899246d76dab$var$$b6dd765146ad212a$var$FeatureRecord","feature","$f7a6899246d76dab$var$$b6dd765146ad212a$export$aa18130def4b6cb4","$f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupFlags","markAttachmentType","$f7a6899246d76dab$var$$b6dd765146ad212a$export$df0008c6ff2da22a","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","useMarkFilteringSet","$f7a6899246d76dab$var$$b6dd765146ad212a$var$RangeRecord","startCoverageIndex","$f7a6899246d76dab$var$$b6dd765146ad212a$export$17608c3f81a6111","glyphCount","glyphs","rangeCount","rangeRecords","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRangeRecord","class","$f7a6899246d76dab$var$$b6dd765146ad212a$export$843d551fbbafef71","startGlyph","classValueArray","classRangeCount","classRangeRecord","$f7a6899246d76dab$var$$b6dd765146ad212a$export$8215d14a63d9fb10","deltaFormat","$f7a6899246d76dab$var$$b6dd765146ad212a$var$LookupRecord","sequenceIndex","lookupListIndex","$f7a6899246d76dab$var$$b6dd765146ad212a$var$Rule","lookupRecords","$f7a6899246d76dab$var$$b6dd765146ad212a$var$RuleSet","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassRule","classes","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ClassSet","$f7a6899246d76dab$var$$b6dd765146ad212a$export$841858b892ce1f4c","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","$f7a6899246d76dab$var$$b6dd765146ad212a$var$ChainRuleSet","$f7a6899246d76dab$var$$b6dd765146ad212a$export$5e6d09e6861162f6","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","$f7a6899246d76dab$var$$2e4adcda047b3383$var$F2DOT14","$f7a6899246d76dab$var$$2e4adcda047b3383$var$RegionAxisCoordinates","startCoord","peakCoord","endCoord","$f7a6899246d76dab$var$$2e4adcda047b3383$var$VariationRegionList","axisCount","regionCount","variationRegions","$f7a6899246d76dab$var$$2e4adcda047b3383$var$DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","regionIndexCount","deltas","$f7a6899246d76dab$var$$2e4adcda047b3383$var$ItemVariationData","itemCount","regionIndexes","deltaSets","$f7a6899246d76dab$var$$2e4adcda047b3383$export$fe1b122a2710f241","variationRegionList","variationDataCount","itemVariationData","$f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","$f7a6899246d76dab$var$$2e4adcda047b3383$var$ConditionSet","conditionCount","conditionTable","$f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","$f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureTableSubstitution","substitutionCount","substitutions","$f7a6899246d76dab$var$$2e4adcda047b3383$var$FeatureVariationRecord","conditionSet","featureTableSubstitution","$f7a6899246d76dab$var$$2e4adcda047b3383$export$441b70b7971dd419","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$PredefinedOp","predefinedOps","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range1","nLeft","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$Range2","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomEncoding","nCodes","nRanges","ranges","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFEncoding","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$RangeArray","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCustomCharset","CharStrings","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFCharset","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange3","fd","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDRange4","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$FDSelect","fds","sentinel","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$ptr","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFPrivateOp","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$FontDict","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTopDict","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$VariationStore","itemVariationStore","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFF2TopDict","$f7a6899246d76dab$var$$5b547cf9e5da519b$var$CFFTop","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","$f7a6899246d76dab$var$$f717432b360040c7$var$CFFFont","top","$f7a6899246d76dab$var$$5b547cf9e5da519b$export$2e2bcd8739ae039","isCIDFont","ROS","sid","fullName","FullName","familyName","FamilyName","getCharString","glyph","getGlyphName","gid","charset","fdForGlyph","FDSelect","high","mid","privateDictForGlyph","FDArray","Private","$f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$var$VerticalOrigin","glyphIndex","vertOriginY","$f7a6899246d76dab$var$$8cb7ae73ed7aa7d8$export$2e2bcd8739ae039","defaultVertOriginY","numVertOriginYMetrics","$f7a6899246d76dab$var$$20e0c7bbecb76d75$export$16b227cb15d716a0","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","$f7a6899246d76dab$var$$20e0c7bbecb76d75$export$62c53e75f69bfe12","bearingX","bearingY","$f7a6899246d76dab$var$$20e0c7bbecb76d75$var$EBDTComponent","xOffset","yOffset","$f7a6899246d76dab$var$$20e0c7bbecb76d75$var$ByteAligned","$f7a6899246d76dab$var$$20e0c7bbecb76d75$var$BitAligned","pad","numComponents","components","dataLen","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$CodeOffsetPair","glyphCode","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$IndexSubtableArray","subtable","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$var$BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","$f7a6899246d76dab$var$$035bb95c0cdb1f6d$export$2e2bcd8739ae039","numSizes","$f7a6899246d76dab$var$$73d13900b55a3c0c$var$ImageTable","ppem","resolution","imageOffsets","$f7a6899246d76dab$var$$73d13900b55a3c0c$export$2e2bcd8739ae039","numImgTables","imageTables","$f7a6899246d76dab$var$$97f6b8be3a347a8f$var$LayerRecord","paletteIndex","$f7a6899246d76dab$var$$97f6b8be3a347a8f$var$BaseGlyphRecord","firstLayerIndex","numLayers","$f7a6899246d76dab$var$$97f6b8be3a347a8f$export$2e2bcd8739ae039","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","$f7a6899246d76dab$var$$16ca60ecbdee30ea$var$ColorRecord","blue","green","red","alpha","$f7a6899246d76dab$var$$16ca60ecbdee30ea$export$2e2bcd8739ae039","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseValues","defaultIndex","baseCoordCount","baseCoords","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$FeatMinMaxRecord","minCoord","maxCoord","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$MinMax","featMinMaxCount","featMinMaxRecords","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseLangSysRecord","minMax","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptRecord","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseScriptList","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$BaseTagList","$f7a6899246d76dab$var$$7327e41706f9d5c7$var$Axis","baseTagList","baseScriptList","$f7a6899246d76dab$var$$7327e41706f9d5c7$export$2e2bcd8739ae039","horizAxis","vertAxis","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachPoint","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$AttachList","attachPoints","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$CaretValue","caretValuePoint","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigGlyph","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$LigCaretList","ligGlyphCount","ligGlyphs","$f7a6899246d76dab$var$$7e48bbe9e5345664$var$MarkGlyphSetsDef","markSetTableFormat","markSetCount","$f7a6899246d76dab$var$$7e48bbe9e5345664$export$2e2bcd8739ae039","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","$f7a6899246d76dab$var$$b687332511a4da75$var$ValueFormat","$f7a6899246d76dab$var$$b687332511a4da75$var$types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","rel","yPlaDevice","xAdvDevice","yAdvDevice","$f7a6899246d76dab$var$$b687332511a4da75$var$ValueRecord","buildStruct","struct","$f7a6899246d76dab$var$$b687332511a4da75$var$PairValueRecord","secondGlyph","value1","value2","$f7a6899246d76dab$var$$b687332511a4da75$var$PairSet","$f7a6899246d76dab$var$$b687332511a4da75$var$Class2Record","$f7a6899246d76dab$var$$b687332511a4da75$var$Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","$f7a6899246d76dab$var$$b687332511a4da75$var$EntryExitRecord","entryAnchor","exitAnchor","$f7a6899246d76dab$var$$b687332511a4da75$var$MarkRecord","markAnchor","$f7a6899246d76dab$var$$b687332511a4da75$var$MarkArray","$f7a6899246d76dab$var$$b687332511a4da75$var$BaseRecord","classCount","$f7a6899246d76dab$var$$b687332511a4da75$var$BaseArray","$f7a6899246d76dab$var$$b687332511a4da75$var$ComponentRecord","$f7a6899246d76dab$var$$b687332511a4da75$var$LigatureAttach","$f7a6899246d76dab$var$$b687332511a4da75$var$LigatureArray","$f7a6899246d76dab$var$$b687332511a4da75$export$73a8cfb19cd43a0f","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","$f7a6899246d76dab$var$$b687332511a4da75$export$2e2bcd8739ae039","scriptList","featureList","lookupList","featureVariations","$f7a6899246d76dab$var$$99ccad60b96f92fb$var$Sequence","$f7a6899246d76dab$var$$99ccad60b96f92fb$var$Ligature","compCount","$f7a6899246d76dab$var$$99ccad60b96f92fb$var$LigatureSet","$f7a6899246d76dab$var$$99ccad60b96f92fb$var$GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","$f7a6899246d76dab$var$$99ccad60b96f92fb$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfGSUBModList","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSys","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfLangSysRecord","jstfLangSys","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScript","extenderGlyphs","langSysCount","$f7a6899246d76dab$var$$573d5042c76c4940$var$JstfScriptRecord","$f7a6899246d76dab$var$$573d5042c76c4940$export$2e2bcd8739ae039","scriptCount","$f7a6899246d76dab$var$$a5875b80d6087f61$var$MapDataEntry","entry","_size","entryFormat","outerIndex","innerIndex","$f7a6899246d76dab$var$$a5875b80d6087f61$var$DeltaSetIndexMap","mapCount","mapData","$f7a6899246d76dab$var$$a5875b80d6087f61$export$2e2bcd8739ae039","advanceWidthMapping","LSBMapping","RSBMapping","$f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$Signature","$f7a6899246d76dab$var$$4423bc1ac09bbbd1$var$SignatureBlock","cbSignature","signature","$f7a6899246d76dab$var$$4423bc1ac09bbbd1$export$2e2bcd8739ae039","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","$f7a6899246d76dab$var$$7b50e3f8d83263de$var$GaspRange","rangeMaxPPEM","rangeGaspBehavior","$f7a6899246d76dab$var$$7b50e3f8d83263de$export$2e2bcd8739ae039","numRanges","gaspRanges","$f7a6899246d76dab$var$$7bf92ec372cd2307$var$DeviceRecord","pixelSize","maximumWidth","widths","$f7a6899246d76dab$var$$7bf92ec372cd2307$export$2e2bcd8739ae039","sizeDeviceRecord","$f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernPair","right","$f7a6899246d76dab$var$$a3f544bcf76542d1$var$ClassTable","firstGlyph","nGlyphs","$f7a6899246d76dab$var$$a3f544bcf76542d1$var$Kern2Array","leftTable","rowWidth","$f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernSubtable","nPairs","pairs","rightTable","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","$f7a6899246d76dab$var$$a3f544bcf76542d1$var$KernTable","subVersion","padding","tupleIndex","$f7a6899246d76dab$var$$a3f544bcf76542d1$export$2e2bcd8739ae039","nTables","$f7a6899246d76dab$var$$86687befb45925d0$export$2e2bcd8739ae039","yPels","$f7a6899246d76dab$var$$91429006e51e0fe8$export$2e2bcd8739ae039","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","$f7a6899246d76dab$var$$627850fc9deed59a$var$Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","$f7a6899246d76dab$var$$627850fc9deed59a$var$vTable","yPelHeight","$f7a6899246d76dab$var$$627850fc9deed59a$var$VdmxGroup","recs","startsz","endsz","entries","$f7a6899246d76dab$var$$627850fc9deed59a$export$2e2bcd8739ae039","numRecs","numRatios","ratioRanges","$f7a6899246d76dab$var$$65c33f5f068fc77f$export$2e2bcd8739ae039","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","$f7a6899246d76dab$var$$597d739523b65bb3$var$VmtxEntry","$f7a6899246d76dab$var$$597d739523b65bb3$export$2e2bcd8739ae039","vhea","$f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$shortFrac","$f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Correspondence","fromCoord","toCoord","$f7a6899246d76dab$var$$35aa0c87d9c3d3a0$var$Segment","pairCount","correspondence","$f7a6899246d76dab$var$$35aa0c87d9c3d3a0$export$2e2bcd8739ae039","segment","$f7a6899246d76dab$var$$22801616bd931ca3$var$UnboundedArrayAccessor","getItem","_items","$f7a6899246d76dab$var$$22801616bd931ca3$export$c5af1eebc882e39a","$f7a6899246d76dab$var$$22801616bd931ca3$export$8351f8c2ae2f103c","ValueType","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","$f7a6899246d76dab$var$$22801616bd931ca3$export$79f7d93d790934ba","entryData","assign","newState","Entry","StateArray","nClasses","classTable","stateArray","entryTable","$f7a6899246d76dab$var$$3a5ca96d3e3aaf20$var$BslnSubtable","mappingData","standardGlyph","controlPoints","$f7a6899246d76dab$var$$3a5ca96d3e3aaf20$export$2e2bcd8739ae039","defaultBaseline","$f7a6899246d76dab$var$$8d4241d96b2b0589$var$Setting","setting","fontFeatures","$f7a6899246d76dab$var$$8d4241d96b2b0589$var$FeatureName","nSettings","settingTable","featureFlags","defaultSetting","$f7a6899246d76dab$var$$8d4241d96b2b0589$export$2e2bcd8739ae039","featureNameCount","reserved1","reserved2","featureNames","$f7a6899246d76dab$var$$a79cd5132b1cf476$var$Axis","axisTag","minValue","defaultValue","maxValue","$f7a6899246d76dab$var$$a79cd5132b1cf476$var$Instance","coord","postscriptNameID","instanceSize","$f7a6899246d76dab$var$$a79cd5132b1cf476$export$2e2bcd8739ae039","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","$f7a6899246d76dab$var$$3f36f1a5e6989457$var$shortFrac","$f7a6899246d76dab$var$$3f36f1a5e6989457$var$gvar","globalCoordCount","globalCoords","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ClassTable","subFeatureFlags","ClassLookupTable","newStateOffset","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$WidthDeltaCluster","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$Action","actionClass","actionType","actionLength","actionData","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostcompensationAction","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$PostCompensationTable","lookupTable","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$var$JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","$f7a6899246d76dab$var$$0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039","horizontal","vertical","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubstitutionTable","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$SubtableData","markIndex","currentIndex","substitutionTable","action","ligatureActions","ligatureList","currentInsertIndex","markedInsertIndex","insertionActions","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$Subtable","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$var$MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","$f7a6899246d76dab$var$$ef40c6dc80fd50a2$export$2e2bcd8739ae039","unused","nChains","chains","$f7a6899246d76dab$var$$ab24dea08b58a7cc$var$OpticalBounds","bottom","$f7a6899246d76dab$var$$ab24dea08b58a7cc$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$5825c04ce8f7102d$var$tables","cmap","head","hmtx","post","fpgm","loca","prep","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","HVAR","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","gvar","just","morx","opbd","$f7a6899246d76dab$var$$df50e1efe10a1247$var$TableEntry","checkSum","$f7a6899246d76dab$var$$df50e1efe10a1247$var$Directory","numTables","$f7a6899246d76dab$var$$66a5b9fb5318558a$export$2e0ae67339d5f1ac","cmp","$f7a6899246d76dab$var$$66a5b9fb5318558a$export$d02631cccf789723","range1","$f7a6899246d76dab$var$$5825c04ce8f7102d$export$2e2bcd8739ae039","maxPowerOf2","$f7a6899246d76dab$var$$66a5b9fb5318558a$export$3d28c1996ced1f14","$f7a6899246d76dab$var$$66a5b9fb5318558a$var$CHARS","$f7a6899246d76dab$var$$66a5b9fb5318558a$var$LOOKUP","$f7a6899246d76dab$var$$66a5b9fb5318558a$export$94fdf11bafc8de6b","base64","bufferLength","i1","encoded1","encoded2","encoded3","encoded4","$f7a6899246d76dab$var$$0d6e160064c86e50$export$2e2bcd8739ae039","findSubtable","cmapTable","codepoint","variationSelector","getVariationSelector","rangeOffset","group","uvs","selectors","sel","getCharacterSet","endCodes","codePointsForGlyph","g","mapping","$f7a6899246d76dab$var$$e2613b812f052cbe$export$1dceb3c14ed68bee","cached","$f7a6899246d76dab$var$$4646d52c2a559cdb$export$2e2bcd8739ae039","positions","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","$f7a6899246d76dab$var$$a57a26817cd35108$export$2e2bcd8739ae039","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","$f7a6899246d76dab$var$$0e2da1c4ce69e8ad$export$2e2bcd8739ae039","addPoint","$f7a6899246d76dab$var$$e38a1a895f6aeb54$var$UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","$f7a6899246d76dab$var$$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS","$f7a6899246d76dab$var$$e38a1a895f6aeb54$var$RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","$f7a6899246d76dab$var$$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54","script4","$f7a6899246d76dab$var$$b19c79ec7a94fa39$export$2e2bcd8739ae039","advanceWidth","advanceHeight","bbox","direction","$f7a6899246d76dab$var$$9195cf1266c12ea5$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$features","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$feature","selector","$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$AATMapping","ot","aat","$f7a6899246d76dab$var$$2b7f887ebcb5888a$var$mapFeatureStrings","f","typeCode","settingCode","$f7a6899246d76dab$var$$f3d63ae925545400$export$2e2bcd8739ae039","seg","glyphsForValue","classValue","segment1","$f7a6899246d76dab$var$$860c6347bb941b91$export$2e2bcd8739ae039","reverse","processEntry","currentState","classCode","shouldAdvance","entryIndex","row","traverse","visited","enter","exit","$f7a6899246d76dab$var$$99be642f82069918$export$2e2bcd8739ae039","chain","processSubtable","splice","processNoncontextualSubstitutions","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processGlyphInsertion","$f7a6899246d76dab$var$$99be642f82069918$var$reorderGlyphs","verb","$f7a6899246d76dab$var$$99be642f82069918$var$swap","subsitutions","getGlyph","actionIndex","ligatureIndex","ligatureGlyphs","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","insertions","getSupportedFeatures","generateInputs","inputCache","generateInputCache","generateInputsForSubtable","g1","bind","rangeA","rangeB","reverseA","reverseB","$f7a6899246d76dab$var$$860fcbd64bc12fbc$export$2e2bcd8739ae039","glyphRun","morxProcessor","$f7a6899246d76dab$var$$2b7f887ebcb5888a$export$b813f7d2a1677c16","features1","getAvailableFeatures","$f7a6899246d76dab$var$$2b7f887ebcb5888a$export$bd6df347a4f391c4","features2","feature1","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","fromCodePoint","fallbackPosition","$f7a6899246d76dab$var$$d7e93cca3cf8ce8a$export$2e2bcd8739ae039","_addFeatures","stageIndex","stages","stage","allFeatures","globalFeatures","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","$f7a6899246d76dab$var$$d28fb665ee343afc$var$VARIATION_FEATURES","$f7a6899246d76dab$var$$d28fb665ee343afc$var$COMMON_FEATURES","$f7a6899246d76dab$var$$d28fb665ee343afc$var$FRACTIONAL_FEATURES","$f7a6899246d76dab$var$$d28fb665ee343afc$var$HORIZONTAL_FEATURES","$f7a6899246d76dab$var$$d28fb665ee343afc$var$DIRECTIONAL_FEATURES","ltr","rtl","$f7a6899246d76dab$var$$d28fb665ee343afc$export$2e2bcd8739ae039","plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$trie","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FEATURES","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ShapingClasses","Non_Joining","Transparent","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$ISOL","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FINA","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$FIN2","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MEDI","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$MED2","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$INIT","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$STATE_TABLE","$f7a6899246d76dab$var$$17ba6019f27bfcf9$export$2e2bcd8739ae039","curAction","prevAction","$f7a6899246d76dab$var$$17ba6019f27bfcf9$var$getShapingClass","$f7a6899246d76dab$var$$d6368085223f631e$export$2e2bcd8739ae039","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","$f7a6899246d76dab$var$$7b226e6bbeadedeb$var$DEFAULT_SCRIPTS","$f7a6899246d76dab$var$$7b226e6bbeadedeb$export$2e2bcd8739ae039","findScript","selectScript","changed","scriptTag","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookups","lookupIndex","sort","variationsIndex","substitution","findVariationsIndex","coords","variations","conditions","variationConditionsMatch","every","advances","applyLookups","glyphIterator","currentFeature","applyLookup","applyLookupList","lookupRecord","coverageIndex","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","classSequenceMatches","classID","applyContext","rule","rule1","applyChainingContext","rules","rule2","_variationProcessor","normalizedCoords","ligatureID","$f7a6899246d76dab$var$$f22bb23c9fd478d8$export$2e2bcd8739ae039","_id","substituted","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","isMultiplied","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getType","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$STATE_TABLE","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$DECOMPOSE","hasGlyphForCodePoint","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$decompose","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$COMPOSE","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$compose","lv","ljmo","vjmo","tjmo","prevType","l","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningL","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningV","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_BASE","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isCombiningT","del","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getGlyph","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$TONE_MARK","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$reorderToneMark","glyphForCodePoint","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$getLength","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$INVALID","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$insertDottedCircle","dottedCircle","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isL","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isV","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isT","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isTone","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLVT","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$isLV","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$HANGUL_END","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$L_BASE","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$V_BASE","$f7a6899246d76dab$var$$fa1d9fd80dd7279e$var$T_BASE","insert","$f7a6899246d76dab$var$$d22b56f2cf15e5ba$exports","$f7a6899246d76dab$var$$79781f8c452881c2$exports","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$a513ea61a7bee91c","X","C","V","N","H","ZWNJ","ZWJ","M","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$8519deaa7de2b07","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$bbcd928767338e0d","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$ca9599b2a300afc","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$e99d119da76a0fc5","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","$f7a6899246d76dab$var$$79e3b6f2c331d0bf$export$f647c9cfdd77d95a","decompositions","$f7a6899246d76dab$var$$d203e6b9523d0071$var$decompositions","$f7a6899246d76dab$var$$d203e6b9523d0071$var$trie","$f7a6899246d76dab$var$$d203e6b9523d0071$var$stateMachine","$f7a6899246d76dab$var$$d203e6b9523d0071$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$d203e6b9523d0071$var$setupSyllables","$f7a6899246d76dab$var$$d203e6b9523d0071$var$initialReordering","$f7a6899246d76dab$var$$d203e6b9523d0071$var$finalReordering","unicodeScript","indicConfig","isOldSpec","decomposed","$f7a6899246d76dab$var$$d203e6b9523d0071$var$indicCategory","$f7a6899246d76dab$var$$d203e6b9523d0071$var$indicPosition","$f7a6899246d76dab$var$$d203e6b9523d0071$var$IndicInfo","syllableType","syllable","$f7a6899246d76dab$var$$d203e6b9523d0071$var$isConsonant","$f7a6899246d76dab$var$$d203e6b9523d0071$var$isJoiner","$f7a6899246d76dab$var$$d203e6b9523d0071$var$isHalantOrCoeng","$f7a6899246d76dab$var$$d203e6b9523d0071$var$wouldSubstitute","_layoutEngine","engine","GSUBProcessor","info","$f7a6899246d76dab$var$$d203e6b9523d0071$var$consonantPosition","consonant","$f7a6899246d76dab$var$$d203e6b9523d0071$var$nextSyllable","hasReph","rphf","seenBelow","i2","disallowDoubleHalants","lastPos","i3","i4","i5","i6","blwf","i7","i8","abvf","pstf","pref","i9","cfar","i10","nonJoiner","tryPref","BASE_C","newPos","oldPos","newRephPos","reph","test","$f7a6899246d76dab$var$$9b772791ccede8a5$var$categories","$f7a6899246d76dab$var$$9b772791ccede8a5$var$decompositions","$f7a6899246d76dab$var$$9b772791ccede8a5$var$trie","$f7a6899246d76dab$var$$9b772791ccede8a5$var$stateMachine","$f7a6899246d76dab$var$$9b772791ccede8a5$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$9b772791ccede8a5$var$setupSyllables","$f7a6899246d76dab$var$$9b772791ccede8a5$var$clearSubstitutionFlags","$f7a6899246d76dab$var$$9b772791ccede8a5$var$recordRphf","$f7a6899246d76dab$var$$9b772791ccede8a5$var$recordPref","$f7a6899246d76dab$var$$9b772791ccede8a5$var$reorder","$f7a6899246d76dab$var$$9b772791ccede8a5$var$useCategory","$f7a6899246d76dab$var$$9b772791ccede8a5$var$USEInfo","$f7a6899246d76dab$var$$9b772791ccede8a5$var$nextSyllable","$f7a6899246d76dab$var$$9b772791ccede8a5$var$isBase","$f7a6899246d76dab$var$$9b772791ccede8a5$var$isHalant","$f7a6899246d76dab$var$$fdb4471fc82bc2c2$var$SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","$f7a6899246d76dab$var$$86bc1883359e094a$export$2e2bcd8739ae039","curGlyph","replacement","ligature","characters","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","$f7a6899246d76dab$var$$79ea6270f0a90256$export$2e2bcd8739ae039","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","class1","class2","pair1","nextIndex","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","mark1Index","prevIndex","good","mark2Index","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","k1","$f7a6899246d76dab$var$$b2f26a32cb9ab2fa$export$2e2bcd8739ae039","setup","glyphInfos","GPOSProcessor","shaper","$f7a6899246d76dab$var$$fdb4471fc82bc2c2$export$7877a478dd30fd3d","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","$f7a6899246d76dab$var$$9d641258c9d7180d$export$2e2bcd8739ae039","layout","$f7a6899246d76dab$var$$e38a1a895f6aeb54$export$e5cb25e204fb8450","script2","glyphsForString","$f7a6899246d76dab$var$$e38a1a895f6aeb54$export$16fab0757cfc223d","script3","hideDefaultIgnorables","positioned","unicodeLayoutEngine","kernProcessor","isDefaultIgnorable","ch","plane","$f7a6899246d76dab$var$$67ee4828d81adb28$var$SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","$f7a6899246d76dab$var$$67ee4828d81adb28$export$2e2bcd8739ae039","toFunction","commands","command","toSVG","cmds","round","_cbox","command1","freeze","_bbox","cx","cy","p0","p1","p2","p3","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","b2ac","t1","sqrt","t2","mapPoints","path","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","$f7a6899246d76dab$var$$85e16e40023cfb0f$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$0e4f52d7996e478b$export$2e2bcd8739ae039","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","leftBearing","topBearing","os2","getAdvanceAdjustment","getScaledPath","ligatureCaretPositions","_getName","render","save","restore","$f7a6899246d76dab$var$$f680320fa07ef53d$var$GlyfHeader","numberOfContours","$f7a6899246d76dab$var$$f680320fa07ef53d$export$baf26146a414f24a","onCurve","endContour","$f7a6899246d76dab$var$$f680320fa07ef53d$var$Component","dx","dy","scale01","scale10","$f7a6899246d76dab$var$$f680320fa07ef53d$export$2e2bcd8739ae039","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","_getContours","contours","contour","directory","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","$f7a6899246d76dab$var$$7ee0705195f3b047$export$2e2bcd8739ae039","CFF2","bias","usedGsubrs","usedSubrs","cff","nStems","x1","y1","open","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","nominalWidthX","parseStems","subr","phase","c1x","c1y","c2x","c2y","blendVector","getBlendVector","numOperands","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","$f7a6899246d76dab$var$$55855d6d316b015e$var$SBIXImage","originX","originY","buflen","$f7a6899246d76dab$var$$55855d6d316b015e$export$2e2bcd8739ae039","getImageForSize","img","image","renderOutlines","$f7a6899246d76dab$var$$42d9dbd2de9ee2d8$var$COLRLayer","color","$f7a6899246d76dab$var$$42d9dbd2de9ee2d8$export$2e2bcd8739ae039","layers","layer","cpal","colr","rec","baseLayer","_getBaseGlyph","fillColor","$f7a6899246d76dab$var$$7586bb9ea67c41d8$export$2e2bcd8739ae039","normalizeCoords","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","endCoords","a1","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","ref","itemStore","varData","deltaSet","netAdjustment","master","blendVectors","scalar","regionIndex","axes","$f7a6899246d76dab$var$$a8ac370803cb82cf$export$2e2bcd8739ae039","includeGlyph","$f7a6899246d76dab$var$$2784eedf0b35a048$var$Point","$f7a6899246d76dab$var$$2784eedf0b35a048$var$Glyf","xPoints","yPoints","$f7a6899246d76dab$var$$2784eedf0b35a048$export$2e2bcd8739ae039","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","$f7a6899246d76dab$var$$fe042f4b88f46896$export$2e2bcd8739ae039","_addGlyph","curOffset","nextOffset","setUint16","glyphEncoder","$f7a6899246d76dab$var$$df50e1efe10a1247$export$2e2bcd8739ae039","$f7a6899246d76dab$var$$ec40f80c07a4e08a$export$2e2bcd8739ae039","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","fd_select","FontName","createCIDFontdict","addString","Encoding","CIDCount","$f7a6899246d76dab$var$$0a8ef2660a6ce4b6$export$2e2bcd8739ae039","setDefaultLanguage","defaultLanguage","_getTable","_tables","_decodeTable","_decodeDirectory","getName","subfamilyName","copyright","characterSet","nextState","availableFeatures","_glyphs","createSubset","variationAxes","namedVariations","settings","getVariation","_directoryPos","variationCoords","$f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectoryEntry","compLength","origChecksum","$f7a6899246d76dab$var$$89f72d2d7c9afc0d$var$WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","tables1","$f7a6899246d76dab$var$$44b9edca0e403d6d$export$2e2bcd8739ae039","_transformedGlyphs","$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$Base128","$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$knownTags","$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$var$WOFF2Directory","totalCompressedSize","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$Substream","_buf","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$GlyfTable","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","nContours","composites","bboxes","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$read255UInt16","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$LOWEST_U_CODE","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$withSign","baseval","$f7a6899246d76dab$var$$e0b2de9958441c02$var$TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontName","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$Ref","nameOffset","attr","dataOffset","handle","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$Type","maxTypeIndex","refList","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$TypeList","types","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontMap","typeList","nameListOffset","$f7a6899246d76dab$var$$d0fe640dc6c78783$var$DFontHeader","dataLength","mapLength","$f7a6899246d76dab$var$$89f72d2d7c9afc0d$export$2e2bcd8739ae039","outBuffer","$f7a6899246d76dab$var$$2f0bfd9a5c1d7b58$export$2e2bcd8739ae039","_dataPos","_decompress","_decompressed","decompressedSize","decompressed","_transformGlyfTable","totalPoints","$f7a6899246d76dab$var$$333fb94547d9fb5c$var$decodeTriplet","b0","b2","fonts","sfnt","$388b617130f03bd4$var$originalPalette","$388b617130f03bd4$var$customizedPalette","$388b617130f03bd4$var$paletteCode","$388b617130f03bd4$var$shareURL","location","href","$388b617130f03bd4$var$rgbaToHexColor","rgbaColorArray","ele","$388b617130f03bd4$var$emojiToUnicode","emoji","comp","toUpperCase","$388b617130f03bd4$var$unicodeToEmoji","unicode","intCodePoint","character","$388b617130f03bd4$var$setOverridePaletteStyle","overrideColors","document","getElementById","innerHTML","$388b617130f03bd4$var$updateEmojiAndURL","filter","rgba1","rgba2","thisEmoji","hash","encodeURIComponent","url","replaceAll","$388b617130f03bd4$var$updateEmoji","keepPalette","fontResponse","fetch","fontStyle","text","fontURL","fontBinary","arrayBuffer","fontBuffer","$388b617130f03bd4$require$Buffer","thisFont","colorPickers","firstChild","removeChild","modifiedColorPickers","rgbColor","picker","createElement","setAttribute","appendChild","addEventListener","event","substring","loadPromises","fontFace","load","all","$388b617130f03bd4$var$updateCanvas","domIdName","canvas","getContext","clientWidth","clientHeight","clearRect","childFontSizePx","getComputedStyle","getPropertyValue","parentFontSizePx","parentElement","textBaseline","textAlign","fillText","$388b617130f03bd4$var$selectedFromPicker","emojiPickerContainer","display","$388b617130f03bd4$var$getRandomEmoji","defaultEmojis","randomIndex","$388b617130f03bd4$var$tooltipTriggerList","querySelectorAll","tooltipTriggerEl","bootstrap","Tooltip","emojiPickerDesktop","EmojiMart","Picker","onEmojiSelect","emojiSize","perLine","emojiPickerButton","emojiPickerMobile","getElementsByClassName","element","$388b617130f03bd4$var$selectRandomColor","getRandomColor","maxVal","numPicker","resultCanvas","dataURL","toDataURL","downloadLink","download","click","facebookShareURL","twitterShareURL","lineShareURL","$388b617130f03bd4$var$main","loop","root","cls","runs","checkFontLoad","context","drawImage","getImageData","clearInterval","colorGlyphTest","cbdt","svg","colrv1","className","checkFailed","Image","onload","setInterval","ex","targetElement","observer","MutationObserver","mutationsList","mutation","attributeName","classList","contains","$388b617130f03bd4$var$showSupportIssueModal","modal","closeButton","querySelector","onclick","disconnect","observe","attributes","originalCanvas","inputString","decodeURIComponent","INITIAL_STATE","FAIL_STATE","StateMachine"],"version":3,"file":"index.b8b4d44c.js.map"}